# Korean translation for translation.ko package
# src/manual/R-intro.texi
#
# Copyright (C) 2008-2015 Chel Hee Lee, and R Translation Teams
#
# This file is distributed under the same license as the R distribution.
# Maintained by Chel Hee Lee <chl948@mail.usask.ca>, 2008-2015.
#
# Note that every single contributor listed on the Acknowledgement 
# assigns his or her contribution to Chel Hee Lee.
#
# Acknowldgement
# --------------
# Special thanks to Edward Kang <강원식, ewkang@hotmail.com>,
# participated from June 2013 regarding his amazing contribution
# to this translation.
#
# Note also that your name may not be found because of incomplete 
# record keeping.  If you were overlooked, please let the maintainer 
# know and the list will be updated.  Please also contact the mainter 
# of this document in order to voluntarily participate in 
# or offer your help with this work. 
#
msgid ""
msgstr ""
"Project-Id-Version: translation.ko_0.0.1.4\n"
"Report-Msgid-Bugs-To: chl948@mail.usask.ca\n"
"POT-Creation-Date: 2015-07-24 08:23-0600\n"
"PO-Revision-Date: 2015-07-20 22:47-0600\n"
"Last-Translator: Chel Hee Lee <chl948@mail.usask.ca>\n"
"Language-Team: Chel Hee Lee <chl948@mail.usask.ca>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 1.8.1\n"

#. type: top
#: R-intro.texi:4
#: R-intro.texi:52
#: R-intro.texi:70
#, no-wrap
msgid "An Introduction to R"
msgstr "An Introduction to R (translated in Korean)"

#. type: dircategory
#: R-intro.texi:14
#, no-wrap
msgid "Programming"
msgstr "프로그래밍"

#. type: menuentry
#: R-intro.texi:17
msgid "R Introduction: (R-intro)"
msgstr ""

#. type: menuentry
#: R-intro.texi:17
msgid "An introduction to R."
msgstr "An introduction to R."

#. type: include
#: R-intro.texi:21
#, no-wrap
msgid "R-defs.texi"
msgstr "R-defs.texi"

#. type: include
#: R-intro.texi:22
#, no-wrap
msgid "version.texi"
msgstr "version.texi"

#. type: copying
#: R-intro.texi:26
msgid "This manual is for R, version @value{VERSION}."
msgstr "이 매뉴얼은 R @value{VERSION}을 위하여 작성되었습니다."

#. type: copying
#: R-intro.texi:32
msgid "Copyright @copyright{} 1990 W.@: N.@: Venables@* Copyright @copyright{} 1992 W.@: N.@: Venables & D.@: M.@: Smith@* Copyright @copyright{} 1997 R.@: Gentleman & R.@: Ihaka@* Copyright @copyright{} 1997, 1998 M.@: Maechler@* @Rcopyright{1999}"
msgstr "Copyright @copyright{} 1990 W.@: N.@: Venables@* Copyright @copyright{} 1992 W.@: N.@: Venables & D.@: M.@: Smith@* Copyright @copyright{} 1997 R.@: Gentleman & R.@: Ihaka@* Copyright @copyright{} 1997, 1998 M.@: Maechler@* @Rcopyright{1999}"

#. type: quotation
#: R-intro.texi:35
msgid "@permission{}"
msgstr "@permission{}"

#. type: subtitle
#: R-intro.texi:53
#, no-wrap
msgid "Notes on @R{}: A Programming Environment for Data Analysis and Graphics"
msgstr "Notes on @R{}: A Programming Environment for Data Analysis and Graphics"

#. type: subtitle
#: R-intro.texi:54
#, no-wrap
msgid "Version @value{VERSION}"
msgstr "Version @value{VERSION}"

#. type: author
#: R-intro.texi:55
#, no-wrap
msgid "W. N. Venables, D. M. Smith"
msgstr "W. N. Venables, D. M. Smith"

#. type: author
#: R-intro.texi:56
#, no-wrap
msgid "and the R Core Team"
msgstr "and the R Core Team"

#. type: node
#: R-intro.texi:69
#: R-intro.texi:112
#: R-intro.texi:142
#: R-intro.texi:576
#: R-intro.texi:1180
#: R-intro.texi:1407
#: R-intro.texi:1582
#: R-intro.texi:2374
#: R-intro.texi:2719
#: R-intro.texi:2954
#: R-intro.texi:3358
#: R-intro.texi:3503
#: R-intro.texi:4194
#: R-intro.texi:5336
#: R-intro.texi:6419
#: R-intro.texi:6548
#: R-intro.texi:6736
#: R-intro.texi:6968
#: R-intro.texi:7518
#: R-intro.texi:7651
#: R-intro.texi:7656
#: R-intro.texi:7661
#, no-wrap
msgid "Top"
msgstr "Top"

#. type: node
#: R-intro.texi:69
#: R-intro.texi:110
#: R-intro.texi:112
#: R-intro.texi:113
#: R-intro.texi:142
#, no-wrap
msgid "Preface"
msgstr "서문"

#. type: node
#: R-intro.texi:69
#, no-wrap
msgid "(dir)"
msgstr "(dir)"

#. type: ifnottex
#: R-intro.texi:80
msgid "This is an introduction to R (``GNU S''), a language and environment for statistical computing and graphics.  R is similar to the award-winning@footnote{ACM Software Systems award, 1998: @uref{http://awards.acm.org/award_winners/chambers_6640862.cfm}.} S system, which was developed at Bell Laboratories by John Chambers et al.  It provides a wide variety of statistical and graphical techniques (linear and nonlinear modelling, statistical tests, time series analysis, classification, clustering, ...)."
msgstr "이 문서는 통계 컴퓨팅(statistical computing)과 그래픽(graphics) 작업을 위한 언어(language)이자 환경(environment)이기도 한 통계소프트웨어 R (``GNU S'')에 대한 소개를 담고 있습니다. R은 벨연구소(Bell laboratory)에서 존 챔버스(John Chambers)와 그의 동료들에 의하여 개발되었고 ACM 소프트웨어 시스템 상@footnote{ACM Software Systems award, 1998: @uref{http://awards.acm.org/award_winners/chambers_6640862.cfm}.}을 받은바 있는 S 시스템과 유사합니다. 이것은 선형 및 비선형 모델링(linear and non-linear modelling), 통계적 검정(statistical tests), 시계열분석(time series analysis), 통계적 분류기법(classification), 군집분석(clustering)과 같은 다양한 종류의 통계적 기법들과 그래픽 기능들을 제공합니다. "

#. type: ifnottex
#: R-intro.texi:83
msgid "This manual provides information on data types, programming elements, statistical modelling and graphics."
msgstr "이 문서에서는 데이터형(data type), 프로그래밍 기본요소들(programming elements), 그리고 통계 모델링(statistical modelling) 및 그래픽(graphics)에 대한 내용을 다룹니다."

#. type: node
#: R-intro.texi:110
#: R-intro.texi:112
#: R-intro.texi:140
#: R-intro.texi:142
#: R-intro.texi:143
#: R-intro.texi:158
#: R-intro.texi:194
#: R-intro.texi:219
#: R-intro.texi:246
#: R-intro.texi:266
#: R-intro.texi:346
#: R-intro.texi:424
#: R-intro.texi:473
#: R-intro.texi:494
#: R-intro.texi:526
#: R-intro.texi:576
#, no-wrap
msgid "Introduction and preliminaries"
msgstr "소개 및 미리 알아두어야 할 내용"

# Notes from Chel Hee Lee - Do not change!
#. type: node
#: R-intro.texi:110
#: R-intro.texi:142
#: R-intro.texi:576
#: R-intro.texi:591
#: R-intro.texi:667
#: R-intro.texi:778
#: R-intro.texi:861
#: R-intro.texi:910
#: R-intro.texi:967
#: R-intro.texi:1019
#: R-intro.texi:1142
#: R-intro.texi:1180
#, no-wrap
msgid "Simple manipulations numbers and vectors"
msgstr ""

#. type: node
#: R-intro.texi:110
#: R-intro.texi:576
#: R-intro.texi:1180
#: R-intro.texi:1182
#: R-intro.texi:1198
#: R-intro.texi:1286
#: R-intro.texi:1334
#: R-intro.texi:1364
#: R-intro.texi:1407
#, no-wrap
msgid "Objects"
msgstr ""

# Notes from Chel Hee Lee - Do not change!
#. type: cindex
#: R-intro.texi:110
#: R-intro.texi:1180
#: R-intro.texi:1407
#: R-intro.texi:1409
#: R-intro.texi:1469
#: R-intro.texi:1565
#: R-intro.texi:1582
#: R-intro.texi:4440
#, no-wrap
msgid "Factors"
msgstr "Factors (요인)"

# Notes from Chel Hee Lee - Do not change!
#. type: node
#: R-intro.texi:110
#: R-intro.texi:1407
#: R-intro.texi:1582
#: R-intro.texi:1583
#: R-intro.texi:1598
#: R-intro.texi:1643
#: R-intro.texi:1683
#: R-intro.texi:1775
#: R-intro.texi:1866
#: R-intro.texi:1939
#: R-intro.texi:1964
#: R-intro.texi:2249
#: R-intro.texi:2294
#: R-intro.texi:2323
#: R-intro.texi:2374
#, no-wrap
msgid "Arrays and matrices"
msgstr "Arrays and matrices (배열과 행렬)"

#. type: node
#: R-intro.texi:110
#: R-intro.texi:1582
#: R-intro.texi:2374
#: R-intro.texi:2375
#: R-intro.texi:2383
#: R-intro.texi:2464
#: R-intro.texi:2512
#: R-intro.texi:2719
#, no-wrap
msgid "Lists and data frames"
msgstr "리스트와 데이터 프레임"

# Notes from Chel Hee Lee - Do not change!
#. type: node
#: R-intro.texi:110
#: R-intro.texi:2374
#: R-intro.texi:2719
#: R-intro.texi:2720
#: R-intro.texi:2721
#: R-intro.texi:2747
#: R-intro.texi:2830
#: R-intro.texi:2882
#: R-intro.texi:2926
#: R-intro.texi:2954
#, no-wrap
msgid "Reading data from files"
msgstr "Reading data from files (파일로부터 데이터 읽어오기)"

#. type: node
#: R-intro.texi:110
#: R-intro.texi:2719
#: R-intro.texi:2954
#: R-intro.texi:2955
#: R-intro.texi:2956
#: R-intro.texi:2964
#: R-intro.texi:3041
#: R-intro.texi:3201
#: R-intro.texi:3358
#, no-wrap
msgid "Probability distributions"
msgstr "확률분포함수"

# Notes from Chel Hee Lee - Do not change!
#. type: node
#: R-intro.texi:110
#: R-intro.texi:2954
#: R-intro.texi:3358
#: R-intro.texi:3360
#: R-intro.texi:3367
#: R-intro.texi:3383
#: R-intro.texi:3503
#, no-wrap
msgid "Loops and conditional execution"
msgstr "Loops and conditional execution (반복 및 조건부 실행)"

# Note from Chel Hee Lee: Don't touch!
#. type: node
#: R-intro.texi:110
#: R-intro.texi:3358
#: R-intro.texi:3503
#: R-intro.texi:3504
#: R-intro.texi:3548
#: R-intro.texi:3620
#: R-intro.texi:3649
#: R-intro.texi:3710
#: R-intro.texi:3740
#: R-intro.texi:3759
#: R-intro.texi:3907
#: R-intro.texi:4032
#: R-intro.texi:4091
#: R-intro.texi:4194
#, no-wrap
msgid "Writing your own functions"
msgstr "Writing your own functions (사용자 정의함수 작성하기)"

# Notes from Chel Hee Lee - Do not change!
#. type: node
#: R-intro.texi:110
#: R-intro.texi:3503
#: R-intro.texi:4194
#: R-intro.texi:4195
#: R-intro.texi:4224
#: R-intro.texi:4491
#: R-intro.texi:4519
#: R-intro.texi:4605
#: R-intro.texi:4677
#: R-intro.texi:4731
#: R-intro.texi:5091
#: R-intro.texi:5253
#: R-intro.texi:5336
#, no-wrap
msgid "Statistical models in R"
msgstr "Statistical models in R (R에서 사용되는 통계모형들)"

# Note from Chel Hee Lee: Don't touch!
#. type: node
#: R-intro.texi:110
#: R-intro.texi:4194
#: R-intro.texi:5336
#: R-intro.texi:5392
#: R-intro.texi:5622
#: R-intro.texi:5782
#: R-intro.texi:5849
#: R-intro.texi:5948
#: R-intro.texi:6227
#: R-intro.texi:6398
#: R-intro.texi:6419
#, no-wrap
msgid "Graphics"
msgstr "Graphics (그래픽스)"

# Note from Chel Hee Lee: Don't touch!
#. type: node
#: R-intro.texi:110
#: R-intro.texi:221
#: R-intro.texi:5336
#: R-intro.texi:6419
#: R-intro.texi:6420
#: R-intro.texi:6421
#: R-intro.texi:6486
#: R-intro.texi:6496
#: R-intro.texi:6512
#: R-intro.texi:6548
#, no-wrap
msgid "Packages"
msgstr "Packages (패키지)"

#. type: node
#: R-intro.texi:110
#: R-intro.texi:6419
#: R-intro.texi:6548
#: R-intro.texi:6549
#: R-intro.texi:6566
#: R-intro.texi:6611
#: R-intro.texi:6686
#: R-intro.texi:6706
#: R-intro.texi:6736
#, no-wrap
msgid "OS facilities"
msgstr "운영체제의 기능들에 대한 접근"

#. type: node
#: R-intro.texi:110
#: R-intro.texi:6548
#: R-intro.texi:6736
#: R-intro.texi:6737
#: R-intro.texi:6968
#, no-wrap
msgid "A sample session"
msgstr ""

# Note from Chel Hee Lee: Don't touch!
#. type: node
#: R-intro.texi:110
#: R-intro.texi:6736
#: R-intro.texi:6968
#: R-intro.texi:6969
#: R-intro.texi:6981
#: R-intro.texi:7322
#: R-intro.texi:7392
#: R-intro.texi:7408
#: R-intro.texi:7518
#, no-wrap
msgid "Invoking R"
msgstr "Invoking R (R을 실행하기)"

# Note from Chel Hee Lee - Don't touch!
#. type: node
#: R-intro.texi:110
#: R-intro.texi:6968
#: R-intro.texi:7518
#: R-intro.texi:7519
#: R-intro.texi:7651
#, no-wrap
msgid "The command-line editor"
msgstr "The command-line editor (명령어라인 편집기)"

# Note from Chel Hee Lee: Don't touch!
#. type: node
#: R-intro.texi:110
#: R-intro.texi:7518
#: R-intro.texi:7651
#: R-intro.texi:7652
#: R-intro.texi:7656
#, no-wrap
msgid "Function and variable index"
msgstr "함수 및 변수와 관련된 색인"

# Note from Chel Hee Lee: Don't touch!
#. type: node
#: R-intro.texi:110
#: R-intro.texi:7651
#: R-intro.texi:7656
#: R-intro.texi:7657
#: R-intro.texi:7661
#, no-wrap
msgid "Concept index"
msgstr "개념과 관련된 색인"

# Note from Chel Hee Lee - Don't touch!
#. type: appendix
#: R-intro.texi:110
#: R-intro.texi:7656
#: R-intro.texi:7661
#: R-intro.texi:7662
#, no-wrap
msgid "References"
msgstr "References (참고문헌)"

#. type: Plain text
#: R-intro.texi:120
msgid "This introduction to @R{} is derived from an original set of notes describing the @Sl{} and @SPLUS{} environments written in 1990--2 by Bill Venables and David M. Smith when at the University of Adelaide.  We have made a number of small changes to reflect differences between the @R{} and @Sl{} programs, and expanded some of the material."
msgstr "@R{}에 대한 소개를 담고 있는 본 문서는 빌 베너블스(Bill Venables)와 데이비드 스미스(David M. Smith)가 애들레이드 대학(University of Adelaide)에 있을 당시 S와 S-PLUS의 환경(environment)에 대하여 1990년부터 2년간에 걸쳐 작성한 노트를 기초로 하고 있습니다.  우리는 @R{}과 @Sl{} 프로그램 사이의 다른 점들을 반영하기 위하여 여러번의 작은 수정 및 일부 내용을 확장하였습니다."

#. type: Plain text
#: R-intro.texi:124
msgid "We would like to extend warm thanks to Bill Venables (and David Smith)  for granting permission to distribute this modified version of the notes in this way, and for being a supporter of @R{} from way back."
msgstr "우리는 이러한 방법으로 수정된 노트를 재배포할 수 있도록 허락해주고, 오래 전부터 @R{}을 지원해 온 빌 베네블스(Bill Venables)와 데이비드 스미스(David Smith)에게 깊은 감사의 뜻을 전하고자 합니다."

#. type: Plain text
#: R-intro.texi:127
msgid "Comments and corrections are always welcome.  Please address email correspondence to @email{R-core@@R-project.org}."
msgstr "본 문서에 대한 조언과 교정을 언제나 환영하며, @email{R-core@@R-project.org}로 내용을 보내주시길 부탁드립니다."

#. type: subheading
#: R-intro.texi:128
#, no-wrap
msgid "Suggestions to the reader"
msgstr "문서를 읽기 전에 독자들에게 드리는 말씀"

#. type: Plain text
#: R-intro.texi:133
msgid "Most @R{} novices will start with the introductory session in Appendix A.  This should give some familiarity with the style of @R{} sessions and more importantly some instant feedback on what actually happens."
msgstr "@R{}이 생소한 독자인 경우에 부록 A에 있는 소개세션(introductory session)을 먼저 살펴보시길 바랍니다.아마도 @R{}을 사용하는 방법에 좀 더 익숙해질 뿐만아니라, 실제로 어떤 결과들이 나오는지 바로 알 수 있게 도와줄 것입니다. "

#. type: Plain text
#: R-intro.texi:137
msgid "Many users will come to @R{} mainly for its graphical facilities.  @xref{Graphics}, which can be read at almost any time and need not wait until all the preceding sections have been digested."
msgstr "많은 사용자들이 주로 그래픽 기능 때문에 @R{}을 찾습니다. 이러한 분들을 위하여 관련 내용을 언제든지 살펴볼 수 있도록 @xref{Graphics (그래픽스)} 챕터에 따로 정리해 두었습니다.  따라서, 문서의 내용을 순서대로 모두 소화내가며 따라가지 않아도 괜찮습니다."

#. type: node
#: R-intro.texi:156
#: R-intro.texi:158
#: R-intro.texi:159
#: R-intro.texi:194
#, no-wrap
msgid "The R environment"
msgstr "R의 환경 (인바이런먼트 또는 environment)"

#. type: node
#: R-intro.texi:156
#: R-intro.texi:158
#: R-intro.texi:194
#: R-intro.texi:195
#: R-intro.texi:219
#, no-wrap
msgid "Related software and documentation"
msgstr "연관된 소프트웨어 및 문서들"

#. type: node
#: R-intro.texi:156
#: R-intro.texi:194
#: R-intro.texi:219
#: R-intro.texi:220
#: R-intro.texi:246
#, no-wrap
msgid "R and statistics"
msgstr "R과 통계"

#. type: node
#: R-intro.texi:156
#: R-intro.texi:219
#: R-intro.texi:246
#: R-intro.texi:247
#: R-intro.texi:266
#, no-wrap
msgid "R and the window system"
msgstr "R과 윈도우 시스템"

#. type: node
#: R-intro.texi:156
#: R-intro.texi:246
#: R-intro.texi:266
#: R-intro.texi:267
#: R-intro.texi:346
#, no-wrap
msgid "Using R interactively"
msgstr "R을 대화식으로 사용하기"

#. type: node
#: R-intro.texi:156
#: R-intro.texi:266
#: R-intro.texi:346
#: R-intro.texi:424
#, no-wrap
msgid "Getting help"
msgstr "도움말 기능 사용하기"

# Notes from Chel Hee Lee - D not change!
#. type: node
#: R-intro.texi:156
#: R-intro.texi:346
#: R-intro.texi:424
#: R-intro.texi:473
#, no-wrap
msgid "R commands; case sensitivity etc"
msgstr "R 명령어 및 대소문자의 구분과 같은 내용들"

# Notes from Chel Hee Lee - Do not change!
#. type: node
#: R-intro.texi:156
#: R-intro.texi:424
#: R-intro.texi:473
#: R-intro.texi:474
#: R-intro.texi:494
#, no-wrap
msgid "Recall and correction of previous commands"
msgstr "이전의 명령어를 불러와 수정하기"

# Notes from Chel Hee Lee - Do not change!
#. type: node
#: R-intro.texi:156
#: R-intro.texi:473
#: R-intro.texi:494
#: R-intro.texi:495
#: R-intro.texi:526
#, no-wrap
msgid "Executing commands from or diverting output to a file"
msgstr "파일에 작성된 명령어를 실행하거나 출력방향을 파일로 변경하기"

# Notes from Chel Hee Lee - Do not change!
#. type: section
#: R-intro.texi:156
#: R-intro.texi:494
#: R-intro.texi:526
#: R-intro.texi:527
#, no-wrap
msgid "Data permanency and removing objects"
msgstr "영구적 데이터 생성 및 객체의 제거"

#. type: Plain text
#: R-intro.texi:164
msgid "@R{} is an integrated suite of software facilities for data manipulation, calculation and graphical display.  Among other things it has"
msgstr "@R{}은 데이터의 조작(data manipulation) 및 수학적 계산(calculation), 그리고 시각화(graphical display)를 위한 도구들을 한데 묶어놓은 것입니다. 특히 다음과 같은 기능들을 포함하고 있습니다."

#. type: itemize
#: R-intro.texi:168
msgid "an effective data handling and storage facility,"
msgstr "효과적인 데이터의 조작 및 처리, 그리고 저장 기능,"

#. type: itemize
#: R-intro.texi:170
msgid "a suite of operators for calculations on arrays, in particular matrices,"
msgstr "배열(array) 계산을 위한 다양한 연산자들 (행렬의 경우에 더욱 특화되어 있음),"

#. type: itemize
#: R-intro.texi:173
msgid "a large, coherent, integrated collection of intermediate tools for data analysis,"
msgstr "체계적으로 잘 정리되어 있는 많은 데이터 분석도구들"

#. type: itemize
#: R-intro.texi:176
msgid "graphical facilities for data analysis and display either directly at the computer or on hardcopy, and"
msgstr "데이터 분석을 위한 그래픽 기능들과 더불어 이를 컴퓨터에서 혹은 출력물의 형태로 전환하여 보여주는 기능, 그리고"

#. type: itemize
#: R-intro.texi:181
msgid "a well developed, simple and effective programming language (called `S')  which includes conditionals, loops, user defined recursive functions and input and output facilities.  (Indeed most of the system supplied functions are themselves written in the @Sl{} language.)"
msgstr "`S'라고 알려져 있으며, 조건문(conditionals), 반복문(loops), 사용자정의 재귀함수(user defined recursive functions), 그리고 입출력기능(input and output facilities)을 포함하고 있을 뿐만아니라 단순하면서도 효과적이며 잘 개발된 프로그래밍 언어. (실제로 시스템에서 제공되는 대다수의 함수들은 @Sl{}언어로 작성되어 있습니다.) "

#. type: Plain text
#: R-intro.texi:187
msgid "The term ``environment'' is intended to characterize it as a fully planned and coherent system, rather than an incremental accretion of very specific and inflexible tools, as is frequently the case with other data analysis software."
msgstr "환경(``environment'', 인바이런먼트)라는 용어는 다른 종류의 데이터 분석도구들이 어떤 특정한 기능만을 수행하도록 개발된 도구들을 추가함으로서 시스템을 확장하는 것과는 다르게 체계적이고 잘 계획된 하나의 시스템이라는 점을 부각하기 위하여 사용되었습니다."

#. type: Plain text
#: R-intro.texi:193
msgid "@R{} is very much a vehicle for newly developing methods of interactive data analysis.  It has developed rapidly, and has been extended by a large collection of @emph{packages}.  However, most programs written in @R{} are essentially ephemeral, written for a single piece of data analysis."
msgstr "@R{}은 연구자가 데이터와의 대화를 통하여 분석방법을 개발하는 수단입니다.  이러한 것은 방대한 양의 패키지(@emph{package})에 의하여 빠른 속도로 이루어져 왔습니다. 그러나, @R{}로 작성된 대부분의 프로그램들은 어떤 특정 연구자에게 주어진 하나의 구체적인 데이터만을 분석하기 위하여 작성된 것입니다."

#. type: Plain text
#: R-intro.texi:200
msgid "@R{} can be regarded as an implementation of the @Sl{} language which was developed at Bell Laboratories by Rick Becker, John Chambers and Allan Wilks, and also forms the basis of the @SPLUS{} systems."
msgstr "@R{}은 벨연구소(Bell Laboratories)에서 근무중이던 릭 벡커(Rick Becker), 존 챔버스(John Chambers), 그리고 앨런 윌크스(Allan Wilks)에 의하여 개발된 S 언어에 의하여 만들어진 것으로 생각할 수 있습니다. 이 언어는 또한 S-PLUS 시스템의 근간을 형성하고 있습니다."

#. type: Plain text
#: R-intro.texi:212
msgid "The evolution of the @Sl{} language is characterized by four books by John Chambers and coauthors.  For @R{}, the basic reference is @emph{The New @Sl{} Language: A Programming Environment for Data Analysis and Graphics} by Richard A.@: Becker, John M.@: Chambers and Allan R.@: Wilks.  The new features of the 1991 release of @Sl{} are covered in @emph{Statistical Models in @Sl{}} edited by John M.@: Chambers and Trevor J.@: Hastie.  The formal methods and classes of the @pkg{methods} package are based on those described in @emph{Programming with Data} by John M.@: Chambers.  @xref{References}, for precise references."
msgstr "@Sl{} 언어의 진화과정은 존 챔버스(John Chambers)와 그의 동료들이 쓴 네 권의 책을 통하여 알 수 있습니다. 만약, @R{}에 대해서 가장 기본적인 참고자료를 원한다면 리차드(Richard A.@:), 베커(Becker, John M.@:), 챔버스(Chambers), 그리고 앨런(Allan R.@: Wilks)가 쓴 @emph{The New @Sl{} Language: A Programming Environment for Data Analysis and Graphics}이라는 책을 찾아보길 권합니다.  1991년에 배포된 @Sl{} 언어의 새로운 기능들은 존 챔버스(John M.@: Chambers)와 트레버(Trevor J.@: Hastie)에 의하여 편집된 @emph{Statistical Models in S}이라는 책을 참고하길 바랍니다. @pkg{methods} 패키지에 구현되어 있는 메소드(method)와 클래스(class)는 존 챔버스(John M.@: Chambers)가 저술한 @emph{Programming with Data}을 토대로 하고 있습니다. 더 자세한 내용들은 @xref{References (참고문헌)}장에 있는 참고문헌을 살펴보시길 바랍니다."

#. type: Plain text
#: R-intro.texi:218
msgid "There are now a number of books which describe how to use @R{} for data analysis and statistics, and documentation for @Sl{}/@SPLUS{} can typically be used with @R{}, keeping the differences between the @Sl{} implementations in mind.  @xref{What documentation exists for R?, , , R-FAQ, The R statistical system FAQ}."
msgstr "이미 시중에는 @R{}을 이용한 데이터 분석과 통계학에 관련된 많은 서적들이 있습니다. 또한, @Sl{}/@SPLUS{}의 사용을 위하여 작성된 문서들을 참고하는 것 역시 @R{}을 사용하는데 도움이 될 수 있습니다. 그러나, @Sl{}을 이용하여 구현한 것들간의 차이를 반드시 기억하고 있어야만 합니다. 이에 관해서는 @xref{What documentation exists for R?, , , R-FAQ, The R statistical system FAQ} 이라는 장을 참고하시길 바랍니다."

#. type: Plain text
#: R-intro.texi:233
msgid "Our introduction to the @R{} environment did not mention @emph{statistics}, yet many people use @R{} as a statistics system.  We prefer to think of it of an environment within which many classical and modern statistical techniques have been implemented.  A few of these are built into the base @R{} environment, but many are supplied as @emph{packages}.  There are about 25 packages supplied with @R{} (called ``standard'' and ``recommended'' packages) and many more are available through the @acronym{CRAN} family of Internet sites (via @uref{http://CRAN.R-project.org}) and elsewhere.  More details on packages are given later (@pxref{Packages})."
msgstr "@R{}의 환경(environment)에 대한 본 안내서는 @emph{statistics}(통계학)에 대한 설명을 위하여 작성된 것은 아니지만, 이미 많은 독자 여러분들은 @R{}을 통계 시스템(statistics system)으로서 사용하고 있습니다. 우리는 여러분들께서 @R{}이라는 시스템을 과거로부터 현재에 이르기까지 개발되어 온 수많은 통계적 방법들을 구현하여 한데 모아 놓아 사용해 볼 수 있는 하나의 환경으로 생각해주셨으면 합니다. 이러한 많은 방법들 중 일부는 @R{}의 기본 환경(base environment) 안에 이미 포함되어 있습니다.  그러나, 대부분은 패키지(@emph{packages})의 형태로서 제공됩니다. 기본적으로 @R{}은 표준(``standard'') 혹은 권장 (또는 추천, ``recommended'') 패키지라고 불리우는 대략 25개의 패키지들로 구성되어 있습니다.더 많은 패키지들을 @acronym{CRAN}이라는 인터넷 저장소(@uref{http://CRAN.R-project.org})를 통해서 얻을 수 있습니다. 패키지에 관한 더 자세한 내용을 (@pxref{Packages (패키지)})에서 찾아볼 수 있습니다."

#. type: Plain text
#: R-intro.texi:237
msgid "Most classical statistics and much of the latest methodology is available for use with @R{}, but users may need to be prepared to do a little work to find it."
msgstr "가장 고전적인 통계(classical statistics) 방법부터 최근에 개발된 많은 방법들을@R{}에서 사용될 수 있습니다.  그러나, 이런 것들을 찾는 것은 사용자의 몫입니다."

#. type: Plain text
#: R-intro.texi:245
msgid "There is an important difference in philosophy between @Sl{} (and hence @R{}) and the other main statistical systems.  In @Sl{} a statistical analysis is normally done as a series of steps, with intermediate results being stored in objects.  Thus whereas SAS and SPSS will give copious output from a regression or discriminant analysis, @R{} will give minimal output and store the results in a fit object for subsequent interrogation by further @R{} functions."
msgstr "@Sl{} (이 문서에서는 @R{})과 다른 주요 통계 시스템들 사이에는 철학적인 면에서 중요한 다른 점이 존재합니다.@Sl{}를 이용한 통계분석(statistical analysis)은 보통 일련의 절차로 수행되며, 각 과정에서 얻어진 결과들은 객체(objects)의 형태로 저장되게 됩니다.예를들어, SAS 또는 SPSS를 이용하여 회귀분석(regression) 또는 판별분석(discriminant analysis)을 수행한 경우 분석 과정 중에 생성된 모든 결과를 한번에 보여주는 반면, @R{}은 최소한의 결과만을 출력해주고 생성된 결과들을 적합한 객체의 형태로 저장하여 차후에 이를 활용할 수 있는 추가적인 @R{} 함수들과 함께 사용할 수 있도록 합니다."

#. type: Plain text
#: R-intro.texi:254
msgid "The most convenient way to use @R{} is at a graphics workstation running a windowing system.  This guide is aimed at users who have this facility.  In particular we will occasionally refer to the use of @R{} on an X window system although the vast bulk of what is said applies generally to any implementation of the @R{} environment."
msgstr "@R{}을 사용하는 가장 손쉬운 방법은 윈도우 시스템(windowing sytem, 즉 두 개이상의 서로 다른 데이터를 여러 개의 창을을 띄어 한 화면에 표시해 주는 시스템)을 사용하는 그래픽 워크스테이션(graphics workstation)을 이용하는 것입니다.  이 문서는 이러한 기능을 활용할 수 있는 사용자들을 위하여 작성되었습니다.  우리는 때때로 특히 X 윈도우 시스템에서 @R{}을 사용하는 것을 위주로 설명하게 되겠지만, 이러한 설명들은 일반적으로 @R{}을 실행할 수 있는 다른 체제에서도 동일하게 적용하게 됩니다."

#. type: Plain text
#: R-intro.texi:260
msgid "Most users will find it necessary to interact directly with the operating system on their computer from time to time.  In this guide, we mainly discuss interaction with the operating system on UNIX machines.  If you are running @R{} under Windows or OS X you will need to make some small adjustments."
msgstr "대부분의 사용자들은 이따금 운영체제(operating system)와 직접적으로 작업을 해야 할 필요가 있을 것입니다. 이 문서에서는 주로 UNIX에서 작업하는 것을 가정하고 있습니다.  만약, 윈도우즈(Windows) 또는 OS X에서 @R{}을 사용하는 경우라면 다소 차이가 있을 수 있습니다."

#. type: Plain text
#: R-intro.texi:265
msgid "Setting up a workstation to take full advantage of the customizable features of @R{} is a straightforward if somewhat tedious procedure, and will not be considered further here.  Users in difficulty should seek local expert help."
msgstr "다소 번거로운 기술적인 조정이 필요하긴 하지만 @R{}이 가진 장점들을 최대한 살리기 위하여 워크스테이션을 설정하는 것은 어렵지 않습니다. 그러나, 본 문서에서는 이러한 내용들을 다루지 않습니다.  만약, 이러한 조정에 어려움을 느끼신다면 주변 전문가에게 도움을 요청하시길 바랍니다."

#. type: Plain text
#: R-intro.texi:275
msgid "When you use the @R{} program it issues a prompt when it expects input commands.  The default prompt is @samp{@code{>}}, which on UNIX might be the same as the shell prompt, and so it may appear that nothing is happening.  However, as we shall see, it is easy to change to a different @R{} prompt if you wish.  We will assume that the UNIX shell prompt is @samp{@code{$}}."
msgstr "@R{} 프로그램을 사용할 때 사용자의 명령어를 입력을 기다린다는 의미의 프롬프트(prompt)를 볼 수 있습니다.  이 프롬프트에 대한 기본설정은 @samp{@code{>}}으로 되어 있습니다.  이 표시는 UNIX에서의 쉘 프롬프트(shell prompt)와도 동일하기도 합니다.  그러나, 다른 모양의 @R{}의 프롬프트를 지정하여 사용할 수도 있습니다.  우리는 이 문서에서 내용의 명확성을 위하여 UNIX의 쉘 프롬프트는 @samp{@code{$}}를 이용하여 표시하도록 하겠습니다."

#. type: Plain text
#: R-intro.texi:278
msgid "In using @R{} under UNIX the suggested procedure for the first occasion is as follows:"
msgstr "UNIX에서 @R{}을 사용하는 경우 다음과 같은 방법으로 실행시킬 수 있습니다:"

#. type: enumerate
#: R-intro.texi:284
msgid "Create a separate sub-directory, say @file{work}, to hold data files on which you will use @R{} for this problem.  This will be the working directory whenever you use @R{} for this particular problem."
msgstr "먼저 작업을 하게 될 @file{work}라고 하는 디렉토리를 생성합니다.  이 디렉토리는 @R{}을 이용하면서 사용하게 될 데이터 파일들을 보관하게 됩니다.  이러한 이유로 이를 작업 디렉토리(working directory)라고 합니다."

#. type: example
#: R-intro.texi:288
#, no-wrap
msgid ""
"$ mkdir work\n"
"$ cd work\n"
msgstr ""

#. type: enumerate
#: R-intro.texi:292
msgid "Start the @R{} program with the command"
msgstr "아래의 명령어를 입력하여 @R{} 프로그램을 시작합니다."

#. type: example
#: R-intro.texi:295
#, no-wrap
msgid "$ R\n"
msgstr "$ R\n"

#. type: enumerate
#: R-intro.texi:299
msgid "At this point @R{} commands may be issued (see later)."
msgstr "이제부터 @R{} 명령어들을 사용할 수 있습니다 (추후에 보게 될 것입니다)."

#. type: enumerate
#: R-intro.texi:302
msgid "To quit the @R{} program the command is"
msgstr "@R{} 프로그램을 종료하기 위해서는 다음의 명령어를 사용합니다."

#. type: example
#: R-intro.texi:305
#, no-wrap
msgid "> q()\n"
msgstr "> q()\n"

#. type: enumerate
#: R-intro.texi:314
msgid "At this point you will be asked whether you want to save the data from your @R{} session.  On some systems this will bring up a dialog box, and on others you will receive a text prompt to which you can respond @kbd{yes}, @kbd{no} or @kbd{cancel} (a single letter abbreviation will do) to save the data before quitting, quit without saving, or return to the @R{} session.  Data which is saved will be available in future @R{} sessions."
msgstr "이때 현재의 @R{} 세션에서 작업하던 데이터를 저장할 것인지에 대해서 확인하게 됩니다. 일부 시스템에서는 대화상자(dialog box)를 통하여 이것을 묻게 될 수도 있는데 주로 일반텍스트(text) 형식으로 @kbd{yes}(예), @kbd{no}(아니오), 또는 @kbd{cancel}(취소)가 보여질 것입니다. 이때 첫글자를 이용하여 종료전에 데이터를 저장할 것인지, 저장하지 않고 종료할 것인지, 혹은 다시 작업중인 @R{} 세션으로 돌아갈 것인지 선택할 수 있습니다.  저장된 데이터는 다음에 사용될  @R{} 세션에서 다시 사용할 수 있습니다."

#. type: Plain text
#: R-intro.texi:318
msgid "Further @R{} sessions are simple."
msgstr "이렇게 프로그램을 종료 한 뒤 새로운 @R{} 세션을 시작하는 것은 간단합니다."

#. type: enumerate
#: R-intro.texi:323
msgid "Make @file{work} the working directory and start the program as before:"
msgstr "위에서 해 보았던 것과 같이 @file{work}라는 작업디렉토리를 생성하고 다음과 같이 프로그램을 시작할 수 있습니다:"

#. type: example
#: R-intro.texi:327
#, no-wrap
msgid ""
"$ cd work\n"
"$ R\n"
msgstr ""
"$ cd work\n"
"$ R\n"

#. type: enumerate
#: R-intro.texi:332
msgid "Use the @R{} program, terminating with the @code{q()} command at the end of the session."
msgstr "@R{} 프로그램을 사용하고 난 뒤, 세션의 맨 마지막에서 @code{q()} 명령어를 이용하여 종료할 수 있습니다."

#. type: Plain text
#: R-intro.texi:339
msgid "To use @R{} under Windows the procedure to follow is basically the same.  Create a folder as the working directory, and set that in the @file{Start In} field in your @R{} shortcut.  Then launch @R{} by double clicking on the icon."
msgstr "윈도우즈 환경에서 @R{}을 사용하기 방법은 기본적으로 UNIX에서 R을 사용하는 방법과 동일합니다.  먼저 작업디렉토리로 사용될 폴더(folder)를 생성한뒤, @file{Start In} 메뉴에서 @R{} 바로가기를 생성합니다.  이제 생성된 아이콘을 더블클릭함으로서 @R{}을 실행할 수 있습니다."

#. type: section
#: R-intro.texi:340
#, no-wrap
msgid "An introductory session"
msgstr "소개 세션(introductory session)"

#. type: Plain text
#: R-intro.texi:345
msgid "Readers wishing to get a feel for @R{} at a computer before proceeding are strongly advised to work through the introductory session given in @ref{A sample session}."
msgstr "@R{}을 사용하는데 좀 더 빠르게 익숙해지길 희망하는 독자라면 제일 먼저 @ref{A sample session}이라는 부록에 있는 소개세션(introductory session)을 따라해보기를 적극 권장합니다."

#. type: section
#: R-intro.texi:347
#, no-wrap
msgid "Getting help with functions and features"
msgstr "함수(functions)와 기능(features)에 대한 도움말 사용하기"

#. type: findex
#: R-intro.texi:348
#: R-intro.texi:357
#, no-wrap
msgid "help"
msgstr ""

#. type: Plain text
#: R-intro.texi:353
msgid "@R{} has an inbuilt help facility similar to the @code{man} facility of UNIX.  To get more information on any specific named function, for example @code{solve}, the command is"
msgstr "@R{}은 UNIX에서 @code{man} 명령어를 이용하여 도움말을 찾는 것과 유사한 기능을 가지고 있습니다. 예를 들어, @code{solve}라는 특정한 이름을 가진 함수에 대한 정보를 알고 싶다면, 다음과 같이 명령해 보도록 합니다."

#. type: example
#: R-intro.texi:356
#, no-wrap
msgid "> help(solve)\n"
msgstr "> help(solve)\n"

#. type: Plain text
#: R-intro.texi:360
#: R-intro.texi:1884
msgid "An alternative is"
msgstr "다음은 또 다른 방법입니다."

#. type: example
#: R-intro.texi:363
#, no-wrap
msgid "> ?solve\n"
msgstr "> ?solve\n"

#. type: findex
#: R-intro.texi:364
#, no-wrap
msgid "?"
msgstr "?"

#. type: Plain text
#: R-intro.texi:370
msgid "For a feature specified by special characters, the argument must be enclosed in double or single quotes, making it a ``character string'': This is also necessary for a few words with syntactic meaning including @code{if}, @code{for} and @code{function}."
msgstr "특수문자(special character)에 대해서 알고 싶다면, ``문자열(character string)''과 같은 형식으로 반드시 큰따옴표(double quotes) 또는 작은따옴표(single quotes)를 문자열의 앞뒤로 함께 사용해주어야 합니다:  이것은 또한 @code{if}, @code{for}, 그리고 @code{function}과 같은 구문적의미를 가지는 키워드인 경우에도 요구됩니다."

#. type: example
#: R-intro.texi:373
#, no-wrap
msgid "> help(\"[[\")\n"
msgstr "> help(\"[[\")\n"

#. type: Plain text
#: R-intro.texi:378
msgid "Either form of quote mark may be used to escape the other, as in the string @code{\"It's important\"}.  Our convention is to use double quote marks for preference."
msgstr "@code{\"It's important\"}에서 볼 수 있는 것과 같이 인용부호(quote mark)의 종류에 관계없이 문자열을 둘러싼 인용부호는 문자열 내에 포함된 다른종류의 인용부호를 표현할 수 있게 해줍니다.  일반적으로 권장되는 방법은 큰 따음표(double quote marks)를 문자열을 둘러싸는 인용부호로 사용하는 것입니다."

#. type: Plain text
#: R-intro.texi:381
msgid "On most @R{} installations help is available in @HTML{} format by running"
msgstr "대부분의 경우 설치된 @R{}로부터 @HTML{}의 형식을 가진 도움말을 다음과 같은 방법으로 사용할 수 있습니다"

#. type: example
#: R-intro.texi:384
#: R-intro.texi:6474
#, no-wrap
msgid "> help.start()\n"
msgstr "> help.start()\n"

#. type: findex
#: R-intro.texi:385
#, no-wrap
msgid "help.start"
msgstr "help.start"

#. type: Plain text
#: R-intro.texi:395
msgid "which will launch a Web browser that allows the help pages to be browsed with hyperlinks.  On UNIX, subsequent help requests are sent to the @HTML{}-based help system.  The `Search Engine and Keywords' link in the page loaded by @code{help.start()} is particularly useful as it is contains a high-level concept list which searches though available functions.  It can be a great way to get your bearings quickly and to understand the breadth of what @R{} has to offer."
msgstr "이것은 하이퍼링크를 이용하여 도움말 페이지들을 살펴볼 수 있는 웹브라우저(Web browser)를 실행시킬 것입니다.UNIX에서는 차후에 일어나는 도움말에 대한 요청들은 @HTML{}기반의 도움말 시스템에 보내어집니다.@code{help.start()}에 의하여 불러들인 페이지 내에 있는 `Search Engine and Keywords'라는 링크는 매우 유용합니다.그 이유는 사용가능한 함수들을 철저하게 검색하는 고수준의 개념목록(high-level concept list)를 포함하고 있기 때문입니다.이것은 또한 시스템을 살펴볼 수 있는 뛰어난 방법이며 어떤 것들이 @R{}에서 제공되는지를 이해할 수 있는 방법이기도 합니다."

#. type: findex
#: R-intro.texi:396
#, no-wrap
msgid "help.search"
msgstr "help.search"

#. type: Plain text
#: R-intro.texi:400
msgid "The @code{help.search} command (alternatively @code{??})  allows searching for help in various ways. For example,"
msgstr "@code{help.search} 명령어 (다른 표현으로는 @code{??})는 다양한 방법으로 도움말을 검색하도록 해줍니다. 예를들면, 다음과 같습니다."

#. type: example
#: R-intro.texi:403
#, no-wrap
msgid "> ??solve\n"
msgstr "> ??solve\n"

#. type: findex
#: R-intro.texi:404
#, no-wrap
msgid "??"
msgstr "??"

#. type: Plain text
#: R-intro.texi:407
msgid "Try @code{?help.search} for details and more examples."
msgstr "더 자세한 내용 및 많은 예제들을 확인하기 위해서는 @code{?help.search}를 입력해 보길 바랍니다."

#. type: Plain text
#: R-intro.texi:409
msgid "The examples on a help topic can normally be run by"
msgstr "검색한 도움말과 관련된 예제는 일반적으로 다음과 같은 방법으로 실행해 볼 수 있습니다."

#. type: example
#: R-intro.texi:412
#, no-wrap
msgid "> example(@var{topic})\n"
msgstr "> example(@var{topic})\n"

#. type: findex
#: R-intro.texi:413
#, no-wrap
msgid "example"
msgstr "example"

#. type: Plain text
#: R-intro.texi:416
msgid "Windows versions of @R{} have other optional help systems: use"
msgstr "윈도우즈 버전의 @R{}을 사용하는 경우 도움말을 사용할 수 있는 또 다른 방법이 있습니다:"

#. type: example
#: R-intro.texi:419
#, no-wrap
msgid "> ?help\n"
msgstr "> ?help\n"

#. type: Plain text
#: R-intro.texi:423
msgid "for further details."
msgstr "위의 명령어를 입력함으로서 더 자세한 사항을 확인해 볼 수 있습니다."

#. type: section
#: R-intro.texi:425
#, no-wrap
msgid "R commands, case sensitivity, etc."
msgstr "R 명령어 및 대소문자의 구분과 같은 내용들"

#. type: Plain text
#: R-intro.texi:440
msgid "Technically @R{} is an @emph{expression language} with a very simple syntax.  It is @emph{case sensitive} as are most UNIX based packages, so @code{A} and @code{a} are different symbols and would refer to different variables.  The set of symbols which can be used in @R{} names depends on the operating system and country within which @R{} is being run (technically on the @emph{locale} in use).  Normally all alphanumeric symbols are allowed@footnote{For portable @R{} code (including that to be used in @R{} packages) only A--Za--z0--9 should be used.} (and in some countries this includes accented letters) plus @samp{@code{.}} and @samp{@code{_}}, with the restriction that a name must start with @samp{@code{.}} or a letter, and if it starts with @samp{@code{.}} the second character must not be a digit.  Names are effectively unlimited in length."
msgstr "기술적인 측면에서 말하자면 @R{}은 아주 간단한 문법(syntax)를 가진 표현언어(@emph{expression language})이라고 할 수 있습니다.UNIX를 기반으로 하는 대부분의 패키지들과 같이 대소문자를 구별(@emph{case sensitive})합니다.따라서, @code{A}와 @code{a}는 서로 다른 기호(symbol)로 인식되어 다른 변수를 가리키게 됩니다.@R{}에서 사용할 수 있는 기호들은 사용자의 운영체제 및 @R{}이 현재 실행되고 있는 국가설정(좀 더 기술적으로 말하자면 사용되고 있는 로케일(@emph{locale}))에 따라 달라질 수 있습니다.기본적으로 모든 알파벳 기호들이 사용가능합니다@footnote{@R{} 패키지들에서 사용되는 @R{} 코드의 경우를 포함하여 오로지 A--Za--z0--9만이 사용되어야 합니다.} (그리고 일부국가에서는 이것은 엑센트를 가진 문자를 포함하기도 합니다)  또한, @samp{@code{.}}와 @samp{@code{_}}을 함께 조합하여 사용할 수 있습니다.  그러나, 변수명은 반드시 @samp{@code{.}} 또는 문자(letter)을 이용하여 시작해야 합니다.만약 변수명이 @samp{@code{.}}로 시작한다면 바로뒤에 이어지는 두번째 문자는 반드시 숫자(digit)가 아닌 문자가 와야 합니다.실제적으로 변수명이 가질 수 있는 길이에는 제한이 없습니다."

#. type: Plain text
#: R-intro.texi:446
msgid "Elementary commands consist of either @emph{expressions} or @emph{assignments}.  If an expression is given as a command, it is evaluated, printed (unless specifically made invisible), and the value is lost.  An assignment also evaluates an expression and passes the value to a variable but the result is not automatically printed."
msgstr "기초적인 명령문(commands)은 표현식(@emph{expressions}) 또는 할당(@emph{assignment}) 둘 중의 하나로 이루어지게 됩니다. 만약 표현식이 하나의 명령으로서 주어지는 경우, 이 표현식에 대한 평가(evaluate)가 이루어지게 되고 평가된 값은 (특별히 보이지 않도록 처리되지 않는한) 출력되게 됩니다. 그리고 이렇게 평가된 값은 어디에도 저장되지 않고 사라집니다.  할당의 경우 역시 주어진 표현식을 평가한 뒤 평가된 값을 어떤 변수에 저장하도록 넘겨주지만 그 값은 자동으로 출력되지 않습니다. "

#. type: Plain text
#: R-intro.texi:454
msgid "Commands are separated either by a semi-colon (@samp{@code{;}}), or by a newline.  Elementary commands can be grouped together into one compound expression by braces (@samp{@code{@{}} and @samp{@code{@}}}).  @emph{Comments} can be put almost@footnote{@strong{not} inside strings, nor within the argument list of a function definition} anywhere, starting with a hashmark (@samp{@code{#}}), everything to the end of the line is a comment."
msgstr "명령문은 세미콜론(@samp{@code{;}}) 또는 새로운 행(newline, 또는 개행)에 의하여 구분됩니다. 기본적인 명령문들은 한 쌍의 열린 중괄호(@samp{@code{@{}}와 @samp{@code{@}}})에 의하여 하나의 복합표현식(compound expression)으로 묶을 수 있습니다.주석(@emph{comments})은 프로그램상의 어느 곳@footnote{문자열 내부 또는 함수의 정의에서 사용되는 인자들을 나열하는 부분은 @strong{제외}}에나 놓일 수 있습니다.이것은 해쉬마크(hashmark, @samp{@code{#}})가 사용된 지점부터 시작하여 라인의 끝부분까지 놓인 모든 것들을 주석처리합니다."

#. type: Plain text
#: R-intro.texi:457
msgid "If a command is not complete at the end of a line, @R{} will give a different prompt, by default"
msgstr "만약 명령문이 한 줄에 모두 다 입력되지 않고 다음 행으로 계속 이어지게 된다면, @R{}은 다른 모양의 프롬프트를 보여줄 것입니다.  아래에 보여지는 기호가 현재 기본적으로 설정되어 있습니다."

#. type: example
#: R-intro.texi:460
#, no-wrap
msgid "+\n"
msgstr "+\n"

#. type: Plain text
#: R-intro.texi:467
msgid "on second and subsequent lines and continue to read input until the command is syntactically complete.  This prompt may be changed by the user.  We will generally omit the continuation prompt and indicate continuation by simple indenting."
msgstr "이 기호는 명령문이 문법적으로 완성될 때까지 두번째 그리고 그 이후의 줄에도 계속 표시되며 입력을 계속해서 받아들이게 됩니다.이 프롬프트는 사용자에 의하여 변경될 수 있습니다.우리는 이 문서에 컨티뉴에이션 프롬프트(continuation prompt)를 생략하고 간단한 들여쓰기(indenting)를 함으로서 명령어가 계속 이어짐(continuation)을 나타낼 것입니다."

#. type: Plain text
#: R-intro.texi:472
msgid "Command lines entered at the console are limited@footnote{some of the consoles will not allow you to enter more, and amongst those which do some will silently discard the excess and some will use it as the start of the next line.} to about 4095 bytes (not characters)."
msgstr "콘솔(console) 내에서 입력할 수 있는 명령어 라인(command lines)의 길이는 대략 4095 바이트(bytes)로 제한 됩니다 (문자의 개수를 의미하는 것이 아닙니다). @footnote{일부 콘솔의 경우 더 이상 입력할 수 없도록 하거나, 경고메시지 없이 입력범위를 초과한 부분을 잘라내기도 합니다.  어떤 콘솔의 경우에는 초과된 부분을 다음행의 새로운 시작으로 사용하기도 합니다.}"

#. type: Plain text
#: R-intro.texi:484
msgid "Under many versions of UNIX and on Windows, @R{} provides a mechanism for recalling and re-executing previous commands.  The vertical arrow keys on the keyboard can be used to scroll forward and backward through a @emph{command history}.  Once a command is located in this way, the cursor can be moved within the command using the horizontal arrow keys, and characters can be removed with the @key{DEL} key or added with the other keys.  More details are provided later: @pxref{The command-line editor}."
msgstr "다양한 버전의 UNIX와 윈도우즈 환경아래에서 실행되는 @R{}은 이전에 사용되었던 명령어들을 다시 불러(recalling)들여 이를 재실행(re-executing) 할 수 있는 매커니즘(mechanism)을 가지고 있습니다.  키보드에서 위 또는 아래로 이동하는 화살표 키를 사용하여 이전에 실행한 명령어들의 이력(@emph{command history})을 앞뒤로 살펴볼 수있습니다.  이러한 방법으로 명령어를 선택한 뒤에 좌 또는 우로 이동하는 화살표키를 이용하여 커서를 이동시킵니다. 그리고 @key{DEL}를 이용하여 문자를 지우거나 다른 키를 이용하여 입력할수도 있습니다.  더 자세한 내용은 @pxref{The command-line editor (명령어라인 편집기)} 을 살펴보시길 바랍니다."

#. type: Plain text
#: R-intro.texi:488
msgid "The recall and editing capabilities under UNIX are highly customizable.  You can find out how to do this by reading the manual entry for the @strong{readline} library."
msgstr "UNIX 환경에서는 불러오고 수정하는 기능들을 매우 쉽게 사용자에 맞추어 조정할 수 있습니다.  이러한 조정방법에 대해서는 @strong{readline} 라이브러리내 관련 매뉴얼 항목에서 찾을 수 있습니다. "

#. type: Plain text
#: R-intro.texi:493
msgid "Alternatively, the Emacs text editor provides more general support mechanisms (via @acronym{ESS}, @emph{Emacs Speaks Statistics}) for working interactively with @R{}.  @xref{R and Emacs, , , R-FAQ, The R statistical system FAQ}."
msgstr "더 나아가, 이맥스(Emacs)라는 텍스트 편집기(text editor)는 @R{}과 소통하며 작업을 할 수 있도록 (@acronym{ESS}(@emph{Emacs Speaks Statistics})를 통하여) 보다 일반적인 지원 메카니즘(support mechanism)을 제공하고 있습니다.  @xref{R and Emacs, , , R-FAQ, The R statistical system FAQ}를 살펴보시길 바랍니다."

#. type: cindex
#: R-intro.texi:496
#, no-wrap
msgid "Diverting input and output"
msgstr "외부파일에 저장된 명령 실행 및 외부파일로 결과 저장하기"

#. type: Plain text
#: R-intro.texi:501
msgid "If commands@footnote{of unlimited length.} are stored in an external file, say @file{commands.R} in the working directory @file{work}, they may be executed at any time in an @R{} session with the command"
msgstr "이제 명령어들이 @file{commands.R}이라는 외부파일에 저장되어 있고, 이 파일은 @file{work}라는 작업 디렉토리(working directory)에 놓여있다고 가정해 봅니다.  이 명령어들은 @R{} 세션내에서 다음의 명령어를 이용하여 언제든지 실행될 수 있습니다."

#. type: example
#: R-intro.texi:504
#, no-wrap
msgid "> source(\"commands.R\")\n"
msgstr "> source(\"commands.R\")\n"

#. type: findex
#: R-intro.texi:505
#, no-wrap
msgid "source"
msgstr "source"

#. type: Plain text
#: R-intro.texi:509
msgid "For Windows @strong{Source} is also available on the @strong{File} menu.  The function @code{sink},"
msgstr "윈도우즈 환경에서는 @strong{File} 메뉴에 놓여 있는 @strong{Source} 항목을 이용하여 동일한 작업을 수행할 수 있습니다.다음에 보여지는 함수 @code{sink}는 출력방향을 콘솔로부터 @file{record.lis}이라는 외부파일로 변경하여 추후에 생성되는 결과물들이 외부파일에 저장될 수 있도록 해줍니다."

#. type: example
#: R-intro.texi:512
#, no-wrap
msgid "> sink(\"record.lis\")\n"
msgstr "> sink(\"record.lis\")\n"

#. type: findex
#: R-intro.texi:513
#, no-wrap
msgid "sink"
msgstr "sink"

#. type: Plain text
#: R-intro.texi:518
msgid "will divert all subsequent output from the console to an external file, @file{record.lis}.  The command"
msgstr "위와 같이 명령하게 되면 출력의 방향을 다시 콘솔로 향하도록 합니다."

#. type: example
#: R-intro.texi:521
#, no-wrap
msgid "> sink()\n"
msgstr "> sink()\n"

# this translation is correct; thus, please do not touch it.
#. type: Plain text
#: R-intro.texi:525
msgid "restores it to the console once again."
msgstr " "

#. type: Plain text
#: R-intro.texi:533
msgid "The entities that @R{} creates and manipulates are known as @emph{objects}.  These may be variables, arrays of numbers, character strings, functions, or more general structures built from such components."
msgstr "@R{}에서 생성하고 다루게 되는 대상들은 객체(@emph{objects})라고 알려져 있습니다. 이것은 변수(variables), 숫자로 이루어진 배열(arrays of numbers), 문자열(character strings), 함수(functions)가 될 수도 있고, 또는 이러한 요소들로 이루어진 좀 더 일반적인 구조(structure)가 될 수도 있습니다."

#. type: Plain text
#: R-intro.texi:536
msgid "During an @R{} session, objects are created and stored by name (we discuss this process in the next session).  The @R{} command"
msgstr "@R{} 세션 내에서 이러한 객체들은 이름(name)을 가지게 됨으로서 생성되거나 저장되어집니다 (우리는 이 과정을 다음 섹션에서 설명할 것입니다).다음의 @R{} 명령어 (또는 @code{ls()})를 이용하여 현재 @R{}에서 사용중인 (대부분의) 객체들의 이름을 나열해 볼 수 있습니다. "

#. type: example
#: R-intro.texi:539
#, no-wrap
msgid "> objects()\n"
msgstr "> objects()\n"

#. type: Plain text
#: R-intro.texi:545
msgid "(alternatively, @code{ls()}) can be used to display the names of (most of) the objects which are currently stored within @R{}.  The collection of objects currently stored is called the @emph{workspace}."
msgstr "이렇게 현재 사용중인 객체들이 저장되어 있는 공간을 작업공간(@emph{workspace})이라고 합니다. "

#. type: cindex
#: R-intro.texi:545
#, no-wrap
msgid "Workspace"
msgstr ""

#. type: Plain text
#: R-intro.texi:548
msgid "To remove objects the function @code{rm} is available:"
msgstr "객체들을 삭제하기 위해서는 함수 @code{rm}를 사용할 수 있습니다."

#. type: example
#: R-intro.texi:551
#, no-wrap
msgid "> rm(x, y, z, ink, junk, temp, foo, bar)\n"
msgstr "> rm(x, y, z, ink, junk, temp, foo, bar)\n"

#. type: findex
#: R-intro.texi:552
#, no-wrap
msgid "rm"
msgstr "rm"

#. type: cindex
#: R-intro.texi:553
#, no-wrap
msgid "Removing objects"
msgstr "Removing objects"

#. type: Plain text
#: R-intro.texi:564
msgid "All objects created during an @R{} session can be stored permanently in a file for use in future @R{} sessions.  At the end of each @R{} session you are given the opportunity to save all the currently available objects.  If you indicate that you want to do this, the objects are written to a file called @file{.RData}@footnote{The leading ``dot'' in this file name makes it @emph{invisible} in normal file listings in UNIX, and in default GUI file listings on OS X and Windows.} in the current directory, and the command lines used in the session are saved to a file called @file{.Rhistory}."
msgstr "@R{} 세션 내에서 생성된 모든 객체들은 하나의 파일형태로 영구저장되어 다음 세션에서 사용할 수 있습니다.각 @R{} 세션의 마지막에서 현재 사용중인 모든 객체들을 저장할 수 있는 기회가 사용자에게 주어집니다.만약 객체들을 저장하고자 한다면, 객체들은 @file{.RData}@footnote{여기에서 사용된 것과 같이 ``dot''으로 시작하는 이름을 가진 파일은 UNIX 환경에서 파일들의 목록을 출력시에 보여지지 않게(@emph{invisible}) 됩니다. and in default GUI file listings on OS X and Windows. }이라는 파일에 쓰여진 뒤 현재의 작업 디렉토리에 저장됩니다. 그리고 세션내에서 사용된 명령어 라인들은 @file{.Rhistory}라는 파일에 저장되게 됩니다. "

#. type: Plain text
#: R-intro.texi:568
msgid "When @R{} is started at later time from the same directory it reloads the workspace from this file.  At the same time the associated commands history is reloaded."
msgstr "추후에 같은 디렉토리에서 @R{}이 실행된다면 이 파일로부터 이전에 저장된 작업공간(workspace)을 다시 불러오게 됩니다.  이와 동시에 이전 세션에서 사용한 명령어들의 이력 역시 함께 불러들여집니다."

#. type: Plain text
#: R-intro.texi:575
msgid "It is recommended that you should use separate working directories for analyses conducted with @R{}.  It is quite common for objects with names @code{x} and @code{y} to be created during an analysis.  Names like this are often meaningful in the context of a single analysis, but it can be quite hard to decide what they might be when the several analyses have been conducted in the same directory."
msgstr "@R{}을 이용하여 여러 개의 분석을 수행하는 경우, 각각의 분석 별로 다른 작업 공간을 이용하는 것이 좋습니다.  그 이유는 분석을 하는 동안 @code{x}와 @code{y} 같은 이름을 가진 객체를 생성하는 경우가 흔하기 때문입니다.만약 하나의 분석만을 하는 경우에는 이러한 종류의 이름을 사용하는 것은 종종 의미가 있을 수 있으나, 여러 개의 분석이 같은 디렉토리내에서 이루어지게 되는 경우에는 이러한 이름을 가진 객체들이 각각의 분석에서 어떤 의미를 가지고 사용되는지를 알아차리는 것이 쉽지 않을 수 있습니다."

#. type: chapter
#: R-intro.texi:577
#, no-wrap
msgid "Simple manipulations; numbers and vectors"
msgstr "숫자와 벡터에 대한 기초 조작법"

#. type: cindex
#: R-intro.texi:578
#, no-wrap
msgid "Vectors"
msgstr ""

#. type: node
#: R-intro.texi:589
#: R-intro.texi:591
#: R-intro.texi:592
#: R-intro.texi:667
#, no-wrap
msgid "Vectors and assignment"
msgstr "벡터와 할당"

#. type: node
#: R-intro.texi:589
#: R-intro.texi:591
#: R-intro.texi:667
#: R-intro.texi:668
#: R-intro.texi:778
#, no-wrap
msgid "Vector arithmetic"
msgstr "벡터 연산"

# Notes from Chel Hee Lee: Don't touch!
#. type: node
#: R-intro.texi:589
#: R-intro.texi:667
#: R-intro.texi:776
#: R-intro.texi:778
#: R-intro.texi:779
#: R-intro.texi:861
#, no-wrap
msgid "Generating regular sequences"
msgstr "Generating regular sequences (규칙성을 지닌 일련의 숫자들을 생성하기)"

#. type: node
#: R-intro.texi:589
#: R-intro.texi:778
#: R-intro.texi:861
#: R-intro.texi:862
#: R-intro.texi:910
#, no-wrap
msgid "Logical vectors"
msgstr "논리형 벡터"

#. type: node
#: R-intro.texi:589
#: R-intro.texi:861
#: R-intro.texi:910
#: R-intro.texi:911
#: R-intro.texi:912
#: R-intro.texi:967
#, no-wrap
msgid "Missing values"
msgstr "결측값"

#. type: node
#: R-intro.texi:589
#: R-intro.texi:910
#: R-intro.texi:967
#: R-intro.texi:968
#: R-intro.texi:969
#: R-intro.texi:1019
#, no-wrap
msgid "Character vectors"
msgstr "문자형 벡터"

#. type: node
#: R-intro.texi:589
#: R-intro.texi:967
#: R-intro.texi:1019
#: R-intro.texi:1142
#, no-wrap
msgid "Index vectors"
msgstr "인덱스 벡터"

#. type: section
#: R-intro.texi:589
#: R-intro.texi:1019
#: R-intro.texi:1142
#: R-intro.texi:1143
#, no-wrap
msgid "Other types of objects"
msgstr "객체의 다른 유형들"

#. type: Plain text
#: R-intro.texi:599
msgid "@R{} operates on named @emph{data structures}.  The simplest such structure is the numeric @emph{vector}, which is a single entity consisting of an ordered collection of numbers.  To set up a vector named @code{x}, say, consisting of five numbers, namely 10.4, 5.6, 3.1, 6.4 and 21.7, use the @R{} command"
msgstr "@R{}은 이름이 주어진 @emph{data structures}(데이터 구조)을 이용하여 작업을 하게 됩니다.  이러한 구조를 가진 가장 단순한 형태는 이용하여 라는 것을 기반으로 작동합니다.  가장 단순한 데이터의 구조는 임의의 숫자들의 정렬인 숫자형 (numeric) @emph{vector}(벡터)입니다.예를들어, 10.4, 5.6, 3.1, 6.4, 그리고 21.7 라는 일련의 숫자로 @code{x}라는 이름을 가진 벡터를 생성하기 위해서는 다음과 같은 @R{} 명령어를 입력합니다"

#. type: example
#: R-intro.texi:602
#, no-wrap
msgid "> x <- c(10.4, 5.6, 3.1, 6.4, 21.7)\n"
msgstr ""

#. type: findex
#: R-intro.texi:603
#: R-intro.texi:986
#: R-intro.texi:2317
#: R-intro.texi:2497
#, no-wrap
msgid "c"
msgstr ""

#. type: findex
#: R-intro.texi:604
#, no-wrap
msgid "vector"
msgstr ""

#. type: Plain text
#: R-intro.texi:612
msgid "This is an @emph{assignment} statement using the @emph{function} @code{c()} which in this context can take an arbitrary number of vector @emph{arguments} and whose value is a vector got by concatenating its arguments end to end.@footnote{With other than vector types of argument, such as @code{list} mode arguments, the action of @code{c()} is rather different.  See @ref{Concatenating lists}.}"
msgstr "위에서 사용된 표현식을 @emph{assignment statement}(할당문) 이라고 하며, 여기서 사용된 @code{c()}라는 @emph{function}(함수)는 함수 안에 입력된 여러 개의 임의의 숫자들을 하나로 연결하여 하나의 벡터를 생성합니다. @footnote{@code{list} 처럼 벡터형의 인자가 아닌 데이터에 대해 @code{c()} 함수를 사용하면, 그 결과가 다소 다르게 나타납니다. 자세한 것은 See @ref{Concatenating lists (리스트 연결하기)}.}"

#. type: Plain text
#: R-intro.texi:615
msgid "A number occurring by itself in an expression is taken as a vector of length one."
msgstr "어떤 식(expression) 에서 자체로 있는 하나의 숫자는 길이가 1인 벡터로 취급됩니다."

#. type: Plain text
#: R-intro.texi:623
msgid "Notice that the assignment operator (@samp{@code{<-}}), which consists of the two characters @samp{@code{<}} (``less than'') and @samp{@code{-}} (``minus'') occurring strictly side-by-side and it `points' to the object receiving the value of the expression.  In most contexts the @samp{@code{=}} operator can be used as an alternative."
msgstr "또한, 띄어쓰기 없이 @samp{@code{<}}(부등호, 좌측이 우측보다 작음을 표시하는 수학적 기호) 와 @samp{@code{-}}(음수를 나타내는 기호)를 붙여 써서 만든 @samp{@code{<-}} 라는 기호는 할당 연산자(assignment operator)라고 하며, 이 기호의 오른쪽의 표현식에 의해 생성된 값을 갖는 객체를 왼쪽의 이름을 갖도록 지정합니다. 대부분의 경우 @samp{@code{=}} 연산자를 같은 작업을 이용하여 할 수 있습니다."

#. type: cindex
#: R-intro.texi:623
#, no-wrap
msgid "Assignment"
msgstr ""

#. type: Plain text
#: R-intro.texi:627
msgid "Assignment can also be made using the function @code{assign()}.  An equivalent way of making the same assignment as above is with:"
msgstr "할당(Assignment) 작업은 @code{assign()} 함수를 통해서도 이루어질 수 있습니다. 위에서 수행한 것과 동일한 연산을 아래와 같은 방법으로도 할 수 있습니다. "

#. type: example
#: R-intro.texi:630
#, no-wrap
msgid "> assign(\"x\", c(10.4, 5.6, 3.1, 6.4, 21.7))\n"
msgstr "> assign(\"x\", c(10.4, 5.6, 3.1, 6.4, 21.7))\n"

#. type: Plain text
#: R-intro.texi:635
msgid "The usual operator, @code{<-}, can be thought of as a syntactic short-cut to this."
msgstr "여러분은 할당 연산자 @code{<-}를 단순히 @code{assign()} 함수와 같은 작업을 하는, 문법적으로는 더 쉬운 방법(short-cut)이라고 생각하셔도 됩니다."

#. type: Plain text
#: R-intro.texi:639
msgid "Assignments can also be made in the other direction, using the obvious change in the assignment operator.  So the same assignment could be made using"
msgstr "또, 이 할당 연산자의 방향을 바꾸어 아래와 같은 방법으로 사용할 수도 있습니다."

#. type: example
#: R-intro.texi:642
#, no-wrap
msgid "> c(10.4, 5.6, 3.1, 6.4, 21.7) -> x\n"
msgstr "> c(10.4, 5.6, 3.1, 6.4, 21.7) -> x\n"

#. type: Plain text
#: R-intro.texi:648
msgid "If an expression is used as a complete command, the value is printed @emph{and lost}@footnote{Actually, it is still available as @code{.Last.value} before any other statements are executed.}.  So now if we were to use the command"
msgstr "만약 아래와 같이 할당 연산자를 사용하지 않고 표현식만으로 명령문을 작성하면, 결과물은 출력 되지만, 이 값이 저장되지 않아 @emph{다시 불러 낼 수 없습니다}. @footnote{실제로 이 표현식 실행 후, 아직 다음 명령문을 실행하지 않았다면 @code{.Last.value} 함수를 사용하여 결과물을 한 번 더 확인하는 것은 가능합니다. }."

#. type: example
#: R-intro.texi:651
#, no-wrap
msgid "> 1/x\n"
msgstr "> 1/x\n"

#. type: Plain text
#: R-intro.texi:656
msgid "the reciprocals of the five values would be printed at the terminal (and the value of @code{x}, of course, unchanged)."
msgstr "이제 위의 명령문을 실행하여 (위에서 할당한) @code{x}의  다섯 개 숫자의 역수 다섯 개를 출력 해 봅시다. "

#. type: Plain text
#: R-intro.texi:658
msgid "The further assignment"
msgstr "다음은 여기에 할당 연산자를 적용해보도록 합니다."

#. type: example
#: R-intro.texi:661
#, no-wrap
msgid "> y <- c(x, 0, x)\n"
msgstr "> y <- c(x, 0, x)\n"

#. type: Plain text
#: R-intro.texi:666
msgid "would create a vector @code{y} with 11 entries consisting of two copies of @code{x} with a zero in the middle place."
msgstr "다음의 할당문은 2개의 @code{x} 벡터 사이에 0 을 입력한, 총 11개의 숫자로 구성된 @code{y} 라는 새로운 벡터를 생성 합니다."

#. type: Plain text
#: R-intro.texi:679
msgid "Vectors can be used in arithmetic expressions, in which case the operations are performed element by element.  Vectors occurring in the same expression need not all be of the same length.  If they are not, the value of the expression is a vector with the same length as the longest vector which occurs in the expression.  Shorter vectors in the expression are @emph{recycled} as often as need be (perhaps fractionally) until they match the length of the longest vector.  In particular a constant is simply repeated.  So with the above assignments the command"
msgstr "벡터(vector)는 요소 단위의 (element by element) 산술연산 표현식(arithmetic expression)에 사용 가능 합니다. 이 때, 같은 (산술) 표현식 내의 벡터들이 모두 같은 길이를 가질 필요는 없습니다.만약, 벡터들의 길이가 다르면 가장 긴 길이의 벡터를 기준으로, 상대적으로 짧은 길이를 갖는 벡터는 긴 벡터의 길이에 맞추기 위해 그 구성 요소를 재활용(@emph{recycled})하여 연산을 수행 합니다. 즉, 더 짧은 길이의 벡터는 가장 긴 벡터와 같은 길이를 같도록 구성 요소를 필요한 만큼 (경우에 따라서는 일부만) 반복 사용 합니다. 특히, 벡터의 길이가 1인 상수(constant)를 벡터와의 연산에 사용할 경우, 이 상수가 벡터의 길이만큼 반복되서 사용 됩니다."

#. type: cindex
#: R-intro.texi:679
#: R-intro.texi:1842
#, no-wrap
msgid "Recycling rule"
msgstr ""

#. type: example
#: R-intro.texi:683
#, no-wrap
msgid "> v <- 2*x + y + 1\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:689
msgid "generates a new vector @code{v} of length 11 constructed by adding together, element by element, @code{2*x} repeated 2.2 times, @code{y} repeated just once, and @code{1} repeated 11 times."
msgstr "위의 예제를 이용해서 설명하면, 다음 명령문을 실행하면 @R{}은 연산을 하기 전 @code{x}의 길이를 @code{y}에 맞추기 위해서 그 구성 요소를 대략 2.2 번 반복하여 길이 11의 벡터를 만듭니다. 그리고, 2를 @code{x} 의 각 요소에 곱한 뒤 (11번의 곱하기 연산이 필요합니다), @code{y}의 각 요소와 더하기 연산을 수행합니다. 마지막으로 상수 @code{1}과의 더하기 연산 역시 11 번에 걸쳐 수행하며, 이렇게 벡터의 각 요소별로 수행된 연산의 결과는 길이 11의 벡터인 @code{v}에 할당 됩니다. "

#. type: cindex
#: R-intro.texi:690
#, no-wrap
msgid "Arithmetic functions and operators"
msgstr ""

#. type: Plain text
#: R-intro.texi:693
msgid "The elementary arithmetic operators are the usual @code{+}, @code{-}, @code{*}, @code{/} and @code{^} for raising to a power."
msgstr "요소 단위 기본 연산자는 @code{+}(더하기), @code{-}(빼기), @code{*}(곱하기), @code{/}(나누기), 그리고 @code{^}(자승) 입니다."

#. type: findex
#: R-intro.texi:693
#, no-wrap
msgid "+"
msgstr ""

#. type: findex
#: R-intro.texi:694
#, no-wrap
msgid "-"
msgstr ""

#. type: findex
#: R-intro.texi:695
#, no-wrap
msgid "*"
msgstr ""

#. type: findex
#: R-intro.texi:696
#, no-wrap
msgid "/"
msgstr ""

#. type: findex
#: R-intro.texi:697
#, no-wrap
msgid "^"
msgstr ""

#. type: Plain text
#: R-intro.texi:701
msgid "In addition all of the common arithmetic functions are available.  @code{log}, @code{exp}, @code{sin}, @code{cos}, @code{tan}, @code{sqrt}, and so on, all have their usual meaning."
msgstr "일반적인 수학 연산에 자주 사용되는 @code{log}, @code{exp}, @code{sin}, @code{cos}, @code{tan}, @code{sqrt}와 같은 함수가 모두 제공되며, 수학에서 사용하는 것과 동일한 방법으로 사용 됩니다. "

#. type: findex
#: R-intro.texi:701
#, no-wrap
msgid "log"
msgstr ""

#. type: findex
#: R-intro.texi:702
#, no-wrap
msgid "exp"
msgstr ""

#. type: findex
#: R-intro.texi:703
#, no-wrap
msgid "sin"
msgstr ""

#. type: findex
#: R-intro.texi:704
#, no-wrap
msgid "cos"
msgstr ""

#. type: findex
#: R-intro.texi:705
#, no-wrap
msgid "tan"
msgstr ""

#. type: findex
#: R-intro.texi:706
#, no-wrap
msgid "sqrt"
msgstr ""

#. type: Plain text
#: R-intro.texi:709
msgid "@code{max} and @code{min} select the largest and smallest elements of a vector respectively."
msgstr "@code{max}와 @code{min}는 벡터의 구성요소들 중에서 가장 큰 값과 작은 값을 보여주는 함수입니다. "

#. type: findex
#: R-intro.texi:709
#, no-wrap
msgid "max"
msgstr ""

#. type: findex
#: R-intro.texi:710
#, no-wrap
msgid "min"
msgstr ""

#. type: Plain text
#: R-intro.texi:713
msgid "@code{range} is a function whose value is a vector of length two, namely @code{c(min(x), max(x))}."
msgstr ""

#. type: findex
#: R-intro.texi:713
#, no-wrap
msgid "range"
msgstr "@code{range}는 주어진 벡터 @code{x}의 모든 구성요소 중 최소값과 최대값을 @code{c(min(x), max(x))}의 형태로 출력하며, 이름 그대로 벡터 변수의 범위를 구할 때 사용 합니다."

#. type: Plain text
#: R-intro.texi:715
msgid "@code{length(x)} is the number of elements in @code{x},"
msgstr "@code{length(x)}는 벡터 @code{x} 의 구성요소가 몇 개인가를 알려주며, 이를 보통 @code{x}의 길이라고 합니다."

#. type: findex
#: R-intro.texi:715
#: R-intro.texi:1246
#, no-wrap
msgid "length"
msgstr ""

#. type: Plain text
#: R-intro.texi:717
msgid "@code{sum(x)} gives the total of the elements in @code{x},"
msgstr "@code{sum(x)}는 @code{x}의 모든 구성요소들의 합을 구하고자 할 때 사용하고, "

#. type: findex
#: R-intro.texi:717
#, no-wrap
msgid "sum"
msgstr ""

#. type: Plain text
#: R-intro.texi:719
msgid "and @code{prod(x)} their product."
msgstr "@code{prod(x)}는 모든 구성요소들의 곱을 구할 때 이용됩니다."

#. type: findex
#: R-intro.texi:719
#, no-wrap
msgid "prod"
msgstr ""

#. type: Plain text
#: R-intro.texi:723
msgid "Two statistical functions are @code{mean(x)} which calculates the sample mean, which is the same as @code{sum(x)/length(x)},"
msgstr "R에서는 통계학에서 자주 이용되는 평균과 분산을 계산하는 함수들도 제공됩니다.샘플 평균(sample mean)은 @code{sum(x)/length(x)}으로 계산 되는데, @code{mean(x)}를 사용해서도 같은 결과를 얻을 수 있습니다. "

#. type: findex
#: R-intro.texi:723
#, no-wrap
msgid "mean"
msgstr ""

#. type: Plain text
#: R-intro.texi:725
msgid "and @code{var(x)} which gives"
msgstr "그리고, 샘플 분산(sample variance)은 아래와 같은 공식을 통해 계산하는데, 이 역시 @code{var(x)}를 사용하면 아주 간단하게 계산할 수 있습니다. "

#. type: example
#: R-intro.texi:728
#, no-wrap
msgid "sum((x-mean(x))^2)/(length(x)-1)\n"
msgstr ""

#. type: findex
#: R-intro.texi:729
#: R-intro.texi:1525
#, no-wrap
msgid "var"
msgstr ""

#. type: Plain text
#: R-intro.texi:736
msgid "or sample variance.  If the argument to @code{var()} is an @math{n}-by-@math{p} matrix the value is a @math{p}-by-@math{p} sample covariance matrix got by regarding the rows as independent @math{p}-variate sample vectors."
msgstr "만약, @code{var()} 에 사용되는 입력인자(argument)가 @math{n}-by-@math{p} 크기의 행렬이라면, 입력인자가@math{p}개의 변수들에 대한 @math{n} 개의 관측치를 갖는 데이터로 인식되어 @math{p}-by-@math{p} 크기의 샘플 공분산 행렬(sample covariance matrix)을 계산 합니다. "

#. type: Plain text
#: R-intro.texi:741
msgid "@code{sort(x)} returns a vector of the same size as @code{x} with the elements arranged in increasing order; however there are other more flexible sorting facilities available (see @code{order()} or @code{sort.list()} which produce a permutation to do the sorting)."
msgstr "@code{sort(x)}는 벡터 @code{x}를 인자로 받아 @code{x}의 모든 구성요소들을 오름차순(increasing order, 즉, 작은 값에서 큰 값의 순서로)으로 재배열하여 @code{x}와 같은 길이의 벡터를 출력하는 함수 입니다. 이와 비슷한 다른 정렬 함수들 역시 매우 유용하며, 가장 빈번하게 사용되는 예로는 인자로 사용된 @code{x} 벡터의 정렬 순서를 확인하기 위해 @code{order()} 또는 @code{sort.list()}를 사용하는 것을 들 수 있습니다."

#. type: findex
#: R-intro.texi:741
#, no-wrap
msgid "sort"
msgstr ""

#. type: findex
#: R-intro.texi:742
#, no-wrap
msgid "order"
msgstr ""

#. type: Plain text
#: R-intro.texi:750
msgid "Note that @code{max} and @code{min} select the largest and smallest values in their arguments, even if they are given several vectors.  The @emph{parallel} maximum and minimum functions @code{pmax} and @code{pmin} return a vector (of length equal to their longest argument)  that contains in each element the largest (smallest) element in that position in any of the input vectors."
msgstr "@code{max}와 @code{min}에 여러 개의 벡터가 동시에 입력인수로 사용되었을지라도, 입력된 모든 구성요소들 중에서 최대값과 최소값 하나씩 만을 출력합니다.만약, 여러 개의 벡터 입력인자들을 동시에 입력해서 최대값과 최소값의 병렬(@emph{parallel} 원한다면, 즉 입력된 여러 개 벡터 인자들을 입력순서 별 최대값 혹은 최소값을 찾는 과정) 원한다면, @code{pmax}와 @code{pmin} 함수를 각각 이용할 수 있습니다. 이 때 반환되는 벡터의 길이는 입력 인자들 중에서 가장 길이가 긴 벡터와 동일합니다. (즉, 길이가 다른 벡터들의 입력시, 길이가 짧은 벡터와 긴 벡터의 비교가 불가능한 구간에서는 오직 비교 가능한 벡터들끼리만 비교해서, 혹은 가장 길기가 긴 벡터의 구성요소를 그대로 출력하게 됩니다).  "

#. type: findex
#: R-intro.texi:750
#, no-wrap
msgid "pmax"
msgstr ""

#. type: findex
#: R-intro.texi:751
#, no-wrap
msgid "pmin"
msgstr ""

#. type: Plain text
#: R-intro.texi:757
msgid "For most purposes the user will not be concerned if the ``numbers'' in a numeric vector are integers, reals or even complex.  Internally calculations are done as double precision real numbers, or double precision complex numbers if the input data are complex."
msgstr "대부분의 연산에서, 숫자형 벡터(numeric vector)의 구성요소인 ``numbers''(숫자)의 종류가 정수(integer)인지, 실수(real)인지, 또는 허수(complex)인지는 중요하지 않습니다. @R{}은 자체적으로 입력된 벡터가 실수인 경우 double precision을 갖는 실수로, 복소수(허수)이면 double precision을 갖는 복소수로 연산을 수행할 수 있습니다. "

#. type: Plain text
#: R-intro.texi:759
msgid "To work with complex numbers, supply an explicit complex part.  Thus"
msgstr "단, 복소수 연산의 경우, 어느 부분이 허수 부분(copmlex part)인지는 정확히 명시해주어야 합니다. "

#. type: example
#: R-intro.texi:762
#, no-wrap
msgid "sqrt(-17)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:766
msgid "will give @code{NaN} and a warning, but"
msgstr "아래 예시와 같이 허수 부분이 지정하지 않고 명령문을 사용하면, @code{NaN} 값과 경고(warning) 메시지가 출력 될 것입니다."

#. type: example
#: R-intro.texi:769
#, no-wrap
msgid "sqrt(-17+0i)\n"
msgstr "sqrt(-17+0i)\n"

#. type: Plain text
#: R-intro.texi:773
msgid "will do the computations as complex numbers."
msgstr "따라서, 다음과 같이 명령문을 입력해야 복소수 연산이 올바르게 수행 됩니다. "

#. type: cindex
#: R-intro.texi:780
#, no-wrap
msgid "Regular sequences"
msgstr ""

#. type: Plain text
#: R-intro.texi:787
msgid "@R{} has a number of facilities for generating commonly used sequences of numbers.  For example @code{1:30} is the vector @code{c(1, 2, @dots{}, 29, 30)}."
msgstr "@R{}은 수열 (sequence)을 생성하는 다양한 방법을 제공합니다.예를 들면, @code{1:30}이라는 명령어는 @code{c(1, 2, @dots{}, 29, 30)}과 같은 벡터를 생성합니다."

#. type: findex
#: R-intro.texi:788
#, no-wrap
msgid ":"
msgstr ":"

#. type: Plain text
#: R-intro.texi:795
msgid "The colon operator has high priority within an expression, so, for example @code{2*1:15} is the vector @code{c(2, 4, @dots{}, 28, 30)}.  Put @code{n <- 10} and compare the sequences @code{1:n-1} and @code{1:(n-1)}."
msgstr "또 R의 표현식에서는 콜론(colon) 연산자가 다른 어떤 연산 보다 최우선으로 처리됩니다. 예를 들면, @code{2*1:15}은 @code{c(2, 4, @dots{}, 28, 30)}과 같은 벡터를 생성합니다. 좀 더 정확한 이해를 위해, @code{n <- 10}을 입력한 뒤, @code{1:n-1}과 @code{1:(n-1)}로부터 생성되는 두개의 벡터를 비교해보시길 바랍니다."

#. type: Plain text
#: R-intro.texi:798
msgid "The construction @code{30:1} may be used to generate a sequence backwards."
msgstr "또 @code{30:1}이라는 명령문은 역순으로 (큰 수부터 작은 수로) 나열된 수열을 생성합니다."

#. type: findex
#: R-intro.texi:799
#, no-wrap
msgid "seq"
msgstr ""

#. type: Plain text
#: R-intro.texi:806
msgid "The function @code{seq()} is a more general facility for generating sequences.  It has five arguments, only some of which may be specified in any one call.  The first two arguments, if given, specify the beginning and end of the sequence, and if these are the only two arguments given the result is the same as the colon operator.  That is @code{seq(2,10)} is the same vector as @code{2:10}."
msgstr "@code{seq()} 함수는 수열을 생성하는 좀 더 일반적인 방법 입니다. @code{seq()}는 5개의 파라미터를 가질 수 있는데, 이중의 일부만 사용해도 다양한 수열의 생성이 가능합니다.먼저, 처음 두개의 파라미터는 수열의 처음과 마지막 값을 지정합니다.이 두 개의 인자만 지정하면, 콜론 연산자를 사용한 것과 동일한 결과를 얻게 됩니다. 즉, @code{seq(2,10)}에 의하여 생성된 수열은 @code{2:10}으로부터 생성된 수열과 동일합니다. "

#. type: Plain text
#: R-intro.texi:817
msgid "Arguments to @code{seq()}, and to many other @R{} functions, can also be given in named form, in which case the order in which they appear is irrelevant.  The first two arguments may be named @code{from=@var{value}} and @code{to=@var{value}}; thus @code{seq(1,30)}, @code{seq(from=1, to=30)} and @code{seq(to=30, from=1)} are all the same as @code{1:30}.  The next two arguments to @code{seq()} may be named @code{by=@var{value}} and @code{length=@var{value}}, which specify a step size and a length for the sequence respectively.  If neither of these is given, the default @code{by=1} is assumed."
msgstr "@R{}의 다른 많은 함수들처럼 함수 @code{seq()}가 사용하는 파라미터들은 반드시 함수에 지정된 순서로 입력되야 하며, 이 지정된 순서를 따를 경우 파라미터의 입력이 언뜻 이상하게 보일 수도 있습니다. 위에서 사용한 예제 @code{seq(1,30)}를 통해 설명하면, @code{seq()}의 처음 두 파라미터들은 처음 시작값 @code{from=@var{value}}과 마지막 값 @code{to=@var{value}}을 각각 의미하기 때문에, @code{seq(1,30)}, @code{seq(from=1, to=30)}, @code{seq(to=30, from=1)} 모두 @code{1:30}으로부터 생성된 수열과 동일한 수열을 생성합니다.@code{seq()}의 다음 두개(세번째와 네번째)의 파라미터들은 @code{by=@var{value}}와 @code{length=@var{value}} 입니다. @code{by=@var{value}}는 나열하게 될 숫자들 간의 차이 (step size)를 지정하며, @code{length=@var{value}}는 나열하게 될 숫자의 길이(length)를 지정합니다. 만약, 이 두가지 모두 지정되지 않는다면, 기본적으로  @code{by=1}를 가정한 상태에서 수열을 생성하게 됩니다. "

#. type: Plain text
#: R-intro.texi:819
#: R-intro.texi:999
#: R-intro.texi:1123
#: R-intro.texi:4504
msgid "For example"
msgstr "다음의 예시를 살펴봅니다."

#. type: example
#: R-intro.texi:822
#, no-wrap
msgid "> seq(-5, 5, by=.2) -> s3\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:827
msgid "generates in @code{s3} the vector @code{c(-5.0, -4.8, -4.6, @dots{}, 4.6, 4.8, 5.0)}.  Similarly"
msgstr "위 명령어를 실행하면 @code{c(-5.0, -4.8, -4.6, @dots{}, 4.6, 4.8, 5.0)}라는 수열을 생성하여, 이를 @code{s3}라는 이름의 벡터형 객체로 저장하게 됩니다."

#. type: example
#: R-intro.texi:830
#, no-wrap
msgid "> s4 <- seq(length=51, from=-5, by=.2)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:834
msgid "generates the same vector in @code{s4}."
msgstr "아래와 같은 방법으로도 @code{s3}와 같은 벡터 @code{s4}를 생성할 수 있습니다."

#. type: Plain text
#: R-intro.texi:839
msgid "The fifth argument may be named @code{along=@var{vector}}, which is normally used as the only argument to create the sequence @code{1, 2, @dots{}, length(@var{vector})}, or the empty sequence if the vector is empty (as it can be)."
msgstr "마지막으로 @code{seq()} 함수의 다섯번 째 파라미터는 @code{along=@var{vector}}이며, 다른 파라이터의 입력 없이 이 파라미터만 사용할 경우, @code{1, 2, @dots{}, length(@var{vector})}인 수열을 생성 합니다. "

#. type: Plain text
#: R-intro.texi:841
msgid "A related function is @code{rep()}"
msgstr ""

#. type: findex
#: R-intro.texi:841
#, no-wrap
msgid "rep"
msgstr ""

#. type: Plain text
#: R-intro.texi:844
msgid "which can be used for replicating an object in various complicated ways.  The simplest form is"
msgstr "@code{seq()}와 비슷한 수열 생성 함수 중, 객체를 반복하는데 사용할 수 있는 @code{rep()}라는 함수가 있습니다. 이 함수의 사용법은 아래와 같습니다."

#. type: example
#: R-intro.texi:847
#, no-wrap
msgid "> s5 <- rep(x, times=5)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:852
msgid "which will put five copies of @code{x} end-to-end in @code{s5}.  Another useful version is"
msgstr "위 명령어는 @code{x}라는 벡터를 처음부터 끝까지 5번 반복해서 나열한 객체를 @code{s5}로 지정 합니다.위 함수와 같은 결과를 얻기 위해 아래와 같은 명령문을 사용할 수도 있습니다."

#. type: example
#: R-intro.texi:855
#, no-wrap
msgid "> s6 <- rep(x, each=5)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:860
msgid "which repeats each element of @code{x} five times before moving on to the next."
msgstr "둘 다 @code{x}란 벡터가 가지고 있는 각각의 요소들을 5번씩 반복 나열하여 수열을 생성 합니다."

#. type: Plain text
#: R-intro.texi:872
msgid "As well as numerical vectors, @R{} allows manipulation of logical quantities.  The elements of a logical vector can have the values @code{TRUE}, @code{FALSE}, and @code{NA} (for ``not available'', see below).  The first two are often abbreviated as @code{T} and @code{F}, respectively.  Note however that @code{T} and @code{F} are just variables which are set to @code{TRUE} and @code{FALSE} by default, but are not reserved words and hence can be overwritten by the user.  Hence, you should always use @code{TRUE} and @code{FALSE}."
msgstr "@R{}은 수치형 벡터 뿐만 아니라 논리값에 대한 연산도 가능합니다.논리형 벡터는 @code{TRUE}, @code{FALSE}, 그리고 @code{NA} (즉 ``not available'' - 해당 값이 이용가능하지 않아 사용에는 많은 제약이 따름)와 같은 요소로 구성 됩니다.처음 두 개의 요소인 @code{TRUE}와 @code{FALSE}가 각각 @code{T}와 @code{F}라는 약어로 표기하기도 하며, 이러한 약어 사용은 R에서 초기값으로 지정된 것입니다. 하지만, 사용자가 이 두 문자를 다른 변수나 함수 이름으로 사용할 경우, 더 이상 이러한 초기 약어 지정은 성립하지 않습니다. 따라서, 논리값을 표현할 때에는 @code{TRUE}와 @code{FALSE}와 같이 정확하게 표기할 것을 권장 합니다. "

#. type: findex
#: R-intro.texi:872
#, no-wrap
msgid "FALSE"
msgstr ""

#. type: findex
#: R-intro.texi:873
#, no-wrap
msgid "TRUE"
msgstr ""

#. type: findex
#: R-intro.texi:874
#, no-wrap
msgid "F"
msgstr ""

#. type: findex
#: R-intro.texi:875
#, no-wrap
msgid "T"
msgstr ""

#. type: Plain text
#: R-intro.texi:878
msgid "Logical vectors are generated by @emph{conditions}.  For example"
msgstr "논리형 벡터는 조건문 (@emph{conditions})에 의해서 생성됩니다."

#. type: example
#: R-intro.texi:881
#, no-wrap
msgid "> temp <- x > 13\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:887
msgid "sets @code{temp} as a vector of the same length as @code{x} with values @code{FALSE} corresponding to elements of @code{x} where the condition is @emph{not} met and @code{TRUE} where it is."
msgstr "예를 들어 아래의 명령문을 입력하면, @code{x} 벡터의 각 구성요소에 대해 13 보다 크다는 조건문이 참인지 거짓인지를 판단하여, 해당 구성 요소가 13 보다 큰 위치에는 @code{TRUE}, 그렇지 않은 경우에는 @code{FALSE}를 출력하여 원래의 @code{x}와 같은 길이를 갖는 새 벡터@code{temp}를 생성 합니다. "

#. type: Plain text
#: R-intro.texi:890
msgid "The logical operators are @code{<}, @code{<=}, @code{>}, @code{>=}, @code{==} for exact equality and @code{!=} for inequality."
msgstr "논리 연산자에는 @code{<} (작음), @code{<=} (작거나 같음), @code{>} (큼), @code{>=} (크거나 같음), @code{==} (같음), 그리고 @code{!=} (다름) 등이 있습니다. "

#. type: findex
#: R-intro.texi:890
#, no-wrap
msgid "<"
msgstr ""

#. type: findex
#: R-intro.texi:891
#, no-wrap
msgid "<="
msgstr ""

#. type: findex
#: R-intro.texi:892
#, no-wrap
msgid ">"
msgstr ""

#. type: findex
#: R-intro.texi:893
#, no-wrap
msgid ">="
msgstr ""

#. type: findex
#: R-intro.texi:894
#, no-wrap
msgid "=="
msgstr ""

#. type: findex
#: R-intro.texi:895
#, no-wrap
msgid "!="
msgstr ""

#. type: Plain text
#: R-intro.texi:900
msgid "In addition if @code{c1} and @code{c2} are logical expressions, then @w{@code{c1 & c2}} is their intersection (@emph{``and''}), @w{@code{c1 | c2}} is their union (@emph{``or''}), and @code{!c1} is the negation of @code{c1}."
msgstr "또한, @code{c1}과 @code{c2}와 같이 두 개의 논리 표현식이 있는 경우, @w{@code{c1 & c2}}는 (@emph{``and''})를 나타내는 교집합을 @w{@code{c1 | c2}}는 (@emph{``or''})를 나타내는 합집합을 의미하며, @code{!c1}는 @code{c1}를 만족하지 않는 차집합을 의미 합니다."

#. type: findex
#: R-intro.texi:900
#, no-wrap
msgid "!"
msgstr ""

#. type: findex
#: R-intro.texi:901
#, no-wrap
msgid "|"
msgstr ""

#. type: findex
#: R-intro.texi:902
#, no-wrap
msgid "&"
msgstr ""

#. type: Plain text
#: R-intro.texi:909
msgid "Logical vectors may be used in ordinary arithmetic, in which case they are @emph{coerced} into numeric vectors, @code{FALSE} becoming @code{0} and @code{TRUE} becoming @code{1}.  However there are situations where logical vectors and their coerced numeric counterparts are not equivalent, for example see the next subsection."
msgstr "논리형 벡터들은 일반적인 산술연산에 사용할 수도 있으며, 이 경우 논리값인 @code{FALSE}는 숫자 @code{0}으로 @code{TRUE}는 숫자 @code{1}로 변환 되어야 합니다. 이러한 변환을 @emph{coerced}(강제형변환)이라고 합니다. 그러나 논리형 벡터들이 수치형 벡터로의 강제형변환이 항상 위와 같은 방식으로만 이루어지는 것은 아니며, 여기에 대해서는 다음 섹션에서 살펴보도록 하겠습니다. "

#. type: Plain text
#: R-intro.texi:918
msgid "In some cases the components of a vector may not be completely known.  When an element or value is ``not available'' or a ``missing value'' in the statistical sense, a place within a vector may be reserved for it by assigning it the special value @code{NA}."
msgstr "가끔 벡터의 구성요소들 중 일부가 완전하지 않은 경우가 있습니다.통계적 의미에서 이러한 구성요소 또는 값들은 ``not available'' (사용이 가능하지 않음) 또는 ``missing value''(결측치 혹은 누락된 값)을 의미하며, 이러한 값들은 벡터 내에서 @code{NA}라는 특수 문자로 표기 됩니다. "

#. type: findex
#: R-intro.texi:918
#, no-wrap
msgid "NA"
msgstr ""

#. type: Plain text
#: R-intro.texi:923
msgid "In general any operation on an @code{NA} becomes an @code{NA}.  The motivation for this rule is simply that if the specification of an operation is incomplete, the result cannot be known and hence is not available."
msgstr "일반적으로 어떤 연산이든 @code{NA}에 대한 연산의 결과는 @code{NA}가 됩니다.이러한 규칙을 만들게 된 동기는 단순합니다. 이러한 결측치의 연산법을 따로 지정하지 않으면, 결측치의 포함으로 인해 해당 연산이 정의되지 않거나 결과가 출력되지 않기 때문입니다. "

#. type: findex
#: R-intro.texi:924
#, no-wrap
msgid "is.na"
msgstr ""

#. type: Plain text
#: R-intro.texi:928
msgid "The function @code{is.na(x)} gives a logical vector of the same size as @code{x} with value @code{TRUE} if and only if the corresponding element in @code{x} is @code{NA}."
msgstr "함수 @code{is.na(x)}는 @code{x}의 각 구성요소 중 @code{NA}가 포함되었는지를 확인하여, 논리값인 @code{TRUE}또는 @code{FALSE}를 갖는 새로운 벡터를 생성 합니다. 따라서, 생성된 벡터의 길이는 원래 벡터인 @code{x}와 같아야 하며, 이는 아래의 명령문을 통해 확인해 볼 수 있습니다. "

#. type: example
#: R-intro.texi:931
#, no-wrap
msgid "> z <- c(1:3,NA);  ind <- is.na(z)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:938
msgid "Notice that the logical expression @code{x == NA} is quite different from @code{is.na(x)} since @code{NA} is not really a value but a marker for a quantity that is not available.  Thus @code{x == NA} is a vector of the same length as @code{x} @emph{all} of whose values are @code{NA} as the logical expression itself is incomplete and hence undecidable."
msgstr "그러나, @code{NA}라는 것은 실제로 단순히 벡터를 구성하는 요소의 값이 사용가능한지에 대한 마커일 뿐 해당 요소에 대한 값이 아니기 때문에 @code{x == NA}이라는 논리적 표현식과 @code{is.na(x)}는 서로 다른 것을 의미한다는 점을 이해하셔야 합니다. 즉 @code{x == NA}는 벡터 @code{x}와 길이는 같지만 그 구성요소 @emph{모두}가 @code{NA}값을 가지므로, 이 식 자체가 논리형 표현식이라 어떤 연산을 수행하기에는 불완전하고 불충분하기 때문입니다. "

#. type: Plain text
#: R-intro.texi:942
msgid "Note that there is a second kind of ``missing'' values which are produced by numerical computation, the so-called @emph{Not a Number}, @code{NaN},"
msgstr "또한 수치연산의 결과로서 발생하는 또 다른 종류의 결측치(``missing'')인 @code{NaN}은 @emph{Not a Number}(숫자가 아님)을 의미 합니다. 다음의 두 예제를 통해서 좀 더 자세히 알아 봅시다. "

#. type: findex
#: R-intro.texi:942
#, no-wrap
msgid "NaN"
msgstr ""

#. type: Plain text
#: R-intro.texi:944
msgid "values.  Examples are"
msgstr ""

#. type: example
#: R-intro.texi:947
#, no-wrap
msgid "> 0/0\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:951
msgid "or"
msgstr ""

#. type: example
#: R-intro.texi:954
#, no-wrap
msgid "> Inf - Inf\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:958
msgid "which both give @code{NaN} since the result cannot be defined sensibly."
msgstr "위의 두가지 경우 모두 수학적 정의에 따른 계산을 수행할 수 없기 때문에 @code{NaN}이라는 결과를 출력하게 됩니다. "

#. type: Plain text
#: R-intro.texi:962
msgid "In summary, @code{is.na(xx)} is @code{TRUE} @emph{both} for @code{NA} and @code{NaN} values.  To differentiate these, @code{is.nan(xx)} is only @code{TRUE} for @code{NaN}s."
msgstr "요약해보면, @code{is.na(xx)}는 구성요소 중 하나 이상이 @code{NA}이거나 @code{NaN}인 두가지 경우 모두 @code{TRUE} 값을 돌려줍니다.  그러나, @code{is.nan(xx)}은 오직 구성 요소에 @code{NaN}이 포함될 때만 @code{TRUE}가 됩니다. "

#. type: findex
#: R-intro.texi:962
#, no-wrap
msgid "is.nan"
msgstr ""

#. type: Plain text
#: R-intro.texi:966
msgid "Missing values are sometimes printed as @code{<NA>} when character vectors are printed without quotes."
msgstr "때때로 이렇게 @code{<NA>}로 표시된 값들 중, 실제 결측치가 아니라 단지 문자형 벡터가 인용 부호 (\"quotes\") 없이 사용되었기 때문인 경우도 있으므로 주의하시기 바랍니다. "

#. type: Plain text
#: R-intro.texi:975
msgid "Character quantities and character vectors are used frequently in @R{}, for example as plot labels.  Where needed they are denoted by a sequence of characters delimited by the double quote character, e.g., @code{\"x-values\"}, @code{\"New iteration results\"}."
msgstr "문자값 또는 문자형 벡터는 종종 @R{}에서 플롯의 라벨 등으로 사용 됩니다. 이러한 문자열은 @code{\"x-values\"} 또는 @code{\"New iteration results\"}과 같이 @code{\"\"} (큰 따옴표)에 의해 구분 됩니다."

#. type: Plain text
#: R-intro.texi:983
msgid "Character strings are entered using either matching double (@code{\"}) or single (@code{'}) quotes, but are printed using double quotes (or sometimes without quotes).  They use C-style escape sequences, using @code{\\} as the escape character, so @code{\\\\} is entered and printed as @code{\\\\}, and inside double quotes @code{\"} is entered as @code{\\\"}.  Other useful escape sequences are @code{\\n}, newline, @code{\\t}, tab and @code{\\b}, backspace---see @command{?Quotes} for a full list."
msgstr "문자열의 입력은 큰 따옴표 (@code{\"})와 작은 따옴표 (@code{'})를 모두 사용할 수 있지만, 입력된 문자열을 출력할 때는 큰 따옴표에 의해 각 구성요소가 구분 됩니다. (경우에 따라 큰 따옴표 없이 출력되는 것도 가능 합니다).R에서는 C 언어처럼 @code{\\}를 확장 문자(escape sequence)로 사용하여 문자열을 처리하는 것이 가능합니다. 따라서, @code{\\\\}를 출력하기 위해서는 (@code{\"}로 구분된) 문자열 내에 @code{\\\\}을 사용하고, 큰 따옴표 @code{\"}를 출력하기 위해서는 @code{\"}를 사용하도록 합니다. 그 밖의 유용한 이스케이프 시퀀스들로는 @code{\\n}이 있는데 이는 새로운 행(즉, 개행)을, @code{\\t}는 탭(tab)을, @code{\\b}는 백스페이스를 나타냅니다. 사용 가능한 확장 문자 대한 전체 목록을 확인하고 싶으시면 @command{?Quotes}을 입력하시길 바랍니다."

#. type: Plain text
#: R-intro.texi:986
msgid "Character vectors may be concatenated into a vector by the @code{c()} function; examples of their use will emerge frequently."
msgstr "@code{c()}라는 함수를 이용하면 문자열을 연결하여 새로운 문자열 벡터를 생성할 수 있습니다. 이러한 문자 벡터의 생성은 앞으로 자주 등장하게 될 것입니다. "

#. type: findex
#: R-intro.texi:988
#, no-wrap
msgid "paste"
msgstr ""

#. type: Plain text
#: R-intro.texi:997
msgid "The @code{paste()} function takes an arbitrary number of arguments and concatenates them one by one into character strings.  Any numbers given among the arguments are coerced into character strings in the evident way, that is, in the same way they would be if they were printed.  The arguments are by default separated in the result by a single blank character, but this can be changed by the named argument, @code{sep=@var{string}}, which changes it to @code{@var{string}}, possibly empty."
msgstr "@code{paste()} 함수는 임의의 개수의 인자들을 입력받아, 이들을 한데 묶어 하나의 문자열로 생성 합니다.이 때, 주어진 인자들 중 일부가 숫자라도, 이들 역시 문자형으로 강제형변환이 이루어짐을 아셔야 합니다. 이러한 형변환 결과는 출력을 통해 확일할 수 있는데, 합쳐진 각각의 문자형 인자들 사이는 하나에는 공백문자(white space 또는 blank character)가 포함되어 두 요소가 합쳐졌다는 것을 알 수 있습니다. 이러한 공백문자를 포함한 새로운 문자형 인자의 생성은 @code{sep=@var{string}} 옵션을 사용하여 다른 문자에 의해 구분되도록 지정하는 것이 가능하며, 아래의 예제처럼 입력시 @code{@var{string}}은 공백 없이 두 요소를 하나로 합치는 것도 가능합니다.  "

#. type: example
#: R-intro.texi:1002
#, no-wrap
msgid "> labs <- paste(c(\"X\",\"Y\"), 1:10, sep=\"\")\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1006
msgid "makes @code{labs} into the character vector"
msgstr "위의 할당문은 @code{labs} 를 아래와 같은 문자형 벡터로 만들어 줍니다."

#. type: example
#: R-intro.texi:1009
#, no-wrap
msgid "c(\"X1\", \"Y2\", \"X3\", \"Y4\", \"X5\", \"Y6\", \"X7\", \"Y8\", \"X9\", \"Y10\")\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1018
msgid "Note particularly that recycling of short lists takes place here too; thus @code{c(\"X\", \"Y\")} is repeated 5 times to match the sequence @code{1:10}.  @footnote{@code{paste(..., collapse=@var{ss})} joins the arguments into a single character string putting @var{ss} in between, e.g., @code{ss <- \"|\"}.  There are more tools for character manipulation, see the help for @code{sub} and @code{substring}.}"
msgstr "위 명령문에서 @code{paste()}라는 함수는 @code{c(\"X\", \"Y\")}라는 문자형 벡터와 @code{1:10}이라는 숫자형 벡터를 하나로 묶어 문자형 벡터를 생성하는데, 두 벡터의 길이가 다르므로 @code{c(\"X\", \"Y\")}가 5번 반복되게 될 것입니다. 또, 구분자가 @code{sep=\"\"}로 지정 되었으므로 두 문자 사이에는 아무런 공백이 없을 것입니다. @footnote{@code{paste(...,collapse=@var{ss})}라고 하게되면 인자들 사이에 @var{ss}를 넣어 하나의 문자열을 만듭니다. 문자열을 다루는 방법에 대해 더 많이 알고 싶으시다면 @code{sub}와 @code{substring}를 살펴보시길 바랍니다.} "

#. type: section
#: R-intro.texi:1020
#, no-wrap
msgid "Index vectors; selecting and modifying subsets of a data set"
msgstr "인덱스 벡터를 사용한 데이터셋의 선택과 수정"

#. type: cindex
#: R-intro.texi:1021
#, no-wrap
msgid "Indexing vectors"
msgstr ""

#. type: Plain text
#: R-intro.texi:1028
msgid "Subsets of the elements of a vector may be selected by appending to the name of the vector an @emph{index vector} in square brackets.  More generally any expression that evaluates to a vector may have subsets of its elements similarly selected by appending an index vector in square brackets immediately after the expression."
msgstr "벡터의 이름 바로 뒤에 대괄호(@code{[]})와 함께 사용된 @emph{index vector}(인덱스 벡터)를 통해 벡터의 일부 구성 요소만 선택하는 것이 가능합니다. 여기서 인덱스 벡터란 대괄호 내부에 쓰인 벡터를 의미 합니다.좀 더 일반적으로 말하면, 연산의 결과로 벡터를 생성하게 되는 어떠한 표현식이라도 표현식 바로 다음에 대괄호와 함께 인덱스 벡터를 사용해서 벡터 구성요소 중 일부만 선택하는 것이 가능합니다."

#. type: Plain text
#: R-intro.texi:1034
msgid "Such index vectors can be any of four distinct types."
msgstr "이러한 인덱스 벡터에는 다음과 같은 네가지 유형이 있습니다. "

#. type: enumerate
#: R-intro.texi:1042
msgid "@strong{A logical vector}.  In this case the index vector is recycled to the same length as the vector from which elements are to be selected.  Values corresponding to @code{TRUE} in the index vector are selected and those corresponding to @code{FALSE} are omitted.  For example"
msgstr "@strong{논리형 인덱스 벡터}:  이 경우는 인덱스 벡터는 반드시 선택할 구성요소를 포함한 벡터와 길이가 같아야 합니다. 인덱스 벡터에서 @code{TRUE}에 대응하는 요소들만 선택되고, @code{FALSE}에 대응하는 요소들은 제거될 것입니다. 예를 들면, "

#. type: example
#: R-intro.texi:1045
#, no-wrap
msgid "> y <- x[!is.na(x)]\n"
msgstr ""

#. type: enumerate
#: R-intro.texi:1052
msgid "creates (or re-creates) an object @code{y} which will contain the non-missing values of @code{x}, in the same order.  Note that if @code{x} has missing values, @code{y} will be shorter than @code{x}.  Also"
msgstr "위의 명령문은 @code{x} 벡터 중 결측치가 아닌 요소들만을 원래의 순서대로 포함하는 객체 @code{y}를 생성합니다. 만약 @code{x}에 결측치가 포함되어 있다면 새로 생성된 @code{y}의 길이는 @code{x} 보다 짧을 것입니다. 또 한,"

#. type: example
#: R-intro.texi:1055
#, no-wrap
msgid "> (x+1)[(!is.na(x)) & x>0] -> z\n"
msgstr "> (x+1)[(!is.na(x)) & x>0] -> z\n"

#. type: enumerate
#: R-intro.texi:1061
msgid "creates an object @code{z} and places in it the values of the vector @code{x+1} for which the corresponding value in @code{x} was both non-missing and positive."
msgstr "위의 명령어는 @code{x}의 구성요소들 중 결측치가 아니면서 양수인 요소들만을 찾아서 이들에 각각 1을 더하여 객체 @code{z}를 생성합니다."

#. type: enumerate
#: R-intro.texi:1070
msgid "@strong{A vector of positive integral quantities}.  In this case the values in the index vector must lie in the set @{1, 2, @dots{}, @code{length(x)}@}.  The corresponding elements of the vector are selected and concatenated, @emph{in that order}, in the result.  The index vector can be of any length and the result is of the same length as the index vector.  For example @code{x[6]} is the sixth component of @code{x} and"
msgstr "@strong{양의 정수 인덱스 벡터}: 이 경우의 인덱스 벡터는 반드시 @{1, 2, @dots{}, @code{length(x)}@} 범위 내에 있어야 합니다. 선택된 구성요소들은 인덱스 벡터에서 @emph{지정한 순서} 대로 선택되어 하나로 묶여지게 됩니다. 선택된 결과는 사용된 인덱스 벡터의 길이와 같으며, 인덱스 벡터의 길이는 임의로 선택 가능합니다. 예를 들어, @code{x[6]}는 @code{x}의 여섯번째 구성요소를 선택하며, "

#. type: example
#: R-intro.texi:1073
#, no-wrap
msgid "> x[1:10]\n"
msgstr ""

#. type: enumerate
#: R-intro.texi:1078
msgid "selects the first 10 elements of @code{x} (assuming @code{length(x)} is not less than 10).  Also"
msgstr "위의 명령문은 (@code{x}의 길이가 10보다 작지만 않다면,) @code{x}가 가진 구성요소 중 처음 10개의 요소들을 선택 합니다.  또, "

#. type: example
#: R-intro.texi:1081
#, no-wrap
msgid "> c(\"x\",\"y\")[rep(c(1,2,2,1), times=4)]\n"
msgstr ""

#. type: enumerate
#: R-intro.texi:1086
msgid "(an admittedly unlikely thing to do) produces a character vector of length 16 consisting of @code{\"x\", \"y\", \"y\", \"x\"} repeated four times."
msgstr "위의 명령문은 (물론 이렇게 어렵게 사용하는 경우는 거의 없지만) @code{\"x\", \"y\", \"y\", \"x\"}가 4번씩 반복되어 구성된 전체 길이 16인 문자형 벡터를 생성 합니다. "

#. type: enumerate
#: R-intro.texi:1090
msgid "@strong{A vector of negative integral quantities}.  Such an index vector specifies the values to be @emph{excluded} rather than included.  Thus"
msgstr "@strong{음의 정수 인덱스 벡터}:  이 경우, 인덱스 벡터는 선택된 요소들을 포함하는 것이 아니라 @emph{제외}할 목적으로 사용됩니다. 따라서, "

#. type: example
#: R-intro.texi:1093
#, no-wrap
msgid "> y <- x[-(1:5)]\n"
msgstr ""

#. type: enumerate
#: R-intro.texi:1097
msgid "gives @code{y} all but the first five elements of @code{x}."
msgstr "위의 명령문은 @code{x}의 처음 5개의 구성요소들만 제외시켜 @code{y}를 생성 합니다. "

#. type: enumerate
#: R-intro.texi:1103
msgid "@strong{A vector of character strings}.  This possibility only applies where an object has a @code{names} attribute to identify its components.  In this case a sub-vector of the names vector may be used in the same way as the positive integral labels in item 2 further above."
msgstr "@strong{문자형 인덱스 벡터}: 이 경우는 객체의 각 구성요소들이 @code{names}라는 속성(i.e.객체 안의 각 구성요소(변수)의 이름)을 가지고 있을 때에만 인덱스 벡터의 이용이 가능합니다. 이때, @code{names}를 한 데 묶어 나열한 벡터를 네임벡터 (names vector)라고하며, 위에서 설명한 양의 정수 인덱스 벡터와 동일한 방식으로 사용하면 됩니다.다음의 예제를 보면,  우선 @code{fruit}이라는 수치형 벡터에 @code{names()} 라는 함수를 이용하여 각각의 구성요소에 @code{\"orange\", \"banana\", \"apple\", \"peach\"}라는 @code{names} 속성을 부여합니다.이제, 만약 @code{fruit} 벡터의 세번째와 첫번째 요소를 선택하고 싶다면, @code{[c(\"apple\",\"orange\")]}를 사용하면 됩니다."

#. type: example
#: R-intro.texi:1108
#, no-wrap
msgid ""
"> fruit <- c(5, 10, 1, 20)\n"
"> names(fruit) <- c(\"orange\", \"banana\", \"apple\", \"peach\")\n"
"> lunch <- fruit[c(\"apple\",\"orange\")]\n"
msgstr ""
"> fruit <- c(5, 10, 1, 20)\n"
"> names(fruit) <- c(\"orange\", \"banana\", \"apple\", \"peach\")\n"
"> lunch <- fruit[c(\"apple\",\"orange\")]\n"

#. type: enumerate
#: R-intro.texi:1113
msgid "The advantage is that alphanumeric @emph{names} are often easier to remember than @emph{numeric indices}.  This option is particularly useful in connection with data frames, as we shall see later."
msgstr "이렇게 영문과 숫자의 조합(alphanumeric)인 @emph{names}를 이용할 경우 @emph{수치형 인덱스}를 이용하여 구성요소를 선택할 때 보다 기억하기에 편리하다는 장점이 있습니다. 이 옵션은 특히 나중에 설명하게 될 데이터 프레임과 연관이 있습니다."

#. type: Plain text
#: R-intro.texi:1121
msgid "An indexed expression can also appear on the receiving end of an assignment, in which case the assignment operation is performed @emph{only on those elements of the vector}.  The expression must be of the form @code{vector[@var{index_vector}]} as having an arbitrary expression in place of the vector name does not make much sense here."
msgstr "인덱스를 사용한 표현식은 벡터의 일부 구성요소에 새로운 값을  할당하기 위한 목적으로도 사용 되는데,이 경우 주로 인덱스 벡터를 적용한 벡터 그 자신이 할당의 대상이 됩니다. 여기서 표현식은 반드시@code{vector[@var{index_vector}]}의 형태로 사용되야 하며, 네임벡터의 위치에 어떠한 표현식이든 자유롭게 사용될 수 있는 것은 아닙니다. 예제를 통해 살펴보면, 다음과 같은 명령문을 사용하면 @code{x}에서 결측값이 있는 위치를 확인하여 이 위치의 결측값에 0을 할당 하는 것이 가능합니다."

#. type: example
#: R-intro.texi:1126
#, no-wrap
msgid "> x[is.na(x)] <- 0\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1130
msgid "replaces any missing values in @code{x} by zeros and"
msgstr "또 다음의 예제에서는 @code{y}의 값들 중 0 보다 작은 값들을 찾고 이들의 부호를 바꿔줍니다."

#. type: example
#: R-intro.texi:1133
#, no-wrap
msgid "> y[y < 0] <- -y[y < 0]\n"
msgstr "> y[y < 0] <- -y[y < 0]\n"

#. type: Plain text
#: R-intro.texi:1137
msgid "has the same effect as"
msgstr "결과적으로 위의 예제는 아래의 명령문을 수행한 것과 같은 결과를 얻습니다. "

#. type: example
#: R-intro.texi:1140
#, no-wrap
msgid "> y <- abs(y)\n"
msgstr "> y <- abs(y)\n"

#. type: Plain text
#: R-intro.texi:1147
msgid "Vectors are the most important type of object in @R{}, but there are several others which we will meet more formally in later sections."
msgstr "벡터는 @R{}에서 가장 중요한 객체입니다. 하지만 이번 섹션에서는 다른 유형의 객체들에 대해 간단히 소개하도록 하겠습니다. "

#. type: itemize
#: R-intro.texi:1154
msgid "@emph{matrices} or more generally @emph{arrays} are multi-dimensional generalizations of vectors.  In fact, they @emph{are} vectors that can be indexed by two or more indices and will be printed in special ways.  @xref{Arrays and matrices}."
msgstr "@emph{matrices}(행렬) 또는 좀 더 일반적으로 @emph{arrays}(배열)이라는 것은 1차원인 벡터를 다차원으로 일반화시킨 것 입니다. 실제로, 행렬과 배열은 두개 또는 그 이상의 인덱스를 사용하여 표현되는 @emph{벡터}로 볼 수 있으며, 정해진 형태로 출력될 것입니다. @xref{Arrays and matrices (배열과 행렬)}."

#. type: itemize
#: R-intro.texi:1158
msgid "@emph{factors} provide compact ways to handle categorical data.  @xref{Factors}."
msgstr "@emph{factors}(요인)을 이용하면 범주형 자료(categorical data)를 간단하게 다룰 수 있습니다. @xref{Factors (요인)}.  "

#. type: itemize
#: R-intro.texi:1164
msgid "@emph{lists} are a general form of vector in which the various elements need not be of the same type, and are often themselves vectors or lists.  Lists provide a convenient way to return the results of a statistical computation.  @xref{Lists}."
msgstr "@emph{lists}는 가장 일반적인 형태의 벡터로 각 구성요소들이 같은 데이터 형태로 되어야한다는 제약이 없으며, 종종 벡터나 리스트를 그 자체로 포함하기도 합니다. 또한 리스트는 통계연산의 결과를 편리하게 출력하기 위해 사용될 수도 있습니다. @xref{Lists (리스트)}."

#. type: itemize
#: R-intro.texi:1172
msgid "@emph{data frames} are matrix-like structures, in which the columns can be of different types.  Think of data frames as `data matrices' with one row per observational unit but with (possibly) both numerical and categorical variables.  Many experiments are best described by data frames: the treatments are categorical but the response is numeric.  @xref{Data frames}."
msgstr "@emph{data frames}은 행렬과 비슷한 구조를 가지고 있지만, 각각의 열이 다른 데이터 형태일 수 있습니다. 데이터 프레임은, 각 행이 하나의 관측 단위이고 각 열은 이 관측단위에서 얻어진 연속형 또는 이산형 변수인 `데이터 행렬'이라고 생각해도 무방할 것 입니다. 예를들어, 실험의 처리 수준을 범주화(categorical)해서 나타내고, 각 처리에서 얻어진 결과물(반응 변수)은 연속형일 경우, 데이터 프레임을 사용하는 것이 이 실험을 가장 잘 기록할 수 있는 방법일 것입니다. @xref{Data frames (데이터 프레임)}."

#. type: itemize
#: R-intro.texi:1177
msgid "@emph{functions} are themselves objects in @R{} which can be stored in the project's workspace.  This provides a simple and convenient way to extend @R{}.  @xref{Writing your own functions}."
msgstr "@R{}에서 @emph{functions}(함수)는 그 자체로 프로젝트의 작업공간 내에 저장 될 수 있는 객체이기도 합니다. 함수의 사용은 @R{}의 기능을 좀 더 간편하게 확장할 수 있게 합니다. @xref{Writing your own functions (사용자 정의함수 작성하기)}."

#. type: chapter
#: R-intro.texi:1181
#, no-wrap
msgid "Objects, their modes and attributes"
msgstr "객체의 저장방식과 속성"

#. type: cindex
#: R-intro.texi:1183
#, no-wrap
msgid "Attributes"
msgstr ""

#. type: node
#: R-intro.texi:1196
#: R-intro.texi:1198
#: R-intro.texi:1286
#, no-wrap
msgid "The intrinsic attributes mode and length"
msgstr ""

#. type: node
#: R-intro.texi:1196
#: R-intro.texi:1198
#: R-intro.texi:1286
#: R-intro.texi:1287
#: R-intro.texi:1334
#, no-wrap
msgid "Changing the length of an object"
msgstr "객체의 길이 변경"

#. type: node
#: R-intro.texi:1196
#: R-intro.texi:1286
#: R-intro.texi:1334
#: R-intro.texi:1335
#: R-intro.texi:1364
#, no-wrap
msgid "Getting and setting attributes"
msgstr "Getting and setting attributes (속성을 설정하고 확인하기)"

#. type: section
#: R-intro.texi:1196
#: R-intro.texi:1334
#: R-intro.texi:1364
#: R-intro.texi:1365
#, no-wrap
msgid "The class of an object"
msgstr "객체의 클래스"

#. type: section
#: R-intro.texi:1199
#, no-wrap
msgid "Intrinsic attributes: mode and length"
msgstr "고유속성: 저장방법 그리고 길이"

#. type: Plain text
#: R-intro.texi:1209
msgid "The entities @R{} operates on are technically known as @emph{objects}.  Examples are vectors of numeric (real) or complex values, vectors of logical values and vectors of character strings.  These are known as ``atomic'' structures since their components are all of the same type, or @emph{mode}, namely @emph{numeric}@footnote{@emph{numeric} mode is actually an amalgam of two distinct modes, namely @emph{integer} and @emph{double} precision, as explained in the manual.}, @emph{complex}, @emph{logical}, @emph{character} and @emph{raw}."
msgstr "@R{}에서 정보처리 (연산 및 수행)의 기본단위는 전문용어로 @emph{objects}(객체)라고 부르는 요소들입니다.이러한 객체의 종류에는 (실수) 수치형 및 복소수형, 논리형 그리고 문자형 벡터등이 있습니다.이러한 벡터의 구조를 ``atomic'' 이라고 하는데, 그 이유는 이들 벡터의 구성요소는 반드시 @emph{numeric} @footnote{@emph{numeric}(수치형) 모드라는 것은 사실 @emph{integer}(정수형)과 @emph{double} precision (배정밀도)라는 두가지의 다른 모드가 합쳐진 것입니다}, @emph{complex}, @emph{logical}, @emph{character}, 그리고 @emph{raw} 중 하나의 타입 혹은  @emph{mode}(모드)로만 되어있기 때문입니다. "

#. type: Plain text
#: R-intro.texi:1218
msgid "Vectors must have their values @emph{all of the same mode}.  Thus any given vector must be unambiguously either @emph{logical}, @emph{numeric}, @emph{complex}, @emph{character} or @emph{raw}.  (The only apparent exception to this rule is the special ``value'' listed as @code{NA} for quantities not available, but in fact there are several types of @code{NA}).  Note that a vector can be empty and still have a mode.  For example the empty character string vector is listed as @code{character(0)} and the empty numeric vector as @code{numeric(0)}."
msgstr "벡터는 반드시 @emph{같은 모드에서 나온} 값들로만 이루어져야 합니다.따라서 어떠한 벡터라도 반드시 @emph{logical}(논리형), @emph{numeric}(수치형), @emph{complex}(복소수형), @emph{character}(문자형) 또는 @emph{raw} 중의 하나의 모드이어야 합니다.(이 규칙에 대한 유일하고 명백한 예외가 있다면 그것은 @code{NA}로 표기되는 결측값일 것 입니다.하지만, 사실 여러 이유로 @code{NA} 값이 생성 됩니다).벡터는 empty(아무런 구성요소 없이 비어 있는) 상태라고 하더라도 모드를 가질 수 있습니다. 예를들어, 비어있는 문자열 벡터 @code{character(0)}나, 비어있는 수치형 벡터 @code{numeric(0)} 등이 있습니다. "

#. type: Plain text
#: R-intro.texi:1224
msgid "@R{} also operates on objects called @emph{lists}, which are of mode @emph{list}.  These are ordered sequences of objects which individually can be of any mode.  @emph{lists} are known as ``recursive'' rather than atomic structures since their components can themselves be lists in their own right."
msgstr "@R{}은 또한 @emph{list}(리스트)라는 모드를 가진 @emph{lists}(리스트) 객체들을 대상으로 연산을 수행할 수 있습니다. 리스트에는 동일하지 않은 모드를 가진 여러 객체들을 일정한 순서대로 나열할 수 있습니다. @emph{lists}(리스트)는 또한 atomic structure (가장 단순한 기본구조)이기 보다는 ``recursive''(재귀)구조를 가지는데, 그 이유는 리스트의 구성요소 그 자체가 리스트 안에 포함될 수 있기 때문입니다. "

#. type: Plain text
#: R-intro.texi:1231
msgid "The other recursive structures are those of mode @emph{function} and @emph{expression}.  Functions are the objects that form part of the @R{} system along with similar user written functions, which we discuss in some detail later.  Expressions as objects form an advanced part of @R{} which will not be discussed in this guide, except indirectly when we discuss @emph{formulae} used with modeling in @R{}."
msgstr "또 다른 재귀구조는 모드가 @emph{function}(함수) 또는 @emph{expression}(표현식)인 경우 입니다.함수는 나중에 설명하게 될 사용자 정의 함수와 함께 @R{} 시스템의 일부를 구성하는 객체입니다.표현식은 @R{}에서 모델링에 사용되는 @emph{formulae}(공식)을 언급할 때 간접적으로 등장하는 것을 제외하고는 이 문서에서는 다루지 않을 것이지만, 이 역시 @R{}시스템의 고급 활용을 위해 필요한 객체 입니다."

#. type: Plain text
#: R-intro.texi:1240
msgid "By the @emph{mode} of an object we mean the basic type of its fundamental constituents.  This is a special case of a ``property'' of an object.  Another property of every object is its @emph{length}.  The functions @code{mode(@var{object})} and @code{length(@var{object})} can be used to find out the mode and length of any defined structure @footnote{Note however that @code{length(@var{object})} does not always contain intrinsic useful information, e.g., when @code{@var{object}} is a function.}."
msgstr "한 객체의 @emph{mode}(모드)를 확인하여, 우리는 이 객체를 구성하는 요소들의 기본형(basic type)을 알 수 있습니다. 모드는 한 객체의 속성 (property) 중 특별한 하나의 예 입니다. 모든 객체가 갖는 또 다른 속성에 @emph{length}(길이)가 있습니다.명령문 @code{mode(@var{object})}와 @code{mode(@var{object})}를 사용하여 객체의 모드와 길이를 알 수 있습니다. @footnote{그러나, @code{length(@var{object})}가 항상 본질적이고 유용한 정보를 제공하는 것은 아닙니다.  @code{@var{object}}가 함수인 경우가 여기에 해당합니다.}"

#. type: Plain text
#: R-intro.texi:1245
msgid "Further properties of an object are usually provided by @code{attributes(@var{object})}, see @ref{Getting and setting attributes}.  Because of this, @emph{mode} and @emph{length} are also called ``intrinsic attributes'' of an object."
msgstr "객체에 대한 더 많은 속성들은 @code{attributes(@var{object})}를 사용해서 볼 수 있으며, 궁금한 점은 @ref{Getting and setting attributes (속성을 설정하고 확인하기)}를 참고하시길 바랍니다.이러한 이유로, @emph{mode}(모드)와 @emph{length}(길이)는 객체의 ``intrinsic attributes''(본질적 속성)이라고 합니다."

#. type: findex
#: R-intro.texi:1245
#, no-wrap
msgid "mode"
msgstr ""

#. type: Plain text
#: R-intro.texi:1251
msgid "For example, if @code{z} is a complex vector of length 100, then in an expression @code{mode(z)} is the character string @code{\"complex\"} and @code{length(z)} is @code{100}."
msgstr "예를 들어, 만약 @code{z}가 길이 100인 복소수형 벡터라고 한다면, 표현식 @code{mode(z)}는 문자열 @code{\"complex\"}(복소수)을 출력하고, @code{length(z)}은 @code{100}을 출력 합니다."

#. type: Plain text
#: R-intro.texi:1254
msgid "@R{} caters for changes of mode almost anywhere it could be considered sensible to do so, (and a few where it might not be).  For example with"
msgstr "@R{}에서는 어디든 필요한 곳에서 모드를 변경할 수 있습니다.  예제를 통해 살펴보면,"

#. type: example
#: R-intro.texi:1257
#, no-wrap
msgid "> z <- 0:9\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1261
msgid "we could put"
msgstr "위에서 생성한 0 부터 9까지의 숫자로 이루어진 수열 @code{z}는 @code{c(\"0\", \"1\", \"2\", @dots{}, \"9\")}의 값을 갖는 문자형 벡터 digits으로 전환될 수 있습니다."

#. type: example
#: R-intro.texi:1264
#, no-wrap
msgid "> digits <- as.character(z)\n"
msgstr "> digits <- as.character(z)\n"

#. type: Plain text
#: R-intro.texi:1270
msgid "after which @code{digits} is the character vector @code{c(\"0\", \"1\", \"2\", @dots{}, \"9\")}.  A further @emph{coercion}, or change of mode, reconstructs the numerical vector again:"
msgstr "이 문자형 벡터는 다음과 같은 방법으로 수치형 벡터로 @emph{coercion}(강제형변환) 또는 모드 변환할 수 있습니다:"

#. type: example
#: R-intro.texi:1273
#, no-wrap
msgid "> d <- as.integer(digits)\n"
msgstr "> d <- as.integer(digits)\n"

#. type: Plain text
#: R-intro.texi:1283
msgid "Now @code{d} and @code{z} are the same.@footnote{In general, coercion from numeric to character and back again will not be exactly reversible, because of roundoff errors in the character representation.} There is a large collection of functions of the form @code{as.@var{something}()} for either coercion from one mode to another, or for investing an object with some other attribute it may not already possess.  The reader should consult the different help files to become familiar with them."
msgstr "이제 @code{d}와 @code{z}는 동일한 벡터 입니다.@footnote{일반적으로, 숫자에서 문자로 강제형변환 한 뒤 다시 숫자로 변경할때에는, 문자형을 표현할 때의 round off errors(반올림 오차) 때문에, 원래의 숫자와 완전히 같은 값이 되지는 않습니다.}  이와 같이 객체의 모드를 변경하거나, 한 객체가 현재 지정된 모드 이외의 다른 속성을 가질 수 있는지 확인하기 위해 @code{as.@var{something}} 형태의 다양한 함수 모음을 이용할 수 있습니다.이러한 함수들을 능숙하게 사용하기 위해서는 다양한 도움말이 필요할 것 입니다."

#. type: Plain text
#: R-intro.texi:1290
msgid "An ``empty'' object may still have a mode.  For example"
msgstr ""

#. type: example
#: R-intro.texi:1293
#, no-wrap
msgid "> e <- numeric()\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1300
msgid "makes @code{e} an empty vector structure of mode numeric.  Similarly @code{character()} is a empty character vector, and so on.  Once an object of any size has been created, new components may be added to it simply by giving it an index value outside its previous range.  Thus"
msgstr "위의 명령문은 수치형 모드를 갖는 비어있는 벡터 @code{e}를 생성합니다.마찬가지로, @code{character()}은 비어있는 문자형 벡터를 생성합니다.일단 임의의 크기를 갖는 객체가 생성하고 나면,이전 범위 밖에 인덱스 값을 지정하는 것으로  새 구성요소를 간단히 추가할 수 있습니다."

#. type: example
#: R-intro.texi:1303
#, no-wrap
msgid "> e[3] <- 17\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1310
msgid "now makes @code{e} a vector of length 3, (the first two components of which are at this point both @code{NA}).  This applies to any structure at all, provided the mode of the additional component(s) agrees with the mode of the object in the first place."
msgstr "위의 명령문으로 길이가 3인 벡터 @code{e}가 생성 됩니다. (별도 지정이 없었으므로, 처음 두 개의 구성요소들은 @code{NA}가 될 것입니다.) 이런 방식으로 구성요소를 추가하는 것은 새로 추가되는 구성요소가 이미 존재하는 구성요소들과 모드만 일치한다면, 어떤 구조의 객체라도 모두 적용 가능합니다. "

#. type: Plain text
#: R-intro.texi:1314
msgid "This automatic adjustment of lengths of an object is used often, for example in the @code{scan()} function for input.  (@pxref{The scan()  function}.)"
msgstr "때로는, 데이터를 입력할 때 사용하는 @code{scan()} 함수처럼, 자동적으로 객체의 길이가 조정될 때가 있습니다. "

#. type: Plain text
#: R-intro.texi:1317
msgid "Conversely to truncate the size of an object requires only an assignment to do so.  Hence if @code{alpha} is an object of length 10, then"
msgstr "반대로, 객체의 크기를 직접 조정하고 싶다면, 그렇게 하기 위한 할당문을 사용하면 됩니다.예를들어, 길이가 10인 @code{alpha}라는 객체가 있다면,아래의 할당문은 길이가 5이고, 이전 @code{alpha}의 구성성분 중 짝수번 째에 해당하는 요소들만을 선택하여 새로운 객체인   @code{alpha}를 생성합니다. (이전 인덱스는 더 이상 남아있지 않습니다.) "

#. type: example
#: R-intro.texi:1320
#, no-wrap
msgid "> alpha <- alpha[2 * 1:5]\n"
msgstr "> alpha <- alpha[2 * 1:5]\n"

#. type: Plain text
#: R-intro.texi:1326
msgid "makes it an object of length 5 consisting of just the former components with even index.  (The old indices are not retained, of course.)  We can then retain just the first three values by"
msgstr "이 중 처음 세 개의 구성요소만을 포함하는 @code{alpha}를 생성하고자하면, 다음 문장과 같이 하면 됩니다. "

#. type: example
#: R-intro.texi:1329
#, no-wrap
msgid "> length(alpha) <- 3\n"
msgstr "> length(alpha) <- 3\n"

#. type: Plain text
#: R-intro.texi:1333
msgid "and vectors can be extended (by missing values) in the same way."
msgstr "비슷한 방법으로 벡터의 길이를 늘리는 것도 가능합니다. (늘어난 길이만큼 결측값으로 채워지겠지만요.) "

#. type: findex
#: R-intro.texi:1336
#: R-intro.texi:1343
#, no-wrap
msgid "attr"
msgstr "attr"

#. type: findex
#: R-intro.texi:1337
#: R-intro.texi:1340
#, no-wrap
msgid "attributes"
msgstr ""

#. type: Plain text
#: R-intro.texi:1340
msgid "The function @code{attributes(@var{object})}"
msgstr "함수 @code{attributes(@var{object})}는 해당 객체에 현재 지정되어 있는 모든 (내재형이 아닌,non-intrinsic) 속성들을 리스트로 나열해 줍니다."

#. type: Plain text
#: R-intro.texi:1343
msgid "returns a list of all the non-intrinsic attributes currently defined for that object.  The function @code{attr(@var{object}, @var{name})}"
msgstr "또 함수 @code{attr(@var{object}, @var{name})}는 객체의 좀 더 구체적인 속성을 선택하는데 사용 됩니다."

#. type: Plain text
#: R-intro.texi:1349
msgid "can be used to select a specific attribute.  These functions are rarely used, except in rather special circumstances when some new attribute is being created for some particular purpose, for example to associate a creation date or an operator with an @R{} object.  The concept, however, is very important."
msgstr "그러나, 이러한 함수들은, @R{} 객체에 작성날짜나 특별한 연산자를 연결시킬 때와 같은 아주 특별한 경우를 제외하고는 거의 사용되지 않습니다. 하지만, 이와 관련된 개념을 알아두는 것은 매우 중요합니다."

#. type: Plain text
#: R-intro.texi:1352
msgid "Some care should be exercised when assigning or deleting attributes since they are an integral part of the object system used in @R{}."
msgstr "객체에 속성을 새로 추가하거나 삭제할 때는 특별히 주의를 기울이시길 바랍니다. 이런 속성 변경의 대상이 되는 객체들이  @R{}에서 사용되는 객체 시스템의 매우 중요한 부분이기 때문입니다."

#. type: Plain text
#: R-intro.texi:1356
msgid "When it is used on the left hand side of an assignment it can be used either to associate a new attribute with @code{@var{object}} or to change an existing one.  For example"
msgstr "할당문의 좌측에 함수 @code{@var{object}}를 사용하면, 새로운 속성을 할당하거나 존재하는 속성을 변경할 수 있습니다. 아래와 같이 입력하면, @R{}은 벡터 @code{z}를 마치 크기가 10행 10열인 행렬처럼 다룰 수 있게 됩니다."

#. type: example
#: R-intro.texi:1359
#, no-wrap
msgid "> attr(z, \"dim\") <- c(10,10)\n"
msgstr "> attr(z, \"dim\") <- c(10,10)\n"

#. type: Plain text
#: R-intro.texi:1363
msgid "allows @R{} to treat @code{z} as if it were a 10-by-10 matrix."
msgstr ""

#. type: cindex
#: R-intro.texi:1366
#: R-intro.texi:4093
#, no-wrap
msgid "Classes"
msgstr ""

#. type: Plain text
#: R-intro.texi:1373
msgid "All objects in @R{} have a @emph{class}, reported by the function @code{class}.  For simple vectors this is just the mode, for example @code{\"numeric\"}, @code{\"logical\"}, @code{\"character\"} or @code{\"list\"}, but @code{\"matrix\"}, @code{\"array\"}, @code{\"factor\"} and @code{\"data.frame\"} are other possible values."
msgstr "@R{}에 존재하는 모든 객체들은 @emph{class}(클래스)라는 것을 갖습니다.이 클래스의 종류는 함수 @code{class}를 사용해서 확인할 수 있습니다.간단한 벡터의 경우, 클래스는 @code{\"numeric\"}, @code{\"logical\"}, @code{\"character\"} 또는 @code{\"list\"}와 같이 단순히 벡터의 모드를 의미 합니다.그러나, @code{\"matrix\"}, @code{\"array\"}, @code{\"factor\"} 그리고 @code{\"data.frame\"}는 클래스로 다른 값을 가질 수 있습니다."

#. type: Plain text
#: R-intro.texi:1382
msgid "A special attribute known as the @emph{class} of the object is used to allow for an object-oriented style@footnote{A different style using `formal' or `S4' classes is provided in package @code{methods}.} of programming in @R{}.  For example if an object has class @code{\"data.frame\"}, it will be printed in a certain way, the @code{plot()} function will display it graphically in a certain way, and other so-called generic functions such as @code{summary()} will react to it as an argument in a way sensitive to its class."
msgstr "객체의 @emph{class}(클래스)가 가진 특별한 속성 중 하나는 @R{}의 object-oriented style (객체지향스타일)  @footnote{`formal' 또는 `S4' 와 같은 다른 종류의 클래스에 기반한 스타일은 패키지 @code{methods}를 통해 사용 가능합니다.} 프로그래밍을 가능하게 한다는 점입니다.예를 들어, 만약 객체가 @code{\"data.frame\"}을 그 클래스로 가진다면,이 객체를 출력은 정해진 특정한 방식대로 이루어집니다. 이 객체에 @code{plot()} 함수를 적용할 경우, 이미 정해진 그래픽의 형태로 시각화하게 되고, 또  @code{summary()}와 같이 일반(generic)함수를 사용할 경우, 객체가 가지고 있는 클래스를 인자의 형태로 받아, 클래스에 따른 정의대로 결과물을 출력합니다. "

#. type: Plain text
#: R-intro.texi:1385
msgid "To remove temporarily the effects of class, use the function @code{unclass()}."
msgstr "클래스 효과를 일시적으로 제거하기 위해서는 @code{unclass()}라는 함수를 사용하면 됩니다."

#. type: findex
#: R-intro.texi:1385
#, no-wrap
msgid "unclass"
msgstr ""

#. type: Plain text
#: R-intro.texi:1387
msgid "For example if @code{winter} has the class @code{\"data.frame\"} then"
msgstr "예를들어 만약 @code{winter}라는 객체가 클래스 @code{\"data.frame\"}(데이터 프레임)을 가지고 있다면, 아래의 명령문을 실행하면 행렬이라기 보다는 데이터 프레임의 형식을 갖추어 데이터를 출력하게 됩니다. "

#. type: example
#: R-intro.texi:1390
#, no-wrap
msgid "> winter\n"
msgstr "> winter\n"

#. type: Plain text
#: R-intro.texi:1394
msgid "will print it in data frame form, which is rather like a matrix, whereas"
msgstr "반면에 아래의 명령문을 실행해서 클래스 효과를 지우면 일반적인 리스트의 형식으로 출력됩니다."

#. type: example
#: R-intro.texi:1397
#, no-wrap
msgid "> unclass(winter)\n"
msgstr "> unclass(winter)\n"

#. type: Plain text
#: R-intro.texi:1403
msgid "will print it as an ordinary list.  Only in rather special situations do you need to use this facility, but one is when you are learning to come to terms with the idea of class and generic functions."
msgstr "이러한 클래스의 활용은 매우 특별한 경우에 한해서만 필요하므로, 여기서는 단순히 클래스와 일반함수의 기본 개념에만 익숙해지면 됩니다."

#. type: Plain text
#: R-intro.texi:1406
msgid "Generic functions and classes will be discussed further in @ref{Object orientation}, but only briefly."
msgstr "일반함수와 클래스에 대해서는 @ref{Object orientation (객체지향적 방법)} 부분에서 더 자세히 다루겠지만, 여기에서는 이쯤에서 간단히 마치겠습니다."

#. type: chapter
#: R-intro.texi:1408
#, no-wrap
msgid "Ordered and unordered factors"
msgstr "순서형과 비순서형 요인"

#. type: cindex
#: R-intro.texi:1410
#: R-intro.texi:1467
#: R-intro.texi:1469
#: R-intro.texi:1565
#: R-intro.texi:1566
#: R-intro.texi:4441
#, no-wrap
msgid "Ordered factors"
msgstr "순서형 요인"

#. type: Plain text
#: R-intro.texi:1417
msgid "A @emph{factor} is a vector object used to specify a discrete classification (grouping) of the components of other vectors of the same length.  @R{} provides both @emph{ordered} and @emph{unordered} factors.  While the ``real'' application of factors is with model formulae (@pxref{Contrasts}), we here look at a specific example."
msgstr "@emph{factor}(요인)은 같은 길이를 가진 다른 벡터의 다른 구성요소들을 이산형으로 구분(Classification) 또는 그룹핑(grouping)된 것을 표현해주는 벡터형 객체입니다.@R{}에서는 @emph{ordered}(순서형)과 @emph{unordered}(비순서형) 요인을 모두 사용 가능합니다.요인의 활용이 정말 필요한 것은 @pxref{Contrasts} 부분에서 설명할 model formulae(모형 공식)을 사용할 때이지만, 여기에서는 좀 더 간단한 예제를 우선 다루겠습니다."

#. type: section
#: R-intro.texi:1418
#, no-wrap
msgid "A specific example"
msgstr "구체적인 예제"

#. type: Plain text
#: R-intro.texi:1427
msgid "Suppose, for example, we have a sample of 30 tax accountants from all the states and territories of Australia@footnote{Readers should note that there are eight states and territories in Australia, namely the Australian Capital Territory, New South Wales, the Northern Territory, Queensland, South Australia, Tasmania, Victoria and Western Australia.} and their individual state of origin is specified by a character vector of state mnemonics as"
msgstr "예를들어, Australia(오스트레일리아, 호주)의 모든 지역(호주에는 Australian Capital Territory, New South Wales, the Northern Territory, Queensland, South Australia, Tasmania, Victoria and Western Australia 라는 총 8개의 행정 구역이 있습니다)으로부터 온 30명의 회계사 샘플과 그들의 출신 지역에 대한 정보가 문자형 벡터인 state에 약자로 다음과 같이 기록되어있습니다. "

#. type: example
#: R-intro.texi:1433
#, no-wrap
msgid ""
"> state <- c(\"tas\", \"sa\",  \"qld\", \"nsw\", \"nsw\", \"nt\",  \"wa\",  \"wa\",\n"
"             \"qld\", \"vic\", \"nsw\", \"vic\", \"qld\", \"qld\", \"sa\",  \"tas\",\n"
"             \"sa\",  \"nt\",  \"wa\",  \"vic\", \"qld\", \"nsw\", \"nsw\", \"wa\",\n"
"             \"sa\",  \"act\", \"nsw\", \"vic\", \"vic\", \"act\")\n"
msgstr ""
"> state <- c(\"tas\", \"sa\",  \"qld\", \"nsw\", \"nsw\", \"nt\",  \"wa\",  \"wa\",\n"
"             \"qld\", \"vic\", \"nsw\", \"vic\", \"qld\", \"qld\", \"sa\",  \"tas\",\n"
"             \"sa\",  \"nt\",  \"wa\",  \"vic\", \"qld\", \"nsw\", \"nsw\", \"wa\",\n"
"             \"sa\",  \"act\", \"nsw\", \"vic\", \"vic\", \"act\")\n"

#. type: Plain text
#: R-intro.texi:1437
msgid "Notice that in the case of a character vector, ``sorted'' means sorted in alphabetical order."
msgstr "문자형 벡터의 경우에는 ``sorted''(정렬)이라는 것은 알파벳순서로 나열된 것을 의미합니다."

#. type: Plain text
#: R-intro.texi:1439
msgid "A @emph{factor} is similarly created using the @code{factor()} function:"
msgstr "여기에 대한 @emph{factor}(요인)은 @code{factor()} 함수를 이용하여 아래와 같이 생성합니다:"

#. type: findex
#: R-intro.texi:1439
#, no-wrap
msgid "factor"
msgstr ""

#. type: example
#: R-intro.texi:1443
#, no-wrap
msgid "> statef <- factor(state)\n"
msgstr "> statef <- factor(state)\n"

#. type: Plain text
#: R-intro.texi:1447
msgid "The @code{print()} function handles factors slightly differently from other objects:"
msgstr "@code{print()} 함수를 사용해서 요인을 출력할 경우, 다른 객체들과는 다소 다른 방식으로 출력됩니다:"

#. type: example
#: R-intro.texi:1453
#, no-wrap
msgid ""
"> statef\n"
" [1] tas sa  qld nsw nsw nt  wa  wa  qld vic nsw vic qld qld sa\n"
"[16] tas sa  nt  wa  vic qld nsw nsw wa  sa  act nsw vic vic act\n"
"Levels:  act nsw nt qld sa tas vic wa\n"
msgstr ""
"> statef\n"
" [1] tas sa  qld nsw nsw nt  wa  wa  qld vic nsw vic qld qld sa\n"
"[16] tas sa  nt  wa  vic qld nsw nsw wa  sa  act nsw vic vic act\n"
"Levels:  act nsw nt qld sa tas vic wa\n"

#. type: Plain text
#: R-intro.texi:1457
msgid "To find out the levels of a factor the function @code{levels()} can be used."
msgstr "요인의 수준(levels)을 확인하기 위해서는 함수 @code{levels()}를 사용하면 됩니다."

#. type: findex
#: R-intro.texi:1457
#, no-wrap
msgid "levels"
msgstr ""

#. type: example
#: R-intro.texi:1462
#, no-wrap
msgid ""
"> levels(statef)\n"
"[1] \"act\" \"nsw\" \"nt\"  \"qld\" \"sa\"  \"tas\" \"vic\" \"wa\"\n"
msgstr ""
"> levels(statef)\n"
"[1] \"act\" \"nsw\" \"nt\"  \"qld\" \"sa\"  \"tas\" \"vic\" \"wa\"\n"

#. type: node
#: R-intro.texi:1467
#: R-intro.texi:1469
#: R-intro.texi:1565
#, no-wrap
msgid "The function tapply() and ragged arrays"
msgstr ""

#. type: section
#: R-intro.texi:1470
#, no-wrap
msgid "The function @code{tapply()} and ragged arrays"
msgstr "함수 @code{tapply()}와 비정형 배열"

#. type: findex
#: R-intro.texi:1471
#, no-wrap
msgid "tapply"
msgstr "tapply"

#. type: Plain text
#: R-intro.texi:1476
msgid "To continue the previous example, suppose we have the incomes of the same tax accountants in another vector (in suitably large units of money)"
msgstr "앞부분에서 사용된 예제를 계속해서, 이제 30명의 회계사의 수입(income)에 대한 정보가 아래와 같이 벡터로 (적당한 화폐단위로 기록되어) 제공되었다고 가정합시다."

#. type: example
#: R-intro.texi:1481
#, no-wrap
msgid ""
"> incomes <- c(60, 49, 40, 61, 64, 60, 59, 54, 62, 69, 70, 42, 56,\n"
"               61, 61, 61, 58, 51, 48, 65, 49, 49, 41, 48, 52, 46,\n"
"               59, 46, 58, 43)\n"
msgstr ""
"> incomes <- c(60, 49, 40, 61, 64, 60, 59, 54, 62, 69, 70, 42, 56,\n"
"               61, 61, 61, 58, 51, 48, 65, 49, 49, 41, 48, 52, 46,\n"
"               59, 46, 58, 43)\n"

#. type: Plain text
#: R-intro.texi:1485
msgid "To calculate the sample mean income for each state we can now use the special function @code{tapply()}:"
msgstr "각 주(state) 별 평균소득을 계산하고 싶다면 아래와 같이 @code{tapply()} 함수를 사용하면 됩니다."

#. type: example
#: R-intro.texi:1488
#, no-wrap
msgid "> incmeans <- tapply(incomes, statef, mean)\n"
msgstr "> incmeans <- tapply(incomes, statef, mean)\n"

#. type: Plain text
#: R-intro.texi:1492
msgid "giving a means vector with the components labelled by the levels"
msgstr "위 명령어를 실행하면 아래와 같이 (state의) 각 수준(levels)에 해당하는 평균이 벡터로 출력 됩니다."

#. type: example
#: R-intro.texi:1496
#, no-wrap
msgid ""
"   act    nsw     nt    qld     sa    tas    vic     wa\n"
"44.500 57.333 55.500 53.600 55.000 60.500 56.000 52.250\n"
msgstr ""
"   act    nsw     nt    qld     sa    tas    vic     wa\n"
"44.500 57.333 55.500 53.600 55.000 60.500 56.000 52.250\n"

#. type: Plain text
#: R-intro.texi:1509
msgid "The function @code{tapply()} is used to apply a function, here @code{mean()}, to each group of components of the first argument, here @code{incomes}, defined by the levels of the second component, here @code{statef}@footnote{Note that @code{tapply()} also works in this case when its second argument is not a factor, e.g., @samp{@code{tapply(incomes, state)}}, and this is true for quite a few other functions, since arguments are @emph{coerced} to factors when necessary (using @code{as.factor()}).}, as if they were separate vector structures.  The result is a structure of the same length as the levels attribute of the factor containing the results.  The reader should consult the help document for more details."
msgstr "함수 @code{tapply()}를 사용하면 이 함수의 첫번째 인자인 @code{incomes}에 대해, 이 함수의 두번째 인자인 @code{statef}에 정의된 요인의 수준별로, 세번째 인자인 함수 @code{mean()}을 계산합니다. 마치 각각의 두번째 요인의 수준별로 별개의 벡터가 존재하는 것 처럼 말이지요. @footnote{@samp{@code{tapply(incomes, state)}}의 경우와 같이 @code{tapply()}의 두번째 인자가 꼭 요인(factor)일 필요는 없습니다. 이 함수는 필요한 경우에는 @code{as.factor()}를 사용한 것처럼 두번째 인자를 강제형변환 @emph{coerced} 한 후, 연산을 수행하기 때문입니다.}따라서, 결과로 생성된 벡터의 길이는 반드시 요인 수준의 개수와 같아야 합니다.이러한 연산에 대해 더 자세히 알고 싶은 분은 도움말을 참고하시길 바랍니다."

#. type: Plain text
#: R-intro.texi:1515
msgid "Suppose further we needed to calculate the standard errors of the state income means.  To do this we need to write an @R{} function to calculate the standard error for any given vector.  Since there is an builtin function @code{var()} to calculate the sample variance, such a function is a very simple one liner, specified by the assignment:"
msgstr "어쩌면 여러분은 이 예제에서 평균소득에 대한 표준오차(standard error)를 계산해보고 싶을 수도 있을 것 입니다.이를 위해, 아래와 같이 주어진 벡터의 표준오차를 계산하는 @R{} 함수를 작성할 수 있습니다.@code{var()}라는 샘플 분산을 계산하는 빌트인(built-in) 함수가 존재하기 때문에, 이 함수는 아래와 같이 간단한 한줄짜리 함수로 표현 가능합니다:"

#. type: example
#: R-intro.texi:1518
#, no-wrap
msgid "> stderr <- function(x) sqrt(var(x)/length(x))\n"
msgstr "> stderr <- function(x) sqrt(var(x)/length(x))\n"

#. type: Plain text
#: R-intro.texi:1524
msgid "(Writing functions will be considered later in @ref{Writing your own functions}, and in this case was unnecessary as @R{} also has a builtin function @code{sd()}.)"
msgstr "(함수를 작성하는 방법에 대해서는 추후에 @ref{Writing your own functions (사용자 정의함수 작성하기)} 편에서 다룰 것입니다. 또 위의 함수작성 예제는 실제로는 별로 의미는 없는데, @R{}에는 이미 @code{sd()}라는 표준오차 계산 함수가 포함되어 있기 때문입니다)."

#. type: findex
#: R-intro.texi:1524
#, no-wrap
msgid "sd"
msgstr "sd"

#. type: Plain text
#: R-intro.texi:1527
msgid "After this assignment, the standard errors are calculated by"
msgstr "위의 함수에 할당을 하면, 아래와 같이 표준오차가 계산되며, "

#. type: example
#: R-intro.texi:1530
#, no-wrap
msgid "> incster <- tapply(incomes, statef, stderr)\n"
msgstr "> incster <- tapply(incomes, statef, stderr)\n"

#. type: Plain text
#: R-intro.texi:1534
msgid "and the values calculated are then"
msgstr "그 결과는 다음과 같습니다."

#. type: example
#: R-intro.texi:1539
#, no-wrap
msgid ""
"> incster\n"
"act    nsw  nt    qld     sa tas   vic     wa\n"
"1.5 4.3102 4.5 4.1061 2.7386 0.5 5.244 2.6575\n"
msgstr ""
"> incster\n"
"act    nsw  nt    qld     sa tas   vic     wa\n"
"1.5 4.3102 4.5 4.1061 2.7386 0.5 5.244 2.6575\n"

#. type: Plain text
#: R-intro.texi:1547
msgid "As an exercise you may care to find the usual 95% confidence limits for the state mean incomes.  To do this you could use @code{tapply()} once more with the @code{length()} function to find the sample sizes, and the @code{qt()} function to find the percentage points of the appropriate @math{t}-distributions.  (You could also investigate @R{}'s facilities for @math{t}-tests.)"
msgstr "연습삼아 state 별 평균소득에 대한 95% 신뢰구간을 구해보고 싶은 분도 있을 것입니다.이를 위해서는, @code{tapply()} 함수와 함께 @code{length()}, @code{qt()}와 같은 함수들을 사용해야 할 것이라 생각되는데, @code{length()}는 샘플 크기를, @code{qt()}는 t-분포에서 95% 에 해당하는 분위수를 찾아주는 함수 입니다.(참고로 @R{}에 포함된 @math{t}-테스트 관련 함수들을 이용하는 것도 가능할 것입니다)."

#. type: Plain text
#: R-intro.texi:1557
msgid "The function @code{tapply()} can also be used to handle more complicated indexing of a vector by multiple categories.  For example, we might wish to split the tax accountants by both state and sex.  However in this simple instance (just one factor) what happens can be thought of as follows.  The values in the vector are collected into groups corresponding to the distinct entries in the factor.  The function is then applied to each of these groups individually.  The value is a vector of function results, labelled by the @code{levels} attribute of the factor."
msgstr "위의 예제에서 살펴 본 @code{tapply()} 함수에 여러 개의 범주를 표시하기 위해 좀 더 복잡하게 표현된 인덱스 벡터를 사용하는 것도 가능합니다. 예를들어, 위 예제에서 state 와 성별이라는 두 가지 요인을 동시에 고려하여 회계사의 수입을 보고 싶다고 가정합시다.이 경우, (한 개의 요인을 고려할 때 처럼) 다음과 같은 식으로 연산이 처리 됩니다.우선, 벡터의 구성요소들이 요인의 수준 별로 그룹화 됩니다. 그리고 이 그룹화된 벡터 구성요소 별로 함수가 각각 적용 됩니다. 즉, 각 요인 수준별로 계산된 결과값에, 해당 요인의 @code{levels} 속성을 각각 레이블링 하는 것 입니다."

#. type: Plain text
#: R-intro.texi:1563
msgid "The combination of a vector and a labelling factor is an example of what is sometimes called a @emph{ragged array}, since the subclass sizes are possibly irregular.  When the subclass sizes are all the same the indexing may be done implicitly and much more efficiently, as we see in the next section."
msgstr "하나의 벡터와 하나의 레이블링 요인을 조합하는 것은 @emph{ragged array}(비정형 배열)의 하나의 예시로 볼 수 있는데,그것은 그룹화 된 부분의 크기가 서로 다른 경우가 대부분이기 때문입니다.만약 그룹화 된 각 부분의 크기가 모두 같다면, 다음 섹션에서 살펴보게 될 방법을 사용하여 훨씬 효율적으로 연산을 수행할 수 있습니다."

#. type: findex
#: R-intro.texi:1567
#: R-intro.texi:1574
#, no-wrap
msgid "ordered"
msgstr ""

#. type: Plain text
#: R-intro.texi:1571
msgid "The levels of factors are stored in alphabetical order, or in the order they were specified to @code{factor} if they were specified explicitly."
msgstr "요인(factor)의 수준(levels)들은 기본적으로 알파벳 순서로 저장되지만, @code{factor} 함수를 이용하면 사용자가 별도의 순서를 지정하는 것도 가능합니다."

#. type: Plain text
#: R-intro.texi:1574
msgid "Sometimes the levels will have a natural ordering that we want to record and want our statistical analysis to make use of.  The @code{ordered()}"
msgstr "어떤 경우에는 수준들이 우리가 원하는대로 이미 지정되어 있거나, 통계분석 시 필요한 형태로 되어있는 경우도 있습니다. "

#. type: Plain text
#: R-intro.texi:1580
msgid "function creates such ordered factors but is otherwise identical to @code{factor}.  For most purposes the only difference between ordered and unordered factors is that the former are printed showing the ordering of the levels, but the contrasts generated for them in fitting linear models are different."
msgstr "@code{ordered()} 함수는 요인을 순서형으로 생성한다는 점을 빼면 @code{factor}와 다르지 않습니다.대부분의 경우, 순서형과 비순서형 요인의 차이는 순서형 요인만 수준을 일정한 순서대로 출력하는 점 뿐이지만, 선형 모형 적합에서 요인을  이용하여 contrasts(대조)를 생성할 경우, 서로 다른 순서가 다른 결과물을 산출하게 된다는 점을 기억하시기 바랍니다."

#. type: node
#: R-intro.texi:1596
#: R-intro.texi:1598
#: R-intro.texi:1599
#: R-intro.texi:1600
#: R-intro.texi:1643
#, no-wrap
msgid "Arrays"
msgstr "배열"

#. type: node
#: R-intro.texi:1596
#: R-intro.texi:1598
#: R-intro.texi:1643
#: R-intro.texi:1683
#, no-wrap
msgid "Array indexing"
msgstr ""

# Notes from Chel Hee Lee: Don't touch it!
#. type: node
#: R-intro.texi:1596
#: R-intro.texi:1643
#: R-intro.texi:1683
#: R-intro.texi:1684
#: R-intro.texi:1775
#, no-wrap
msgid "Index matrices"
msgstr "Index matrices (인덱스 행렬)"

#. type: node
#: R-intro.texi:1596
#: R-intro.texi:1681
#: R-intro.texi:1683
#: R-intro.texi:1775
#: R-intro.texi:1840
#: R-intro.texi:1866
#, no-wrap
msgid "The array() function"
msgstr "array() 함수"

#. type: node
#: R-intro.texi:1596
#: R-intro.texi:1775
#: R-intro.texi:1866
#: R-intro.texi:1867
#: R-intro.texi:1939
#, no-wrap
msgid "The outer product of two arrays"
msgstr "두 배열의 외적"

#. type: node
#: R-intro.texi:1596
#: R-intro.texi:1866
#: R-intro.texi:1939
#: R-intro.texi:1940
#: R-intro.texi:1941
#: R-intro.texi:1964
#, no-wrap
msgid "Generalized transpose of an array"
msgstr "배열의 전치에 사용되는 일반화된 방법"

#. type: node
#: R-intro.texi:1596
#: R-intro.texi:1939
#: R-intro.texi:1964
#: R-intro.texi:1965
#: R-intro.texi:2006
#: R-intro.texi:2066
#: R-intro.texi:2111
#: R-intro.texi:2153
#: R-intro.texi:2199
#: R-intro.texi:2249
#, no-wrap
msgid "Matrix facilities"
msgstr "행렬의 기능들"

#. type: node
#: R-intro.texi:1596
#: R-intro.texi:1964
#: R-intro.texi:2249
#: R-intro.texi:2294
#, no-wrap
msgid "Forming partitioned matrices"
msgstr ""

#. type: node
#: R-intro.texi:1596
#: R-intro.texi:2249
#: R-intro.texi:2294
#: R-intro.texi:2323
#, no-wrap
msgid "The concatenation function c() with arrays"
msgstr "배열에 사용되는 결합함수 c()"

#. type: section
#: R-intro.texi:1596
#: R-intro.texi:2294
#: R-intro.texi:2323
#: R-intro.texi:2324
#, no-wrap
msgid "Frequency tables from factors"
msgstr "요인을 이용하여 도수분포표 생성하기"

#. type: cindex
#: R-intro.texi:1601
#, no-wrap
msgid "Matrices"
msgstr ""

#. type: Plain text
#: R-intro.texi:1607
msgid "An array can be considered as a multiply subscripted collection of data entries, for example numeric.  @R{} allows simple facilities for creating and handling arrays, and in particular the special case of matrices."
msgstr "배열(array)이라는 것은 쉽게 말해 다차원상에 데이터가 저장될 수 있도록 데이터 엔트리(data entry, 데이터가 위치하는 하나하나를 공간 또는 한개의 데이터을 의미함)를 구조화한 것 입니다. 다차원이라는 것은 우리 머릿속에 개념상으로 존재하지만, 데이터를 일렬로 벡터와 같은 형태로 읽어들이는 컴퓨터에는 다차원의 개념이 없습니다.그래서 데이터에 다차원 구조를 주기 위해서는 이 배열이라는 개념을 이용 해야하며, @R{}은 행렬과 같이 일정한 형태로 된 배열을 생성하고 조작할 수 있는 간편한 기능들을 제공합니다. "

#. type: Plain text
#: R-intro.texi:1612
msgid "A dimension vector is a vector of non-negative integers.  If its length is @math{k} then the array is @math{k}-dimensional, e.g.@ a matrix is a @math{2}-dimensional array.  The dimensions are indexed from one up to the values given in the dimension vector."
msgstr "이러한 다차원 구조의 실제적인 구현을 위해서는 차원벡터 (dimension vector)라는 것을 활용하게 되는데, 이는 음의 값이 아닌 정수(non-negative) 벡터로 되어 있습니다. 차원벡터의 길이가 @math{k}인 경우, 데이터는 @math{k}-차원의 배열이 됩니다. 좀 더 구체적으로, 하나의 행렬은 @math{2}-차원 배열의 예라고 볼 수 있습니다. 각 차원(즉, 차원벡터의 구성요소)은 양의 정수를 인덱스 값으로 갖습니다."

#. type: Plain text
#: R-intro.texi:1616
msgid "A vector can be used by @R{} as an array only if it has a dimension vector as its @emph{dim} attribute.  Suppose, for example, @code{z} is a vector of 1500 elements.  The assignment"
msgstr "@R{}에서 배열로 사용되기 위해서는 해당 벡터의 @emph{dim} 속성(attribute)으로 차원벡터가 지정되어 있어야만 합니다.이해를 돕기 위해서 아래의 예제를 살펴보도록 합니다. @code{z}는 1500개의 구성요소를 갖는 벡터라고 가정합시다."

#. type: example
#: R-intro.texi:1619
#, no-wrap
msgid "> dim(z) <- c(3,5,100)\n"
msgstr "> dim(z) <- c(3,5,100)\n"

#. type: findex
#: R-intro.texi:1620
#, no-wrap
msgid "dim"
msgstr "dim"

#. type: Plain text
#: R-intro.texi:1625
msgid "gives it the @emph{dim} attribute that allows it to be treated as a @math{3} by @math{5} by @math{100} array."
msgstr "다음의 할당문을 실행하면, 이 벡터는 @math{3}-차원 구조의, @math{3} by @math{5} by @math{100} 크기의 배열로 지정 됩니다. 여기서 첫번째 차원은 @math{3}개의 구성요소를 가지므로, @math{1}, @math{2}, @math{3} 세 개의 인덱스에 의해 표현되며, 마찬가지로 두번째 차원은 5개의 인덱스를, 마지막으로 세번째 차원은 100개의 인덱스를 갖습니다. 즉, 차원벡터의 각 구성요소는 각 차원이 갖는 인덱스의 길이를 의미합니다.   "

#. type: Plain text
#: R-intro.texi:1629
msgid "Other functions such as @code{matrix()} and @code{array()} are available for simpler and more natural looking assignments, as we shall see in @ref{The array() function}."
msgstr "이렇게 @code{dim}이라는 속성을 이용하는 방법 외에도 @code{matrix()}와 @code{array()}와 같은 함수를 사용하면 @ref{array() 함수}편의 예제들처럼  좀 더 간단하고 쉽게 배열을 지정할 수 있습니다. "

#. type: Plain text
#: R-intro.texi:1633
msgid "The values in the data vector give the values in the array in the same order as they would occur in FORTRAN, that is ``column major order,'' with the first subscript moving fastest and the last subscript slowest."
msgstr "배열을 구성하는 데이터 벡터의 구성요소의 값들은 FORTRAN 프로그램에서처럼 ``column major order'' 방법에 의해 나열 됩니다. 이 방법은 차원벡터의 첫번째 인덱스부터 순서대로 배열되기 시작해서 마지막 인덱스가 가장 나중에 사용되는 배열되는 방식 입니다. "

#. type: Plain text
#: R-intro.texi:1638
msgid "For example if the dimension vector for an array, say @code{a}, is @code{c(3,4,2)} then there are @eqn{3 \\times 4 \\times 2 = 24, 3 * 4 * 2 = 24} entries in @code{a} and the data vector holds them in the order @code{a[1,1,1], a[2,1,1], @dots{}, a[2,4,2], a[3,4,2]}."
msgstr "좀 더 구체적인 예를 들면, @code{a}라는 배열의 차원벡터가 @code{c(3,4,2)}이라고 가정합시다.이 배열 @code{a}에는 총 @eqn{3 \\times 4 \\times 2 = 24, 3 * 4 * 2 = 24} 개의 데이터 엔트리가 포함되어 있고, 이 데이터 벡터는 @code{a[1,1,1], a[2,1,1], @dots{}, a[2,4,2], a[3,4,2]}의 순서로 엔트리들을 배열 안에 나열하고 있습니다."

#. type: Plain text
#: R-intro.texi:1642
msgid "Arrays can be one-dimensional: such arrays are usually treated in the same way as vectors (including when printing), but the exceptions can cause confusion."
msgstr "1차원일 배열의 경우 (출력을 포함하여) 거의 벡터와 같은 방식으로 처리됩니다만, 몇 가지 예외가 있어서 사용에 주의가 필요합니다."

#. type: section
#: R-intro.texi:1644
#, no-wrap
msgid "Array indexing.  Subsections of an array"
msgstr "배열 인덱싱(array indexing)과 구성요소의 선택적 지정(subsections)"

#. type: cindex
#: R-intro.texi:1645
#, no-wrap
msgid "Indexing of and by arrays"
msgstr ""

#. type: Plain text
#: R-intro.texi:1650
msgid "Individual elements of an array may be referenced by giving the name of the array followed by the subscripts in square brackets, separated by commas."
msgstr "배열의 각 구성요소들은 배열 이름 바로 뒤에 대괄호([])사이에 컴마로 구분된 첨자(subscript)를 사용하여 선택할 수 있습니다. 이러한 선택을 좀 더 일반화하면, 한 배열의 첨자를 사용할 위치에 @emph{index vectors}(인덱스 벡터)의 시퀀스를 사용하면 해당 배열의 어떤 부분이라도 선택할 수 있습니다; 하지만 인덱스 벡터의 구성요소가 아무것도 선택되지 않으면 (즉, empty 상태), 해당 첨자가 가질 수 있는 모든 값이 범위로 선택 됩니다."

#. type: Plain text
#: R-intro.texi:1655
msgid "More generally, subsections of an array may be specified by giving a sequence of @emph{index vectors} in place of subscripts; however @emph{if any index position is given an empty index vector, then the full range of that subscript is taken}."
msgstr ""

#. type: Plain text
#: R-intro.texi:1659
msgid "Continuing the previous example, @code{a[2,,]} is a @eqn{4 \\times 2, 4 * 2} array with dimension vector @code{c(4,2)} and data vector containing the values"
msgstr "이해를 돕기 위해 앞의 예제의 @code{a}라는 벡터를 다시 사용하면, @code{a[2,,]}는 @code{c(4,2)}의 차원벡터를 갖는 @eqn{4 \\times 2, 4 * 2} 배열이며, 순서대로 다음의 값들을 포함하는 데이터 벡터이기도 합니다.이것은 원래 배열 @code{a}의 차원이 @c{c(3,4,2)}였으므로, 첫번째 첨자만 @math{2}가 고정되면, 나머지 차원에서는 모든 범위가 선택되기 때문입니다. 따라서 차원벡터의 길이에 맞추어 @math{4}행 @math{2}열을 가진 행렬처럼 출력된 것 입니다."

#. type: example
#: R-intro.texi:1663
#, no-wrap
msgid ""
"c(a[2,1,1], a[2,2,1], a[2,3,1], a[2,4,1],\n"
"  a[2,1,2], a[2,2,2], a[2,3,2], a[2,4,2])\n"
msgstr ""
"c(a[2,1,1], a[2,2,1], a[2,3,1], a[2,4,1],\n"
"  a[2,1,2], a[2,2,2], a[2,3,2], a[2,4,2])\n"

#. type: Plain text
#: R-intro.texi:1668
msgid "in that order.  @code{a[,,]} stands for the entire array, which is the same as omitting the subscripts entirely and using @code{a} alone."
msgstr "@code{a[,,]}는 배열 @code{a} 그 자체를 의미하는데, 이것은 첨자를 전혀 사용하지 않고 그냥 @code{a}만 사용한 것과 같습니다."

#. type: Plain text
#: R-intro.texi:1671
msgid "For any array, say @code{Z}, the dimension vector may be referenced explicitly as @code{dim(Z)} (on either side of an assignment)."
msgstr "어떤 배열이 주어지면, 예를 들어 @code{Z}라는 배열이 있다면, 이 배열의 차원벡터는 함수 @code{dim(Z)}를 사용하여 확인 가능합니다. "

#. type: Plain text
#: R-intro.texi:1677
msgid "Also, if an array name is given with just @emph{one subscript or index vector}, then the corresponding values of the data vector only are used; in this case the dimension vector is ignored.  This is not the case, however, if the single index is not a vector but itself an array, as we next discuss."
msgstr "또, 만약 배열의 이름 뒤에 @math{a[3]} 또는 @math{a[3:10]}과 같이 @emph{오직 한개의 첨자 또는 인덱스 벡터}가 사용되면, 이 첨자와 인덱스에 해당하는 데이터 엔트리로만 구성된 벡터가 선택 됩니다: 따라서, 이 경우에는 차원벡터가 무시됩니다. 하지만, 인덱스가 벡터가 아니라 배열로 지정될 수도 있으며, 여기에 대해서는 다음 부분에서 다루겠습니다. "

#. type: menuentry
#: R-intro.texi:1681
msgid "Index matrices::"
msgstr "인덱스 행렬(index matrices)::"

#. type: Plain text
#: R-intro.texi:1690
msgid "As well as an index vector in any subscript position, a matrix may be used with a single @emph{index matrix} in order either to assign a vector of quantities to an irregular collection of elements in the array, or to extract an irregular collection as a vector."
msgstr "배열의 첨자가 오는 위치에 인덱스 벡터 뿐 아니라, 행렬 형태인 @emph{index matrix}(인덱스 행렬)을 사용할 수 있으며, 배열 내 (같은 행이나 열이 아니라)여러 위치에 흩어져 있는 여러 개의 구성 요소들에 하나의 벡터 안에 든 여러 개의 새로운 값들을 동시에 입력하거나, 배열 내 여러 위치의 구성요소들을 하나의 벡터로 읽어내기 위해 사용합니다."

#. type: Plain text
#: R-intro.texi:1697
msgid "A matrix example makes the process clear.  In the case of a doubly indexed array, an index matrix may be given consisting of two columns and as many rows as desired.  The entries in the index matrix are the row and column indices for the doubly indexed array.  Suppose for example we have a @math{4} by @math{5} array @code{X} and we wish to do the following:"
msgstr "다음의 행렬을 사용한 예제를 통해 좀 더 자세히 설명하겠습니다. 이중(doubly) 인덱스를 사용하는 배열의 경우, 이 배열의 인덱스 행렬을 2개의 열과 필요한 만큼(데이터의 길이)의 행으로 구성됩니다. 이 인덱스 행렬의 엔트리들은 이중 인덱스 된 배열의 행과 열의 인덱스에 해당합니다. 예를 들어, 크기가 @math{4}행 @math{5}열인 배열 @code{X}가 있다고 가정하고, @code{X}에 대해서 다음의 연산을 수행한다고 합시다:"

#. type: itemize
#: R-intro.texi:1702
msgid "Extract elements @code{X[1,3]}, @code{X[2,2]} and @code{X[3,1]} as a vector structure, and"
msgstr "@code{X[1,3]}, @code{X[2,2]} 그리고 @code{X[3,1]}의 위치에 해당하는 구성요소들로만 구성된 벡터를 만듭니다."

#. type: itemize
#: R-intro.texi:1704
msgid "Replace these entries in the array @code{X} by zeroes."
msgstr "그리고, 이렇게 따로 추출한 @code{X}의 엔트리를 모두 @math{0}으로 대체 합니다. "

#. type: Plain text
#: R-intro.texi:1707
msgid "In this case we need a @math{3} by @math{2} subscript array, as in the following example."
msgstr "위의 작업을 수행하기 위해서는 아래 예제와 같이 첨자의 위치에 사용될 @math{3} 행 @math{2} 열의 첨자 배열이 필요합니다. "

#. type: example
#: R-intro.texi:1732
#, no-wrap
msgid ""
"> x <- array(1:20, dim=c(4,5))   # @r{Generate a 4 by 5 array.}\n"
"> x\n"
"     [,1] [,2] [,3] [,4] [,5]\n"
"[1,]    1    5    9   13   17\n"
"[2,]    2    6   10   14   18\n"
"[3,]    3    7   11   15   19\n"
"[4,]    4    8   12   16   20\n"
"> i <- array(c(1:3,3:1), dim=c(3,2))\n"
"> i                             # @r{@code{i} is a 3 by 2 index array.}\n"
"     [,1] [,2]\n"
"[1,]    1    3\n"
"[2,]    2    2\n"
"[3,]    3    1\n"
"> x[i]                          # @r{Extract those elements}\n"
"[1] 9 6 3\n"
"> x[i] <- 0                     # @r{Replace those elements by zeros.}\n"
"> x\n"
"     [,1] [,2] [,3] [,4] [,5]\n"
"[1,]    1    5    0   13   17\n"
"[2,]    2    0   10   14   18\n"
"[3,]    0    7   11   15   19\n"
"[4,]    4    8   12   16   20\n"
">\n"
msgstr ""
"> x <- array(1:20, dim=c(4,5))   # @r{Generate a 4 by 5 array.}\n"
"> x\n"
"     [,1] [,2] [,3] [,4] [,5]\n"
"[1,]    1    5    9   13   17\n"
"[2,]    2    6   10   14   18\n"
"[3,]    3    7   11   15   19\n"
"[4,]    4    8   12   16   20\n"
"> i <- array(c(1:3,3:1), dim=c(3,2))\n"
"> i                             # @r{@code{i} is a 3 by 2 index array.}\n"
"     [,1] [,2]\n"
"[1,]    1    3\n"
"[2,]    2    2\n"
"[3,]    3    1\n"
"> x[i]                          # @r{Extract those elements}\n"
"[1] 9 6 3\n"
"> x[i] <- 0                     # @r{Replace those elements by zeros.}\n"
"> x\n"
"     [,1] [,2] [,3] [,4] [,5]\n"
"[1,]    1    5    0   13   17\n"
"[2,]    2    0   10   14   18\n"
"[3,]    0    7   11   15   19\n"
"[4,]    4    8   12   16   20\n"
">\n"

#. type: Plain text
#: R-intro.texi:1738
msgid "Negative indices are not allowed in index matrices.  @code{NA} and zero values are allowed: rows in the index matrix containing a zero are ignored, and rows containing an @code{NA} produce an @code{NA} in the result."
msgstr "인덱스 행렬의 구성요소는 음의 값을 가질 수 없으나, @code{NA}와 @math{0}은 사용할 수 있습니다.만약, 인덱스 행렬에 @math{0}을 포함한 행이 있다면, 해당 행은 무시될 것입니다. 이와 유사하게, @code{NA}를 포함하는 행이 있다면, 해당 행은 모두 @code{NA}로 출력될 것 입니다."

#. type: Plain text
#: R-intro.texi:1745
msgid "As a less trivial example, suppose we wish to generate an (unreduced)  design matrix for a block design defined by factors @code{blocks} (@code{b} levels) and @code{varieties} (@code{v} levels).  Further suppose there are @code{n} plots in the experiment.  We could proceed as follows:"
msgstr "중요한 예제는 아니지만, @code{b} 개의 수준을 가진 @code{blocks}이라는 요인과 @code{v} 개의 수준을 가지고 있는 @code{varieties} 변수로 정의되는 블록 디자인(block design)에 사용될 (비환원) 디자인 매트릭스(design matrix)를 생성한다고 가정합시다. 더 나아가, 이 실험은 @code{n}개의 구획(plot)을 포함한고 가정합시다. 이 실험의 디자인 매트릭스는 아래와 같이 생성합니다:"

#. type: example
#: R-intro.texi:1754
#, no-wrap
msgid ""
"> Xb <- matrix(0, n, b)\n"
"> Xv <- matrix(0, n, v)\n"
"> ib <- cbind(1:n, blocks)\n"
"> iv <- cbind(1:n, varieties)\n"
"> Xb[ib] <- 1\n"
"> Xv[iv] <- 1\n"
"> X <- cbind(Xb, Xv)\n"
msgstr ""
"> Xb <- matrix(0, n, b)\n"
"> Xv <- matrix(0, n, v)\n"
"> ib <- cbind(1:n, blocks)\n"
"> iv <- cbind(1:n, varieties)\n"
"> Xb[ib] <- 1\n"
"> Xv[iv] <- 1\n"
"> X <- cbind(Xb, Xv)\n"

#. type: Plain text
#: R-intro.texi:1757
msgid "To construct the incidence matrix, @code{N} say, we could use"
msgstr "만약 @code{N}이라는 인시던스 행렬(incidence matrix)를 생성하고자 한다면, 아래와 같이 할 수 있습니다."

#. type: example
#: R-intro.texi:1760
#, no-wrap
msgid "> N <- crossprod(Xb, Xv)\n"
msgstr "> N <- crossprod(Xb, Xv)\n"

#. type: findex
#: R-intro.texi:1761
#: R-intro.texi:2050
#, no-wrap
msgid "crossprod"
msgstr ""

#. type: Plain text
#: R-intro.texi:1765
msgid "However a simpler direct way of producing this matrix is to use @code{table()}:"
msgstr "그러나, 다음과 같이 @code{table()}함수를 이용하면 좀 더 쉽게 위에서 얻은 것과 동일한 행렬을 얻을 수 있습니다."

#. type: findex
#: R-intro.texi:1765
#: R-intro.texi:2329
#, no-wrap
msgid "table"
msgstr "table"

#. type: example
#: R-intro.texi:1769
#, no-wrap
msgid "> N <- table(blocks, varieties)\n"
msgstr "> N <- table(blocks, varieties)\n"

#. type: Plain text
#: R-intro.texi:1774
msgid "Index matrices must be numerical: any other form of matrix (e.g.@ a logical or character matrix) supplied as a matrix is treated as an indexing vector."
msgstr "인덱스 행렬은 반드시 수치형으로 구성되어야 합니다: 만약, 논리형이나 문자형 같이 다른 형식으로 된 행렬이 입력되면 인덱스 벡터로 간주 됩니다."

#. type: section
#: R-intro.texi:1776
#, no-wrap
msgid "The @code{array()} function"
msgstr "@code{array()} 함수"

#. type: findex
#: R-intro.texi:1777
#, no-wrap
msgid "array"
msgstr "array"

#. type: Plain text
#: R-intro.texi:1782
msgid "As well as giving a vector structure a @code{dim} attribute, arrays can be constructed from vectors by the @code{array} function, which has the form"
msgstr "배열은 벡터에 @code{dim}이라는 속성을 부여하여 생성하는 방법 외에도, 아래와 같이 @code{array} 함수를 이용하여 생성할 수도 있습니다."

#. type: example
#: R-intro.texi:1785
#, no-wrap
msgid "> Z <- array(@var{data_vector}, @var{dim_vector})\n"
msgstr "> Z <- array(@var{data_vector}, @var{dim_vector})\n"

#. type: Plain text
#: R-intro.texi:1789
msgid "For example, if the vector @code{h} contains 24 or fewer, numbers then the command"
msgstr "예를 들어, 벡터 @code{h}가 24개 또는 그 보다 적은 수의 숫자로 구성되어 있다면, 아래 명령문은 @math{3} 행 @math{4} 열로 구성된 @math{2}개의 3차원 배열을 @code{Z}로 지정합니다. "

#. type: example
#: R-intro.texi:1792
#, no-wrap
msgid "> Z <- array(h, dim=c(3,4,2))\n"
msgstr "> Z <- array(h, dim=c(3,4,2))\n"

#. type: Plain text
#: R-intro.texi:1797
msgid "would use @code{h} to set up @math{3} by @math{4} by @math{2} array in @code{Z}.  If the size of @code{h} is exactly 24 the result is the same as"
msgstr "특히  @code{h}가 정확히 24개의 구성요소를 가지고 있다면, 위 명령문의 실행 결과는 아래 명령문의 실행 결과와 같습니다."

#. type: example
#: R-intro.texi:1800
#, no-wrap
msgid "> Z <- h ; dim(Z) <- c(3,4,2)\n"
msgstr "> Z <- h ; dim(Z) <- c(3,4,2)\n"

#. type: Plain text
#: R-intro.texi:1807
msgid "However if @code{h} is shorter than 24, its values are recycled from the beginning again to make it up to size 24 (@pxref{The recycling rule})  but @code{dim(h) <- c(3,4,2)} would signal an error about mismatching length.  As an extreme but common example"
msgstr "하지만, 벡터 @code{h}가 24 개 보다 적은 수의 구성요소를 가지면, @code{array} 함수 사용시 24로 지정된 배열의 크기를 맞추기위해 벡터 @code{h}의 첫번째 원소부터 재사용하게 됩니다.이런 재활용 규칙(recycling rule)에 대해서는 @pxref{The recycling rule}를 살펴보시길 바랍니다.그러나, @code{dim(h) <- c(3,4,2)}와 같이 @code{dim} 속성을 변경하고자 할 때는 지정된 길이가 다르기 때문에 에러 메세지가 나타날 것 입니다.아래는 다소 극단적이긴 하지만, 흔히 볼 수 있는 예제 입니다."

#. type: example
#: R-intro.texi:1810
#, no-wrap
msgid "> Z <- array(0, c(3,4,2))\n"
msgstr "> Z <- array(0, c(3,4,2))\n"

#. type: Plain text
#: R-intro.texi:1814
msgid "makes @code{Z} an array of all zeros."
msgstr ""

#. type: Plain text
#: R-intro.texi:1819
msgid "At this point @code{dim(Z)} stands for the dimension vector @code{c(3,4,2)}, and @code{Z[1:24]} stands for the data vector as it was in @code{h}, and @code{Z[]} with an empty subscript or @code{Z} with no subscript stands for the entire array as an array."
msgstr "여기에서 @code{dim(Z)}은 차원벡터 @code{c(3,4,2)}를 의미하며, @code{Z[1:24]}는 벡터 @code{h}와 동일한 데이터 벡터를 의미 합니다. 또, @code{Z[]}와 같이 아무런 첨자를 갖지 않는 경우나 단순히 @code{Z}라고 배열 이름만 사용하는 것은 @code{Z}의 모든 구성요소로 이루어진 배열 그 자체를 의미 합니다."

#. type: Plain text
#: R-intro.texi:1825
msgid "Arrays may be used in arithmetic expressions and the result is an array formed by element-by-element operations on the data vector.  The @code{dim} attributes of operands generally need to be the same, and this becomes the dimension vector of the result.  So if @code{A}, @code{B} and @code{C} are all similar arrays, then"
msgstr "배열에 산술연산을 적용하면 기본적으로 배열을 구성하는 데이터 벡터안에 든 원소 단위별로 연산이 이루어집니다.이때 연산에 사용되는 각 배열(피연산자, operand)의 @code{dim} 속성이 모두 일치해야만, 원래와 동일한 차원벡터를 가진 결과물을 얻을 수 있습니다.따라서 만약 @code{A}, @code{B}, @code{C}가 모든 같은 @code{dim} 속성을 가진 배열이면, 아래와 같이 데이터 벡터의 원소 단위별로 연산을 수행한 결과가 같은 차원벡터를 가진 배열 @code{D}로  저장 됩니다. "

#. type: example
#: R-intro.texi:1828
#, no-wrap
msgid "> D <- 2*A*B + C + 1\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1835
msgid "makes @code{D} a similar array with its data vector being the result of the given element-by-element operations.  However the precise rule concerning mixed array and vector calculations has to be considered a little more carefully."
msgstr "하지만 배열과 벡터를 함께 사용하는 연산을 정확히 사용하기 위해서는 좀 더 주의해야할 부분이 많습니다."

#. type: node
#: R-intro.texi:1838
#: R-intro.texi:1840
#, no-wrap
msgid "The recycling rule"
msgstr ""

#. type: subsection
#: R-intro.texi:1841
#, no-wrap
msgid "Mixed vector and array arithmetic.  The recycling rule"
msgstr "벡터와 배열을 함께 이용하여 연산하는 방법 그리고 재활용 규칙"

#. type: Plain text
#: R-intro.texi:1848
msgid "The precise rule affecting element by element mixed calculations with vectors and arrays is somewhat quirky and hard to find in the references.  From experience we have found the following to be a reliable guide."
msgstr "벡터와 배열을 동시에 사용해서 원소 단위별로 연산을 수행할 때 적용되는 정확한 규칙을 설명하는 것은 꽤 까다롭고 어려운 편 입니다. 하지만 지금까지의 경험을 바탕으로 한 다음의 내용은 꽤 쓸만한 길잡이가 될 것 입니다."

#. type: itemize
#: R-intro.texi:1852
msgid "The expression is scanned from left to right."
msgstr "표현식에 사용된 수식은 왼쪽부터 오른쪽으로 입력 됩니다."

#. type: itemize
#: R-intro.texi:1855
msgid "Any short vector operands are extended by recycling their values until they match the size of any other operands."
msgstr "연산에 사용되는 벡터들의 길이가 서로 다른 경우, 길이가 짧은 벡터의 원소를 재활용하여 길이가 긴 벡터의 길이를 맞추게 됩니다."

#. type: itemize
#: R-intro.texi:1858
msgid "As long as short vectors and arrays @emph{only} are encountered, the arrays must all have the same @code{dim} attribute or an error results."
msgstr "비교적 길이가 짧은 벡터와 배열들만 연산에 사용될 경우에는, 모든 배열이 같은 @code{dim} 속성을 갖지 않으면 에러가 발생합니다."

#. type: itemize
#: R-intro.texi:1860
msgid "Any vector operand longer than a matrix or array operand generates an error."
msgstr "피연산자 벡터의 길이가 다른 피연산자 행렬이나 배열의 길이 보다 긴 경우에도 에러가 발생합니다. "

#. type: itemize
#: R-intro.texi:1864
msgid "If array structures are present and no error or coercion to vector has been precipitated, the result is an array structure with the common @code{dim} attribute of its array operands."
msgstr "연산 중 배열의 구조가 그대로 유지되고, 에러나 벡터로의 강제 전환 같은 일이 일어나지 않는다면, 연산의 결과물은 피연산자 배열들이 공통으로 갖는 @code{dim} 속성을 그대로 유지하는 배열이 될 것 입니다."

#. type: cindex
#: R-intro.texi:1868
#, no-wrap
msgid "Outer products of arrays"
msgstr "배열의 외적(outer products)"

#. type: Plain text
#: R-intro.texi:1877
msgid "An important operation on arrays is the @emph{outer product}.  If @code{a} and @code{b} are two numeric arrays, their outer product is an array whose dimension vector is obtained by concatenating their two dimension vectors (order is important), and whose data vector is got by forming all possible products of elements of the data vector of @code{a} with those of @code{b}.  The outer product is formed by the special operator @code{%o%}:"
msgstr "배열에 적용되는 연산 중 중요한 것 중 하나는 @code{%o%}로 정의된 연산자를 사용하는 @emph{외적 (outer product)}일 것 입니다. 예를 들어, @code{a}와 @code{b}이라는 두개의 수치형 배열이 존재할 경우, 이 두 배열에 외적(outer product)은 이 두 배열의 차원을 모두 포함한 @code{c(dim(a), dim(b))}를 차원 벡터로 갖고, 배열 @code{a}의 구성요소와 배열 @code{b}의 구성요소의 모든 가능한 조합을 곱한 값을 데이터 벡터로 갖는 배열 입니다."

#. type: findex
#: R-intro.texi:1877
#, no-wrap
msgid "%o%"
msgstr "%o%"

#. type: example
#: R-intro.texi:1881
#, no-wrap
msgid "> ab <- a %o% b\n"
msgstr "> ab <- a %o% b\n"

#. type: example
#: R-intro.texi:1887
#, no-wrap
msgid "> ab <- outer(a, b, \"*\")\n"
msgstr "> ab <- outer(a, b, \"*\")\n"

#. type: findex
#: R-intro.texi:1888
#, no-wrap
msgid "outer"
msgstr "outer"

#. type: Plain text
#: R-intro.texi:1896
msgid "The multiplication function can be replaced by an arbitrary function of two variables.  For example if we wished to evaluate the function @eqn{f(x; y) = \\cos(y)/(1 + x^2), f(x; y) = cos(y)/(1 + x^2)} over a regular grid of values with @math{x}- and @math{y}-coordinates defined by the @R{} vectors @code{x} and @code{y} respectively, we could proceed as follows:"
msgstr "이 외적(outer product)에서의 곱하기 연산은 두 개의 변수를 대상으로 수행하는 다른 어떤 함수로도 대체 가능합니다.예를 들어, @R{}에서  두 개의 벡터 @code{x}- 와 @code{y}- 를 각각의 축으로 정의한 좌표 평면상 존재하는  모든 점들에 대해 @eqn{f(x;y)=\\cos(y)/(1 + x^2), f(x; y) = cos(y)/(1 + x^2)}과 같은 함수를 적용하는 방법은 다음과 같습니다. "

#. type: example
#: R-intro.texi:1900
#, no-wrap
msgid ""
"> f <- function(x, y) cos(y)/(1 + x^2)\n"
"> z <- outer(x, y, f)\n"
msgstr ""
"> f <- function(x, y) cos(y)/(1 + x^2)\n"
"> z <- outer(x, y, f)\n"

#. type: Plain text
#: R-intro.texi:1907
msgid "In particular the outer product of two ordinary vectors is a doubly subscripted array (that is a matrix, of rank at most 1).  Notice that the outer product operator is of course non-commutative.  Defining your own @R{} functions will be considered further in @ref{Writing your own functions}."
msgstr "두 개의 벡터를 사용해서 외적을 할 때 주의할 점은, 결과물이 이중 첨자(doubly subscriped) 배열이라는 점입니다. (이것은 행렬이기도 합니다.) 외적 연산에 대해서는 교환법칙이 성립하지 않는다(non-commutative)는 점을 주의하시기 바랍니다. 사용자 정의 @R{} 함수를 만드는 법에 대해서는 @ref{Writing your own functions (사용자 정의함수 작성하기)}에서 더 다루게 될 것입니다."

#. type: subsubheading
#: R-intro.texi:1908
#, no-wrap
msgid "An example: Determinants of 2 by 2 single-digit matrices"
msgstr "예제: 2행 2열인 행렬의 행렬식 (determinant) 계산하기"

#. type: Plain text
#: R-intro.texi:1914
msgid "As an artificial but cute example, consider the determinants of @math{2} by @math{2} matrices @math{[a, b; c, d]} where each entry is a non-negative integer in the range @math{0, 1, @dots{}, 9}, that is a digit."
msgstr "다소 작위적이긴 하지만, 이해하기 쉬운 예를 하나 들어봅시다.먼저, @math{[a, b; c, d]}의 형태를 갖는 @math{2} 행 @math{2} 열의 행렬을 가정하고, 이 행렬의 각 구성요소는 음수가 아닌 (nonegative) @math{0, 1, @dots{}, 9} 범위의 한자리의 정수값이라고 합시다."

#. type: Plain text
#: R-intro.texi:1920
msgid "The problem is to find the determinants, @math{ad - bc}, of all possible matrices of this form and represent the frequency with which each value occurs as a @emph{high density} plot.  This amounts to finding the probability distribution of the determinant if each digit is chosen independently and uniformly at random."
msgstr "여기서 우리의 과제는 모든 존재 가능한 행렬들에 대해 @math{ad - bc}으로 계산되는 행렬식(determinant)을 계산해서, 행렬식이 갖는 모든 값의 빈도를  @emph{하이 확률 빈도 (high density)} 플롯으로 그리는 것입니다. 여기서 만약 각 정수들(행렬의 구성요소)의 선택은 균등한 확률(uniformly at random)로 독립적(independently)으로 이루어졌다고 가정하면, 이 작업은 행렬식(determinant)의 확률 분포를 찾는 것이 됩니다. "

#. type: Plain text
#: R-intro.texi:1922
msgid "A neat way of doing this uses the @code{outer()} function twice:"
msgstr "이 복잡한 과제를 간단히 수행하는 방법 중 하나는 아래와 같이 @code{outer()} 함수를 두번 사용하는 것 입니다:"

#. type: example
#: R-intro.texi:1928
#, no-wrap
msgid ""
"> d <- outer(0:9, 0:9)\n"
"> fr <- table(outer(d, d, \"-\"))\n"
"> plot(as.numeric(names(fr)), fr, type=\"h\",\n"
"       xlab=\"Determinant\", ylab=\"Frequency\")\n"
msgstr ""
"> d <- outer(0:9, 0:9)\n"
"> fr <- table(outer(d, d, \"-\"))\n"
"> plot(as.numeric(names(fr)), fr, type=\"h\",\n"
"       xlab=\"Determinant\", ylab=\"Frequency\")\n"

#. type: Plain text
#: R-intro.texi:1935
msgid "Notice the coercion of the @code{names} attribute of the frequency table to numeric in order to recover the range of the determinant values.  The ``obvious'' way of doing this problem with @code{for} loops, to be discussed in @ref{Loops and conditional execution}, is so inefficient as to be impractical."
msgstr "여기서 행렬식이 갖는 모든 값의 도수분포표인 @code{fr}의 @code{names} 속성이 행렬식이 갖는 값들의 범위를 나타내기 위해 수치형으로 강제형변환 되었다는 점을 주의깊게 살펴보시기 바랍니다. 이러한 수치로의 전환하는 가장 \"쉬운\" 방법은 아마도 @ref{Loops and conditional execution (반복 및 조건부 실행)} 편에서 다루게 될@code{for}라는 반복문을 이용하는 것인데, 이 방법은 매우 비효율적이라 실용적이지 못합니다. "

#. type: Plain text
#: R-intro.texi:1938
msgid "It is also perhaps surprising that about 1 in 20 such matrices is singular."
msgstr "아마도 전환하게 될 행렬이 20개 중의 하나 꼴로 특이(singular)행렬이라는 점 역시 놀라울 것 같네요. "

#. type: Plain text
#: R-intro.texi:1944
msgid "The function @code{aperm(a, perm)}"
msgstr "함수 @code{aperm(a, perm)}"

#. type: findex
#: R-intro.texi:1944
#, no-wrap
msgid "aperm"
msgstr "aperm"

#. type: Plain text
#: R-intro.texi:1953
msgid "may be used to permute an array, @code{a}.  The argument @code{perm} must be a permutation of the integers @math{@{1, @dots{}, k@}}, where @math{k} is the number of subscripts in @code{a}.  The result of the function is an array of the same size as @code{a} but with old dimension given by @code{perm[j]} becoming the new @code{j}-th dimension.  The easiest way to think of this operation is as a generalization of transposition for matrices.  Indeed if @code{A} is a matrix, (that is, a doubly subscripted array) then @code{B} given by"
msgstr "배열 @code{a}를 차원 별로 순서를 재배치하는 (permutating)하는 함수 입니다. @code{perm} 입력 인자(argument,함수의 parameter와 거의 비슷한 의미)는 반드시 @math{@{1, @dots{}, k@}} 범위 내의 정수들의 조합이어야 합니다. 여기서 @math{k}는 배열 @code{a}이 갖는 첨자들의 개수입니다. 따라서, 이 함수를 실행한 결과는 배열 @code{a}와 같은 크기를 갖지만, 원래의 배열 @code{a}의 차원을 사용해서 지정한 @code{perm[j]}의 순서대로 @code{j}의 차원을 갖는 새로운 재배치된 배열입니다.이 함수가 수행하는 연산이 어떤 것인지를 좀 더 쉽게 이해하기 위해 행렬의 전치(transpose)가 좀 더 일반화된 것이라고 생각하시면 도움이 될 것입니다. 즉, @code{A}라는 행렬(행렬은 결국 이중 첨자로 된 (doubly subscripted) 배열이도 합니다.)이 주어지면, 아래의 연산을 수행한 결과인 @code{B}는 @code{A}를 전치한 행렬입니다. "

#. type: example
#: R-intro.texi:1956
#, no-wrap
msgid "> B <- aperm(A, c(2,1))\n"
msgstr "> B <- aperm(A, c(2,1))\n"

#. type: Plain text
#: R-intro.texi:1961
msgid "is just the transpose of @code{A}.  For this special case a simpler function @code{t()}"
msgstr "이 경우의 연산은 좀 더 간단한 함수인 @code{t()}를 사용한 것과 같습니다. "

#. type: findex
#: R-intro.texi:1961
#, no-wrap
msgid "t"
msgstr "t"

#. type: Plain text
#: R-intro.texi:1963
msgid "is available, so we could have used @code{B <- t(A)}."
msgstr "따라서, @code{B <- t(A)}를 사용하면 동일한 결과를 얻을 수 있습니다. "

#. type: tex
#: R-intro.texi:1971
#, no-wrap
msgid "$@strong{x}^T @strong{x}$%\n"
msgstr "$@strong{x}^T @strong{x}$%\n"

#. type: tex
#: R-intro.texi:1976
#, no-wrap
msgid "$@strong{x}@strong{x}^T$%\n"
msgstr "@strong{x}@strong{x}^T$%\n"

#. type: macro
#: R-intro.texi:1983
msgid "x'x"
msgstr "x'x"

#. type: macro
#: R-intro.texi:1986
msgid "x x'"
msgstr "x x'"

#. type: Plain text
#: R-intro.texi:1995
msgid "As noted above, a matrix is just an array with two subscripts.  However it is such an important special case it needs a separate discussion.  @R{} contains many operators and functions that are available only for matrices.  For example @code{t(X)} is the matrix transpose function, as noted above.  The functions @code{nrow(A)} and @code{ncol(A)} give the number of rows and columns in the matrix @code{A} respectively."
msgstr "위에서 살짝 언급했듯이, 행렬은 이중 첨자를 사용하는 배열입니다. 하지만, 행렬이라는 것은 배열 섹션과 분리해서 따로 설명해야할만큼 중요한 개념입니다. @R{}은 행렬에 특화된 다양한 연산기능과 함수들을 제공합니다.몇가지 예를들면, 위에서 설명했던 @code{t(X)}는 행렬을 전치하는데 사용되는 함수이며, @code{nrow(A)}와 @code{ncol(A)}은 각각 행렬 @code{A}의 행과 열의 개수를 알려주는 함수입니다."

#. type: findex
#: R-intro.texi:1995
#, no-wrap
msgid "nrow"
msgstr "nrow"

#. type: findex
#: R-intro.texi:1996
#, no-wrap
msgid "ncol"
msgstr "ncol"

#. type: node
#: R-intro.texi:2004
#: R-intro.texi:2006
#: R-intro.texi:2066
#, no-wrap
msgid "Multiplication"
msgstr ""

#. type: node
#: R-intro.texi:2004
#: R-intro.texi:2006
#: R-intro.texi:2066
#: R-intro.texi:2067
#: R-intro.texi:2111
#, no-wrap
msgid "Linear equations and inversion"
msgstr "선형방정식과 역행렬"

#. type: node
#: R-intro.texi:2004
#: R-intro.texi:2066
#: R-intro.texi:2111
#: R-intro.texi:2112
#: R-intro.texi:2113
#: R-intro.texi:2153
#, no-wrap
msgid "Eigenvalues and eigenvectors"
msgstr "고유값과 고유벡터"

#. type: node
#: R-intro.texi:2004
#: R-intro.texi:2111
#: R-intro.texi:2153
#: R-intro.texi:2154
#: R-intro.texi:2199
#, no-wrap
msgid "Singular value decomposition and determinants"
msgstr "특이값 분해 및 행렬식"

#. type: subsection
#: R-intro.texi:2004
#: R-intro.texi:2153
#: R-intro.texi:2199
#: R-intro.texi:2200
#, no-wrap
msgid "Least squares fitting and the QR decomposition"
msgstr "최소제곱법과 QR 분해법"

#. type: cindex
#: R-intro.texi:2007
#: R-intro.texi:2009
#, no-wrap
msgid "Matrix multiplication"
msgstr "행렬의 곱셈"

#. type: Plain text
#: R-intro.texi:2011
msgid "The operator @code{%*%} is used for matrix multiplication."
msgstr ""

#. type: findex
#: R-intro.texi:2011
#, no-wrap
msgid "%*%"
msgstr ""

#. type: Plain text
#: R-intro.texi:2018
msgid "An @math{n} by @math{1} or @math{1} by @math{n} matrix may of course be used as an @math{n}-vector if in the context such is appropriate.  Conversely, vectors which occur in matrix multiplication expressions are automatically promoted either to row or column vectors, whichever is multiplicatively coherent, if possible, (although this is not always unambiguously possible, as we see later)."
msgstr "보통은 @math{n}행  @math{1}열의 행렬이나 @math{1}행 @math{n}열의 행렬은 상황에 따라 적절히 @math{n}-벡터로 사용될 수 있습니다. 하지만, 행렬의 곱셈식에서 사용되는 벡터는 곱셈을 수행하기 적합한 조건을 갖추기위해 (행렬의 곱셈을 수행하기 위해서는 앞 행렬의 행의 길이가 뒷행령의 열의 길이가 같아야 합니다.) 행벡터나 열백터로 자동적으로 변환됩니다. (그러나, 나중에 보게 되겠지만, 이러한 행이나 열 벡터로의 변환이 항상 가능한 것은 아닙니다.)"

#. type: Plain text
#: R-intro.texi:2021
msgid "If, for example, @code{A} and @code{B} are square matrices of the same size, then"
msgstr "만약, @code{A}와 @code{B} 모두 정방(square)행렬이라면, 다음의 식을 사용해서 원소단위별 곱셈을 수행할 수 있습니다."

#. type: example
#: R-intro.texi:2024
#, no-wrap
msgid "> A * B\n"
msgstr "> A * B\n"

#. type: Plain text
#: R-intro.texi:2028
msgid "is the matrix of element by element products and"
msgstr "하지만, 아래의 표현은 원소단위별 곱셈이 아닌 행렬의 곱셈이라는 것을 구분하셔야 합니다."

#. type: example
#: R-intro.texi:2031
#, no-wrap
msgid "> A %*% B\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2035
msgid "is the matrix product.  If @code{x} is a vector, then"
msgstr "만약, @code{x}가 벡터라면 아래의 표현은 이차식(quadratic form)을 나타냅니다."

#. type: example
#: R-intro.texi:2038
#, no-wrap
msgid "> x %*% A %*% x\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2049
msgid "is a quadratic form.@footnote{Note that @code{x %*% x} is ambiguous, as it could mean either @xTx{} or @xxT{}, where @eqn{@strong{x},x} is the column form.  In such cases the smaller matrix seems implicitly to be the interpretation adopted, so the scalar @xTx{} is in this case the result.  The matrix @xxT{} may be calculated either by @code{cbind(x)  %*% x} or @code{x %*% rbind(x)} since the result of @code{rbind()} or @code{cbind()} is always a matrix.  However, the best way to compute @xTx{} or @xxT{} is @code{crossprod(x)} or @code{x %o% x} respectively.}"
msgstr "@footnote{@code{x %*% x}는 올바른 식이라고 보기 어려운데, 이는 사용자가 수행하고자 하는 연산이 @xTx{} 인지 @xxT{}인지 분명하지 않기 때문입니다. 여기에서 @eqn{@strong{x},x}는 열벡터 입니다.이 경우, 더 작은 크기의 행렬을 선호하는 특성 때문에 스칼라 값(즉, 한개의 숫자)인  @xTx{}을 결과로 출력합니다.@xxT{}의 행렬연산을 수행하고 싶다면 @code{cbind(x) %*% x} 또는 @code{x %*% rbind(x)}을 사용해야 하는데, @code{rbind()} 이나 @code{cbind()}을 사용한 결과가 항상 행렬이기 때문입니다.하지만, 아무래도 @xTx{}이나 @xxT{}을 계산하는 가장 좋은 방법은 각각의 경우 함수 @code{crossprod(x)}와 @code{x %o% x}를 사용하는 것입니다.}"

#. type: Plain text
#: R-intro.texi:2055
msgid "The function @code{crossprod()} forms ``crossproducts'', meaning that @code{crossprod(X, y)} is the same as @code{t(X) %*% y} but the operation is more efficient.  If the second argument to @code{crossprod()} is omitted it is taken to be the same as the first."
msgstr "함수 @code{crossprod()}는 ``외적, 크로스프로덕트 (crossproduct)''라고하며, 연산을 위해 @code{corssprod(X, y)}의 형태로 입력하면, 좀 더 효율적인 방법으로 @code{t(X) %*% y}와 같은 연산을 수행합니다.만약 함수 @code{crossprod()}에 두번째가 인자가 생략되어 있다면, 첫번째 인자를 두 번 사용하여 연산을 수행하게 됩니다."

#. type: findex
#: R-intro.texi:2056
#, no-wrap
msgid "diag"
msgstr ""

#. type: Plain text
#: R-intro.texi:2065
msgid "The meaning of @code{diag()} depends on its argument.  @code{diag(v)}, where @code{v} is a vector, gives a diagonal matrix with elements of the vector as the diagonal entries.  On the other hand @code{diag(M)}, where @code{M} is a matrix, gives the vector of main diagonal entries of @code{M}.  This is the same convention as that used for @code{diag()} in @sc{Matlab}.  Also, somewhat confusingly, if @code{k} is a single numeric value then @code{diag(k)} is the @code{k} by @code{k} identity matrix!"
msgstr "함수 @code{diag()}는 입력받는 인자에 따라 다른 결과를 출력합니다. 만약 @code{diag(v)}와 같이 @code{v}라는 벡터 인자가 입력되면, 벡터 @code{v}의 각 구성요소를 대각원소로 갖는 대각행렬을 생성합니다.반면에 @code{diag(M)}과 같이 @code{M}라는 행렬 인자가 입력되면, 행렬 @code{M}이 가지는 대각원소들을 벡터의 형식으로 출력하게 됩니다.이것은 @sc{Matlab}에서 사용하는 함수 @code{diag()}과 비슷하게 작동한다고 보시면 됩니다.다소 혼란스러울 수도 있겠지만, @code{diag(k)}와 같이 @code{k}라는 스칼라 인자가 입력되면, @code{k}행 @code{k}열을 가지는 단위행렬(identity matrix)이 생성된다는 점도 기억하시기 바랍니다."

#. type: cindex
#: R-intro.texi:2069
#, no-wrap
msgid "Linear equations"
msgstr ""

#. type: findex
#: R-intro.texi:2070
#, no-wrap
msgid "solve"
msgstr ""

#. type: Plain text
#: R-intro.texi:2073
msgid "Solving linear equations is the inverse of matrix multiplication.  When after"
msgstr "선형방정식을 푼다는 것의 의미는 역행렬을 곱하는 것과 같습니다. 아래의 표현식이 주어지고, 행렬 @code{A}와 벡터 @code{b}만 알고 있는 경우, 벡터 @code{x}가 선형방정식의 해가 됩니다."

#. type: example
#: R-intro.texi:2076
#, no-wrap
msgid "> b <- A %*% x\n"
msgstr "> b <- A %*% x\n"

#. type: Plain text
#: R-intro.texi:2081
msgid "only @code{A} and @code{b} are given, the vector @code{x} is the solution of that linear equation system.  In @R{},"
msgstr "@R{}에서는 아래와 같은 방법으로 선형방정식을 풀어서, @code{x}를 해로 구합니다. (약간의 정확도의 차이가 발생하는 경우도 있습니다.)"

#. type: example
#: R-intro.texi:2084
#, no-wrap
msgid "> solve(A,b)\n"
msgstr "> solve(A,b)\n"

#. type: Plain text
#: R-intro.texi:2093
msgid "solves the system, returning @code{x} (up to some accuracy loss).  Note that in linear algebra, formally @eqn{@strong{x} = @strong{A}^{-1} @strong{b}, @code{x = A^@{-1@} %*% b}} where @eqn{@strong{A}^{-1}, @code{A^@{-1@}}} denotes the @emph{inverse} of @eqn{@strong{A},@code{A}}, which can be computed by"
msgstr "선형방정식을 좀 더 수학적으로 표현하면 @eqn{@strong{x} = @strong{A}^{-1} @strong{b}, @code{x = A^@{-1@} %*% b}} 입니다. 여기에서 @eqn{@strong{A}^{-1}, @code{A^@{-1@}}}은 행렬 @eqn{@strong{A},@code{A}}의 역행렬이며, 아래의 함수로 계산할 수 있습니다."

#. type: example
#: R-intro.texi:2096
#, no-wrap
msgid "solve(A)\n"
msgstr "solve(A)\n"

#. type: Plain text
#: R-intro.texi:2102
msgid "but rarely is needed.  Numerically, it is both inefficient and potentially unstable to compute @code{x <- solve(A) %*% b} instead of @code{solve(A,b)}."
msgstr "하지만, 위와 같이 역행렬을 이용하여 @code{x <- solve(A) %*% b}를 계산하는 것은 함수 @code{solve(A,b)}를 사용하는 것보다 비효율적인데다 에러 발성이 가능성도 많아 실제로 많이 사용하지는 않습니다."

#. type: Plain text
#: R-intro.texi:2110
msgid "The quadratic form @eqn{@strong{x^T A^{-1} x},@ @code{x %*% A^@{-1@} %*% x} @ } which is used in multivariate computations, should be computed by something like@footnote{Even better would be to form a matrix square root @eqn{B, B} with @eqn{A = BB^T, A = BB'} and find the squared length of the solution of @eqn{By = x, By = x} , perhaps using the Cholesky or eigen decomposition of @eqn{A, A}.  } @code{x %*% solve(A,x)}, rather than computing the inverse of @code{A}."
msgstr "다변량의 연산에 사용되는 이차행렬식(quadratic form) @eqn{@strong{x^T  A^{-1} x},@ @code{x %*% A^@{-1@} %*% x} @ }은 @code{A}의 역행렬을 이용하는 것 보단 @code{x %*% solve(A,x)}으로 계산하는 편이 낫습니다. @footnote{좀 더 좋은 방법은 행렬의 제곱근(matrix square root)인 @eqn{B, B}를 찾는 것입니다. 여기서 행렬의 제곱근 B는 @eqn{A = BB^T, A = BB'}으로 정의되며, @eqn{A, A}의 콜레스키 분해(Cholesky decomposition)나 아이겐 분해(eigen decomposition)를 이용하면 @eqn{By = x, By = x}의 해의 제곱길이 (squared length)를 찾는 과정을 통해 이차 행렬식을 풀게 됩니다.} "

#. type: findex
#: R-intro.texi:2115
#, no-wrap
msgid "eigen"
msgstr ""

#. type: Plain text
#: R-intro.texi:2120
msgid "The function @code{eigen(Sm)} calculates the eigenvalues and eigenvectors of a symmetric matrix @code{Sm}.  The result of this function is a list of two components named @code{values} and @code{vectors}.  The assignment"
msgstr "함수 @code{eigen(Sm)}는 대칭행렬 (symmetric matrix) @code{Sm} 의 고유값(eigenvalues)과 고유벡터 (eigenvectors)를 계산해주며 아래처럼 사용합니다."

#. type: example
#: R-intro.texi:2123
#, no-wrap
msgid "> ev <- eigen(Sm)\n"
msgstr "> ev <- eigen(Sm)\n"

#. type: Plain text
#: R-intro.texi:2130
msgid "will assign this list to @code{ev}.  Then @code{ev$val} is the vector of eigenvalues of @code{Sm} and @code{ev$vec} is the matrix of corresponding eigenvectors.  Had we only needed the eigenvalues we could have used the assignment:"
msgstr "위 식을 실행한 결과로 @code{ev$val}라는 @code{Sm}의 고유값 벡터와 여기에 대응되는 @code{ev$vec}라는 고유벡터의 행렬을 구성요소로 갖는 리스트를 객체 ev에 저장합니다. 만약 단순히 고유값만 필요하다면 아래와 같이 하시면 됩니다: "

#. type: example
#: R-intro.texi:2133
#, no-wrap
msgid "> evals <- eigen(Sm)$values\n"
msgstr "> evals <- eigen(Sm)$values\n"

#. type: Plain text
#: R-intro.texi:2138
msgid "@code{evals} now holds the vector of eigenvalues and the second component is discarded.  If the expression"
msgstr "@code{evals}이라는 객체는 고유값의 벡터만 포함하고 있을 뿐, 고유벡터는 저장되지 않았습니다."

#. type: example
#: R-intro.texi:2141
#, no-wrap
msgid "> eigen(Sm)\n"
msgstr "> eigen(Sm)\n"

#. type: Plain text
#: R-intro.texi:2147
msgid "is used by itself as a command the two components are printed, with their names.  For large matrices it is better to avoid computing the eigenvectors if they are not needed by using the expression"
msgstr "행렬의 크기가 큰 경우에는, 다음과 같이 식을 사용함으로써 고유벡터의 계산을 생략하는 편이 나을 수 있습니다."

#. type: example
#: R-intro.texi:2150
#, no-wrap
msgid "> evals <- eigen(Sm, only.values = TRUE)$values\n"
msgstr "> evals <- eigen(Sm, only.values = TRUE)$values\n"

#. type: cindex
#: R-intro.texi:2155
#, no-wrap
msgid "Singular value decomposition"
msgstr ""

#. type: findex
#: R-intro.texi:2157
#, no-wrap
msgid "svd"
msgstr ""

#. type: Plain text
#: R-intro.texi:2167
msgid "The function @code{svd(M)} takes an arbitrary matrix argument, @code{M}, and calculates the singular value decomposition of @code{M}.  This consists of a matrix of orthonormal columns @code{U} with the same column space as @code{M}, a second matrix of orthonormal columns @code{V} whose column space is the row space of @code{M} and a diagonal matrix of positive entries @code{D} such that @code{M = U %*% D %*% t(V)}.  @code{D} is actually returned as a vector of the diagonal elements.  The result of @code{svd(M)} is actually a list of three components named @code{d}, @code{u} and @code{v}, with evident meanings."
msgstr "함수 @code{svd(M)}는 @code{M}이라는 임의의 행렬을 인자로 가지며 이 행렬에 대한 특이값 분해(the singular value decomposition)를 수행합니다.이 연산의 결과는 세가지 부분으로 구성됩니다; 첫째는 @code{M}행렬의 열공간(column space)과 동일한 공간을 생성(span)하는 정규직교(orthonormal)열 벡터들로 구성된 행렬 @code{U}이고; 둘째는 이 행렬의 열공간(column space)이 @code{M} 행렬의 행공간(row space)과 동일한 공간을 생성(span)하는 정규직교(orthonormal)열 벡터들로 구성된 행렬 @code{V}; 셋째는 @code{M = U %*% D %*% t(V)}라는 조건을 만족하는 양의 숫자들로 구성된 대각행렬 @code{D}입니다. @code{svd(M)}의 실행결과는 위의 세가지를 구성요소로 갖는 하나의 리스트이며, 각 구성요소들은 정의된대로 @code{d}, @code{u}, @code{v}라는 이름을 가집니다."

#. type: Plain text
#: R-intro.texi:2169
msgid "If @code{M} is in fact square, then, it is not hard to see that"
msgstr "만약 행렬 @code{M}이 정방(square)행렬이라면, 아래처럼 표현식을 사용하여 행렬 @code{M}의 행렬식(determinant)의 절대값을 계산할 수 있습니다."

#. type: example
#: R-intro.texi:2172
#, no-wrap
msgid "> absdetM <- prod(svd(M)$d)\n"
msgstr "> absdetM <- prod(svd(M)$d)\n"

#. type: Plain text
#: R-intro.texi:2178
msgid "calculates the absolute value of the determinant of @code{M}.  If this calculation were needed often with a variety of matrices it could be defined as an @R{} function"
msgstr "또한, 여러 행렬에 같은 계산을 반복적으로 사용하고 싶다면 아래와 같이 사용자 정의함수 @code{abdet()}를 작성하는 것도 가능할 것입니다. 이렇게  @code{absdet()} 함수를 정의해두면, 다른 @R{} 함수처럼 필요할 때마다 사용할 수 있습니다. "

#. type: example
#: R-intro.texi:2181
#, no-wrap
msgid "> absdet <- function(M) prod(svd(M)$d)\n"
msgstr "> absdet <- function(M) prod(svd(M)$d)\n"

#. type: cindex
#: R-intro.texi:2183
#, no-wrap
msgid "Determinants"
msgstr ""

#. type: Plain text
#: R-intro.texi:2190
msgid "after which we could use @code{absdet()} as just another @R{} function.  As a further trivial but potentially useful example, you might like to consider writing a function, say @code{tr()}, to calculate the trace of a square matrix.  [Hint: You will not need to use an explicit loop.  Look again at the @code{diag()} function.]"
msgstr "약간은 단순하지만 유용하게 사용할 수 있는 또 다른 예로, 정방(square) 행렬의 트레이스(trace)를 계산해주는 @code{tr()} 함수를 작성하는 것도 생각해 볼 수 있습니다.[힌트:이 함수를 작성할 때 loop 문장을 사용할 필요가 없습니다. @code{diag()} 함수를 다시 찾아 보세요.]  "

#. type: findex
#: R-intro.texi:2191
#, no-wrap
msgid "det"
msgstr ""

#. type: findex
#: R-intro.texi:2192
#, no-wrap
msgid "determinant"
msgstr ""

#. type: Plain text
#: R-intro.texi:2196
msgid "@R{} has a builtin function @code{det} to calculate a determinant, including the sign, and another, @code{determinant}, to give the sign and modulus (optionally on log scale),"
msgstr "@R{}은 행렬식(determinant)과 그 부호(sign)을 구하는데 사용하는 @code{det}를 빌트인(builtin)함수로 제공합니다. 또다른 함수 @code{determinant}는 행렬식의 부호 뿐 아니라 모듈러스(modulus)(그리고 옵션으로 선택시 log 스케일에서의 모듈러스까지)의 결과도 함께 출력합니다. 이러한 함수들에 대해서는 나중에 좀 더 자세히 다루겠습니다."

#. type: cindex
#: R-intro.texi:2201
#, no-wrap
msgid "Least squares fitting"
msgstr ""

#. type: cindex
#: R-intro.texi:2202
#, no-wrap
msgid "QR decomposition"
msgstr ""

#. type: Plain text
#: R-intro.texi:2206
msgid "The function @code{lsfit()} returns a list giving results of a least squares fitting procedure.  An assignment such as"
msgstr "함수 @code{lsfit()}은 최소제곱법 적합(least squares fitting)을 수행하여 얻은 결과들을 리스트 형태로 돌려줍니다."

#. type: example
#: R-intro.texi:2209
#, no-wrap
msgid "> ans <- lsfit(X, y)\n"
msgstr ""

#. type: findex
#: R-intro.texi:2210
#, no-wrap
msgid "lsfit"
msgstr ""

#. type: Plain text
#: R-intro.texi:2221
msgid "gives the results of a least squares fit where @code{y} is the vector of observations and @code{X} is the design matrix.  See the help facility for more details, and also for the follow-up function @code{ls.diag()} for, among other things, regression diagnostics.  Note that a grand mean term is automatically included and need not be included explicitly as a column of @code{X}.  Further note that you almost always will prefer using @code{lm(.)} (@pxref{Linear models}) to @code{lsfit()} for regression modelling."
msgstr " 만약, @code{y}가 관측값 벡터이고, @code{X}는 디자인 행렬이라고 할때, 아래와 같이 사용된 함수 @code{lsfit()}는 최소 제곱법 (least square)을 이용하여 적합한 값을 @code{ans}에 할당합니다.더 자세한 사항은 도움말을 참조하시길 바랍니다. 특히, 최소제곱법을 이용한 회귀분석에 대한 모형진단이 필요하시면 함수 @code{ls.diag()}를 찾아보시길 바랍니다. 특히, 이 함수를 사용해서 회귀모형을 적합하면, 원래 @code{X}의 열에 포함되지 않는 전체 평균이 하나의 항으로 포함된다는 점을 주의하시기 바랍니다. 더욱이 회귀분석을 수행할 때는 거의 대부분의 경우 @code{lsfit()} 보다는 @code{lm(.)}를 사용하는 것이 더욱 편리하다는 점도 알아두시면 좋을 것입니다. "

#. type: findex
#: R-intro.texi:2222
#, no-wrap
msgid "qr"
msgstr ""

#. type: Plain text
#: R-intro.texi:2225
msgid "Another closely related function is @code{qr()} and its allies.  Consider the following assignments"
msgstr "최소제곱법과 연관되어 있는 함수로는 @code{qr()}과 그에 연관된 함수족(allies)이 있습니다. 아래의 예제를 살펴보세요."

#. type: example
#: R-intro.texi:2231
#, no-wrap
msgid ""
"> Xplus <- qr(X)\n"
"> b <- qr.coef(Xplus, y)\n"
"> fit <- qr.fitted(Xplus, y)\n"
"> res <- qr.resid(Xplus, y)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2239
msgid "These compute the orthogonal projection of @code{y} onto the range of @code{X} in @code{fit}, the projection onto the orthogonal complement in @code{res} and the coefficient vector for the projection in @code{b}, that is, @code{b} is essentially the result of the @sc{Matlab} `backslash' operator."
msgstr "위 문장들은 벡터 @code{y}를 @code{X} 공간 위에 직사영(orthogonal projection)시킨 값(즉, fitted 된 값)을  @code{fit}에, 그리고 그 직교여공간에 사영(the projection onto the orthogonal complement)시킨 값 (즉, 잔차)를 @code{res}에, 그리고 사영을 통해 얻은 회귀계수(coefficient)의 벡터는  @code{b}에 저장합니다. 특히, @code{b}의 값은 @sc{Matlab}에서 `백슬래쉬' 연산자를 이용해서 얻은 것과 동일합니다."

#. type: Plain text
#: R-intro.texi:2242
msgid "It is not assumed that @code{X} has full column rank.  Redundancies will be discovered and removed as they are found."
msgstr "위의 연산을 위한 @code{X}가 이 full column rank라는 조건을 만족해야 하는 것은 아닙니다.이 조건이 만족되지 않는 경우, 선형독립이 아닌 열들을 찾아서 이들을 제거하면 됩니다."

#. type: Plain text
#: R-intro.texi:2247
msgid "This alternative is the older, low-level way to perform least squares calculations.  Although still useful in some contexts, it would now generally be replaced by the statistical models features, as will be discussed in @ref{Statistical models in R}."
msgstr "이런식으로 회귀계수를 계산하는 것은 앞에서 소개된 함수들을 이용하는 것 보다 훨씬 오래되고, 덜 자동화된 (low-level) 방법으로 최소제곱 적합법을 이용하는 방법입니다. 이런 식의 계산이 필요한 경우가 아직 가끔 있긴하지만, 거의 대부분의 경우 앞으로 @ref{Statistical models in R (R에서 사용되는 통계모형들)}에서 좀 더 설명하게 될 통계 모형 함수들을 사용하는 것으로 대체되고 있습니다."

#. type: section
#: R-intro.texi:2250
#, no-wrap
msgid "Forming partitioned matrices, @code{cbind()} and @code{rbind()}"
msgstr "@code{cbind()}와 @code{rbind()}를 이용하여 분할된 행렬을 조합하기"

#. type: findex
#: R-intro.texi:2251
#, no-wrap
msgid "cbind"
msgstr ""

#. type: findex
#: R-intro.texi:2252
#, no-wrap
msgid "rbind"
msgstr ""

#. type: Plain text
#: R-intro.texi:2259
msgid "As we have already seen informally, matrices can be built up from other vectors and matrices by the functions @code{cbind()} and @code{rbind()}.  Roughly @code{cbind()} forms matrices by binding together matrices horizontally, or column-wise, and @code{rbind()} vertically, or row-wise."
msgstr "위에서도 잠깐 언급했었지만, @code{cbind()}와 @code{rbind()}라는 함수는 벡터와 행렬을 묶어 새로운 행렬을 생성할 때 사용됩니다. 간단히 말해, @code{cbind()} 함수는 여러 행렬들을 세로로, 혹은 열방향으로 묶어서, 그리고 @code{rbind()} 함수는 가로로, 혹은 행방향으로 묶어서 새로운 행렬을 생성합니다. "

#. type: Plain text
#: R-intro.texi:2261
msgid "In the assignment"
msgstr "아래 함수 @code{cbind()}에 사용될 입력인자는 임의의 길이를 가진 벡터이거나 같은 길이의 열,또는 같은 수의 행을 가진 행렬이어만 합니다. 이 함수를 적용하면 입력된 @var{arg_1}, @var{arg_2}, @dots{}이 각각의 열로 하는 하나의 행렬이 생성됩니다. "

#. type: example
#: R-intro.texi:2264
#, no-wrap
msgid "> X <- cbind(@var{arg_1}, @var{arg_2}, @var{arg_3}, @dots{})\n"
msgstr "> X <- cbind(@var{arg_1}, @var{arg_2}, @var{arg_3}, @dots{})\n"

#. type: Plain text
#: R-intro.texi:2271
msgid "the arguments to @code{cbind()} must be either vectors of any length, or matrices with the same column size, that is the same number of rows.  The result is a matrix with the concatenated arguments @var{arg_1}, @var{arg_2}, @dots{} forming the columns."
msgstr "@code{cbind()}의 입력인자가 함께 입력된 다른 행렬의 열 길이 보다 짧은 길이를 가진 벡터인 경우가 있을 수 있습니다.이 경우, 길이가 더 짧은 벡터들은 행렬의 열의 길이(만약 행렬이 입력되지 않은 경우에는 가장 길이가 긴 벡터)에 맞추기 위해 그 구성요소를 반복 사용합니다."

#. type: Plain text
#: R-intro.texi:2276
msgid "If some of the arguments to @code{cbind()} are vectors they may be shorter than the column size of any matrices present, in which case they are cyclically extended to match the matrix column size (or the length of the longest vector if no matrices are given)."
msgstr "함수 @code{rbind()}는 함수 @code{cbind()}와 유사한 기능을 행에 대해 수행힙니다."

#. type: Plain text
#: R-intro.texi:2280
msgid "The function @code{rbind()} does the corresponding operation for rows.  In this case any vector argument, possibly cyclically extended, are of course taken as row vectors."
msgstr " 이 함수의 경우, 입력된 벡터가 무엇이든 간에, 길이가 다를 경우 위와 같이 반복 사용되서 길이를 맞추는 것은 물론이고, 모든 인자를 행벡터로서 처리합니다. "

#. type: Plain text
#: R-intro.texi:2284
msgid "Suppose @code{X1} and @code{X2} have the same number of rows.  To combine these by columns into a matrix @code{X}, together with an initial column of @code{1}s we can use"
msgstr "@code{X1}과 @code{X2}라는 두 행렬이 같은 개수의 행을 가지고 있다고 가정합니다. @code{1}로 구성된 열과 함께 위 둘을 열 방향으로 결합하여 새 행렬 @code{X}를 생성하기 위해, 아래와 같은 명령문을 사용할 수 있습니다."

#. type: example
#: R-intro.texi:2287
#, no-wrap
msgid "> X <- cbind(1, X1, X2)\n"
msgstr "> X <- cbind(1, X1, X2)\n"

#. type: Plain text
#: R-intro.texi:2293
msgid "The result of @code{rbind()} or @code{cbind()} always has matrix status.  Hence @code{cbind(x)} and @code{rbind(x)} are possibly the simplest ways explicitly to allow the vector @code{x} to be treated as a column or row matrix respectively."
msgstr "@code{rbind()}이나 @code{cbind()}를 사용하면 얻어지는 결과는 항상 행렬입니다. 따라서, @code{cbind(x)}와 @code{rbind(x)}는 벡터 @code{x}를 각각 하나의 열 혹은 하나의 행으로 구성된 행렬로 바꾸는 가장 단순한 방법일 것입니다."

#. type: section
#: R-intro.texi:2295
#, no-wrap
msgid "The concatenation function, @code{c()}, with arrays"
msgstr "배열에서 사용하는 결합(concatenation) 함수 @code{c()}"

#. type: Plain text
#: R-intro.texi:2302
msgid "It should be noted that whereas @code{cbind()} and @code{rbind()} are concatenation functions that respect @code{dim} attributes, the basic @code{c()} function does not, but rather clears numeric objects of all @code{dim} and @code{dimnames} attributes.  This is occasionally useful in its own right."
msgstr "@code{cbind()}와 @code{rbind()} 함수의 경우 행렬이 가진 @code{dim} 속성에 기반해서 여러개의 행렬을 하나로 연결하는 반면, 함수 @code{c()}는 @code{dim}과 @code{dimnames} 속성 모두를 무시한 채 결합시킨다고 할 수 있습니다. 따라서, 경우에 따라서는 @code{c()}를 이용해야만 할 수 있습니다."

#. type: Plain text
#: R-intro.texi:2305
msgid "The official way to coerce an array back to a simple vector object is to use @code{as.vector()}"
msgstr "이런식으로 배열의 속성을 무시하고 단순 벡터로 강제형변환하는 공식적으로 알려진 방법은 다음과 같이 @code{as.vector()}  함수를 이용하는 것입니다."

#. type: example
#: R-intro.texi:2308
#, no-wrap
msgid "> vec <- as.vector(X)\n"
msgstr "> vec <- as.vector(X)\n"

#. type: findex
#: R-intro.texi:2309
#, no-wrap
msgid "as.vector"
msgstr "as.vector"

#. type: Plain text
#: R-intro.texi:2313
msgid "However a similar result can be achieved by using @code{c()} with just one argument, simply for this side-effect:"
msgstr "하지만, 이와 비슷한 결과를 함수 @code{c()}의 이러한 부가적 성질을 활용함으로써 얻을 수도 있습니다. "

#. type: example
#: R-intro.texi:2316
#, no-wrap
msgid "> vec <- c(X)\n"
msgstr "> vec <- c(X)\n"

#. type: Plain text
#: R-intro.texi:2322
msgid "There are slight differences between the two, but ultimately the choice between them is largely a matter of style (with the former being preferable)."
msgstr "실제로는 다소 차이점이 있기는 하지만, 둘 중 어떤 함수를 이용하여 이 작업을 수행할 것인가는 단순히 프로그래밍 스타일의 차이일 뿐입니다."

#. type: cindex
#: R-intro.texi:2325
#, no-wrap
msgid "Tabulation"
msgstr ""

#. type: Plain text
#: R-intro.texi:2329
msgid "Recall that a factor defines a partition into groups.  Similarly a pair of factors defines a two way cross classification, and so on."
msgstr "우리는 앞부분에서 데이터를 그룹화하는데 요인 (factor)을 사용할 수 있음을 배웠습니다. 마찬가지로 만약 2개의 요인을 사용하면 2차원 분류(two way cross classification)를 정의할 수 있을 것이고, 더 나아가 k 개의 요인으로 k-차원의 분류가 가능할 것입니다."

#. type: Plain text
#: R-intro.texi:2333
msgid "The function @code{table()} allows frequency tables to be calculated from equal length factors.  If there are @math{k} factor arguments, the result is a @math{k}-way array of frequencies."
msgstr "함수 @code{table()}은 같은 길이를 가진 요인들을 분류해서 빈도분포표를 생성합니다.  즉, @math{k}개의 요인이 입력될 경우, 이 함수를 사용한 결과로 @math{k} 차원의 빈도의 배열이 생성됩니다. "

#. type: Plain text
#: R-intro.texi:2336
msgid "Suppose, for example, that @code{statef} is a factor giving the state code for each entry in a data vector.  The assignment"
msgstr "예를 들어, 입력된 각 데이터가 지역(state)코드인 데이터 벡터인 @code{statef}라는 하나의 요인이 존재한다고 가정합시다. 아래의 명령문은 @code{statefr}라는 이름으로 샘플의 각 주별 빈도를 요약하는 표를 저장합니다."

#. type: example
#: R-intro.texi:2339
#, no-wrap
msgid "> statefr <- table(statef)\n"
msgstr "> statefr <- table(statef)\n"

#. type: Plain text
#: R-intro.texi:2346
msgid "gives in @code{statefr} a table of frequencies of each state in the sample.  The frequencies are ordered and labelled by the @code{levels} attribute of the factor.  This simple case is equivalent to, but more convenient than,"
msgstr "이 표에 각 주 별 도수는 수준 (level)의 알파벳 이름순으로 정렬됩니다. 이와 같은 작업을 수행하는 좀 더 간단한 방법은 다음과 같습니다."

#. type: example
#: R-intro.texi:2349
#, no-wrap
msgid "> statefr <- tapply(statef, statef, length)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2354
msgid "Further suppose that @code{incomef} is a factor giving a suitably defined ``income class'' for each entry in the data vector, for example with the @code{cut()} function:"
msgstr "이번에는 입련된 각 데이터가  소득수준 (``income class'')을 의미하는 @code{incomef}라는 요인을 가정 합시다. 이 소득수준의 경우, 함수 @code{cut()}를 사용해서 다음과 같이 생성할 수 있습니다."

#. type: example
#: R-intro.texi:2357
#, no-wrap
msgid "> factor(cut(incomes, breaks = 35+10*(0:7))) -> incomef\n"
msgstr ""

#. type: findex
#: R-intro.texi:2358
#, no-wrap
msgid "cut"
msgstr ""

#. type: Plain text
#: R-intro.texi:2361
msgid "Then to calculate a two-way table of frequencies:"
msgstr "위에서 정의한 두 개의 요인에 대해 2차원 빈도표를 생성하면 다음과 같습니다:"

#. type: example
#: R-intro.texi:2370
#, no-wrap
msgid ""
"> table(incomef,statef)\n"
"         statef\n"
"incomef   act nsw nt qld sa tas vic wa\n"
"  (35,45]   1   1  0   1  0   0   1  0\n"
"  (45,55]   1   1  1   1  2   0   1  3\n"
"  (55,65]   0   3  1   3  2   2   2  1\n"
"  (65,75]   0   1  0   0  0   0   1  0\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2373
msgid "Extension to higher-way frequency tables is immediate."
msgstr "좀 더 많은 차원을 대상으로 빈도표를 작성하는 것도 이것과 크게 다르지 않습니다."

# Note from Chel Hee Lee - Don't touch!
#. type: node
#: R-intro.texi:2381
#: R-intro.texi:2383
#: R-intro.texi:2384
#: R-intro.texi:2385
#: R-intro.texi:2464
#, no-wrap
msgid "Lists"
msgstr "Lists (리스트)"

#. type: node
#: R-intro.texi:2381
#: R-intro.texi:2383
#: R-intro.texi:2464
#: R-intro.texi:2465
#: R-intro.texi:2493
#: R-intro.texi:2512
#, no-wrap
msgid "Constructing and modifying lists"
msgstr "리스트를 생성과 수정"

# Note from Chel Hee Lee - Don't touch!
#. type: node
#: R-intro.texi:2381
#: R-intro.texi:2464
#: R-intro.texi:2512
#: R-intro.texi:2513
#: R-intro.texi:2514
#: R-intro.texi:2551
#: R-intro.texi:2573
#: R-intro.texi:2638
#: R-intro.texi:2665
#: R-intro.texi:2680
#, no-wrap
msgid "Data frames"
msgstr "Data frames (데이터 프레임)"

#. type: Plain text
#: R-intro.texi:2389
msgid "An @R{} @emph{list} is an object consisting of an ordered collection of objects known as its @emph{components}."
msgstr "@R{}에서 @emph{리스트(list)}라는 것은 @emph{컴포넌트 (components)}라고 불리는 일정한 순서로 정렬된 여러 객체들의 집합입니다."

#. type: Plain text
#: R-intro.texi:2394
msgid "There is no particular need for the components to be of the same mode or type, and, for example, a list could consist of a numeric vector, a logical value, a matrix, a complex vector, a character array, a function, and so on.  Here is a simple example of how to make a list:"
msgstr "각각의 컴포넌트는 반드시 같은 모드(mode)나 형태(type)일 필요는 없습니다. 예를 들어, 하나의 리스트는 수치형 벡터, 논리형 벡터, 행렬, 복소수 벡터, 문자형 벡터, 함수 이외의 어떤 형태라도 컴포넌트로 포함할 수 있습니다. 리스트를 생성하는 아래의 간단한 예를 살펴보시기 바랍니다:   "

#. type: example
#: R-intro.texi:2398
#, no-wrap
msgid ""
"> Lst <- list(name=\"Fred\", wife=\"Mary\", no.children=3,\n"
"              child.ages=c(4,7,9))\n"
msgstr ""

#. type: findex
#: R-intro.texi:2399
#, no-wrap
msgid "list"
msgstr ""

#. type: Plain text
#: R-intro.texi:2407
msgid "Components are always @emph{numbered} and may always be referred to as such.  Thus if @code{Lst} is the name of a list with four components, these may be individually referred to as @code{Lst[[1]]}, @code{Lst[[2]]}, @code{Lst[[3]]} and @code{Lst[[4]]}.  If, further, @code{Lst[[4]]} is a vector subscripted array then @code{Lst[[4]][1]} is its first entry."
msgstr "리스트에 포함된 컴포넌트들은 항상 @emph{숫자로 구분(numbered)}되어 있으며, 따라서 각각의 컴포넌트를 이에 해당하는 숫자 (즉, 컴포넌트 인덱스)로 불러내는 것이 가능합니다. 따라서, @code{Lst}가 4개의 컴포넌트를 갖는 리스트라면, 각각의 컴포넌트는 각각 @code{Lst[[1]]},@code{Lst[[2]]}, @code{Lst[[3]]} 그리고 @code{Lst[[4]]}로 불러낼 수 있습니다. 특히, @code{Lst[[4]]}가 첨자로 표현되는 구성요소를 가진 벡터인 경우, @code{Lst[[4]][1]}는 이 컴포넌트의 첫번째 구성요소를 의미합니다.   "

#. type: Plain text
#: R-intro.texi:2410
msgid "If @code{Lst} is a list, then the function @code{length(Lst)} gives the number of (top level) components it has."
msgstr "또 @code{Lst}가 리스트인 경우, @code{length()} 함수를 사용하면 (top level) 컴포넌트의 개수를 알 수 있습니다. 위의 예제를 계속 사용하면, @code{length(Lst)}는 4라는 값을 출력할 것입니다."

#. type: Plain text
#: R-intro.texi:2415
msgid "Components of lists may also be @emph{named}, and in this case the component may be referred to either by giving the component name as a character string in place of the number in double square brackets, or, more conveniently, by giving an expression of the form"
msgstr "리스트에 포함된 컴포넌트는 @emph{이름(named)}으로 불러낼 수도 있는데, 이 경우 해당 컴포넌트의 이름에 해당하는 문자열을 위에서 숫자를 사용할 때 처럼 한 쌍의 이중대괄호 안에 넣어 사용하며, 좀 더 쉽게는 아래와 같은 표현식을 사용하는 것도 가능합니다."

#. type: example
#: R-intro.texi:2418
#, no-wrap
msgid "> @var{name}$@var{component_name}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2422
msgid "for the same thing."
msgstr "@var{name}는 리스트의 이름이고, 스트링 연산자($) 뒤의 @var{component_name}는 컴포넌트의 이름입니다."

#. type: Plain text
#: R-intro.texi:2425
msgid "This is a very useful convention as it makes it easier to get the right component if you forget the number."
msgstr "이렇게 이름으로 직접 불러내는 방법은 사용자가 해당 컴포넌트의 번호(인덱스)를 기억할 필요없이, 쉽고 정확하게 컴포넌트를 불러낼 수 있는 방법입니다."

#. type: Plain text
#: R-intro.texi:2427
msgid "So in the simple example given above:"
msgstr "위의 예제로 다시 돌아가면, "

#. type: Plain text
#: R-intro.texi:2430
msgid "@code{Lst$name} is the same as @code{Lst[[1]]} and is the string @code{\"Fred\"},"
msgstr "@code{Lst$name}이라는 것은 @code{Lst[[1]]}와 동일하고, @code{\"Fred\"}라는 값을 가집니다."

#. type: Plain text
#: R-intro.texi:2433
msgid "@code{Lst$wife} is the same as @code{Lst[[2]]} and is the string @code{\"Mary\"},"
msgstr "또 @code{Lst$wife}는 @code{Lst[[2]]}와 동일하고 @code{\"Mary\"}라는 값을 가집니다."

#. type: Plain text
#: R-intro.texi:2436
msgid "@code{Lst$child.ages[1]} is the same as @code{Lst[[4]][1]} and is the number @code{4}."
msgstr "@code{Lst$child.ages[1]}의 경우, @code{Lst[[4]][1]}와 동일하며, @code{4}라는 값을 가집니다."

#. type: Plain text
#: R-intro.texi:2441
msgid "Additionally, one can also use the names of the list components in double square brackets, i.e., @code{Lst[[\"name\"]]} is the same as @code{Lst$name}.  This is especially useful, when the name of the component to be extracted is stored in another variable as in"
msgstr "또한, 리스트의 컴포넌트 이름을 이중대괄호 안에 사용하는 것고 가능하며, 따라서 @code{Lst[[\"name\"]]}와 @code{Lst$name}은 동일합니다.이러한 사용법은 아래와 같이 리스트 컴포넌트의 이름이 다른 변수로 저장되어 있는 경우에 유용하게 사용될 수 있습니다."

#. type: example
#: R-intro.texi:2444
#, no-wrap
msgid "> x <- \"name\"; Lst[[x]]\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2454
msgid "It is very important to distinguish @code{Lst[[1]]} from @code{Lst[1]}.  @samp{@code{[[@var{@dots{}}]]}} is the operator used to select a single element, whereas @samp{@code{[@var{@dots{}}]}} is a general subscripting operator.  Thus the former is the @emph{first object in the list} @code{Lst}, and if it is a named list the name is @emph{not} included.  The latter is a @emph{sublist of the list @code{Lst} consisting of the first entry only.  If it is a named list, the names are transferred to the sublist.}"
msgstr "리스트를 사용하는데 있어 @code{Lst[[1]]}와 @code{Lst[1]}를 구분하는 것은 매우 중요합니다. @samp{@code{[[@var{@dots{}}]]}}은 리스트 안의 한 개의 컴포넌트를 선택하기위해 사용하는 연산자인 반면,@samp{@code{[@var{@dots{}}]}}은 일반적인 첨자로 사용되는 연산자입니다.따라서, 전자는 @emph{리스트 @code{Lst}의 첫번째 컴포넌트}를 나타내므로, 만약 그 컴포넌트에 이름이 있어도 이름과 상관없이 해당 컴포넌트만을 불러냅니다. 하지만 후자는 리스트 @code{Lst}의 첫번째 구성요소만을 갖는 서브리스트(sublit)이므로, 이 구성요소에 이름이 있다면, 이름이 해당 서브리스트와 함께 불러집니다."

#. type: Plain text
#: R-intro.texi:2459
msgid "The names of components may be abbreviated down to the minimum number of letters needed to identify them uniquely.  Thus @code{Lst$coefficients} may be minimally specified as @code{Lst$coe} and @code{Lst$covariance} as @code{Lst$cov}."
msgstr "컴포넌트들의 이름은 각각의 이름이 구분할 수 있는 최소한의 글자수로 된 약어로 나타내질 수 있습니다. 예를들면, 리스트 @code{Lst}가 @code{coefficients}와 @code{covariance}라는 이름의 두 개의 컴포넌트로 구성된 경우, @code{Lst$coe}와 @code{Lst$cov}으로 간소화하여 불러낼 수 있습니다. "

#. type: Plain text
#: R-intro.texi:2463
msgid "The vector of names is in fact simply an attribute of the list like any other and may be handled as such.  Other structures besides lists may, of course, similarly be given a @emph{names} attribute also."
msgstr "사실 컴포넌트들의 이름으로 구성된 벡터는 단순히 리스트의 속성 중 하나라고 볼 수 있으며, 다른 속성들처럼 다룰 수 있습니다. 물론 리스트를 제외한 다른 객체들 역시 @emph{names}을 속성의 하나로 포함할 수 있습니다. "

#. type: Plain text
#: R-intro.texi:2469
msgid "New lists may be formed from existing objects by the function @code{list()}.  An assignment of the form"
msgstr "이미 만들어놓은 여러개의 객체를 @code{list()} 함수를 사용하여 새로운 리스트로 생성할 수 있습니다. "

#. type: example
#: R-intro.texi:2472
#, no-wrap
msgid "> Lst <- list(@var{name_1}=@var{object_1}, @var{@dots{}}, @var{name_m}=@var{object_m})\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2481
msgid "sets up a list @code{Lst} of @math{m} components using @var{object_1}, @dots{}, @var{object_m} for the components and giving them names as specified by the argument names, (which can be freely chosen).  If these names are omitted, the components are numbered only.  The components used to form the list are @emph{copied} when forming the new list and the originals are not affected."
msgstr "아래와 같은 할당문을 사용하면, (사용자가 자유롭게 선택한) @var{object_1}, @var{@dots{}}, @var{object_m}와 같은 이름을 갖는 @math{m} 개의 컴포넌트로 구성된 리스트 @code{Lst}를 생성합니다. 만약 이렇게 이름을 할당하는 과정이 생략되면, 컴포넌트들은 숫자로만 구분됩니다.  새로운 리스트가 생성될 때 기존의 객체들은 단순히 컴포넌트로서 @emph{복사된 것}이기 때문에 새로운 리스트의 생성이 기존의 객체에 아무런 영향을 주지 않습니다."

#. type: Plain text
#: R-intro.texi:2484
msgid "Lists, like any subscripted object, can be extended by specifying additional components.  For example"
msgstr "리스트에 새로운 컴포넌트를 추가하고 싶을 경우, 아래와 같이 첨자를 이용하는 것도 가능합니다."

#. type: example
#: R-intro.texi:2487
#, no-wrap
msgid "> Lst[5] <- list(matrix=Mat)\n"
msgstr ""

#. type: cindex
#: R-intro.texi:2491
#: R-intro.texi:2493
#: R-intro.texi:2494
#: R-intro.texi:2495
#, no-wrap
msgid "Concatenating lists"
msgstr "Concatenating lists (리스트 연결하기)"

#. type: Plain text
#: R-intro.texi:2501
msgid "When the concatenation function @code{c()} is given list arguments, the result is an object of mode list also, whose components are those of the argument lists joined together in sequence."
msgstr "여러개의 리스트를 하나로 묶고 싶은 경우, 아래와 같이 함수 @code{c()}를 이용하면 입력된 순서대로 하나로 묶인 리스트가 생성됩니다."

#. type: example
#: R-intro.texi:2504
#, no-wrap
msgid "> list.ABC <- c(list.A, list.B, list.C)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2510
msgid "Recall that with vector objects as arguments the concatenation function similarly joined together all arguments into a single vector structure.  In this case all other attributes, such as @code{dim} attributes, are discarded."
msgstr "앞 부분에서 연결함수를 사용해서 입력인자인 벡터들을 모두 연결해서 하나의 벡터로 생성했던 것과 비슷합니다. 다만, 리스트를 연결할 경우, @code{dim}을 포함한 모든 리스트의 속성이 무시된 채 작업된다는 점 정도의 차이가 있을 뿐 입니다. "

#. type: Plain text
#: R-intro.texi:2518
msgid "A @emph{data frame} is a list with class @code{\"data.frame\"}.  There are restrictions on lists that may be made into data frames, namely"
msgstr "@emph{데이터 프레임 (data frame)}은 @code{\"data.frame\"}이라는 클래스를 가진 리스트입니다.하지만 데이터 프레임을 리스트와 구분짓는 다음과 같은 몇가지 특징이 있습니다."

#. type: itemize
#: R-intro.texi:2523
msgid "The components must be vectors (numeric, character, or logical), factors, numeric matrices, lists, or other data frames."
msgstr "우선, 데이터 프레임에 입력될 수 있는 자료는 반드시 (수치형, 문자형 또는 논리형) 벡터, 요인, 수치형 행렬, 리스트, 또는 다른 데이터 프레임 중 하나이어야만 합니다."

#. type: itemize
#: R-intro.texi:2526
msgid "Matrices, lists, and data frames provide as many variables to the new data frame as they have columns, elements, or variables, respectively."
msgstr "또 데이터 프레임을 구성하는 각각의 열은 변수로 인식되므로, 입력되는 행렬의 열의 개수, 리스트의 구성요소의 개수, 또는 데이터 프레임의 변수의 개수를 더한만큼 데이터 프레임의 크기가 확장됩니다. "

#. type: itemize
#: R-intro.texi:2532
msgid "Numeric vectors, logicals and factors are included as is, and by default@footnote{Conversion of character columns to factors is overridden using the @code{stringsAsFactors} argument to the @code{data.frame()} function.} character vectors are coerced to be factors, whose levels are the unique values appearing in the vector."
msgstr "데이터 프레임에 입력되는 수치형 벡터, 논리형, 그리고 문자형 벡터들을은 모두 디폴트로 요인으로 강제형변환 되도록 지정되어 있으며, 입력된 벡터의 중복없이 정렬된 값을 그 수준으로 갖습니다. @footnote{문자형 벡터의 경우, @code{data.frame()}함수의 @code{stringsAsFactors} 인자를 사용하여 요인으로 강제변환하는 것도 가능합니다}."

#. type: itemize
#: R-intro.texi:2536
msgid "Vector structures appearing as variables of the data frame must all have the @emph{same length}, and matrix structures must all have the same @emph{row size}."
msgstr "데이터 프레임 내의 벡터형 변수(즉, 열벡터)는 모두 @emph{동일한 길이 (same length)}를 가져야하며, 행렬형 변수는 모두 같은 @emph{행의 개수 (row size)}를 가져야합니다. "

#. type: Plain text
#: R-intro.texi:2542
msgid "A data frame may for many purposes be regarded as a matrix with columns possibly of differing modes and attributes.  It may be displayed in matrix form, and its rows and columns extracted using matrix indexing conventions."
msgstr "많은 경우, 데이터 프레임이라는 것은 모드(mode)와 속성(attribute)이 조금 다른 행렬이 하나로 보아도 무방합니다. 따라서 행렬에서 했던 것 처럼, 행렬 인덱스를 사용하여 데이터 프레임을 행이나 열 중 일부를 임의로 선택할 수 있습니다."

#. type: node
#: R-intro.texi:2549
#: R-intro.texi:2551
#: R-intro.texi:2552
#: R-intro.texi:2573
#, no-wrap
msgid "Making data frames"
msgstr "데이터 프레임 생성하기"

#. type: node
#: R-intro.texi:2549
#: R-intro.texi:2551
#: R-intro.texi:2573
#: R-intro.texi:2638
#, no-wrap
msgid "attach() and detach()"
msgstr "attach()와 detach()"

#. type: node
#: R-intro.texi:2549
#: R-intro.texi:2573
#: R-intro.texi:2638
#: R-intro.texi:2639
#: R-intro.texi:2665
#, no-wrap
msgid "Working with data frames"
msgstr "데이터 프레임 활용하기"

#. type: node
#: R-intro.texi:2549
#: R-intro.texi:2638
#: R-intro.texi:2665
#: R-intro.texi:2666
#: R-intro.texi:2680
#, no-wrap
msgid "Attaching arbitrary lists"
msgstr "Attaching arbitrary lists (임의적인 리스트를 연결하기)"

#. type: subsection
#: R-intro.texi:2549
#: R-intro.texi:2665
#: R-intro.texi:2680
#: R-intro.texi:2681
#, no-wrap
msgid "Managing the search path"
msgstr "탐색경로를 관리하기"

#. type: Plain text
#: R-intro.texi:2557
msgid "Objects satisfying the restrictions placed on the columns (components)  of a data frame may be used to form one using the function @code{data.frame}:"
msgstr "데이터 프레임의 열 (또는 컴포넌트)를 구성하게 될 객체들의 위에서 언급한 조건들을 충족시키면, 다음과 같이 @code{data.frame} 함수를 사용하여 데이터 프레임을 생성할 수 있습니다. "

#. type: findex
#: R-intro.texi:2557
#, no-wrap
msgid "data.frame"
msgstr ""

#. type: example
#: R-intro.texi:2561
#, no-wrap
msgid "> accountants <- data.frame(home=statef, loot=incomes, shot=incomef)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2566
msgid "A list whose components conform to the restrictions of a data frame may be @emph{coerced} into a data frame using the function @code{as.data.frame()}"
msgstr "위의 예제에서 사용된 @code{statef}는 이산형 데이터 벡터이고, @code{incomes}는 연속형 데이터 벡터, 그리고 @code{incomef}는 범주화된 값을 갖는 벡터입니다. 따라서 새로 생성될 데이터 프레임 @code{accountants}은 @code{home}, @code{loot}, 그리고 @code{shot}라는 세 변수로 구성되는데, 벡터 @code{statef}는 @code{home}라른 변수로, 벡터 @code{incomes}는 @code{loot}라는 변수로, 마지막으로 벡터 @code{incomef}는  @code{shot}라는 변수로 저장됨을 의미합니다.컴포넌트들이 위와 같은 데이터 프레임으로써의 요건을 만족하는 리스트라면 함수 @code{as.data.frame()}를 사용하여 데이터 프레임으로 @emph{강제형변환 (coerced)}시키는 것이 가능합니다. "

#. type: findex
#: R-intro.texi:2566
#, no-wrap
msgid "as.data.frame"
msgstr ""

#. type: Plain text
#: R-intro.texi:2572
msgid "The simplest way to construct a data frame from scratch is to use the @code{read.table()} function to read an entire data frame from an external file.  This is discussed further in @ref{Reading data from files}."
msgstr "이미 저장된 데이터를 가져와 데이터 프레임을 생성하기 위한 가장 쉬운 방법은 외부 파일에서 데이터를 읽어들일 때 사용하는 @code{read.table()} 함수를 사용하는 것 겁니다.이 함수에 대해서는 @ref{Reading data from files (파일로부터 데이터 읽어오기)}편에서 더 자세히 다루도록 하겠습니다."

#. type: subsection
#: R-intro.texi:2574
#, fuzzy, no-wrap
#| msgid "attach() and detach()"
msgid "@code{attach()} and @code{detach()}"
msgstr "attach()와 detach()"

#. type: findex
#: R-intro.texi:2575
#, no-wrap
msgid "attach"
msgstr ""

#. type: findex
#: R-intro.texi:2576
#, no-wrap
msgid "detach"
msgstr ""

#. type: Plain text
#: R-intro.texi:2583
msgid "The @code{$} notation, such as @code{accountants$home}, for list components is not always very convenient.  A useful facility would be somehow to make the components of a list or data frame temporarily visible as variables under their component name, without the need to quote the list name explicitly each time."
msgstr "스트링(@code{$}) 연산자는, @code{accountants$home}와 같이 리스트의 컴포넌트를 불러내기 위해 사용하지만 이 방법이 언제나 가장 편리한 것은 아닙니다. (특히 구성요소가 많은 경우라면,) 리스트나 데이터 프레임의 구성요소들의 이름을 필요한 동안만 변수이름처럼 나열해서 쓸 수 있도록하면, 한번에 하나씩 리스트 상의 이름을 사용해서 컴포넌트를 불러내는 번거로움을 피할 수 있습니다. "

#. type: Plain text
#: R-intro.texi:2588
msgid "The @code{attach()} function takes a `database' such as a list or data frame as its argument.  Thus suppose @code{lentils} is a data frame with three variables @code{lentils$u}, @code{lentils$v}, @code{lentils$w}.  The attach"
msgstr "@code{attach()} 함수의 경우, 리스트나 데이터 프레임과 같은 형태의  '데이터베이스(database)'를 인자로 받습니다. 따라서, 세개의 변수 @code{lentils$u}, @code{lentils$v}, @code{lentils$w}로 구성된 데이터 프레임@code{lentils}을 존재하고 여기에 @code{attach()} 함수를 사용하면, 해당 데이터 프레임의 탐색경로(search path)가 @w{position 2}로 바뀌며, 이것은 변수 @code{u}, @code{v}, @code{w}를 담지 않는  경로인 @w{position 1,작업 }와 별개이므로, attach 함수가 적용된 데이터 프레임의 구성요소인 @code{u}, @code{v}, @code{w}변수들을 이들의 이름만으로(별도의 스트링 연산자나 인덱스를 사용하지 않고) 불러내는 것이 가능해집니다.   "

#. type: example
#: R-intro.texi:2591
#, no-wrap
msgid "> attach(lentils)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2598
msgid "places the data frame in the search path at @w{position 2}, and provided there are no variables @code{u}, @code{v} or @code{w} in @w{position 1}, @code{u}, @code{v} and @code{w} are available as variables from the data frame in their own right.  At this point an assignment such as"
msgstr "@code{attach()}를 사용시 주의할 점은, 다음과 같이 할당문을 사용할 경우, 이미 존재하던 데이터 프레임 내 컴포넌트인 @code{u}가 연산의 결과물로 대체된다기 보다는, 탐색경로 상의 @w{position 1,}에서 현재 작업 디렉토리에 새로운 변수  @code{u}가 생성되어 이미 존재하는 변수를 가로막게된다는 것 입니다. (따라서 위 명령문을 실행하면 @code{lentils}내 변수 @code{v}와 @code{w}의 더하기 연산의 결과가 @code{u}라는 이름의 객체가 되지만, 이 객체가 데이터 프레임 @code{lentils}내의 @code{u}로 저장되지는 않습니다. @code{attach()} 사용이후의 연산은 최상위 탐색경로인 @w{position 1}에서 이루어지므로 데이터 프레임이 위치하는 @w{position 2}에 있는@code{u}가 영향을 받지 않기 때문입니다.)"

#. type: example
#: R-intro.texi:2601
#, no-wrap
msgid "> u <- v+w\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2609
msgid "does not replace the component @code{u} of the data frame, but rather masks it with another variable @code{u} in the working directory at @w{position 1} on the search path.  To make a permanent change to the data frame itself, the simplest way is to resort once again to the @code{$} notation:"
msgstr "만약, 데이터 프레임 자체에 변경된 내용을 영구 저장하고싶다면, @code{$} 연산자를 사용하여 다음과 같이 따로 저장해야 합니다:"

#. type: example
#: R-intro.texi:2612
#, no-wrap
msgid "> lentils$u <- v+w\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2616
msgid "However the new value of component @code{u} is not visible until the data frame is detached and attached again."
msgstr "하지만, 이렇게 컴포넌트 @code{u}에 새로 저장된 값들은 데이터 프레임을 (@code{detach()}함수를 사용해서) 분리(detach)한 후 다시 (@code{attach()} 함수로) 불러들이는(attach) 과정을 통해서 확인할 수 있습니다."

#. type: Plain text
#: R-intro.texi:2618
msgid "To detach a data frame, use the function"
msgstr "데이터 프레임을 현재 경로에서 다시 분리(detach)시키기 위해, 다음과 같이 @code{detach()} 함수를 사용할 수 있습니다.)"

#. type: example
#: R-intro.texi:2621
#, no-wrap
msgid "> detach()\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2630
msgid "More precisely, this statement detaches from the search path the entity currently at @w{position 2}.  Thus in the present context the variables @code{u}, @code{v} and @code{w} would be no longer visible, except under the list notation as @code{lentils$u} and so on.  Entities at positions greater than 2 on the search path can be detached by giving their number to @code{detach}, but it is much safer to always use a name, for example by @code{detach(lentils)} or @code{detach(\"lentils\")}"
msgstr "좀 더 정확하게 설명하면, 이 함수는 @w{position 2} 상에 위치한 현재 작업 중인 개체(데이터 프레임)을 이 경로에서 분리시키는 역할을 합니다. (즉, 경로가 @w{position 1}로 재변경 됩니다.) 따라서, 데이터 프레임을 분리하고 난 후의 현재 작업상황(context)에서는, 따로 @code{lentils$u}와 같이 지정하지 않는한, 변수 @code{u}, @code{v} and @code{w}을 사용하는 것이 더이상 가능하지 않습니다. 개체(데이터 프레임)들이 탐색 경로 상 2 보다 큰 숫자의 @w{position}에 위치할 경우, 이들을 해당 경로에서 분리(detach)하기위해  @code{detach} 함수에 경로 번호를 지정하는 것이 가능합니다. 하지만, 언제나@code{detach(lentils)} 또는 @code{detach(\"lentils\")}과 같이 데이터 프레임의 이름을 직접 입력하는 편이 실수를 줄일 수 있는 보다 안전한 방법입니다."

#. type: quotation
#: R-intro.texi:2631
#, no-wrap
msgid "Note"
msgstr ""

#. type: quotation
#: R-intro.texi:2636
msgid "In @R{} lists and data frames can only be attached at position 2 or above, and what is attached is a @emph{copy} of the original object.  You can alter the attached values @emph{via} @code{assign}, but the original list or data frame is unchanged."
msgstr "@R{}에서 리스트나 데이터 프레임은 반드시 position 2 또는 그 이상의 위치에만 연결할(attach) 수 있습니다. 또, 연결한다(attach)는 것은 존재하는 객체를 @emph{복사(copy)}해서 가져온다는 의미입니다. 이렇게 연결된(attach) 개체들은@code{할당(assign)을 통하여} 변경하는 것이 가능합니다. 하지만, 이 경우 원래의 리스트나 데이터 프레임은 변경된 값에 영향을 받지 않습니다."

#. type: Plain text
#: R-intro.texi:2643
msgid "A useful convention that allows you to work with many different problems comfortably together in the same working directory is"
msgstr "하나의 작업 디렉토리에서 여러 개의 작업을 동시에 수행하는데 도움이 될만한 팁을 하나 드리자면,"

#. type: itemize
#: R-intro.texi:2648
msgid "gather together all variables for any well defined and separate problem in a data frame under a suitably informative name;"
msgstr "데이터 프레임 내의 변수들은 잘 정의된 (well defined) 그리고 분명히 구분되는(separate) 개념을 담고있어야 하며, 이름만으로도 충분히 그 의미를 짐작할 수 있는 변수명을 사용해야 한다는 것 입니다.  "

#. type: itemize
#: R-intro.texi:2652
msgid "when working with a problem attach the appropriate data frame at @w{position 2}, and use the working directory at @w{level 1} for operational quantities and temporary variables;"
msgstr "@w{position 2} 상에서 적절한 데이터 프레임을 불러들여서(attach) 작업 중이라면, 연산의 결과물과 작업 중인 임시(temporary)변수들은 작업 디렉토리가 위치한 @w{level 1}에서 사용하도록 합니다;   "

#. type: itemize
#: R-intro.texi:2656
msgid "before leaving a problem, add any variables you wish to keep for future reference to the data frame using the @code{$} form of assignment, and then @code{detach()};"
msgstr "해당 작업을 끝내기 전, 작업 중인 변수들 중 나중에 다시 사용하기 위해 데이터 프레임 내에 저장하고 싶은 것이 있다면 @code{$}를 이용한 할당문으로 해당 변수를 저장한 다음, @code{detach()} 함수를 사용합니다;"

#. type: itemize
#: R-intro.texi:2659
msgid "finally remove all unwanted variables from the working directory and keep it as clean of left-over temporary variables as possible."
msgstr "마지막으로 아직 작업 디렉토리에 남아있는 임시로 사용했지만 더 이상 필요없는 변수들은 모두 삭제해서 작업 디렉토리를 깨끗하게 유지합니다."

#. type: Plain text
#: R-intro.texi:2664
msgid "In this way it is quite simple to work with many problems in the same directory, all of which have variables named @code{x}, @code{y} and @code{z}, for example."
msgstr "이렇식으로 작업 공간을 유지하면, 같은 디렉토리 내에서 @code{x}, @code{y}, @code{z}와 같은 (매우 흔한 이름의) 변수들을 이용해서 여러 작업을 동시에 수행해야 하는 겅우라도 비교적 쉽게 변수들을 다룰 수 있습니다."

#. type: Plain text
#: R-intro.texi:2672
msgid "@code{attach()} is a generic function that allows not only directories and data frames to be attached to the search path, but other classes of object as well.  In particular any object of mode @code{\"list\"} may be attached in the same way:"
msgstr "일반함수(generic function)의 하나인 @code{attach()}함수는 디렉토리나 데이터 프레임 뿐만 아니라 다른 클래스의 객체를 대상으로도 탐색경로(search path)를 연결(attach)하는 작업을 수행합니다. 특히, 객체의 모드가 @code{\"list\"}인 경우는 데이터프레임과 동일한 방법으로 사용 가능합니다:"

#. type: example
#: R-intro.texi:2675
#, no-wrap
msgid "> attach(any.old.list)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2679
msgid "Anything that has been attached can be detached by @code{detach}, by position number or, preferably, by name."
msgstr "@code{attach()}에 의해서 연결된 객체는 @code{detach} 함수에 의해서 분리되며, 이때 해당 위치의 번호나, 좀 더 바람직하게는 해당 객체의 이름을 사용하여 분리될 대상을 구체적으로 지정할 수 있습니다."

#. type: findex
#: R-intro.texi:2682
#, no-wrap
msgid "search"
msgstr ""

#. type: cindex
#: R-intro.texi:2683
#, no-wrap
msgid "Search path"
msgstr ""

#. type: Plain text
#: R-intro.texi:2688
msgid "The function @code{search} shows the current search path and so is a very useful way to keep track of which data frames and lists (and packages) have been attached and detached.  Initially it gives"
msgstr "@code{search} 함수는 현재 탐색경로를 보여줌으로서 사용자가 현재 연결하여 작업하고 있는 데이터 프레임 및 리스트 (그리고 패키지들)를 확인할 수 있도록 해줍니다. 처음으로 @code{search}를 수행하면 아래와 같은 결과가 출력됩니다. 여기서  @code{.GlobalEnv}라는 것은 현재 작업 중인 작업공간(workspace)을 의미합니다."

#. type: example
#: R-intro.texi:2692
#, no-wrap
msgid ""
"> search()\n"
"[1] \".GlobalEnv\"   \"Autoloads\"    \"package:base\"\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2696
msgid "where @code{.GlobalEnv} is the workspace.@footnote{See the on-line help for @code{autoload} for the meaning of the second term.}"
msgstr "@footnote{두번째로 출력된 @code{autoload}에 대해서는 온라인 도움말을 살펴보시길 바랍니다}."

#. type: Plain text
#: R-intro.texi:2698
msgid "After @code{lentils} is attached we have"
msgstr "데이터프레임 @code{lentils}을 연결(attached)하고나면, @code{search()}는 아래와 같은 결과를 보여줍니다."

#. type: example
#: R-intro.texi:2704
#, no-wrap
msgid ""
"> search()\n"
"[1] \".GlobalEnv\"   \"lentils\"      \"Autoloads\"    \"package:base\"\n"
"> ls(2)\n"
"[1] \"u\" \"v\" \"w\"\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2709
msgid "and as we see @code{ls} (or @code{objects}) can be used to examine the contents of any position on the search path."
msgstr "@code{ls} 혹은 @code{objects} 함수를 이용하여 탐색경로(serach path) 내의 어떤 위치(position 1,2,..)에서나 어떤 객체가 사용 중인지 확인할 수 있습니다. 위에서 함수 @code{ls()}안에 사용된 숫자 @math{2}는 @w{position 2}를 대상으로 한다는 의미입니다."

#. type: Plain text
#: R-intro.texi:2712
msgid "Finally, we detach the data frame and confirm it has been removed from the search path."
msgstr "마지막으로, 사용중인 데이터프레임을 분리(detach)하고나서  탐색경로(search path)에서 정말로 사라졌는지 확인합니다."

#. type: example
#: R-intro.texi:2717
#, no-wrap
msgid ""
"> detach(\"lentils\")\n"
"> search()\n"
"[1] \".GlobalEnv\"   \"Autoloads\"    \"package:base\"\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2731
msgid "Large data objects will usually be read as values from external files rather than entered during an @R{} session at the keyboard.  @R{} input facilities are simple and their requirements are fairly strict and even rather inflexible.  There is a clear presumption by the designers of @R{} that you will be able to modify your input files using other tools, such as file editors or Perl@footnote{Under UNIX, the utilities @command{sed} or@command{awk} can be used.} to fit in with the requirements of @R{}.  Generally this is very simple."
msgstr "용량이 큰 데이터 객체는 현재 작업하고 있는 @R{} 세션에서 키보드로 입력하는 것보다는 외부에 저장되어 있는 데이터파일을 불러들이는 것이 편리하고 빠른 방법입니다. @R{}의 입력 도구는 단순하여 요구조건이 다소 엄격하고 유연하지 않습니다. @R{} 설계자들에 의해 @R{}에서 데이터를 읽어들일 수 있는 요구사항을 충족시키기 위해 파일에디터(file editor) 혹은 Perl@footnote{유닉스 운영체제에서 Sed 또는 Awk와 같은 유틸리티들}과 같은 다른 도구를 이용하여 여러분의 입력 파일을 수정할 수 있는 명백한 추측이 있습니다. 일반적으로 이것은 매우 단순합니다."

#. type: Plain text
#: R-intro.texi:2736
msgid "If variables are to be held mainly in data frames, as we strongly suggest they should be, an entire data frame can be read directly with the @code{read.table()} function.  There is also a more primitive input function, @code{scan()}, that can be called directly."
msgstr "만약 변수들이 데이터 프레임에서 다루어질 것이라면 (우리가 그렇게 될 것이라고 강하게 가정하는 것과 같이), 전체 데이터 프레임은 @code{read.table()} 함수에 의해 직접적으로 읽을 수 있습니다. 직접적으로 호출할 수 있는 보다 근본적인 입력 함수인 @code{scan()}도 있습니다."

#. type: Plain text
#: R-intro.texi:2739
msgid "For more details on importing data into @R{} and also exporting data, see the @emph{R Data Import/Export} manual."
msgstr "데이터의 입출력에 관한 더 자세한 사항에 대해서는 @emph{R Data Import/Export} 문서를 참조하시길 바랍니다."

#. type: node
#: R-intro.texi:2745
#: R-intro.texi:2747
#: R-intro.texi:2830
#, no-wrap
msgid "The read.table() function"
msgstr ""

#. type: node
#: R-intro.texi:2745
#: R-intro.texi:2747
#: R-intro.texi:2828
#: R-intro.texi:2830
#: R-intro.texi:2882
#, no-wrap
msgid "The scan() function"
msgstr ""

#. type: node
#: R-intro.texi:2745
#: R-intro.texi:2830
#: R-intro.texi:2882
#: R-intro.texi:2883
#: R-intro.texi:2884
#: R-intro.texi:2926
#, no-wrap
msgid "Accessing builtin datasets"
msgstr "내장된 데이터셋을 이용하기"

#. type: section
#: R-intro.texi:2745
#: R-intro.texi:2882
#: R-intro.texi:2926
#: R-intro.texi:2927
#, no-wrap
msgid "Editing data"
msgstr "데이터를 편집하기"

#. type: section
#: R-intro.texi:2748
#, no-wrap
msgid "The @code{read.table()} function"
msgstr "@code{read.table()} 함수"

#. type: findex
#: R-intro.texi:2749
#, no-wrap
msgid "read.table"
msgstr ""

#. type: Plain text
#: R-intro.texi:2753
msgid "To read an entire data frame directly, the external file will normally have a special form."
msgstr "데이터 프레임 전체를 한번에 불러오기 위해서는, 외부 파일이 특정한 형식을 가지고 있어야만 합니다."

#. type: itemize
#: R-intro.texi:2758
msgid "The first line of the file should have a @emph{name} for each variable in the data frame."
msgstr "파일내의 첫번째 행은 데이터 프레임에서 각 변수들에 대해 @emph{변수명}을 가져야 합니다. "

#. type: itemize
#: R-intro.texi:2762
msgid "Each additional line of the file has as its first item a @emph{row label} and the values for each variable."
msgstr "파일내의 첫 번째 행 다음 부터는 @emph{행레이블(row label)}과 각 변수에 대한 변수값이 있어야 합니다. "

#. type: Plain text
#: R-intro.texi:2767
msgid "If the file has one fewer item in its first line than in its second, this arrangement is presumed to be in force.  So the first few lines of a file to be read as a data frame might look as follows."
msgstr "만약, 첫번째 행을 구성하는 항목들의 개수가 두번째 행을 구성하는 항목들의 개수보다 적을 경우, 강제적으로 첫번째 행의 구조에 따라 맞추어지게 됩니다. 따라서 데이터 프레임으로 읽어들일 파일의 처음 몇 줄은 다음과 같이 보여질 것입니다."

#. type: example
#: R-intro.texi:2772
#, no-wrap
msgid ""
"@r{Input file form with names and row labels:}\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:2780
#, no-wrap
msgid ""
"     Price    Floor     Area   Rooms     Age  Cent.heat\n"
"01   52.00    111.0      830     5       6.2      no\n"
"02   54.75    128.0      710     5       7.5      no\n"
"03   57.50    101.0     1000     5       4.2      no\n"
"04   57.50    131.0      690     6       8.8      no\n"
"05   59.75     93.0      900     5       1.9     yes\n"
"...\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2787
msgid "By default numeric items (except row labels) are read as numeric variables and non-numeric variables, such as @code{Cent.heat} in the example, as factors.  This can be changed if necessary."
msgstr "기본적으로 @R{}이 데이터 파일을 읽어올때, (행레이블를 제외하고) 예제와 같이 수치값(numeric item)은 숫자변수(numeric variables)로, 그렇지 않다면 @code{Cent.heat}와 같이 요인(factor)으로 비숫자변수(non-numeric variables)로 읽어들입니다. "

#. type: Plain text
#: R-intro.texi:2790
msgid "The function @code{read.table()} can then be used to read the data frame directly"
msgstr "함수 @code{read.table()}는 직접적으로 데이터 프레임을 읽어들이는데 사용될 수 있습니다."

#. type: example
#: R-intro.texi:2793
#, no-wrap
msgid "> HousePrice <- read.table(\"houses.data\")\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2798
msgid "Often you will want to omit including the row labels directly and use the default labels.  In this case the file may omit the row label column as in the following."
msgstr "여러분은 종종 행레이블을 직접적으로 포함하는 것을 생략하고 기본값을 사용하길 원하는 경우가 있습니다. 이러한 경우 그 파일에는 아래와 같이 행레이블 열이 생략되어 있을 것입니다. "

#. type: example
#: R-intro.texi:2803
#, no-wrap
msgid ""
"@r{Input file form without row labels:}\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:2811
#, no-wrap
msgid ""
"Price    Floor     Area   Rooms     Age  Cent.heat\n"
"52.00    111.0      830     5       6.2      no\n"
"54.75    128.0      710     5       7.5      no\n"
"57.50    101.0     1000     5       4.2      no\n"
"57.50    131.0      690     6       8.8      no\n"
"59.75     93.0      900     5       1.9     yes\n"
"...\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2816
msgid "The data frame may then be read as"
msgstr "이런 경우에는 아래와 같이 @code{read.table()} 함수를 사용시 @code{header=TRUE} 옵션을 함께 사용합니다."

#. type: example
#: R-intro.texi:2819
#, no-wrap
msgid "> HousePrice <- read.table(\"houses.data\", header=TRUE)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2825
msgid "where the @code{header=TRUE} option specifies that the first line is a line of headings, and hence, by implication from the form of the file, that no explicit row labels are given."
msgstr "@code{header=TRUE} 옵션은 첫 번째 줄이 헤더 줄이라는 것을 특정하여 파일의 구조로부터의 의미에 의해 명시적인 행레이블이 주어지지 않았다는 것을 나타냅니다."

#. type: section
#: R-intro.texi:2831
#, no-wrap
msgid "The @code{scan()} function"
msgstr "@code{scan()} 함수"

#. type: findex
#: R-intro.texi:2832
#, no-wrap
msgid "scan"
msgstr ""

#. type: Plain text
#: R-intro.texi:2839
msgid "Suppose the data vectors are of equal length and are to be read in parallel.  Further suppose that there are three vectors, the first of mode character and the remaining two of mode numeric, and the file is @file{input.dat}.  The first step is to use @code{scan()} to read in the three vectors as a list, as follows"
msgstr "데이터 벡터들이 같은 길이를 가지고 있고 이들은 동시에 병렬적으로 읽어들여진다고 가정해 보십시오. 그리고 벡터의 개수는 세개인데 첫번째 벡터는 문자형 모드를 가지고, 나머지 두 벡터는 수치형 모드를 가지며, 이 벡터들은 @code{input.dat}라는 파일내에 저장이 되어 있다고 가정합니다. @code{scan()}함수를 이용하여 세개의 벡터를 리스트 형식으로서 불러오는 첫 번째 단계는  다음과 같습니다."

#. type: example
#: R-intro.texi:2842
#, no-wrap
msgid "> inp <- scan(\"input.dat\", list(\"\",0,0))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2848
msgid "The second argument is a dummy list structure that establishes the mode of the three vectors to be read.  The result, held in @code{inp}, is a list whose components are the three vectors read in.  To separate the data items into three separate vectors, use assignments like"
msgstr "@code{scan()}함수의 두번째 인자는 어떤 모드(mode)로서 그 세 가지 벡터들을 읽어올 것인가에 대한 더미 리스트 구조(dummy list structure)입니다. @code{inp}에 담겨진 결과는 그것의 구성요소가 읽혀진 세 벡터들인 리스트 입니다. 데이터 값들(data items)을 세 개의 구분된 벡터로 분해하기 위해서 다음과 같이 할당(assignments)을 이용합니다."

#. type: example
#: R-intro.texi:2851
#, no-wrap
msgid "> label <- inp[[1]]; x <- inp[[2]]; y <- inp[[3]]\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2855
msgid "More conveniently, the dummy list can have named components, in which case the names can be used to access the vectors read in.  For example"
msgstr "위에서 소개한 방법보다 더 편한 방법은 아래에서 보는 것과 같이 더미 리스트 구조를 사용할 때 바로 이름을 부여하는 것입니다. 그러한 경우 그 이름들은 읽혀진 벡터들에 접근하는데 사용될 수 있습니다. 예를 들어 다음과 같습니다."

#. type: example
#: R-intro.texi:2858
#, no-wrap
msgid "> inp <- scan(\"input.dat\", list(id=\"\", x=0, y=0))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2862
msgid "If you wish to access the variables separately they may either be re-assigned to variables in the working frame:"
msgstr "여러분이 각각의 변수들에 접근하길 원한다면 그것들은 다음과 같이 워킹프레임(the working frame)에서 변수들에 재할당(re-assigned)되거나 "

#. type: example
#: R-intro.texi:2865
#, no-wrap
msgid "> label <- inp$id; x <- inp$x; y <- inp$y\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2870
msgid "or the list may be attached at @w{position 2} of the search path (@pxref{Attaching arbitrary lists})."
msgstr "또는 그 리스트가 탐색경로의 @w{position 2}에 첨부될 수 있습니다(이에 대해서는 @pxref{Attaching arbitrary lists (임의적인 리스트를 연결하기)}를 참고하시길 바랍니다)."

#. type: Plain text
#: R-intro.texi:2874
msgid "If the second argument is a single value and not a list, a single vector is read in, all components of which must be of the same mode as the dummy value."
msgstr "만약, 아래와 같이 두번째 인자가 리스트가 아닌 단일 숫자값이라면, 하나의 벡터가 읽혀지게 됩니다. 그리고 반드시 벡터의 모든 구성요소는 더미 값(dummy value)과 같이 동일한 모드를 가지고 있어야 합니다."

#. type: example
#: R-intro.texi:2877
#, no-wrap
msgid "> X <- matrix(scan(\"light.dat\", 0), ncol=5, byrow=TRUE)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2881
msgid "There are more elaborate input facilities available and these are detailed in the manuals."
msgstr "더욱 정교한 입력 도구들이 사용가능하며 매뉴얼에 설명되어 있습니다."

#. type: findex
#: R-intro.texi:2885
#, no-wrap
msgid "data"
msgstr ""

#. type: Plain text
#: R-intro.texi:2891
msgid "Around 100 datasets are supplied with @R{} (in package @pkg{datasets}), and others are available in packages (including the recommended packages supplied with @R{}).  To see the list of datasets currently available use"
msgstr "@R{}은 기본적으로 대략 100여개의 데이터셋을 @pkg{datasets} 패키지를 통하여 제공하고 있고 (@R{}과 함께 제공되는 추천 패키지를 포함하여) 다른 것들이 패키지들에 따라 사용가능합니다. 현재 사용가능한 데이터셋의 목록을 확인하고 싶으시다면 아래와 같이 @code{data()}함수를 이용하시면 됩니다."

#. type: example
#: R-intro.texi:2894
#, no-wrap
msgid "data()\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2900
msgid "All the datasets supplied with @R{} are available directly by name.  However, many packages still use the obsolete convention in which @code{data} was also used to load datasets into @R{}, for example"
msgstr "@R{} 버전 2.0.0 부터 @R{}과 함께 제공되는 모든 데이터셋은 아래에서 보여지는 것과 같이 데이터셋의 이름을 통하여 바로 접근이 가능합니다. 그러나 많은 패키지들이 아직 이전의 @R{}로 데이터세트를 로드하는데 사용되었던 @code{data} 방법을 사용하고 있습니다. 예를 들어, 다음과 같습니다."

#. type: example
#: R-intro.texi:2903
#, no-wrap
msgid "data(infert)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2910
msgid "and this can still be used with the standard packages (as in this example).  In most cases this will load an @R{} object of the same name.  However, in a few cases it loads several objects, so see the on-line help for the object to see what to expect."
msgstr "그리고 이것은 여기에서의 사례와 같이 표준패키지에서도 아직까지 사용될 수 있습니다. 대부분의 경우 이것은 동일한 이름의 @R{} 객체를 로드할 것입니다. 그러나 몇몇의 사례에서 그것은 여러 객체를 로드하므로 로드될 것으로 기대되는 확인하기 위해 객체에 대한 온라인 도움말을 참고하시기 바랍니다."

#. type: subsection
#: R-intro.texi:2911
#, no-wrap
msgid "Loading data from other R packages"
msgstr "다른 R 패키지들로부터 데이터를 로딩하기"

#. type: Plain text
#: R-intro.texi:2915
msgid "To access data from a particular package, use the @code{package} argument, for example"
msgstr "만약 특정 패키지 내에 제공되어지는 데이터에 접근하고 싶다면 아래와 같이 @code{data()}함수의 @code{package}라는 인자를 사용합니다."

#. type: example
#: R-intro.texi:2919
#, no-wrap
msgid ""
"data(package=\"rpart\")\n"
"data(Puromycin, package=\"datasets\")\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2923
msgid "If a package has been attached by @code{library}, its datasets are automatically included in the search."
msgstr "만약 특정 패키지가 @code{library} 함수를 이용하여 현재의 작업공간에 연결이 되어 있다면, 패키지에 내장된 데이터셋들은 자동으로 검색되게 됩니다."

#. type: Plain text
#: R-intro.texi:2925
msgid "User-contributed packages can be a rich source of datasets."
msgstr ""

#. type: findex
#: R-intro.texi:2929
#, no-wrap
msgid "edit"
msgstr ""

#. type: Plain text
#: R-intro.texi:2933
msgid "When invoked on a data frame or matrix, @code{edit} brings up a separate spreadsheet-like environment for editing.  This is useful for making small changes once a data set has been read.  The command"
msgstr "만약 사용자가 데이터 프레임이나 행렬의 일부내용을 수정 및 편집을 하고 싶을때 @code{edit}는 편집을 위하여 구분된 스프레드시트와 같은 환경을 가져옵니다. 이것은 한 번 불러온 데이터세트에 작은 변화를 주는데 유용합니다. 명령은 다음과 같습니다."

#. type: example
#: R-intro.texi:2936
#, no-wrap
msgid "> xnew <- edit(xold)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2943
msgid "will allow you to edit your data set @code{xold}, and on completion the changed object is assigned to @code{xnew}.  If you want to alter the original dataset @code{xold}, the simplest way is to use @code{fix(xold)}, which is equivalent to @code{xold <- edit(xold)}."
msgstr "@code{edit()}함수는 데이터셋 @code{xold}을 편집한 뒤, 편집된 새로운 내용을 새로운 데이터셋 @code{xnew}로 저장한다는 의미입니다. 만약, 사용자가 원본 데이터셋 @code{xold} 자체를 변경하고자 한다면 가장 단순한 방법은 @code{fix(xold)} 함수를 이용하는 것인데 이것은 @code{xold <- edit(xold)}와 동일한 표현입니다."

#. type: Plain text
#: R-intro.texi:2945
#: R-intro.texi:7287
msgid "Use"
msgstr ""

#. type: example
#: R-intro.texi:2948
#, no-wrap
msgid "> xnew <- edit(data.frame())\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2952
msgid "to enter new data via the spreadsheet interface."
msgstr "만약에 여러분이 비어있는 데이터 프레임으로부터 윈도우즈 기반의 스프레드시트를 통하여 새로운 데이터를 입력하고자 한다면 아래와 같이 할 수 있습니다."

#. type: node
#: R-intro.texi:2962
#: R-intro.texi:2964
#: R-intro.texi:2965
#: R-intro.texi:3041
#, no-wrap
msgid "R as a set of statistical tables"
msgstr "통계분포표들을 한데 묶어 놓은 R"

#. type: node
#: R-intro.texi:2962
#: R-intro.texi:2964
#: R-intro.texi:3041
#: R-intro.texi:3042
#: R-intro.texi:3201
#, no-wrap
msgid "Examining the distribution of a set of data"
msgstr "데이터의 분포 살펴보기"

#. type: cindex
#: R-intro.texi:2962
#: R-intro.texi:3041
#: R-intro.texi:3201
#: R-intro.texi:3202
#: R-intro.texi:3203
#, no-wrap
msgid "One- and two-sample tests"
msgstr "일표본과 이표본 검정"

#. type: Plain text
#: R-intro.texi:2973
msgid "One convenient use of @R{} is to provide a comprehensive set of statistical tables.  Functions are provided to evaluate the cumulative distribution function @eqn{P(X \\le x), P(X <= x)}, the probability density function and the quantile function (given @math{q}, the smallest @math{x} such that @eqn{P(X \\le x) > q, P(X <= x) > q}), and to simulate from the distribution."
msgstr "@R{}의 많은 장점들 중 한가지는 다양한 통계분포표를 제공하는 것입니다. @eqn{P(X \\le x), P(X <= x)}을 알려주는 누적확률(cumulative probability)값, 주어진 확률함수로부터 밀도(density)계산, 주어진 @math{q}에 해당하는 퀀타일(quantile)을 계산, @eqn{P(X \\le x) > q, P(X <= x) > q})라는 조건을 만족하는 @code{x}값 찾기 및 주어진 분포로부터의 난수를 생성할 수 있습니다."

#. type: multitable
#: R-intro.texi:2977
msgid "@headitem Distribution"
msgstr ""

#. type: multitable
#: R-intro.texi:2977
msgid "@R{} name"
msgstr ""

#. type: multitable
#: R-intro.texi:2977
msgid "additional arguments"
msgstr ""

#. type: item
#: R-intro.texi:2977
#, no-wrap
msgid "beta @tab @code{beta} @tab @code{shape1, shape2, ncp}"
msgstr ""

#. type: item
#: R-intro.texi:2978
#, no-wrap
msgid "binomial @tab  @code{binom} @tab @code{size, prob}"
msgstr ""

#. type: item
#: R-intro.texi:2979
#, no-wrap
msgid "Cauchy @tab @code{cauchy} @tab @code{location, scale}"
msgstr ""

#. type: item
#: R-intro.texi:2980
#, no-wrap
msgid "chi-squared @tab @code{chisq} @tab @code{df, ncp}"
msgstr ""

#. type: item
#: R-intro.texi:2981
#, no-wrap
msgid "exponential @tab @code{exp} @tab @code{rate}"
msgstr ""

#. type: item
#: R-intro.texi:2982
#, no-wrap
msgid "F @tab @code{f} @tab @code{df1, df2, ncp}"
msgstr ""

#. type: item
#: R-intro.texi:2983
#, no-wrap
msgid "gamma @tab @code{gamma} @tab @code{shape, scale}"
msgstr ""

#. type: item
#: R-intro.texi:2984
#, no-wrap
msgid "geometric @tab @code{geom} @tab @code{prob}"
msgstr ""

#. type: item
#: R-intro.texi:2985
#, no-wrap
msgid "hypergeometric @tab @code{hyper} @tab @code{m, n, k}"
msgstr ""

#. type: item
#: R-intro.texi:2986
#, no-wrap
msgid "log-normal @tab @code{lnorm} @tab @code{meanlog, sdlog}"
msgstr ""

#. type: item
#: R-intro.texi:2987
#, no-wrap
msgid "logistic @tab @code{logis} @tab @code{location, scale}"
msgstr ""

#. type: item
#: R-intro.texi:2988
#, no-wrap
msgid "negative binomial @tab @code{nbinom} @tab @code{size, prob}"
msgstr ""

#. type: item
#: R-intro.texi:2989
#, no-wrap
msgid "normal @tab @code{norm} @tab @code{mean, sd}"
msgstr ""

#. type: item
#: R-intro.texi:2990
#, no-wrap
msgid "Poisson @tab @code{pois} @tab @code{lambda}"
msgstr ""

#. type: item
#: R-intro.texi:2991
#, no-wrap
msgid "signed rank @tab @code{signrank} @tab @code{n}"
msgstr ""

#. type: item
#: R-intro.texi:2992
#, no-wrap
msgid "Student's t @tab @code{t} @tab @code{df, ncp}"
msgstr ""

#. type: item
#: R-intro.texi:2993
#, no-wrap
msgid "uniform @tab @code{unif} @tab @code{min, max}"
msgstr ""

#. type: item
#: R-intro.texi:2994
#, no-wrap
msgid "Weibull @tab @code{weibull} @tab @code{shape, scale}"
msgstr ""

#. type: item
#: R-intro.texi:2995
#, no-wrap
msgid "Wilcoxon @tab @code{wilcox} @tab @code{m, n}"
msgstr ""

#. type: Plain text
#: R-intro.texi:3008
msgid "Prefix the name given here by @samp{d} for the density, @samp{p} for the CDF, @samp{q} for the quantile function and @samp{r} for simulation (@emph{r}andom deviates).  The first argument is @code{x} for @code{d@var{xxx}}, @code{q} for @code{p@var{xxx}}, @code{p} for @code{q@var{xxx}} and @code{n} for @code{r@var{xxx}} (except for @code{rhyper}, @code{rsignrank} and @code{rwilcox}, for which it is @code{nn}).  In not quite all cases is the non-centrality parameter @code{ncp} currently available: see the on-line help for details."
msgstr "위의 표를 잘 살펴보면 하나의 규칙을 알 수 있습니다. @samp{d}로 시작하는 함수명은 확률밀도(density)를 구하기 위해 사용이 되고,@samp{p}로 시작하는 함수명은 누적확률값(cumulative probability)를 구하기 위해 사용이 되며,@samp{q}로 시작하는 함수명은 퀀타일(quantile)을 구하며,@samp{r}로 시작하는 함수명은 시뮬레이션을 위한 난수를 생성하는데 사용됩니다.또한, @code{d@var{xxx}}의 첫번째 인자는 @code{x}이며,@code{p@var{xxx}}는 @code{q}, @code{q@var{xxx}}는 @code{p},@code{r@var{xxx}}는 @code{n}입니다(@code{rhyper}, @code{rsignrank} 그리고 @code{rwilcox}의 경우에는 @code{nn}입니다).모든 함수에 non-centrality parameter(비중심화 모수)인  @code{ncp}를 사용할 수 있는 것은 아니므로 보다 더 자세한 사항은 온라인 도움말을 참고하십시오."

#. type: Plain text
#: R-intro.texi:3014
msgid "The @code{p@var{xxx}} and @code{q@var{xxx}} functions all have logical arguments @code{lower.tail} and @code{log.p} and the @code{d@var{xxx}} ones have @code{log}.  This allows, e.g., getting the cumulative (or ``integrated'') @emph{hazard} function, @eqn{H(t) = - \\log(1 - F(t)), H(t) = - log(1 - F(t))}, by"
msgstr "@code{p@var{xxx}}와 @code{q@var{xxx}} 함수들은 모두 @code{lower.tail}와 @code{log.p}라는 논리인자(logical arguments)를 가지며, @code{d@var{xxx}}는 인자 @code{log}를 가집니다. 이러한 옵션의 사용은 아래에서 보이는 바와 같은 방법으로 생존분석(survival analysis)에서 사용되는 @eqn{H(t) = - \\log(1-F(t)), H(t) = -log(1-F(t))}이라는 누적 @emph{hazard} 함수의 계산을 가능하게 합니다."

#. type: example
#: R-intro.texi:3017
#, no-wrap
msgid " - p@var{xxx}(t, ..., lower.tail = FALSE, log.p = TRUE)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3022
msgid "or more accurate log-likelihoods (by @code{d@var{xxx}(..., log = TRUE)}), directly."
msgstr "또한, @code{d@var{xxx}(..., log = TRUE)}와 같은 인자의 설정은 직접적으로 더 정교한 로그우도(log-likelihood) 값을 얻을 수 있도록 해줍니다."

#. type: Plain text
#: R-intro.texi:3028
msgid "In addition there are functions @code{ptukey} and @code{qtukey} for the distribution of the studentized range of samples from a normal distribution, and @code{dmultinom} and @code{rmultinom} for the multinomial distribution. Further distributions are available in contributed packages, notably @CRANpkg{SuppDists}."
msgstr "더 나아가 정규분포로부터 얻은 샘플에 대해서 표준화된 범위에 대한 분포를 함수 @code{ptukey}와 @code{qtukey}를 통하여 얻을 수 있습니다. 또한, 멀티노미얼 (multinomial) 분포에 대한 밀도값과 난수생성은 @code{dmultinom}과 @code{rmultinom}이라는 함수를 통하여 얻을 수 있습니다. 더 많은 분포에 대해서는 @CRANpkg{SuppDists}라는 사용자개발패키지(contributed packages)를 찾아보시길 바랍니다."

#. type: Plain text
#: R-intro.texi:3030
msgid "Here are some examples"
msgstr "밀도함수를 활용하는 두 가지 예제입니다."

#. type: example
#: R-intro.texi:3036
#, no-wrap
msgid ""
"> ## @r{2-tailed p-value for t distribution}\n"
"> 2*pt(-2.43, df = 13)\n"
"> ## @r{upper 1% point for an F(2, 7) distribution}\n"
"> qf(0.01, 2, 7, lower.tail = FALSE)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3040
msgid "See the on-line help on @code{RNG} for how random-number generation is done in @R{}."
msgstr "@R{}에서 어떻게 난수를 생성하는지 알고 싶으시다면 온라인 도움말 @code{RNG}를 살펴보시길 바랍니다."

#. type: Plain text
#: R-intro.texi:3048
msgid "Given a (univariate) set of data we can examine its distribution in a large number of ways.  The simplest is to examine the numbers.  Two slightly different summaries are given by @code{summary} and @code{fivenum}"
msgstr "많은 방법을 통하여 주어진 (일변량) 데이터세트의 분포를 확인해 볼 수 있습니다. 가장 쉬운 방법은 함수 @code{summary} 혹은 @code{fivenum}를 이용하여 약간 다른 의미의 수치적 요약정보를 살펴 보는 것입니다. "

#. type: findex
#: R-intro.texi:3048
#: R-intro.texi:4595
#, no-wrap
msgid "summary"
msgstr ""

#. type: findex
#: R-intro.texi:3049
#, no-wrap
msgid "fivenum"
msgstr ""

#. type: Plain text
#: R-intro.texi:3051
msgid "and a display of the numbers by @code{stem} (a ``stem and leaf'' plot)."
msgstr "그리고 @code{stem} 함수를 이용하여 \"줄기-잎\" 그림(\"stem and leaf\" plot)을 이용하여 확인해 볼수도 있습니다."

#. type: findex
#: R-intro.texi:3051
#, no-wrap
msgid "stem"
msgstr ""

#. type: example
#: R-intro.texi:3061
#, no-wrap
msgid ""
"> attach(faithful)\n"
"> summary(eruptions)\n"
"   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.\n"
"  1.600   2.163   4.000   3.488   4.454   5.100\n"
"> fivenum(eruptions)\n"
"[1] 1.6000 2.1585 4.0000 4.4585 5.1000\n"
"> stem(eruptions)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3063
#, no-wrap
msgid ""
"  The decimal point is 1 digit(s) to the left of the |\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3082
#, no-wrap
msgid ""
"  16 | 070355555588\n"
"  18 | 000022233333335577777777888822335777888\n"
"  20 | 00002223378800035778\n"
"  22 | 0002335578023578\n"
"  24 | 00228\n"
"  26 | 23\n"
"  28 | 080\n"
"  30 | 7\n"
"  32 | 2337\n"
"  34 | 250077\n"
"  36 | 0000823577\n"
"  38 | 2333335582225577\n"
"  40 | 0000003357788888002233555577778\n"
"  42 | 03335555778800233333555577778\n"
"  44 | 02222335557780000000023333357778888\n"
"  46 | 0000233357700000023578\n"
"  48 | 00000022335800333\n"
"  50 | 0370\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3086
msgid "A stem-and-leaf plot is like a histogram, and @R{} has a function @code{hist} to plot histograms."
msgstr "실은 줄기-잎 그림은 히스토그램과 비슷하며 @R{}은 히스토그램을 제공하는 @code{hist} 함수를 가지고 있습니다."

#. type: findex
#: R-intro.texi:3086
#: R-intro.texi:5535
#, no-wrap
msgid "hist"
msgstr ""

#. type: example
#: R-intro.texi:3094
#, no-wrap
msgid ""
"> hist(eruptions)\n"
"## @r{make the bins smaller, make a plot of density}\n"
"> hist(eruptions, seq(1.6, 5.2, 0.2), prob=TRUE)\n"
"> lines(density(eruptions, bw=0.1))\n"
"> rug(eruptions) # @r{show the actual data points}\n"
msgstr ""

#. type: findex
#: R-intro.texi:3096
#, no-wrap
msgid "density"
msgstr ""

#. type: cindex
#: R-intro.texi:3097
#, no-wrap
msgid "Density estimation"
msgstr ""

#. type: Plain text
#: R-intro.texi:3104
msgid "More elegant density plots can be made by @code{density}, and we added a line produced by @code{density} in this example.  The bandwidth @code{bw} was chosen by trial-and-error as the default gives too much smoothing (it usually does for ``interesting'' densities).  (Better automated methods of bandwidth choice are available, and in this example @code{bw = \"SJ\"} gives a good result.)"
msgstr "위의 예제에서 사용된 것과 같이 히스토그램보다 좀 더 정교한 밀도그림(density plot)은 @code{density} 함수에 의해서 얻을 수 있고 우리는 이 예제에서 @code{density}에 의해 만들어진 선을 추가하였습니다. @code{density}함수의 @code{bw}(bandwidth) 인자의 값은 trial-and-error를 통해 얻어집니다. (Bandwidth의 선택에 있어서 자동화된 방법이 있는데, @code{bw='SJ'}를 이용해보시길 바랍니다)."

#. type: ifnotinfo
#: R-intro.texi:3107
msgid "@image{images/hist,9cm}"
msgstr ""

#. type: Plain text
#: R-intro.texi:3111
msgid "We can plot the empirical cumulative distribution function by using the function @code{ecdf}."
msgstr "@code{ecdf} 함수를 이용하여 경험적 누적 분포 함수(empirical cumulative distribution function)를 그려 볼 수 있습니다."

#. type: findex
#: R-intro.texi:3111
#, no-wrap
msgid "ecdf"
msgstr ""

#. type: cindex
#: R-intro.texi:3112
#, no-wrap
msgid "Empirical CDFs"
msgstr ""

#. type: example
#: R-intro.texi:3116
#, no-wrap
msgid "> plot(ecdf(eruptions), do.points=FALSE, verticals=TRUE)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3121
msgid "This distribution is obviously far from any standard distribution.  How about the right-hand mode, say eruptions of longer than 3 minutes? Let us fit a normal distribution and overlay the fitted CDF."
msgstr "이 분포는 표준정규분포와는 많은 차이가 있음을 명백히 알 수 있습니다. 하지만, 화산폭발이 3분이상 지속될 경우에 대한 분포는 어떨까요? 3분이상의 데이터으로부터의 생성된 누적분포를 만들어 본뒤 그 위에 정규분포와 겹쳐봄으로서 비교해봅니다."

#. type: example
#: R-intro.texi:3127
#, no-wrap
msgid ""
"> long <- eruptions[eruptions > 3]\n"
"> plot(ecdf(long), do.points=FALSE, verticals=TRUE)\n"
"> x <- seq(3, 5.4, 0.01)\n"
"> lines(x, pnorm(x, mean=mean(long), sd=sqrt(var(long))), lty=3)\n"
msgstr ""

#. type: ifnotinfo
#: R-intro.texi:3131
msgid "@image{images/ecdf,9cm}"
msgstr ""

#. type: Plain text
#: R-intro.texi:3134
msgid "Quantile-quantile (Q-Q) plots can help us examine this more carefully."
msgstr "Q-Q 플랏을 이용하여 화산폭발 3분이상의 데이터에 대한 정규성을 검토해보는 것도 도움이 됩니다."

#. type: cindex
#: R-intro.texi:3134
#, no-wrap
msgid "Quantile-quantile plots"
msgstr ""

#. type: findex
#: R-intro.texi:3135
#: R-intro.texi:5522
#, no-wrap
msgid "qqnorm"
msgstr ""

#. type: findex
#: R-intro.texi:3136
#: R-intro.texi:5523
#, no-wrap
msgid "qqline"
msgstr ""

#. type: example
#: R-intro.texi:3141
#, no-wrap
msgid ""
"par(pty=\"s\")       # arrange for a square figure region\n"
"qqnorm(long); qqline(long)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3147
msgid "which shows a reasonable fit but a shorter right tail than one would expect from a normal distribution.  Let us compare this with some simulated data from a @math{t} distribution"
msgstr "Q-Q 플랏으로부터 오른쪽 꼬리 부분이 생각보다 짧은 것을 제외하고는 정규분포를 대체적으로 따르는 것 같습니다. 그럼 @code{t}-분포함수로부터 생성된 난수의 분포와는 어떤 관계를 가질지 비교해 보십시오."

#. type: ifnotinfo
#: R-intro.texi:3150
msgid "@image{images/QQ,7cm}"
msgstr ""

#. type: example
#: R-intro.texi:3155
#, no-wrap
msgid ""
"x <- rt(250, df = 5)\n"
"qqnorm(x); qqline(x)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3161
msgid "which will usually (if it is a random sample) show longer tails than expected for a normal.  We can make a Q-Q plot against the generating distribution by"
msgstr "@code{t}-분포로부터 얻어진 난수의 분포가 정규분포의 꼬리보다 길다는 것을 알 수 있습니다. 우리는 다음과 같은 방법으로 생성된 분포에 대한 Q-Q plot을 만들어 볼 수 있습니다."

#. type: example
#: R-intro.texi:3165
#, no-wrap
msgid ""
"qqplot(qt(ppoints(250), df = 5), x, xlab = \"Q-Q plot for t dsn\")\n"
"qqline(x)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3169
msgid "Finally, we might want a more formal test of agreement with normality (or not).  @R{} provides the Shapiro-Wilk test"
msgstr "마지막으로 정규성과 얼마나 따르는지를 확인하는 테스트를 수행하고자 할 것입니다. @R{}은 아래와 같은 Shpiro-Wilk 테스트를 제공합니다."

#. type: cindex
#: R-intro.texi:3169
#, no-wrap
msgid "Shapiro-Wilk test"
msgstr ""

#. type: findex
#: R-intro.texi:3170
#, no-wrap
msgid "shapiro.test"
msgstr ""

#. type: example
#: R-intro.texi:3174
#, no-wrap
msgid ""
"> shapiro.test(long)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3176
#, no-wrap
msgid ""
"         Shapiro-Wilk normality test\n"
"\n"
msgstr "Shpiro-Wilk 테스트 외에도 Kolmogorov-Smirnov 테스트를 이용하여 정규성을 확인해 볼 수 있습니다."

#. type: example
#: R-intro.texi:3179
#, no-wrap
msgid ""
"data:  long\n"
"W = 0.9793, p-value = 0.01052\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3183
msgid "and the Kolmogorov-Smirnov test"
msgstr ""

#. type: cindex
#: R-intro.texi:3183
#, no-wrap
msgid "Kolmogorov-Smirnov test"
msgstr ""

#. type: findex
#: R-intro.texi:3184
#, no-wrap
msgid "ks.test"
msgstr ""

#. type: example
#: R-intro.texi:3188
#, no-wrap
msgid ""
"> ks.test(long, \"pnorm\", mean = mean(long), sd = sqrt(var(long)))\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3190
#, no-wrap
msgid ""
"         One-sample Kolmogorov-Smirnov test\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3194
#, no-wrap
msgid ""
"data:  long\n"
"D = 0.0661, p-value = 0.4284\n"
"alternative hypothesis: two.sided\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3200
msgid "(Note that the distribution theory is not valid here as we have estimated the parameters of the normal distribution from the same sample.)"
msgstr "(여기에서는 우리가 같은 표본으로부터 정규분포의 모수를 추정해왔던 것과 같은 분포 이론은 적용되지 않음에 유의하십시오.)"

#. type: Plain text
#: R-intro.texi:3209
msgid "So far we have compared a single sample to a normal distribution.  A much more common operation is to compare aspects of two samples.  Note that in @R{}, all ``classical'' tests including the ones used below are in package @pkg{stats} which is normally loaded."
msgstr "지금까지 하나의 표본을 정규분포와 비교해 보았습니다. 두 개의 샘플을 비교하고자 한다면 더 많은 작업이 요구될 것입니다. @R{}에서는 다음 예제에 사용되는 통계적 테스트를 포함하여 모든 전형적인 테스트들을 @pkg{stats} 패키지에 넣어두었습니다."

#. type: Plain text
#: R-intro.texi:3212
msgid "Consider the following sets of data on the latent heat of the fusion of ice (@emph{cal/gm}) from Rice (1995, p.490)"
msgstr "1995년에 Rice가 the latent heat of the fusion of ice (@emph{cal/gm})에 대해서 연구한 논문의 490 쪽에 게재된 내용을 고려해 보시기 바랍니다. 다음 두 개의 데이터셋이 이용되었습니다."

#. type: example
#: R-intro.texi:3217
#, no-wrap
msgid ""
"Method A: 79.98 80.04 80.02 80.04 80.03 80.03 80.04 79.97\n"
"          80.05 80.03 80.02 80.00 80.02\n"
"Method B: 80.02 79.94 79.98 79.97 79.97 80.03 79.95 79.97\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3221
msgid "Boxplots provide a simple graphical comparison of the two samples."
msgstr "박스플랏(boxplot)은 두 개의 샘플에 대하여 간단한 시각적 비교를 제공합니다."

#. type: example
#: R-intro.texi:3228
#, no-wrap
msgid ""
"A <- scan()\n"
"79.98 80.04 80.02 80.04 80.03 80.03 80.04 79.97\n"
"80.05 80.03 80.02 80.00 80.02\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3231
#, no-wrap
msgid ""
"B <- scan()\n"
"80.02 79.94 79.98 79.97 79.97 80.03 79.95 79.97\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3233
#, no-wrap
msgid "boxplot(A, B)\n"
msgstr ""

#. type: findex
#: R-intro.texi:3234
#, no-wrap
msgid "boxplot"
msgstr ""

#. type: cindex
#: R-intro.texi:3235
#, no-wrap
msgid "Box plots"
msgstr ""

#. type: Plain text
#: R-intro.texi:3240
msgid "which indicates that the first group tends to give higher results than the second."
msgstr "첫번째 그룹이 두번째 그룹보다 더 높은 결과를 보여주는 것같습니다."

#. type: ifnotinfo
#: R-intro.texi:3243
msgid "@image{images/ice,7cm}"
msgstr ""

#. type: Plain text
#: R-intro.texi:3247
msgid "To test for the equality of the means of the two examples, we can use an @emph{unpaired} @math{t}-test by"
msgstr "각각의 데이터의 평균이 같은지를 테스트하기 위해서 아래와 같이 @emph{unpaired} @math{t}-테스트를 수행해 봅니다."

#. type: cindex
#: R-intro.texi:3247
#, no-wrap
msgid "Student's @math{t} test"
msgstr ""

#. type: findex
#: R-intro.texi:3248
#, no-wrap
msgid "t.test"
msgstr ""

#. type: example
#: R-intro.texi:3252
#, no-wrap
msgid ""
"> t.test(A, B)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3254
#, no-wrap
msgid ""
"         Welch Two Sample t-test\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3263
#, no-wrap
msgid ""
"data:  A and B\n"
"t = 3.2499, df = 12.027, p-value = 0.00694\n"
"alternative hypothesis: true difference in means is not equal to 0\n"
"95 percent confidence interval:\n"
" 0.01385526 0.07018320\n"
"sample estimates:\n"
"mean of x mean of y\n"
" 80.02077  79.97875\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3271
msgid "which does indicate a significant difference, assuming normality.  By default the @R{} function does not assume equality of variances in the two samples (in contrast to the similar @SPLUS{} @code{t.test} function).  We can use the F test to test for equality in the variances, provided that the two samples are from normal populations."
msgstr "테스트의 결과는 평균의 차이가 정규분포를 따른다고 가정할때 통계적으로 의미가 있음을 나타내고 있습니다. 여기에서 한가지 알아야 할 점은 @R{}은 기본적으로 두 데이터의 분산이 같다고 가정하지 않는다는 것입니다. 이것은 @SPLUS{}에서 제공하는 @code{t.test}와 동일합니다. 따라서 두 데이터의 분산이 같은지에 대해서 F-테스트를 시행해 보아야 할 것입니다. 이 때, 두 데이터는 정규분포로부터 얻어진 샘플이라고 가정합니다."

#. type: example
#: R-intro.texi:3274
#, no-wrap
msgid ""
"> var.test(A, B)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3276
#, no-wrap
msgid ""
"         F test to compare two variances\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3285
#, no-wrap
msgid ""
"data:  A and B\n"
"F = 0.5837, num df = 12, denom df =  7, p-value = 0.3938\n"
"alternative hypothesis: true ratio of variances is not equal to 1\n"
"95 percent confidence interval:\n"
" 0.1251097 2.1052687\n"
"sample estimates:\n"
"ratio of variances\n"
"         0.5837405\n"
msgstr ""

#. type: findex
#: R-intro.texi:3286
#, no-wrap
msgid "var.test"
msgstr ""

#. type: Plain text
#: R-intro.texi:3291
msgid "which shows no evidence of a significant difference, and so we can use the classical @math{t}-test that assumes equality of the variances."
msgstr "테스트의 결과는 두 데이터의 분산은 통계적으로 차이가 없음을 의미하므로, 두 데이터의 분산이 같다고 가정하는 전형적인 t-테스트를 사용해도 무방합니다."

#. type: example
#: R-intro.texi:3294
#, no-wrap
msgid ""
"> t.test(A, B, var.equal=TRUE)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3296
#, no-wrap
msgid ""
"         Two Sample t-test\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3305
#, no-wrap
msgid ""
"data:  A and B\n"
"t = 3.4722, df = 19, p-value = 0.002551\n"
"alternative hypothesis: true difference in means is not equal to 0\n"
"95 percent confidence interval:\n"
" 0.01669058 0.06734788\n"
"sample estimates:\n"
"mean of x mean of y\n"
" 80.02077  79.97875\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3310
msgid "All these tests assume normality of the two samples.  The two-sample Wilcoxon (or Mann-Whitney) test only assumes a common continuous distribution under the null hypothesis."
msgstr "모든 테스트들이 두 데이터가 정규분포로부터 얻어진 샘플임을 가정하고 있으나, two-sample Wilcoxon 혹은 Mann-Whitney 테스트에 필요한 가정은 분포가 단순히 연속형이어야 한다는 것입니다."

#. type: cindex
#: R-intro.texi:3311
#, no-wrap
msgid "Wilcoxon test"
msgstr ""

#. type: findex
#: R-intro.texi:3312
#, no-wrap
msgid "wilcox.test"
msgstr ""

#. type: example
#: R-intro.texi:3315
#, no-wrap
msgid ""
"> wilcox.test(A, B)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3317
#, no-wrap
msgid ""
"         Wilcoxon rank sum test with continuity correction\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3321
#, no-wrap
msgid ""
"data:  A and B\n"
"W = 89, p-value = 0.007497\n"
"alternative hypothesis: true location shift is not equal to 0\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3324
#, no-wrap
msgid ""
"Warning message:\n"
"Cannot compute exact p-value with ties in: wilcox.test(A, B)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3330
msgid "Note the warning: there are several ties in each sample, which suggests strongly that these data are from a discrete distribution (probably due to rounding)."
msgstr "테스트를 수행한 결과에 경고가 있음을 알 수 있습니다. 이것은 아마도 각각의 샘플안에 동일한 값을 가지는 데이터들이 존재하기 때문일것입니다. 따라서 연속형 분포를 가정하기 보다는 데이터가 이산형분포로부터 나왔다고 생각하는게 올바를 것입니다(혹은 이것은 rounding 으로부터 나온 결과일 수 도 있습니다)."

#. type: Plain text
#: R-intro.texi:3333
msgid "There are several ways to compare graphically the two samples.  We have already seen a pair of boxplots.  The following"
msgstr "두 개의 샘플을 시각적으로 비교해 보는데 여러가지 방법이 있을 수 있습니다. 그 중에서 두 개의 박스플랏을 동시에 비교해보는 것은 이미 해 보았습니다."

#. type: example
#: R-intro.texi:3337
#, no-wrap
msgid ""
"> plot(ecdf(A), do.points=FALSE, verticals=TRUE, xlim=range(A, B))\n"
"> plot(ecdf(B), do.points=FALSE, verticals=TRUE, add=TRUE)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3344
msgid "will show the two empirical CDFs, and @code{qqplot} will perform a Q-Q plot of the two samples.  The Kolmogorov-Smirnov test is of the maximal vertical distance between the two ecdf's, assuming a common continuous distribution:"
msgstr "위에서 사용된 코드는 두개의 emprical CDFs (누적확률분포)를 비교할 것입니다. 또한 @code{qqplot} 함수를 이용하여 두 개의 샘플에 대한 Q-Q 플랏을 생성할 수도 있습니다. 아래의 코드는 일반 연속 분포를 가정하여 두 개의 @code{ecdf}의 최대수직거리차이(the maximal vertical distance)에 대하여 Kolmogorov-Smirnov 테스트를 수행합니다."

#. type: example
#: R-intro.texi:3347
#, no-wrap
msgid ""
"> ks.test(A, B)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3349
#, no-wrap
msgid ""
"         Two-sample Kolmogorov-Smirnov test\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3353
#, no-wrap
msgid ""
"data:  A and B\n"
"D = 0.5962, p-value = 0.05919\n"
"alternative hypothesis: two-sided\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3356
#, no-wrap
msgid ""
"Warning message:\n"
"cannot compute correct p-values with ties in: ks.test(A, B)\n"
msgstr ""

#. type: chapter
#: R-intro.texi:3359
#, no-wrap
msgid "Grouping, loops and conditional execution"
msgstr "그룹화, 반복문, 그리고 조건부 실행"

#. type: node
#: R-intro.texi:3365
#: R-intro.texi:3367
#: R-intro.texi:3368
#: R-intro.texi:3369
#: R-intro.texi:3383
#, no-wrap
msgid "Grouped expressions"
msgstr "그룹화된 표현"

#. type: node
#: R-intro.texi:3365
#: R-intro.texi:3367
#: R-intro.texi:3383
#: R-intro.texi:3384
#: R-intro.texi:3385
#: R-intro.texi:3392
#: R-intro.texi:3424
#, no-wrap
msgid "Control statements"
msgstr "제어문"

#. type: Plain text
#: R-intro.texi:3376
msgid "@R{} is an expression language in the sense that its only command type is a function or expression which returns a result.  Even an assignment is an expression whose result is the value assigned, and it may be used wherever any expression may be used; in particular multiple assignments are possible."
msgstr "@R{}은 명령어 형식으로 결과값을 반환하는 함수 또는 표현을 사용하는 점에서 표현언어(expression language)입니다.결과값를 재사용할 수 있도록 표현식에 할당하며, 이 표현식을 어느 곳에서든지 재사용할수도 있고 다중할당도 가능합니다."

#. type: Plain text
#: R-intro.texi:3382
msgid "Commands may be grouped together in braces, @code{@{@var{expr_1}; @var{@dots{}}; @var{expr_m}@}}, in which case the value of the group is the result of the last expression in the group evaluated.  Since such a group is also an expression it may, for example, be itself included in parentheses and used a part of an even larger expression, and so on."
msgstr "또한, @code{@{@var{expr_1}; @var{@dots{}}; @var{expr_m}@}}와 같이 여러개의 명령들을 중괄호로 한데 묶어 이것을 또한 표현식으로도 사용할 수 있습니다. 이렇게 중괄호로 묶은 것을 그룹화된 표현식이라고 하고, 이것의 결과는 그룹내의 맨 마지막 명령문이 실행되었을때 얻어지게 됩니다. 이렇게 그룹화된 표현식 역시 더 큰 표현식의 일부분으로도 사용될 수 있습니다."

#. type: node
#: R-intro.texi:3390
#: R-intro.texi:3392
#: R-intro.texi:3424
#, no-wrap
msgid "Conditional execution"
msgstr ""

#. type: node
#: R-intro.texi:3390
#: R-intro.texi:3392
#: R-intro.texi:3424
#, no-wrap
msgid "Repetitive execution"
msgstr ""

#. type: subsection
#: R-intro.texi:3393
#, no-wrap
msgid "Conditional execution: @code{if} statements"
msgstr "조건부 실행: @code{if} 문"

#. type: findex
#: R-intro.texi:3394
#: R-intro.texi:3401
#, no-wrap
msgid "if"
msgstr ""

#. type: Plain text
#: R-intro.texi:3397
msgid "The language has available a conditional construction of the form"
msgstr "조건문은 아래와 같은 형식을 가집니다."

#. type: example
#: R-intro.texi:3400
#, no-wrap
msgid "> if (@var{expr_1}) @var{expr_2} else @var{expr_3}\n"
msgstr ""

#. type: findex
#: R-intro.texi:3402
#, no-wrap
msgid "else"
msgstr ""

#. type: Plain text
#: R-intro.texi:3407
msgid "where @var{expr_1} must evaluate to a single logical value and the result of the entire expression is then evident."
msgstr "@var{expr_1}은 반드시 참 혹은 거짓이라는 단 하나의 논리형 값을 가져야만 합니다."

#. type: findex
#: R-intro.texi:3408
#, no-wrap
msgid "&&"
msgstr ""

#. type: findex
#: R-intro.texi:3409
#, no-wrap
msgid "||"
msgstr ""

#. type: Plain text
#: R-intro.texi:3415
msgid "The ``short-circuit'' operators @code{&&} and @code{||} are often used as part of the condition in an @code{if} statement.  Whereas @code{&} and @code{|} apply element-wise to vectors, @code{&&} and @code{||} apply to vectors of length one, and only evaluate their second argument if necessary."
msgstr "@code{&&}와 @code{||}는 종종 @code{if}이라는 조건문과 함께 쓰이는 ``short-circuit'' 연산자입니다.@code{&}와 @code{|}가 벡터내 구성요소 단위의 연산을 수행하는 반면, @code{&&}와 @code{||}는 길이가 1인 벡터들에만 적용되고 필요한 경우 그것의 두 번째 인자만 평가합니다(evaluate)."

#. type: findex
#: R-intro.texi:3416
#, no-wrap
msgid "ifelse"
msgstr ""

#. type: Plain text
#: R-intro.texi:3422
msgid "There is a vectorized version of the @code{if}/@code{else} construct, the @code{ifelse} function.  This has the form @code{ifelse(condition, a, b)} and returns a vector of the length of its longest argument, with elements @code{a[i]} if @code{condition[i]} is true, otherwise @code{b[i]}."
msgstr "@R{}은 벡터라이즈(vectorized)된 버전의 @code{if}/@code{else} 조건문인 @code{ifelse} 함수를 제공하고 있습니다. 이것은 @code{ifelse(condition, a, b)}의 형식을 가지고 만약  @code{condition[i]} 이 참이면 @code{a[i]}를, 거짓이면 @code{b[i]}를 결과값으로 가지게 됩니다."

#. type: subsection
#: R-intro.texi:3425
#, no-wrap
msgid "Repetitive execution: @code{for} loops, @code{repeat} and @code{while}"
msgstr "반복적 실행: @code{for}를 이용한 반복, @code{repeat} 그리고 @code{while}"

#. type: findex
#: R-intro.texi:3426
#, no-wrap
msgid "for"
msgstr ""

#. type: Plain text
#: R-intro.texi:3429
msgid "There is also a @code{for} loop construction which has the form"
msgstr "다음은 @code{for} 루프를 이용한 반복문에 대한 형식입니다."

#. type: example
#: R-intro.texi:3432
#, no-wrap
msgid "> for (@code{@var{name}} in @var{expr_1}) @var{expr_2}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3441
msgid "where @code{@var{name}} is the loop variable.  @var{expr_1} is a vector expression, (often a sequence like @code{1:20}), and @var{expr_2} is often a grouped expression with its sub-expressions written in terms of the dummy @emph{name}.  @var{expr_2} is repeatedly evaluated as @var{name} ranges through the values in the vector result of @var{expr_1}."
msgstr "@code{@var{name}}은 루프(loop) 변수입니다. @var{expr_1}은 흔히 @code{1:20}과 같이 사용되는 계열로 벡터표현식이고 @var{expr_2}는 더미(dummy) @emph{name}의 방법으로 씌여진 하위표현식(sub-expressions)과 함께 그룹화된 표현식인 경우가 종종 있습니다. @var{expr_2}는 @var{expr_1}의 벡터결과에서의 값을 통해 @var{name} 처럼 반복적으로 평가됩니다(evaluated)."

#. type: Plain text
#: R-intro.texi:3449
msgid "As an example, suppose @code{ind} is a vector of class indicators and we wish to produce separate plots of @code{y} versus @code{x} within classes.  One possibility here is to use @code{coplot()},@footnote{to be discussed later, or use @code{xyplot} from package @CRANpkg{lattice}.} which will produce an array of plots corresponding to each level of the factor.  Another way to do this, now putting all plots on the one display, is as follows:"
msgstr "예를들어, 만약 @code{ind}가 그룹멤버쉽을 나타낸다면, 각 그룹별로 @code{y}와 @code{x}의 관계를 살펴 볼 수 있는 플랏(plot)을 생성하고자 하는 경우를 가정해 봅니다.이를 수행하기 위한 한가지 옵션은 어떤 특정 요인이 가지고 있는 수준별로 플랏을 생성해주는 함수 @code{coplot()} @footnote{또는 @CRANpkg{lattice}에 있는 @code{xyplot}함수를 이용할 수 있습니다.} 을 이용하는 것입니다. 또 다른 방법으로는 아래와 같이 하는 것입니다."

#. type: example
#: R-intro.texi:3457
#, no-wrap
msgid ""
"> xc <- split(x, ind)\n"
"> yc <- split(y, ind)\n"
"> for (i in 1:length(yc)) @{\n"
"    plot(xc[[i]], yc[[i]])\n"
"    abline(lsfit(xc[[i]], yc[[i]]))\n"
"  @}\n"
msgstr ""

#. type: findex
#: R-intro.texi:3459
#, no-wrap
msgid "split"
msgstr ""

#. type: Plain text
#: R-intro.texi:3465
msgid "(Note the function @code{split()} which produces a list of vectors obtained by splitting a larger vector according to the classes specified by a factor.  This is a useful function, mostly used in connection with boxplots.  See the @code{help} facility for further details.)"
msgstr "위에서 사용된 함수 @code{split()}는 주어진 데이터를 특정 요인이 가지는 수준별로 분리한 뒤, 각각의 수준별 데이터를 컴포넌트로 가지는 리스트를 생성합니다.이것은 박스플랏과 많은 연관이 있는 매우 유용한 함수입니다.더 자세한 사항은 도움말 @code{help} 기능을 이용하시길 바랍니다."

#. type: quotation
#: R-intro.texi:3470
msgid "@strong{Warning}: @code{for()} loops are used in @R{} code much less often than in compiled languages.  Code that takes a `whole object' view is likely to be both clearer and faster in @R{}."
msgstr "@strong{Warning}: @R{}에서는 @code{for()}를 이용한 반복문은 다른 컴파일된 언어들에 비하여 자주 사용되지 않습니다. 그 이유는 전체 데이터 객체를 이용하여 벡터라이징 테크닉을 적절히 활용하는 것이 @R{}에서는 @code{for()}를 이용한 반복문보다도 더 빠른 연산속도를 가지며, 프로그래머의 입장에서 프로그램을 직관적으로 읽기 쉽고 이해가 빠르게 도와줍니다."

#. type: Plain text
#: R-intro.texi:3473
msgid "Other looping facilities include the"
msgstr "다른 반복기능들은 "

#. type: example
#: R-intro.texi:3476
#, no-wrap
msgid "> repeat @var{expr}\n"
msgstr ""

#. type: findex
#: R-intro.texi:3477
#, no-wrap
msgid "repeat"
msgstr ""

#. type: Plain text
#: R-intro.texi:3481
msgid "statement and the"
msgstr "문과"

#. type: example
#: R-intro.texi:3484
#, no-wrap
msgid "> while (@var{condition}) @var{expr}\n"
msgstr ""

#. type: findex
#: R-intro.texi:3485
#, no-wrap
msgid "while"
msgstr ""

#. type: Plain text
#: R-intro.texi:3489
msgid "statement."
msgstr "문을 가지고 있습니다."

#. type: Plain text
#: R-intro.texi:3492
msgid "The @code{break} statement can be used to terminate any loop, possibly abnormally.  This is the only way to terminate @code{repeat} loops."
msgstr "@code{break}와 @code{next}라는 두 명령문은 반복문을 중단할 때 쓰이지만, 중요한 차이가 있습니다. @code{break}는 반복문을 무조건 중단하고 반복문 이후의 명령들을 실행하고자 할때 쓰입니다. 따라서 @code{repeat}을 사용하여 @code{expr}를 반복하던 중, 이를 중단하고자 할때는 @code{break} 명령문을 사용하면 됩니다."

#. type: findex
#: R-intro.texi:3492
#, no-wrap
msgid "break"
msgstr ""

#. type: Plain text
#: R-intro.texi:3496
msgid "The @code{next} statement can be used to discontinue one particular cycle and skip to the ``next''."
msgstr "그러나, @code{next}는 현재 진행하고 있는 반복 단계만을 건너뛰고 다음 단계의 반복단계로 넘어가라는 의미입니다. "

#. type: findex
#: R-intro.texi:3496
#, no-wrap
msgid "next"
msgstr ""

#. type: Plain text
#: R-intro.texi:3501
msgid "Control statements are most often used in connection with @emph{functions} which are discussed in @ref{Writing your own functions}, and where more examples will emerge."
msgstr "실제로 프로그램의 흐름을 제어하는 것은 대개 사용자 정의함수를 작성할때 다루어집니다. 이에 관련된 예제들에 대해서는 다음의 @ref{Writing your own functions (사용자 정의함수 작성하기)} 에서 다룰 것입니다."

#. type: cindex
#: R-intro.texi:3505
#, no-wrap
msgid "Writing functions"
msgstr ""

#. type: Plain text
#: R-intro.texi:3514
msgid "As we have seen informally along the way, the @R{} language allows the user to create objects of mode @emph{function}.  These are true @R{} functions that are stored in a special internal form and may be used in further expressions and so on.  In the process, the language gains enormously in power, convenience and elegance, and learning to write useful functions is one of the main ways to make your use of @R{} comfortable and productive."
msgstr "@R{}은 방대한 양의 함수를 지원하고 있으나, 사용자가 직접 @emph{function(함수)}라는 모드를 가진 객체를 생성할 수 있도록 지원합니다. @R{}이 사전에 미리 제공하는 함수들은 내장(built-in)함수라고 하며, 사용자가 직접 정의하는 함수를 사용자 정의함수라고 합니다. 이를 작성하는 것은 사용자가 @R{}을 더 효율적으로, 기능적으로, 그리고 생산적인 통계분석처리를 할 수 있도록 도와줍니다."

#. type: Plain text
#: R-intro.texi:3519
msgid "It should be emphasized that most of the functions supplied as part of the @R{} system, such as @code{mean()}, @code{var()}, @code{postscript()} and so on, are themselves written in @R{} and thus do not differ materially from user written functions."
msgstr "@code{mean()}, @code{var()}, @code{postscript()}와 같이 @R{}시스템에 미리 내장된 많은 함수들 역시 @R{}로 쓰여졌기 때문에, 대다수의 내장함수들이 사용자 정의함수라고 할 수도 있습니다."

#. type: Plain text
#: R-intro.texi:3521
msgid "A function is defined by an assignment of the form"
msgstr "다음은 함수를 정의하는 방법입니다."

#. type: example
#: R-intro.texi:3524
#, no-wrap
msgid "> @var{name} <- function(@var{arg_1}, @var{arg_2}, @dots{}) @var{expression}\n"
msgstr ""

#. type: findex
#: R-intro.texi:3525
#, no-wrap
msgid "function"
msgstr ""

#. type: Plain text
#: R-intro.texi:3531
msgid "The @var{expression} is an @R{} expression, (usually a grouped expression), that uses the arguments, @var{arg_i}, to calculate a value.  The value of the expression is the value returned for the function."
msgstr "여기에서 @var{expression} 이란 어떤 값을 계산하기 위해 사용되는 @var{arg_i}를 이용하여 작성되는 @R{}표현식 (일반적으로 그룹화된 표현식)입니다."

#. type: Plain text
#: R-intro.texi:3535
msgid "A call to the function then usually takes the form @code{@var{name}(@var{expr_1}, @var{expr_2}, @dots{})} and may occur anywhere a function call is legitimate."
msgstr "그리고, @var{expression}을 수행함으로 얻어진 최종적인 결과를 함수의 반환값이라고 합니다.이렇게 정의된 함수를 사용하는 방법은 어느 곳에서나 @code{@var{name}(@var{expr_1}, @var{expr_2}, @dots{})}이라고 사용하면 됩니다."

#. type: node
#: R-intro.texi:3546
#: R-intro.texi:3548
#: R-intro.texi:3549
#: R-intro.texi:3620
#, no-wrap
msgid "Simple examples"
msgstr "간단한 예제"

#. type: node
#: R-intro.texi:3546
#: R-intro.texi:3548
#: R-intro.texi:3620
#: R-intro.texi:3621
#: R-intro.texi:3649
#, no-wrap
msgid "Defining new binary operators"
msgstr "새로운 이항연산자를 정의하기"

#. type: node
#: R-intro.texi:3546
#: R-intro.texi:3620
#: R-intro.texi:3649
#: R-intro.texi:3650
#: R-intro.texi:3710
#, no-wrap
msgid "Named arguments and defaults"
msgstr "인자명과 기본값"

#. type: node
#: R-intro.texi:3546
#: R-intro.texi:3649
#: R-intro.texi:3710
#: R-intro.texi:3740
#, no-wrap
msgid "The three dots argument"
msgstr ""

#. type: node
#: R-intro.texi:3546
#: R-intro.texi:3710
#: R-intro.texi:3740
#: R-intro.texi:3759
#, no-wrap
msgid "Assignment within functions"
msgstr "함수내 할당"

#. type: node
#: R-intro.texi:3546
#: R-intro.texi:3740
#: R-intro.texi:3759
#: R-intro.texi:3760
#: R-intro.texi:3768
#: R-intro.texi:3815
#: R-intro.texi:3858
#: R-intro.texi:3907
#, no-wrap
msgid "More advanced examples"
msgstr "좀 더 발전된 예제들"

#. type: node
#: R-intro.texi:3546
#: R-intro.texi:3759
#: R-intro.texi:3907
#: R-intro.texi:3908
#: R-intro.texi:3909
#: R-intro.texi:4032
#, no-wrap
msgid "Scope"
msgstr "Scope (스코프)"

#. type: node
#: R-intro.texi:3546
#: R-intro.texi:3907
#: R-intro.texi:4032
#: R-intro.texi:4033
#: R-intro.texi:4034
#: R-intro.texi:4091
#, no-wrap
msgid "Customizing the environment"
msgstr "환경 설정하기"

#. type: cindex
#: R-intro.texi:3546
#: R-intro.texi:3905
#: R-intro.texi:4032
#: R-intro.texi:4091
#: R-intro.texi:4095
#, no-wrap
msgid "Object orientation"
msgstr "Object orientation (객체지향적 방법)"

#. type: Plain text
#: R-intro.texi:3555
msgid "As a first example, consider a function to calculate the two sample @math{t}-statistic, showing ``all the steps''.  This is an artificial example, of course, since there are other, simpler ways of achieving the same end."
msgstr "첫번째 예제를 살펴봅니다.  두개의 샘플로부터 t-통계량을 구하는 함수를 다음과 같이 정의할 수 있습니다."

#. type: Plain text
#: R-intro.texi:3557
msgid "The function is defined as follows:"
msgstr ""

#. type: example
#: R-intro.texi:3567
#, no-wrap
msgid ""
"> twosam <- function(y1, y2) @{\n"
"    n1  <- length(y1); n2  <- length(y2)\n"
"    yb1 <- mean(y1);   yb2 <- mean(y2)\n"
"    s1  <- var(y1);    s2  <- var(y2)\n"
"    s <- ((n1-1)*s1 + (n2-1)*s2)/(n1+n2-2)\n"
"    tst <- (yb1 - yb2)/sqrt(s*(1/n1 + 1/n2))\n"
"    tst\n"
"  @}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3571
msgid "With this function defined, you could perform two sample @math{t}-tests using a call such as"
msgstr "이렇게 함수를 정의한 뒤, 이 정의한 함수 @code{twosam}을 아래와 같은 방법으로 사용할 수 있습니다."

#. type: example
#: R-intro.texi:3574
#, no-wrap
msgid "> tstat <- twosam(data$male, data$female); tstat\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3584
msgid "As a second example, consider a function to emulate directly the @sc{Matlab} backslash command, which returns the coefficients of the orthogonal projection of the vector @math{y} onto the column space of the matrix, @math{X}.  (This is ordinarily called the least squares estimate of the regression coefficients.)  This would ordinarily be done with the @code{qr()} function; however this is sometimes a bit tricky to use directly and it pays to have a simple function such as the following to use it safely."
msgstr "두번째 예제는 @sc{Matlab}에서 최소제곱법을 이용하여 회귀모델의 회귀계수를 구해주는 백슬래쉬(backslash)라는 명령어를 구현해보는 것입니다.본래 이것은 @code{qr()}함수를 이용하여 할 수도 있으나, 어떤 경우에는 직접적으로 활용하기가 곤란한 경우가 있습니다. 따라서, 다음과 같은 방식을 사용하는 것을 권장합니다."

#. type: Plain text
#: R-intro.texi:3587
msgid "Thus given a @math{n} by @math{1} vector @math{y} and an @math{n} by @math{p} matrix @math{X} then @math{X \\ y} is defined as"
msgstr "만약, @math{n}개의 원소를 가지는 열벡터 @math{y}가 있고, 사이즈가 @math{n}행 @math{p}열을 가진 디자인행렬 @math{X}가 있다면 @math{X\\y}는 "

#. type: ifnottex
#: R-intro.texi:3589
msgid "(X'X)^@{-@}X'y, where (X'X)^@{-@}"
msgstr ""

#. type: tex
#: R-intro.texi:3592
#, no-wrap
msgid "$(X^T X)^{-}X^T y$, where $(X^T X)^{-}$\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3594
msgid "is a generalized inverse of @math{X'X}."
msgstr "로 정의할 수 있으며, @math{(X'X)^@{-@}}는 @math{X'X}의 역행렬입니다."

#. type: example
#: R-intro.texi:3600
#, no-wrap
msgid ""
"> bslash <- function(X, y) @{\n"
"  X <- qr(X)\n"
"  qr.coef(X, y)\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3603
msgid "After this object is created it may be used in statements such as"
msgstr "위와 같이 정의된 @code{bslahs} 함수는 아래와 같이 @code{regcoeff}라는 객체에 결과를 저장하게 됩니다."

#. type: example
#: R-intro.texi:3606
#, no-wrap
msgid "> regcoeff <- bslash(Xmat, yvar)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3610
msgid "and so on."
msgstr ""

#. type: Plain text
#: R-intro.texi:3619
msgid "The classical @R{} function @code{lsfit()} does this job quite well, and more@footnote{See also the methods described in @ref{Statistical models in R}}.  It in turn uses the functions @code{qr()} and @code{qr.coef()} in the slightly counterintuitive way above to do this part of the calculation.  Hence there is probably some value in having just this part isolated in a simple to use function if it is going to be in frequent use.  If so, we may wish to make it a matrix binary operator for even more convenient use."
msgstr "이러한 기능은 @R{}에서 제공하는 @code{lsfit()} 함수를 통하여 더 잘 수행될 수 있습니다.@footnote{@ref{Statistical models in R (R에서 사용되는 통계모형들)}에 설명된 다른 방법들을 살펴보시길 바랍니다}. 실제로, @code{qr()}과 @code{qr.coef()}의 사용은 회귀계수를 구하는데 있어서 직관적이라고 보기 어려우며, 사용에 번거롭기도 합니다. 보다 편리한 사용을 위해 사용자가 직접 정의하는 이항연산자(binary operator)라는 기능을 제공합니다."

#. type: cindex
#: R-intro.texi:3622
#, no-wrap
msgid "Binary operators"
msgstr ""

#. type: Plain text
#: R-intro.texi:3626
msgid "Had we given the @code{bslash()} function a different name, namely one of the form"
msgstr "위에서 @code{bslash()} 함수를 작성하였습니다. 그러나 이러한 연산의 수행은 함수를 작성하는 것보다 아래와 같은 연산자의 형태를 지닌다면 훨씬 편리할 것입니다."

#. type: example
#: R-intro.texi:3629
#, no-wrap
msgid "%@var{anything}%\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3635
msgid "it could have been used as a @emph{binary operator} in expressions rather than in function form.  Suppose, for example, we choose @code{!} for the internal character.  The function definition would then start as"
msgstr "예를 들어, @code{anything}이라는 부분에 느낌표(@code{!})를 이용하여 @code{%!%}이라는 새로운 이항연산자를 아래와 같이 큰 따옴표를 이용하여 정의할 수 있습니다."

#. type: example
#: R-intro.texi:3638
#, no-wrap
msgid "> \"%!%\" <- function(X, y) @{ @dots{} @}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3644
msgid "(Note the use of quote marks.)  The function could then be used as @code{X %!% y}.  (The backslash symbol itself is not a convenient choice as it presents special problems in this context.)"
msgstr "이렇게 새로이 정의된 연산자는 @code{X %!% y}와 같이 사용할 수 있습니다."

#. type: Plain text
#: R-intro.texi:3648
msgid "The matrix multiplication operator, @code{%*%}, and the outer product matrix operator @code{%o%} are other examples of binary operators defined in this way."
msgstr "행렬의 곱셈을 수행하는 연산자 @code{%*%}, 외적을 수행하는 연산자 @code{%o%}는 이러한 방법으로 정의된 이항연산자의 대표적인 경우입니다."

#. type: cindex
#: R-intro.texi:3651
#, no-wrap
msgid "Named arguments"
msgstr ""

#. type: cindex
#: R-intro.texi:3652
#, no-wrap
msgid "Default values"
msgstr ""

#. type: Plain text
#: R-intro.texi:3659
msgid "As first noted in @ref{Generating regular sequences}, if arguments to called functions are given in the ``@code{@var{name}=@var{object}}'' form, they may be given in any order.  Furthermore the argument sequence may begin in the unnamed, positional form, and specify named arguments after the positional arguments."
msgstr "@ref{Generating regular sequences (규칙성을 지닌 일련의 숫자들을 생성하기)}에서 설명했던 것과 같이 함수에 사용되는 인자들은 ``@code{@var{name}=@var{object}}''와 같은 형식을 가지고 있습니다.이러한 방식으로 함수의 정의시 인자의 이름을 굳이 함께 정의하는 것은 프로그래밍의 논리적 오류를 줄이고자 하는 노력이라고 보시길 바랍니다."

#. type: Plain text
#: R-intro.texi:3661
msgid "Thus if there is a function @code{fun1} defined by"
msgstr "예를들어, 아래와 같이 정의된 함수 @code{fun1}가 있다고 가정한다면,"

#. type: example
#: R-intro.texi:3666
#, no-wrap
msgid ""
"> fun1 <- function(data, data.frame, graph, limit) @{\n"
"    @r{[function body omitted]}\n"
"  @}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3670
msgid "then the function may be invoked in several ways, for example"
msgstr "아래와 같이 세가지 방법으로 사용이 가능하며, 모두 같은 결과를 줍니다."

#. type: example
#: R-intro.texi:3675
#, no-wrap
msgid ""
"> ans <- fun1(d, df, TRUE, 20)\n"
"> ans <- fun1(d, df, graph=TRUE, limit=20)\n"
"> ans <- fun1(data=d, limit=20, graph=TRUE, data.frame=df)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3679
msgid "are all equivalent."
msgstr ""

#. type: Plain text
#: R-intro.texi:3684
msgid "In many cases arguments can be given commonly appropriate default values, in which case they may be omitted altogether from the call when the defaults are appropriate.  For example, if @code{fun1} were defined as"
msgstr "그런데, @R{}에서 제공하는 모든 함수들은 아래에서 보여지는 것과 같이 함수의 인자에 기본값이라는 것이 부여되어 있음을 알 수 있습니다."

#. type: example
#: R-intro.texi:3687
#, no-wrap
msgid "> fun1 <- function(data, data.frame, graph=TRUE, limit=20) @{ @dots{} @}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3691
msgid "it could be called as"
msgstr "따라서, 이 기본값들을 이용하여 함수의 모든 인자를 입력하지 않아도 함수는 연산을 수행하게 됩니다.아래와 같은 사용은 위의 세가지 다른 방법으로 사용했던것과 동일한 결과를 줍니다."

#. type: example
#: R-intro.texi:3694
#, no-wrap
msgid "> ans <- fun1(d, df)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3698
msgid "which is now equivalent to the three cases above, or as"
msgstr "@code{limit}의 기본값을 20에서 10으로 바꾸어 실행하고자 한다면 아래와 같이 할 수 있습니다."

#. type: example
#: R-intro.texi:3701
#, no-wrap
msgid "> ans <- fun1(d, df, limit=10)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3705
msgid "which changes one of the defaults."
msgstr ""

#. type: Plain text
#: R-intro.texi:3709
msgid "It is important to note that defaults may be arbitrary expressions, even involving other arguments to the same function; they are not restricted to be constants as in our simple example here."
msgstr "인자에 주어지는 기본값들이 본 예제에서 사용된 것과 같이 상수일 필요는 없으며, 임의의 표현식이 될 수 있습니다."

#. type: section
#: R-intro.texi:3711
#, no-wrap
msgid "The @samp{@dots{}} argument"
msgstr ""

#. type: Plain text
#: R-intro.texi:3724
msgid "Another frequent requirement is to allow one function to pass on argument settings to another.  For example many graphics functions use the function @code{par()} and functions like @code{plot()} allow the user to pass on graphical parameters to @code{par()} to control the graphical output.  (@xref{The par() function}, for more details on the @code{par()} function.)  This can be done by including an extra argument, literally @samp{@dots{}}, of the function, which may then be passed on.  An outline example is given below."
msgstr "함수를 정의할 때 @samp{@dots{}}라는 표현을 알아두면 매우 유용합니다.이는 한 함수의 인자들에 대한 설정을 다른 함수로 넘겨주는 것을 허용하는 역할을 합니다.예를들어, @code{plot()}과 같은 그래픽 함수들은 그래픽의 결과물을 정교히 조정하기 위한 방대한 양의 인자들이 포함하고 있는 함수 @code{par()}를 사용합니다. @code{par()}에 대해서 자세히 알고 싶으시다면 @xref{The par() function}를 살펴보시길 바랍니다."

#. type: example
#: R-intro.texi:3732
#, no-wrap
msgid ""
"fun1 <- function(data, data.frame, graph=TRUE, limit=20, ...) @{\n"
"  @r{[omitted statements]}\n"
"  if (graph)\n"
"    par(pch=\"*\", ...)\n"
"  @r{[more omissions]}\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3739
msgid "Less frequently, a function will need to refer to components of @samp{@dots{}}.  The expression @code{list(...)} evaluates all such arguments and returns them in a named list, while @code{..1}, @code{..2}, etc. evaluate them one at a time, with @samp{..n} returning the n'th unmatched argument."
msgstr "따라서, 그래픽 함수들은 실제로는 par()라는 함수에 있는 인자를 사용함으로서 결과물의 수정 및 조정을 조정하고, 이러한 역할을 위한 인자를 따로 정의하고 있지 않습니다. 이렇게 외부에 정의에 되어 있는 함수 및 객체들의 인자들을 정의하고자 하는 함수로 불러들여와 활용하고자할 때, 아래의 코드에서 보이는 것과 같이 @samp{@dots{}}를 함수 선언부에 나열된 인자들의 목록뒤에 붙여주면 됩니다."

#. type: section
#: R-intro.texi:3741
#, no-wrap
msgid "Assignments within functions"
msgstr ""

#. type: Plain text
#: R-intro.texi:3747
msgid "Note that @emph{any ordinary assignments done within the function are local and temporary and are lost after exit from the function}.  Thus the assignment @code{X <- qr(X)} does not affect the value of the argument in the calling program."
msgstr "@emph{함수 내부에서 이루어진 값에 대한 모든 할당은 함수내부내에서만 유효합니다}. 따라서, @code{X <- qr(X)}은 호출하는 프로그램에 있는 인자들의 값에 아무런 영향을 미치지 않습니다.이렇게 변수가 가지는 값이 지정된 함수 내부에서만 사용되는것을 지역할당(local assignment) 이라고 합니다."

#. type: Plain text
#: R-intro.texi:3752
msgid "To understand completely the rules governing the scope of @R{} assignments the reader needs to be familiar with the notion of an evaluation @emph{frame}.  This is a somewhat advanced, though hardly difficult, topic and is not covered further here."
msgstr "@R{}시스템내에서 할당범위 (the scope of assignment)에 대한 규칙들을 이해하기 위해서는 @emph{프레임(frame)}이 어떻게 평가가 되는지에 대한 개념에 익숙해져야만 합니다.그러나, 이것은 이 안내서의 수준을 벗어나므로 설명하지 않겠습니다. "

#. type: Plain text
#: R-intro.texi:3758
msgid "If global and permanent assignments are intended within a function, then either the ``superassignment'' operator, @code{<<-} or the function @code{assign()} can be used.  See the @code{help} document for details.  @SPLUS{} users should be aware that @code{<<-} has different semantics in @R{}.  These are discussed further in @ref{Scope}."
msgstr "만약, 함수 내부에서 연산된 어떤 값을 함수 외부 및 작성하는 프로그램 전체에서 사용하고 싶다면, 슈퍼할당 (superassignment)이라는 연산자 @code{<<-}를 사용하거나, 함수 @code{assign()}를 이용하시길 바랍니다.이렇게 변수가 가지는 값이 특정 함수내에서 국한되지 않고 전체에서 활용되는 개념을 전역할당 (global assignment 혹은 permanent assignment) 라고 합니다. 이것에 대한 더 자세한 사항은 도움말 @code{help}을 참조하시길 바랍니다. @SPLUS{}사용자는 @code{<<-} 연산자가 @R{}에서 다른 의미로 사용된다는 점을 반드시 알고 있어야 합니다. 이러한 다른 점들은 @ref{Scope (스코프)}에서 다루어질 것입니다."

#. type: node
#: R-intro.texi:3766
#: R-intro.texi:3768
#: R-intro.texi:3769
#: R-intro.texi:3815
#, no-wrap
msgid "Efficiency factors in block designs"
msgstr ""

#. type: node
#: R-intro.texi:3766
#: R-intro.texi:3768
#: R-intro.texi:3815
#: R-intro.texi:3816
#: R-intro.texi:3858
#, no-wrap
msgid "Dropping all names in a printed array"
msgstr ""

#. type: subsection
#: R-intro.texi:3766
#: R-intro.texi:3815
#: R-intro.texi:3858
#: R-intro.texi:3859
#, no-wrap
msgid "Recursive numerical integration"
msgstr ""

#. type: Plain text
#: R-intro.texi:3775
msgid "As a more complete, if a little pedestrian, example of a function, consider finding the efficiency factors for a block design.  (Some aspects of this problem have already been discussed in @ref{Index matrices}.)"
msgstr "함수에 대해서 좀 더 자세히 다루기 위해서 이번에는 블락 디자인에서 사용되는 효율성요인(efficiency factor)을 찾아보도록 하겠습니다. 이 문제에 대한 일부 내용은 이미 @ref{Index matrices (인덱스 행렬)}에서 다룬바 있습니다."

#. type: Plain text
#: R-intro.texi:3782
msgid "A block design is defined by two factors, say @code{blocks} (@code{b} levels) and @code{varieties} (@code{v} levels).  If @math{R} and @math{K} are the @math{v} by @math{v} and @math{b} by @math{b} @emph{replications} and @emph{block size} matrices, respectively, and @math{N} is the @math{b} by @math{v} incidence matrix, then the efficiency factors are defined as the eigenvalues of the matrix"
msgstr "@code{b}수준을 가진 요인 @code{blocks}와 @code{v}수준을 가진 요인 @code{varieties}을 이용한 블락 디자인을 생각해 봅니다.그리고, @math{R}과 @code{K}가 각각 @math{v}행 @math{v}열인 행렬 @code{replications}과 @math{b}행 @math{b}열인 행렬 @code{block size}이라고 합니다.효율성요인(efficiency factor)은 아래와 같은 행렬의 기저값(eigenvalues)을 이용하여, 구할 수 있습니다."

#. type: ifnottex
#: R-intro.texi:3785
msgid "E = I_v - R^@{-1/2@}N'K^@{-1@}NR^@{-1/2@} = I_v - A'A, where A = K^@{-1/2@}NR^@{-1/2@}."
msgstr ""

#. type: tex
#: R-intro.texi:3789
#, no-wrap
msgid ""
"$$E = I_v - R^{-1/2}N^T K^{-1}NR^{-1/2} = I_v - A^T A,$$\n"
"where $A = K^{-1/2}NR^{-1/2}$.\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3791
msgid "One way to write the function is given below."
msgstr "다음은 이를 산출하는 함수를 작성한 것입니다."

#. type: example
#: R-intro.texi:3805
#, no-wrap
msgid ""
"> bdeff <- function(blocks, varieties) @{\n"
"    blocks <- as.factor(blocks)             # @r{minor safety move}\n"
"    b <- length(levels(blocks))\n"
"    varieties <- as.factor(varieties)       # @r{minor safety move}\n"
"    v <- length(levels(varieties))\n"
"    K <- as.vector(table(blocks))           # @r{remove dim attr}\n"
"    R <- as.vector(table(varieties))        # @r{remove dim attr}\n"
"    N <- table(blocks, varieties)\n"
"    A <- 1/sqrt(K) * N * rep(1/sqrt(R), rep(b, v))\n"
"    sv <- svd(A)\n"
"    list(eff=1 - sv$d^2, blockcv=sv$u, varietycv=sv$v)\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3809
msgid "It is numerically slightly better to work with the singular value decomposition on this occasion rather than the eigenvalue routines."
msgstr "실제로 이경우에는 the singular value decomposition을 이용하는 것이 기저값(eigenvalue)를 이용한 방법보다 보다 나은 연산결과를 줍니다."

#. type: Plain text
#: R-intro.texi:3814
msgid "The result of the function is a list giving not only the efficiency factors as the first component, but also the block and variety canonical contrasts, since sometimes these give additional useful qualitative information."
msgstr "위에서 작성된 함수는 효율성 요인만을 결과값으로 돌려주는 것만이 아니라 @code{block}과 @code{variety} 정준대비(canonical contrast) 또한 알려줍니다. 그 이유는 이 두가지 결과값들이 때때로 유용하기 때문입니다."

#. type: Plain text
#: R-intro.texi:3823
msgid "For printing purposes with large matrices or arrays, it is often useful to print them in close block form without the array names or numbers.  Removing the @code{dimnames} attribute will not achieve this effect, but rather the array must be given a @code{dimnames} attribute consisting of empty strings.  For example to print a matrix, @code{X}"
msgstr "사이즈가 큰 행렬 혹은 배열의 출력이 주목적인 경우, 행렬과 배열의 구성요소의 위치를 알려주는 행, 열, 혹은 차원에 대한 정보를 나타내지 않고 오로지 데이터값만을 출력하는 것이 유용한 경우가 있습니다. 이런 경우에는 속성 @code{dimnames}이 가지는 문자열값들을 초기화 시켜주면 됩니다. 예를 들어 행렬 @code{X}의 행과 열의 정보 없이 데이터만 출력하고자 할 경우, 아래와 같이 할 수 있습니다."

#. type: example
#: R-intro.texi:3828
#, no-wrap
msgid ""
"> temp <- X\n"
"> dimnames(temp) <- list(rep(\"\", nrow(X)), rep(\"\", ncol(X)))\n"
"> temp; rm(temp)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3834
msgid "This can be much more conveniently done using a function, @code{no.dimnames()}, shown below, as a ``wrap around'' to achieve the same result.  It also illustrates how some effective and useful user functions can be quite short."
msgstr "이와 같은 기능을 아래와 같이 @code{no.dimnames()}라는 사용자정의 함수를 작성함으로서 수행할 수 도 있습니다. 이것은 또한 이렇게 유용한 기능을 위한 사용자정의함수가 꼭 길지 않아도 됨을 잘 보여주고 있습니다."

#. type: example
#: R-intro.texi:3846
#, no-wrap
msgid ""
"no.dimnames <- function(a) @{\n"
"  ## @r{Remove all dimension names from an array for compact printing.}\n"
"  d <- list()\n"
"  l <- 0\n"
"  for(i in dim(a)) @{\n"
"    d[[l <- l + 1]] <- rep(\"\", i)\n"
"  @}\n"
"  dimnames(a) <- d\n"
"  a\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3850
msgid "With this function defined, an array may be printed in close format using"
msgstr "위와 같이 정의된 함수는 아래와 같이 사용함으로서 배열이 가지는 데이터 값들만 출력해낼수 있습니다."

#. type: example
#: R-intro.texi:3853
#, no-wrap
msgid "> no.dimnames(X)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3857
msgid "This is particularly useful for large integer arrays, where patterns are the real interest rather than the values."
msgstr "이번 섹션에서 다룬 내용은 배열 데이터 값 자체 보다 배열의 값들이 가지는 패턴을 분석하고자 할때 더 유용하므로 주로 사이즈가 큰 정수형 배열을 다룰때 사용됩니다"

#. type: Plain text
#: R-intro.texi:3865
msgid "Functions may be recursive, and may themselves define functions within themselves.  Note, however, that such functions, or indeed variables, are not inherited by called functions in higher evaluation frames as they would be if they were on the search path."
msgstr "함수는 재귀적일 수 있으며, 함수 자신이 함수 자신내에 함수를 정의할 수도 있습니다.그러나, 이러한 함수들 (또는 실제로 변수들)은 마치 탐색경로(serach path)에 존재했던 것같은 상위평가프레임 (higer evaluation frames)내에서 불려진 함수에 의해 존재하는 것이 아니라는 점을 알고 있어야 합니다."

#. type: Plain text
#: R-intro.texi:3876
msgid "The example below shows a naive way of performing one-dimensional numerical integration.  The integrand is evaluated at the end points of the range and in the middle.  If the one-panel trapezium rule answer is close enough to the two panel, then the latter is returned as the value.  Otherwise the same process is recursively applied to each panel.  The result is an adaptive integration process that concentrates function evaluations in regions where the integrand is farthest from linear.  There is, however, a heavy overhead, and the function is only competitive with other algorithms when the integrand is both smooth and very difficult to evaluate."
msgstr "아래의 예제는 1개의 변수만을 가지는 함수를 적분하는 기초적인 방법에 대해서 다루고 있습니다. 적분을 하는 기본 개념은 먼저 적분하고자 하는 범위의 양쪽 끝점과 그 중간점에 해당하는 함수들의 값을 얻어낸 후, 사다리꼴 공식을 이용하여 단일 패널에서 얻어진 결과가 이중패널에서 얻어진 결과와 매우 유사할 경우 이중패널로부터 얻어진 결과를 적분값으로 결정합니다. 만약, 그렇지 않다면 각각의 패널에 위에서 묘사한 프로세스를 다시 적용하되 값의 변화가 없을때까지 반복합니다."

#. type: Plain text
#: R-intro.texi:3878
msgid "The example is also given partly as a little puzzle in @R{} programming."
msgstr "이 예제는 @R{} 프로그래밍을 하는데 있어서 다소 복잡한 부분에 해당하므로 이해가 어려울 수 도 있습니다."

#. type: example
#: R-intro.texi:3900
#, no-wrap
msgid ""
"area <- function(f, a, b, eps = 1.0e-06, lim = 10) @{\n"
"  fun1 <- function(f, a, b, fa, fb, a0, eps, lim, fun) @{\n"
"    ## @r{function `fun1' is only visible inside `area'}\n"
"    d <- (a + b)/2\n"
"    h <- (b - a)/4\n"
"    fd <- f(d)\n"
"    a1 <- h * (fa + fd)\n"
"    a2 <- h * (fd + fb)\n"
"    if(abs(a0 - a1 - a2) < eps || lim == 0)\n"
"      return(a1 + a2)\n"
"    else @{\n"
"      return(fun(f, a, d, fa, fd, a1, eps, lim - 1, fun) +\n"
"             fun(f, d, b, fd, fb, a2, eps, lim - 1, fun))\n"
"    @}\n"
"  @}\n"
"  fa <- f(a)\n"
"  fb <- f(b)\n"
"  a0 <- ((fa + fb) * (b - a))/2\n"
"  fun1(f, a, b, fa, fb, a0, eps, lim, fun1)\n"
"@}\n"
msgstr ""

#. type: menuentry
#: R-intro.texi:3905
msgid "Scope::"
msgstr ""

#. type: Plain text
#: R-intro.texi:3914
msgid "The discussion in this section is somewhat more technical than in other parts of this document.  However, it details one of the major differences between @SPLUS{} and @R{}."
msgstr "이번 섹션에서 다루어질 내용은 이 문서의 다른 부분들보다는 다소 어려운 기술적인 부분에 해당합니다. 그러나, 이 부분은 @R{}과 @SPLUS{}간의 다른 점들 중 함수와 관련된 부분입니다."

#. type: Plain text
#: R-intro.texi:3925
msgid "The symbols which occur in the body of a function can be divided into three classes; formal parameters, local variables and free variables.  The formal parameters of a function are those occurring in the argument list of the function.  Their values are determined by the process of @emph{binding} the actual function arguments to the formal parameters.  Local variables are those whose values are determined by the evaluation of expressions in the body of the functions.  Variables which are not formal parameters or local variables are called free variables.  Free variables become local variables if they are assigned to.  Consider the following function definition."
msgstr "먼저 함수의 본체에 사용되는 기호는 형식인자 (formal parameters), 지역변수 (local variables), 그리고 자유변수 (free variables) 라는 세가지가 있습니다.형식인자 (formal parameters)라는 것은 함수 선언시 아직 값이 부여되지 않은 인자들의 목록을 의미합니다. 따라서 형식인자 (formal parameters)는 실제로 함수가 사용될 때 함수가 받아들이는 인자의 값을 가지게 됩니다. 이에 반해, 지역변수라는 것은 함수 본체에서 사용된 표현식의 결과값들을 가지게 됩니다. 만약, 어떤 변수가 형식인자 (formal parameters)도 아니고 지역변수도 아닌 경우, 이러한 변수를 바로 자유변수라고 합니다. 그러나, 상황에 따라서 자유변수에 값이 부여될 경우 이는 지역변수가 되기도 합니다. 더 정확한 개념의 이해를 위해서 다음의 예제를 살펴봅시다."

#. type: example
#: R-intro.texi:3933
#, no-wrap
msgid ""
"f <- function(x) @{\n"
"  y <- 2*x\n"
"  print(x)\n"
"  print(y)\n"
"  print(z)\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3937
msgid "In this function, @code{x} is a formal parameter, @code{y} is a local variable and @code{z} is a free variable."
msgstr "여기 정의되어 있는 함수 @code{f}는 @code{x}라는 형식인자 (formal parameter)를 가지며, @code{y}라는 지역변수를 가지는데 반해, 자유변수 @code{z}를 가지고 있습니다."

#. type: Plain text
#: R-intro.texi:3941
msgid "In @R{} the free variable bindings are resolved by first looking in the environment in which the function was created.  This is called @emph{lexical scope}.  First we define a function called @code{cube}."
msgstr "@R{}에서 자유변수에 대한 값의 할당은 변수가 관리가 되고 있는 함수에 우선권이 부여되며, 이것을 렉시컬 스코프 (lexical scope)라고 합니다. 이해를 돕기 위해서 아래와 같이 정의된 함수 @code{cube}를 살펴봅니다."

#. type: example
#: R-intro.texi:3947
#, no-wrap
msgid ""
"cube <- function(n) @{\n"
"  sq <- function() n*n\n"
"  n*sq()\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3959
msgid "The variable @code{n} in the function @code{sq} is not an argument to that function.  Therefore it is a free variable and the scoping rules must be used to ascertain the value that is to be associated with it.  Under static scope (@SPLUS{}) the value is that associated with a global variable named @code{n}.  Under lexical scope (@R{}) it is the parameter to the function @code{cube} since that is the active binding for the variable @code{n} at the time the function @code{sq} was defined.  The difference between evaluation in @R{} and evaluation in @SPLUS{} is that @SPLUS{} looks for a global variable called @code{n} while @R{} first looks for a variable called @code{n} in the environment created when @code{cube} was invoked."
msgstr "함수 @code{sq}내에 있는 변수 @code{n}은 형식인자가 아닌 자유변수입니다.  이 자유변수가 어떠한 값을 가져야 하는가에 대해서 스코핑 규칙 (scoping rules)이 적용됩니다. 정적 스코핑 규칙(static scoping rule)을 가지는 @SPLUS{}에서는 자유변수가 가지는 값은 @code{n}이라는 이름을 가진 전역변수 (global variable)에 의해서 그 값이 결정됩니다. 이에 반해, 렉시컬 스코핑 규칙을 가지는 @R{}은 자유변수에 함수 @code{cube}라는 실행될 때 가지는 인자의 값을 할당 합니다. 그 이유는 @code{n}은 함수 @code{sq}가 정의되기 '바로 이전에' 함수 @code{cube} 내부에서 정의되어 관리되는 변수이기 때문입니다. 이러한 스코핑 규칙의 차이는 @R{}과 @SPLUS{}를 구분짓는 큰 특징들 중의 하나 입니다. 즉, @R{}의 기본적인 스코핑 규칙은 전역변수에 의한 관리가 아닌 지역에 촛점을 맞춘 렉시컬 스코핑을 따르는 것입니다."

#. type: example
#: R-intro.texi:3971
#, no-wrap
msgid ""
"## @r{first evaluation in S}\n"
"S> cube(2)\n"
"Error in sq(): Object \"n\" not found\n"
"Dumped\n"
"S> n <- 3\n"
"S> cube(2)\n"
"[1] 18\n"
"## @r{then the same function evaluated in R}\n"
"R> cube(2)\n"
"[1] 8\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3983
msgid "Lexical scope can also be used to give functions @emph{mutable state}.  In the following example we show how @R{} can be used to mimic a bank account.  A functioning bank account needs to have a balance or total, a function for making withdrawals, a function for making deposits and a function for stating the current balance.  We achieve this by creating the three functions within @code{account} and then returning a list containing them.  When @code{account} is invoked it takes a numerical argument @code{total} and returns a list containing the three functions.  Because these functions are defined in an environment which contains @code{total}, they will have access to its value."
msgstr "다음의 예제는 @R{}의 렉시컬 스코핑이 얼마나 효율적으로 은행계좌를 구현할 수 있는가를 보여줍니다. 은행계좌를 구현하기 위해서는 총계 (balance 혹은 total), 출금 (withdrawal), 입금 (deposits), 그리고 현재잔고(current balance)이 필요합니다. 먼저, 출급, 입금, 그리고 잔고에 대한 함수를 먼저 만든 뒤, 이를 리스트형식으로 한데 묶어 함수 @code{account}를 정의합니다. 함수 @code{account}가 실제적으로 실행되었을때 @code{total}이라는 인자는 특정한 값을 가진 인자가 되어 리스트에 정의되어 있는 출금, 입금, 그리고 잔고라는 함수에 그 값을 전달하게 됩니다. 그 이유는 바로 @code{total}이라는 인자가 함수 @code{account}에 의해서 정의되어 관리되는 변수이기 때문입니다."

#. type: Plain text
#: R-intro.texi:3985
msgid "The special assignment operator, @code{<<-},"
msgstr ""

#. type: findex
#: R-intro.texi:3985
#, no-wrap
msgid "<<-"
msgstr ""

#. type: Plain text
#: R-intro.texi:3998
msgid "is used to change the value associated with @code{total}.  This operator looks back in enclosing environments for an environment that contains the symbol @code{total} and when it finds such an environment it replaces the value, in that environment, with the value of right hand side.  If the global or top-level environment is reached without finding the symbol @code{total} then that variable is created and assigned to there.  For most users @code{<<-} creates a global variable and assigns the value of the right hand side to it@footnote{In some sense this mimics the behavior in @SPLUS{} since in @SPLUS{} this operator always creates or assigns to a global variable.}.  Only when @code{<<-} has been used in a function that was returned as the value of another function will the special behavior described here occur."
msgstr "아래에서 보이는 것과 같이 @code{total}이라는 변수의 값을 변경하기 위해서 특별한 할당 연산자인 @code{<<-}를 사용하였습니다.이 연산자는 기호 @code{total}이 존재하는 환경(environment)을 둘러싼 환경 (enclosing enviornment)을 살펴보고, 그러한 환경이 찾아졌을때 해당 환경에 존재하는 값으로 대체하게 됩니다. 만약, 기호 @code{total}을 프로그램 전역 또는 최상위 환경 (top-level environment)에 도달할때까지도 찾을 수 없었다면, 기호 @code{total}이 새로이 생성이 되고 그 값이 할당되게 됩니다.@footnote{어떤한 의미로는 이것은 @SPLUS{}의 기능을 흉내낸 것처럼 보일 수도 있습니다. 그 이유는 @SPLUS{}의 연산이 항상 전역변수를 생성하고 이에 값을 할당하기 때문입니다}"

#. type: example
#: R-intro.texi:4019
#, no-wrap
msgid ""
"open.account <- function(total) @{\n"
"  list(\n"
"    deposit = function(amount) @{\n"
"      if(amount <= 0)\n"
"        stop(\"Deposits must be positive!\\n\")\n"
"      total <<- total + amount\n"
"      cat(amount, \"deposited.  Your balance is\", total, \"\\n\\n\")\n"
"    @},\n"
"    withdraw = function(amount) @{\n"
"      if(amount > total)\n"
"        stop(\"You don't have that much money!\\n\")\n"
"      total <<- total - amount\n"
"      cat(amount, \"withdrawn.  Your balance is\", total, \"\\n\\n\")\n"
"    @},\n"
"    balance = function() @{\n"
"      cat(\"Your balance is\", total, \"\\n\\n\")\n"
"    @}\n"
"  )\n"
"@}\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:4022
#, no-wrap
msgid ""
"ross <- open.account(100)\n"
"robert <- open.account(200)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:4026
#, no-wrap
msgid ""
"ross$withdraw(30)\n"
"ross$balance()\n"
"robert$balance()\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:4030
#, no-wrap
msgid ""
"ross$deposit(50)\n"
"ross$balance()\n"
"ross$withdraw(500)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4040
msgid "Users can customize their environment in several different ways.  There is a site initialization file and every directory can have its own special initialization file.  Finally, the special functions @code{.First} and @code{.Last} can be used."
msgstr "사용자는 사용자의 환경설정을 여러가지 방법으로 변경할 수 있습니다.먼저, 사이트 초기화 파일(site initialization file)이라는 것이 있고, 각각의 디렉토리마다 특정역할을 하는 초기화 파일(special initialization file)이 있습니다. 그리고, @code{.First}와 @code{.Last}이라는 특수한 함수들이 있습니다."

#. type: Plain text
#: R-intro.texi:4055
msgid "The location of the site initialization file is taken from the value of the @env{R_PROFILE} environment variable.  If that variable is unset, the file @file{Rprofile.site} in the @R{} home subdirectory @file{etc} is used.  This file should contain the commands that you want to execute every time @R{} is started under your system.  A second, personal, profile file named @file{.Rprofile}@footnote{So it is hidden under UNIX.} can be placed in any directory.  If @R{} is invoked in that directory then that file will be sourced.  This file gives individual users control over their workspace and allows for different startup procedures in different working directories.  If no @file{.Rprofile} file is found in the startup directory, then @R{} looks for a @file{.Rprofile} file in the user's home directory and uses that (if it exists).  If the environment variable @env{R_PROFILE_USER} is set, the file it points to is used instead of the @file{.Rprofile} files."
msgstr "사이트 초기화 파일의 위치는 @env{R_PROFILE}이라는 환경변수의 값에 의해 정해집니다.  만약, 이 환경변수의 값이 정해지지 않았다면 @R{}의 홈에 있는 @file{etc}라는 하위디렉토리에 있는 @file{Rprofile.site}의 값이 사용되게 됩니다.이 파일은 사용자의 시스템에서 @R{}이 실행될때마다 반드시 실행되어야 할 명령어들을 포함하고 있습니다.두번째로 @file{.Rprofile}@footnote{UNIX에서는 숨겨진 파일입니다.}이라는 개인프로파일이라는 파일은 어느 디렉토리에나 놓일 수 있습니다.만약, @R{}이 해당 디렉토리에서 실행된다면 이 파일은 소스될(sourced, 즉 불러들어 읽힘) 것입니다.이 파일은 해당 작업공간에 대한 개인사용자 설정이며, 다른 디렉토리마다 다른 스타트업(startup) 절차를 수행할 수 있게 해줍니다.만약, @file{.Rprofile}이라는 파일을 스타트업 디렉토리에 없다면, @R{}은 사용자의 홈디렉토리에 있는 (만약 있다면) @file{.Rprofile}을 사용하게 됩니다.만약, 환경설정변수 @env{R_PROFILE_USER}가 지정되어 있다면, @file{.Rprofile}파일대신에 사용될 것입니다."

#. type: Plain text
#: R-intro.texi:4062
msgid "Any function named @code{.First()} in either of the two profile files or in the @file{.RData} image has a special status.  It is automatically performed at the beginning of an @R{} session and may be used to initialize the environment.  For example, the definition in the example below alters the prompt to @code{$} and sets up various other useful things that can then be taken for granted in the rest of the session."
msgstr "사이트 프로파일, 사용자 프로파일, 그리고 @file{.RData}라는 이미지 내부에 @code{.First()}라고 이름이 붙은 함수들은 특정한 상태를 가지고 있습니다. 이것들은 @R{}세션이 시작할 때 자동으로 작업환경을 초기화할 때 사용되게 됩니다. 아래의 코드를 살펴 보신다면 더 빠른 이해를 가지실 수 있습니다. 예를들어, 함수 @code{.First}의 정의중 @code{prompt}라는 인자 @code{$}를 다른 기호로 변경하여 @R{}세션내내 사용자가 변경한 기호로 프롬프트를 사용할 수 있습니다."

#. type: Plain text
#: R-intro.texi:4066
msgid "Thus, the sequence in which files are executed is, @file{Rprofile.site}, the user profile, @file{.RData} and then @code{.First()}.  A definition in later files will mask definitions in earlier files."
msgstr "일반적으로 사용자의 환경설정을 위한 파일의 실행순서는 @file{Rprofiles.site}, 그리고 사용자 프로파일, @file{.RData}, 그리고 @code{.First()} 순입니다."

#. type: example
#: R-intro.texi:4077
#, no-wrap
msgid ""
"> .First <- function() @{\n"
"  options(prompt=\"$ \", continue=\"+\\t\")  # @r{@code{$} is the prompt}\n"
"  options(digits=5, length=999)         # @r{custom numbers and printout}\n"
"  x11()                                 # @r{for graphics}\n"
"  par(pch = \"+\")                        # @r{plotting character}\n"
"  source(file.path(Sys.getenv(\"HOME\"), \"R\", \"mystuff.R\"))\n"
"                                        # @r{my personal functions}\n"
"  library(MASS)                         # @r{attach a package}\n"
"@}\n"
msgstr ""

#. type: findex
#: R-intro.texi:4078
#, no-wrap
msgid ".First"
msgstr ""

#. type: Plain text
#: R-intro.texi:4082
msgid "Similarly a function @code{.Last()}, if defined, is (normally) executed at the very end of the session.  An example is given below."
msgstr "위에서 정의된 @code{.First()}와 유사하게 함수 @code{.Last()}를 아래와 같이 정의할 수 있습니다.이는 보통 세션 종료시 사용됩니다."

#. type: example
#: R-intro.texi:4088
#, no-wrap
msgid ""
"> .Last <- function() @{\n"
"  graphics.off()                        # @r{a small safety measure.}\n"
"  cat(paste(date(),\"\\nAdios\\n\"))        # @r{Is it time for lunch?}\n"
"@}\n"
msgstr ""

#. type: findex
#: R-intro.texi:4089
#, no-wrap
msgid ".Last"
msgstr ""

#. type: section
#: R-intro.texi:4092
#, no-wrap
msgid "Classes, generic functions and object orientation"
msgstr "클래스, 제네릭 함수, 그리고 객체지향 프로그래밍"

#. type: cindex
#: R-intro.texi:4094
#, no-wrap
msgid "Generic functions"
msgstr ""

#. type: Plain text
#: R-intro.texi:4103
msgid "The class of an object determines how it will be treated by what are known as @emph{generic} functions.  Put the other way round, a generic function performs a task or action on its arguments @emph{specific to the class of the argument itself}.  If the argument lacks any @code{class} attribute, or has a class not catered for specifically by the generic function in question, there is always a @emph{default action} provided."
msgstr "객체의 클래스라는 것은 @emph{제네릭 함수 (generic function)}가 어떻게 그 객체를 처리할 것인지 대한 정보를 제공합니다. 즉, 제네릭 함수라는 것은 객체의 클래스정보를 인자로 가지기 때문에 만약 클래스 정보가 없거나, 제네릭 함수내에서 해당 클래스에 대한 처리방법이 정의되지 않았다면 @emph{기본행동 (default action)}을 수행하게 됩니다."

#. type: Plain text
#: R-intro.texi:4110
msgid "An example makes things clearer.  The class mechanism offers the user the facility of designing and writing generic functions for special purposes.  Among the other generic functions are @code{plot()} for displaying objects graphically, @code{summary()} for summarizing analyses of various types, and @code{anova()} for comparing statistical models."
msgstr "예를 들면 더욱 수월하게 이해가 가실 것입니다.클래스 메커니즘 (작동하는 방법)은 사용자가 제네릭 함수를 디자인하고 새로 정의할 수 있도록 도와줍니다. 단편적인 예로 @code{plot()}이라는 제네릭 함수는 여러가지 객체의 종류 (즉, 클래스)에 따른 다양한 시각화 방법을 제공합니다.또 다른 제네릭함수 @code{summary()}는 다양한 종류의 객체에 대한 통계분석의 결과를 요약해 주며, @code{anova()}는 여러개의 통계 모델들을 비교할 때 사용됩니다."

#. type: Plain text
#: R-intro.texi:4114
msgid "The number of generic functions that can treat a class in a specific way can be quite large.  For example, the functions that can accommodate in some fashion objects of class @code{\"data.frame\"} include"
msgstr "클래스를 특정한 방법으로 처리하는 제네릭 함수의 수는 매우 많습니다. 예를 들어, 클래스 @code{\"data.frame\"}의 객체를 처리하는 방법들에 대해서는 아래와 같은 내용들이 있습니다."

#. type: example
#: R-intro.texi:4118
#, no-wrap
msgid ""
"[     [[<-    any    as.matrix\n"
"[<-   mean    plot   summary\n"
msgstr ""

#. type: findex
#: R-intro.texi:4120
#, no-wrap
msgid "methods"
msgstr ""

#. type: Plain text
#: R-intro.texi:4123
msgid "A currently complete list can be got by using the @code{methods()} function:"
msgstr "이와 같이 어떤 처리 방법들이 제네릭 함수안에 구현이 되어 있는지 확인하고 싶다면 아래와 같이 @code{methods()}를 사용해보세요."

#. type: example
#: R-intro.texi:4126
#, no-wrap
msgid "> methods(class=\"data.frame\")\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4133
msgid "Conversely the number of classes a generic function can handle can also be quite large.  For example the @code{plot()} function has a default method and variants for objects of classes @code{\"data.frame\"}, @code{\"density\"}, @code{\"factor\"}, and more.  A complete list can be got again by using the @code{methods()} function:"
msgstr "이와 반대로, 제네릭 함수가 처리해 낼 수 있는 클래스의 종류 또한 많습니다. 예를 들어, 함수 @code{plot()}는 기본처리방법(default method)을 가지고 있고, @code{\"data.frame\"}, @code{\"density\"}, @code{\"factor\"}, 그 밖의 클래스들로부터 파생되어진 다양한 종류의 객체들을 처리할 수 있습니다. 만약, 어떠한 종류의 객체들을 처리할 수 있는지 확인해 보고 싶으시다면 아래와 같이 @code{methods()}를 함수의 이름과 함께 사용하시면 됩니다."

#. type: example
#: R-intro.texi:4136
#, no-wrap
msgid "> methods(plot)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4139
msgid "For many generic functions the function body is quite short, for example"
msgstr "일반적으로 제네릭 함수의 본체는 아래에서 보는 것과 같이 매우 짧습니다. "

#. type: example
#: R-intro.texi:4144
#, no-wrap
msgid ""
"> coef\n"
"function (object, ...)\n"
"UseMethod(\"coef\")\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4149
msgid "The presence of @code{UseMethod} indicates this is a generic function.  To see what methods are available we can use @code{methods()}"
msgstr "여기에서 @code{UseMethod}라는 @code{coef}라는 함수가 제네릭 함수임을 의미하는 것입니다.따라서 @code{coef}라는 제네릭 함수에 대한 처리방식에 대한 내용을 확인하고 싶으시다면 @code{methods()}를 사용하시면 됩니다."

#. type: example
#: R-intro.texi:4154
#, no-wrap
msgid ""
"> methods(coef)\n"
"[1] coef.aov*         coef.Arima*       coef.default*     coef.listof*\n"
"[5] coef.nls*         coef.summary.nls*\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:4156
#, no-wrap
msgid "   Non-visible functions are asterisked\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4161
msgid "In this example there are six methods, none of which can be seen by typing its name.  We can read these by either of"
msgstr "위의 예제는 6가지의 처리방식이 있으나, 위에서 보는 바와 같이 메소드들이 어떻게 작성되었는지에 대해서는 보여지지 않는다고 *를 이용하여 표기하고 있습니다. 그러나, 아래와 같은 방법으로 이러한 메소드들에 대한 알고리즘의 구현방법을 확인할 수 있습니다."

#. type: findex
#: R-intro.texi:4162
#, no-wrap
msgid "getAnywhere"
msgstr ""

#. type: findex
#: R-intro.texi:4163
#, no-wrap
msgid "getS3method"
msgstr ""

#. type: example
#: R-intro.texi:4171
#, no-wrap
msgid ""
"> getAnywhere(\"coef.aov\")\n"
"A single object matching 'coef.aov' was found\n"
"It was found in the following places\n"
"  registered S3 method for coef from namespace stats\n"
"  namespace:stats\n"
"with value\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:4177
#, no-wrap
msgid ""
"function (object, ...)\n"
"@{\n"
"    z <- object$coef\n"
"    z[!is.na(z)]\n"
"@}\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:4184
#, no-wrap
msgid ""
"> getS3method(\"coef\", \"aov\")\n"
"function (object, ...)\n"
"@{\n"
"    z <- object$coef\n"
"    z[!is.na(z)]\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4189
msgid "A function named @code{@var{gen}.@var{cl}} will be invoked by the generic @code{@var{gen}} for class @code{@var{cl}}, so do not name functions in this style unless they are intended to be methods."
msgstr ""

#. type: Plain text
#: R-intro.texi:4192
msgid "The reader is referred to the @emph{R Language Definition} for a more complete discussion of this mechanism."
msgstr "이 섹션의 내용을 더 정확히 이해하기 위해서는 @emph{R Language Definition}라는 문서를 참고하셔야 합니다."

#. type: cindex
#: R-intro.texi:4196
#, no-wrap
msgid "Statistical models"
msgstr ""

#. type: Plain text
#: R-intro.texi:4203
msgid "This section presumes the reader has some familiarity with statistical methodology, in particular with regression analysis and the analysis of variance.  Later we make some rather more ambitious presumptions, namely that something is known about generalized linear models and nonlinear regression."
msgstr "이번 섹션에서 다루게 될 내용은 여러분이 이미 회귀분석(regression analysis)이나 분산분석(analysis of variance)등에 대해서 어느 정도 알고 있다고 가정한 상태에서 작성한 것입니다.  그리고, 후반부에서는 조금 더 욕심을 내서 일반화 선형 모형(generalised linear model)과 비선형 모형(nonlinear model)과 같은 내용에 대해서도 어느 정도 알고 계실거라고 가정하겠습니다."

#. type: Plain text
#: R-intro.texi:4207
msgid "The requirements for fitting statistical models are sufficiently well defined to make it possible to construct general tools that apply in a broad spectrum of problems."
msgstr "@R{}은 다양한 통계모형을 매우 간단하게 적합시킬 수 있도록 해주는 여러 도구들을 완벽하게 조합해놓은 종합 도구 상자같은 것입니다."

#. type: Plain text
#: R-intro.texi:4212
msgid "@R{} provides an interlocking suite of facilities that make fitting statistical models very simple.  As we mention in the introduction, the basic output is minimal, and one needs to ask for the details by calling extractor functions."
msgstr "본 문서의 서두에서 언급했던 것 처럼, @R{}은 분석 수행시 최소한의 결과물만을 출력하기 때문에 중간절차에 대한 상세한 내용을 확인하기 위해서는 추출계열의 함수(extractor functions)들을 사용하셔야 합니다. "

#. type: node
#: R-intro.texi:4222
#: R-intro.texi:4224
#: R-intro.texi:4431
#: R-intro.texi:4491
#, no-wrap
msgid "Formulae for statistical models"
msgstr "식(formulae)을 통한 통계모형의 정의 "

#. type: node
#: R-intro.texi:4222
#: R-intro.texi:4224
#: R-intro.texi:4491
#: R-intro.texi:4492
#: R-intro.texi:4493
#: R-intro.texi:4519
#, no-wrap
msgid "Linear models"
msgstr ""

#. type: node
#: R-intro.texi:4222
#: R-intro.texi:4491
#: R-intro.texi:4519
#: R-intro.texi:4520
#: R-intro.texi:4605
#, no-wrap
msgid "Generic functions for extracting model information"
msgstr "Generic functions for extracting model information"

#. type: node
#: R-intro.texi:4222
#: R-intro.texi:4519
#: R-intro.texi:4605
#: R-intro.texi:4606
#: R-intro.texi:4648
#: R-intro.texi:4677
#, no-wrap
msgid "Analysis of variance and model comparison"
msgstr ""

#. type: node
#: R-intro.texi:4222
#: R-intro.texi:4605
#: R-intro.texi:4677
#: R-intro.texi:4678
#: R-intro.texi:4679
#: R-intro.texi:4731
#, no-wrap
msgid "Updating fitted models"
msgstr ""

#. type: node
#: R-intro.texi:4222
#: R-intro.texi:4677
#: R-intro.texi:4731
#: R-intro.texi:4732
#: R-intro.texi:4733
#: R-intro.texi:4823
#: R-intro.texi:4856
#: R-intro.texi:5091
#, no-wrap
msgid "Generalized linear models"
msgstr ""

#. type: node
#: R-intro.texi:4222
#: R-intro.texi:4731
#: R-intro.texi:5091
#: R-intro.texi:5092
#: R-intro.texi:5117
#: R-intro.texi:5207
#: R-intro.texi:5253
#, no-wrap
msgid "Nonlinear least squares and maximum likelihood models"
msgstr ""

#. type: section
#: R-intro.texi:4222
#: R-intro.texi:5091
#: R-intro.texi:5253
#: R-intro.texi:5254
#, no-wrap
msgid "Some non-standard models"
msgstr ""

#. type: section
#: R-intro.texi:4225
#, no-wrap
msgid "Defining statistical models; formulae"
msgstr ""

#. type: cindex
#: R-intro.texi:4226
#, no-wrap
msgid "Formulae"
msgstr ""

#. type: Plain text
#: R-intro.texi:4230
msgid "The template for a statistical model is a linear regression model with independent, homoscedastic errors"
msgstr "일반적인 통계모형의 템플릿(template)이라고 하면 독립(independent)이고 등분산(homoscedastic)인 오차(errors)를 가정하는 선형 회귀 모형을 떠올릴 것 입니다. 선형 회귀모형(linear regression model)은 보통 다음과 같이 표현됩니다.하나의 모형에는 @code{p}개의 설명변수가 있고, 이들은 @code{j}라는 첨자를 사용해서 구분합니다.따라서, @code{x_j}는 @code{j}번째 설명변수를 의미합니다. 또한, @code{n}개의 관측으로 데이터를 구성하며, 각 관측은 첨자 @code{i}로 구분합니다.따라서, @code{y_i}란 @code{i}번째 관측으로부터 얻은 종속변수의 값을 의미합니다.마지막으로 @code{e_i}를 사용해서 @code{i}번째 관측의 오차항을 표현합니다.이 식에서 오차항은 @code{e_i}은 IID(Independently, Identically Distributed/독립이며 같은 분포를 따르는)인 평균이 @math{0}이고 분산이  @code{sigma^2}인 정규(Normal)분포를 따릅니다. 여기서 독립이란 @code{i}번째 관측치와 @code{i}번째가 아닌 다른 관측치 사이에 아무런 관련이 없으며, 개별 관측이 따로 얻어졌다는 것을 의미합니다."

#. type: display
#: R-intro.texi:4234
#, no-wrap
msgid "y_i = sum_@{j=0@}^p beta_j x_@{ij@} + e_i, @ @ @ @ i = 1, @dots{}, n,\n"
msgstr ""

#. type: ifnottex
#: R-intro.texi:4237
msgid "where the e_i are NID(0, sigma^2)."
msgstr ""

#. type: tex
#: R-intro.texi:4243
#, no-wrap
msgid ""
"$$ y_i = \\sum_{j=0}^p \\beta_j x_{ij} + e_i,\n"
"   \\qquad e_i \\sim {\\rm NID}(0,\\sigma^2),\n"
"   \\qquad i = 1, @dots{}, n\n"
"$$\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4245
msgid "In matrix terms this would be written"
msgstr "위의 식은 행렬 형태로 아래와 같이 표현되며,"

#. type: display
#: R-intro.texi:4249
#, no-wrap
msgid "y = X @ beta + e\n"
msgstr ""

#. type: tex
#: R-intro.texi:4253
#, no-wrap
msgid "$$ y = X \\beta + e $$\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4261
msgid "where the @math{y} is the response vector, @math{X} is the @emph{model matrix} or @emph{design matrix} and has columns @math{x_0, x_1, @dots{}, x_p}, the determining variables.  Very often @math{x_0} will be a column of ones defining an @emph{intercept} term."
msgstr "@math{y}는 종속변수 벡터, 설명변수들로 구성된 @math{X}는 @emph{모형 행렬(model matrix)} 또는 @emph{디자인 행렬(design matrix)}이라고 불리며, 설명변수(또는 열)들을 @math{x_0, x_1, @dots{}, x_p}의 형태로 포함합니다. 종종 @math{x_0}라는 @math{1}로만 구성된 열 하나가 여기에 더 추가되는데, 이는  @emph{절편(intercept)}을 정의하기 위해서 사용된 것입니다."

#. type: subsubheading
#: R-intro.texi:4262
#, no-wrap
msgid "Examples"
msgstr ""

#. type: Plain text
#: R-intro.texi:4266
msgid "Before giving a formal specification, a few examples may usefully set the picture."
msgstr "본격적으로 회귀모형의 사용을 다루기 전, 몇 가지 예제를 통해 이해를 돕도록 하겠습니다."

#. type: Plain text
#: R-intro.texi:4271
msgid "Suppose @code{y}, @code{x}, @code{x0}, @code{x1}, @code{x2}, @dots{} are numeric variables, @code{X} is a matrix and @code{A}, @code{B}, @code{C}, @dots{} are factors.  The following formulae on the left side below specify statistical models as described on the right."
msgstr "먼저 @code{y}, @code{x}, @code{x0}, @code{x1}, @code{x2}, @dots{}는 모두 수치형 벡터, @code{X}는 행렬, 그리고 @code{A}, @code{B}, @code{C}, @dots{}는 요인들을 나타낸다고 가정합니다.아래에서 우리가 살펴보고자 하는 통계 모형들은 왼편에 식으로 표기되어 있고, 그 아래는 해당 모형에 대한 설명이 제시되어 있습니다."

#. type: item
#: R-intro.texi:4273
#, no-wrap
msgid "y ~ x"
msgstr ""

#. type: itemx
#: R-intro.texi:4274
#, no-wrap
msgid "y ~ 1 + x"
msgstr ""

#. type: table
#: R-intro.texi:4278
msgid "Both imply the same simple linear regression model of @math{y} on @math{x}.  The first has an implicit intercept term, and the second an explicit one."
msgstr "이 두가지 식은 모두 같은 모형을 나타내고 있으며, @code{y}를 @code{x}에 회귀시킨 단순 선형 회귀모형 (simple linear regression model)을 의미합니다.여기에서 \"단순(simple)\"이라는 말은 모형에 포함된 설명변수가 1개임을 의미합니다.첫번째 식은 절편을 따로 표시하지 않았지만, 두번째 식은 절편을 따로 표시한 것 입니다.(절편항에 대해 따로 명시하지 않으면, @R{}에서는 디폴트(default)로 디자인 행렬에 절편항을 포함시킵니다.)"

#. type: item
#: R-intro.texi:4279
#, no-wrap
msgid "y ~ 0 + x"
msgstr ""

#. type: itemx
#: R-intro.texi:4280
#, no-wrap
msgid "y ~ -1 + x"
msgstr ""

#. type: itemx
#: R-intro.texi:4281
#, no-wrap
msgid "y ~ x - 1"
msgstr ""

#. type: table
#: R-intro.texi:4284
msgid "Simple linear regression of @math{y} on @math{x} through the origin (that is, without an intercept term)."
msgstr "위 세 식은 원점(origin)을 지나는 @code{y}를 @code{x}에 회귀시킨 단순 선형 회귀모형을 의미합니다. (즉, 이는 절편을 포함하지 않는 회귀모형 입니다.)"

#. type: item
#: R-intro.texi:4285
#, no-wrap
msgid "log(y) ~ x1 + x2"
msgstr ""

#. type: table
#: R-intro.texi:4287
msgid "Multiple regression of the transformed variable,"
msgstr "로 변환된 @code{y}를 두 개의 설명변수인 @code{x1}와 @code{x2}에 회귀시킨 다중회귀모델 (multiple regression)입니다. (표시되지 않았지만 절편을 포함하는 모형입니다.)"

#. type: ifnottex
#: R-intro.texi:4289
msgid "log(y),"
msgstr ""

#. type: tex
#: R-intro.texi:4292
#, no-wrap
msgid "$\\log(y)$,\n"
msgstr ""

#. type: table
#: R-intro.texi:4294
msgid "on @math{x1} and @math{x2} (with an implicit intercept term)."
msgstr ""

#. type: item
#: R-intro.texi:4295
#, no-wrap
msgid "y ~ poly(x,2)"
msgstr ""

#. type: itemx
#: R-intro.texi:4296
#, no-wrap
msgid "y ~ 1 + x + I(x^2)"
msgstr ""

#. type: table
#: R-intro.texi:4300
msgid "Polynomial regression of @math{y} on @math{x} of degree 2.  The first form uses orthogonal polynomials, and the second uses explicit powers, as basis."
msgstr "위 식들은 @math{y}를 @math{x}의 이차항에 회귀시킨 다차항 회귀(polynomial regression)모형 입니다. @math{x}의 이차항이라는 것은 @math{x^2}를 의미하는 것으로, 첫번째 식은 직교다차항(orthogonal polynomials)을,두번째 식은 @math{x}의 0차, 1차, 2차항인 @math{x^0, x^1, x^2}를 베이시스(basis)로 사용하는 모형임을 표현하는 것 입니다."

#. type: item
#: R-intro.texi:4301
#, no-wrap
msgid "y ~ X + poly(x,2)"
msgstr ""

#. type: table
#: R-intro.texi:4304
msgid "Multiple regression @math{y} with model matrix consisting of the matrix @math{X} as well as polynomial terms in @math{x} to degree 2."
msgstr "위 식은 행렬인 @math{X}와 @math{x}의 2차항으로 구성된 다중 회귀모형을 의미합니다."

#. type: item
#: R-intro.texi:4305
#, no-wrap
msgid "y ~ A"
msgstr ""

#. type: table
#: R-intro.texi:4308
msgid "Single classification analysis of variance model of @math{y}, with classes determined by @math{A}."
msgstr "위 식은 @math{y}에 대한 요인 @math{A}와 공변량(covariate) @math{x}의 단순(single) 공분산분석(classification analysis of covariance/ANCOVA)를 의미합니다. 여기서 @math{A}의 수준이 @math{y}를 분석하기 위한 클래스(class)를 결정합니다. @footnote{마찬가지로, ANCOVA를 표기할 때도 classification을 따로 명시하지는 않지만, 이 방법의 역시 보통 연속형 변수인 공변량(covariate)이 포함된다는 것 외에는 ANOVA와 유사한 분석을 수행하므로 이렇게 표현한 것 같습니다.}"

#. type: item
#: R-intro.texi:4309
#, no-wrap
msgid "y ~ A + x"
msgstr ""

#. type: table
#: R-intro.texi:4312
msgid "Single classification analysis of covariance model of @math{y}, with classes determined by @math{A}, and with covariate @math{x}."
msgstr ""

#. type: item
#: R-intro.texi:4313
#, no-wrap
msgid "y ~ A*B"
msgstr ""

#. type: itemx
#: R-intro.texi:4314
#, no-wrap
msgid "y ~ A + B + A:B"
msgstr ""

#. type: itemx
#: R-intro.texi:4315
#, no-wrap
msgid "y ~ B %in% A"
msgstr ""

#. type: itemx
#: R-intro.texi:4316
#, no-wrap
msgid "y ~ A/B"
msgstr ""

#. type: table
#: R-intro.texi:4321
msgid "Two factor non-additive model of @math{y} on @math{A} and @math{B}.  The first two specify the same crossed classification and the second two specify the same nested classification.  In abstract terms all four specify the same model subspace."
msgstr "위 식은 모두 @math{y}를 두 개의 요인 @math{A}와 @math{B}로 설명하는 이원배치(Two factor) 비가산(non-additive) 모형을 표현하고 있습니다. 처음 두 식은 모두 (교호작용(interaction)항을 포함하는) 이원배치 혼합모형(crossed classification)을 나타내며, 다음의 두 식은 모두 중첩모형 (nested classification)을 나타냅니다. 하지만, 현대 대수학(abstract algebra)식으로  말하면, 네 가지 모형은 모두 같은 모형 서브스페이스(subspace)를 표현합니다. "

#. type: item
#: R-intro.texi:4322
#, no-wrap
msgid "y ~ (A + B + C)^2"
msgstr ""

#. type: itemx
#: R-intro.texi:4323
#, no-wrap
msgid "y ~ A*B*C - A:B:C"
msgstr ""

#. type: table
#: R-intro.texi:4326
msgid "Three factor experiment but with a model containing main effects and two factor interactions only.  Both formulae specify the same model."
msgstr "위의 식은 모두 삼원배치(three factor) 실험을 표현하고 있지만,주효과(main effect/일차원 효과)와 두개 요인간의 교호작용(interaction)들만 포함하는 모형입니다. 두 식은 모두 같은 모형을 표현합니다."

#. type: item
#: R-intro.texi:4327
#, no-wrap
msgid "y ~ A * x"
msgstr ""

#. type: itemx
#: R-intro.texi:4328
#, no-wrap
msgid "y ~ A/x"
msgstr ""

#. type: itemx
#: R-intro.texi:4329
#, no-wrap
msgid "y ~ A/(1 + x) - 1"
msgstr ""

#. type: table
#: R-intro.texi:4334
msgid "Separate simple linear regression models of @math{y} on @math{x} within the levels of @math{A}, with different codings.  The last form produces explicit estimates of as many different intercepts and slopes as there are levels in @math{A}."
msgstr "위의 세 식은 요인 @math{A}의 각 수준 별로 @math{y}를 @math{x}에 회귀시켜 여러개의 단순 선형 회귀모형(simple linear regression)을 동시에 적합시키는 방법을 다른 코딩 방식으로 표현한 것입니다. 특히, 마지막 식을 사용할 경우,@math{A}의 수준의 개수만큼 서로 다른 절편(intercept)과 기울기(slope)의 추정치(estimate)가 계산됩니다. "

#. type: item
#: R-intro.texi:4335
#, no-wrap
msgid "y ~ A*B + Error(C)"
msgstr ""

#. type: table
#: R-intro.texi:4340
msgid "An experiment with two treatment factors, @math{A} and @math{B}, and error strata determined by factor @math{C}.  For example a split plot experiment, with whole plots (and hence also subplots), determined by factor @math{C}."
msgstr "위 식은 두 개의 처리 요인 @math{A}와 @math{B}를 갖는 실험을 나타내며, 이 모형의 오차는 요인 @math{C}의 수준 별로 계층화(strata)되어 있습니다. (역주-이 경우, 좀 더 전문적인 용어로 표현하면 오차가 요인 @math{C}에 의해 블록(block)화 된것이라 볼 수 있으며, 일종의 랜덤효과(random effects)로 가정된 것 입니다. 이렇게 처리 요인과 블록화된 요인을 모두 포함하는 실험은 혼합모형(mixed model)을 사용하여 분석할 수 있습니다.)"

#. type: findex
#: R-intro.texi:4342
#, no-wrap
msgid "~"
msgstr ""

#. type: Plain text
#: R-intro.texi:4345
msgid "The operator @code{~} is used to define a @emph{model formula} in @R{}.  The form, for an ordinary linear model, is"
msgstr "@R{}에서 모델식(model formula)을 정의할 때는 @code{~}(틸다) 연산자를 사용한 것을 확인하실 수 있을 것 입니다. (이 연산자는 식의 왼쪽과 오른쪽을 연결시키는 역할을 하며, 이러한 사용은 수학에서 식의 오른쪽과 왼쪽이 완전하게 동일하다는 의미를 나타내는 등호 (@code{=})를 사용하는 것과는 다릅니다. 예를 들면, 간단한 일반(ordinary) 선형모형은 다음과 같이 정의할 수 있습니다. "

#. type: example
#: R-intro.texi:4348
#, no-wrap
msgid "@var{response} ~ @var{op_1} @var{term_1} @var{op_2} @var{term_2} @var{op_3} @var{term_3} @var{@dots{}}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4352
#: R-intro.texi:5071
msgid "where"
msgstr ""

#. type: item
#: R-intro.texi:4354
#, no-wrap
msgid "response"
msgstr ""

#. type: table
#: R-intro.texi:4357
msgid "is a vector or matrix, (or expression evaluating to a vector or matrix)  defining the response variable(s)."
msgstr "는 하나의 벡터 또는 행렬(경우에 따라서는 벡터나 행렬로 결과를 출력할 표현식)이 될 수 있습니다."

#. type: item
#: R-intro.texi:4357
#, no-wrap
msgid "op_i"
msgstr ""

#. type: table
#: R-intro.texi:4360
msgid "is an operator, either @code{+} or @code{-}, implying the inclusion or exclusion of a term in the model, (the first is optional)."
msgstr "는 @code{+} 또는 @code{-} 부호를 갖는 연산자로, 각각 모형식에서 i 번째 변수를 추가하거나 제거하기 위해 사용합니다. (식의 가장 처음에 오는 (첫번째 항을 받는) 연산자는 굳이 사용하지 않아도 됩니다.)@item term_i (i 번째 항)"

#. type: item
#: R-intro.texi:4360
#, no-wrap
msgid "term_i"
msgstr ""

#. type: table
#: R-intro.texi:4362
msgid "is either"
msgstr "으로는 다음의 중 한가지가 가능합니다:"

#. type: itemize
#: R-intro.texi:4365
msgid "a vector or matrix expression, or @code{1},"
msgstr "벡터, 행렬, 또는 숫자 @math{1}"

#. type: itemize
#: R-intro.texi:4367
msgid "a factor, or"
msgstr "요인 (factor)"

#. type: itemize
#: R-intro.texi:4370
msgid "a @emph{formula expression} consisting of factors, vectors or matrices connected by @emph{formula operators}."
msgstr "@emph{식 연산자(formula operator)}를 사용하여 요인, 벡터 또는 행렬 여러 개를 연결한 @emph{모형식의 표현(formula expression)}입니다."

#. type: table
#: R-intro.texi:4375
msgid "In all cases each term defines a collection of columns either to be added to or removed from the model matrix.  A @code{1} stands for an intercept column and is by default included in the model matrix unless explicitly removed."
msgstr "모형이 이런식으로 표현될 경우, 식에 포함되는 각 항은 모형행렬(model matrix)을 구성하는 각 열이 모형에서 추가될질지 혹은 제거될지를 나타내기위해 사용됩니다.위에서 @math{1}이라는 항은 회귀식에서 절편을 나타내기 위해 사용되었으며, 따로 이 항을 생략하기 위한 표현식을 사용하지 않는 한, 항상 디폴트(default)로 모형행렬에 포함됩니다."

#. type: Plain text
#: R-intro.texi:4382
msgid "The @emph{formula operators} are similar in effect to the Wilkinson and Rogers notation used by such programs as Glim and Genstat.  One inevitable change is that the operator @samp{@code{.}} becomes @samp{@code{:}} since the period is a valid name character in @R{}."
msgstr "@emph{식 연산자(formula operator)}는 Glim 이나 Genstat 같은 프로그램에서 사용되는 Wilkinson과 Rogers의 표기법(notation) 과 거의 비슷하게 정의 되었습니다.한 가지 눈에 띄는 차이가 있다면, GLIM이나 Genstat에서는 @samp{@code{.}}에 해당하는 연산자를 @R{}에서는 @samp{@code{:}} 연산자로 사용하고 있다는 점 일 것입니다. 이렇게 된 이유는 @samp{@code{.}} 기호가 @R{}에서는 변수이름으로 사용할 수 있는 문자 중 하나이기 때문입니다."

#. type: Plain text
#: R-intro.texi:4385
msgid "The notation is summarized below (based on Chambers & Hastie, 1992, p.29):"
msgstr "이 표기법(notation)에 대해서는 Chambers & Hastie (1991, p.29)를 바탕으로 다음과 같이 요약해 볼 수 있습니다:"

#. type: item
#: R-intro.texi:4387
#, no-wrap
msgid "@var{Y} ~ @var{M}"
msgstr "앞서 설명드린 것 처럼 @code{~}(틸다) 연산자는 @var{Y}를 모형식(model formula)을 의미하는 @var{M} 부분과 연결시켜 줍니다. "

#. type: table
#: R-intro.texi:4389
msgid "@var{Y} is modeled as @var{M}."
msgstr "앞서 설명드린 것 처럼 @code{~}(틸다) 연산자는 @var{Y}를 모형식(model formula)을 의미하는 @var{M} 부분과 연결시켜 줍니다. "

#. type: item
#: R-intro.texi:4390
#, no-wrap
msgid "@var{M_1} + @var{M_2}"
msgstr ""

#. type: table
#: R-intro.texi:4392
msgid "Include @var{M_1} and @var{M_2}."
msgstr "@var{M_1}와 @var{M_2}과 모두 모형에 포함합니다."

#. type: item
#: R-intro.texi:4393
#, no-wrap
msgid "@var{M_1} - @var{M_2}"
msgstr ""

#. type: table
#: R-intro.texi:4395
msgid "Include @var{M_1} leaving out terms of @var{M_2}."
msgstr "@var{M_1}은 모형에 포함되지만 @var{M_2} 부분은 모형에서 제외합니다."

#. type: item
#: R-intro.texi:4396
#, no-wrap
msgid "@var{M_1} : @var{M_2}"
msgstr ""

#. type: table
#: R-intro.texi:4399
msgid "The tensor product of @var{M_1} and @var{M_2}.  If both terms are factors, then the ``subclasses'' factor."
msgstr "@var{M_1}과 @var{M_2}를 텐서곱(tensor product) 합니다.만약, 두 개의 항 모두 요인이라면 tensor product의 결과는 @var{M_1}과 @var{M_2}가 갖는 모든 수준(level)들의 조합으로 생성된 모든 서브클래스(``subclasses'')가 됩니다."

#. type: item
#: R-intro.texi:4400
#, no-wrap
msgid "@var{M_1} %in% @var{M_2}"
msgstr ""

#. type: table
#: R-intro.texi:4402
msgid "Similar to @code{@var{M_1}:@var{M_2}}, but with a different coding."
msgstr "@code{@var{M_1}:@var{M_2}}와 비슷한 작업을 수행하는 다른 코딩 방법입니다."

#. type: item
#: R-intro.texi:4403
#, no-wrap
msgid "@var{M_1} * @var{M_2}"
msgstr ""

#. type: table
#: R-intro.texi:4405
msgid "@code{@var{M_1} + @var{M_2} + @var{M_1}:@var{M_2}}."
msgstr ""

#. type: item
#: R-intro.texi:4406
#, no-wrap
msgid "@var{M_1} / @var{M_2}"
msgstr ""

#. type: table
#: R-intro.texi:4408
msgid "@code{@var{M_1} + @var{M_2} %in% @var{M_1}}."
msgstr ""

#. type: item
#: R-intro.texi:4409
#, no-wrap
msgid "@var{M}^@var{n}"
msgstr ""

#. type: table
#: R-intro.texi:4411
msgid "All terms in @var{M} together with ``interactions'' up to order @var{n}"
msgstr "@var{n}차항까지의 @var{M}에 포함된 모든 항들과 이들간의 모든 교호작용(``interactions'')을 의미합니다."

#. type: item
#: R-intro.texi:4412
#, no-wrap
msgid "I(@var{M})"
msgstr ""

#. type: table
#: R-intro.texi:4415
msgid "Insulate @var{M}.  Inside @var{M} all operators have their normal arithmetic meaning, and that term appears in the model matrix."
msgstr "@code{I()} 연산자는 insulate((식을) 보호함, 최근 버전에서는 Inhibit/(연산을)억제함으로 표현하기도 함)의 약자로서 모형식(model formula)에서, @var{M}에 작성된 표현식을 그 산술적(arithmetic) 의미대로 실행하여 그 결과가 모형행렬(model matrix)에서 하나의 항으로 포함될 수 있도록 해줍니다. "

#. type: Plain text
#: R-intro.texi:4421
msgid "Note that inside the parentheses that usually enclose function arguments all operators have their normal arithmetic meaning.  The function @code{I()} is an identity function used to allow terms in model formulae to be defined using arithmetic operators."
msgstr "일반적으로 @R{}에서는 @var{M}의 표현식에 포함된 모든 연산자들이 원래의 산술적 의미 그대로 사용됩니다. 하지만 모형연산자(model operators)로 사용되는 @code{+} 혹은 @code{-} 연산자는 해당 변수를 모델식(model formula)에 포함할 것인지 제외할 것인지를 의미합니다. 하지만, 함수 @code{I()}는 일종의 아이덴티티(identity) 함수로 이 함수가 쓰인 해당 항이 모형식(model formulae) 내에서 산술 연산자를 포함할 수 있도록 해줍니다. 따라서, 모형식 안에서@code{I(M_1+M_2)}를 사용하면, @code{M_1}과 @code{M_2}을 더해진 결과가 하나의 항으로 식에 포함됩니다. "

#. type: Plain text
#: R-intro.texi:4426
msgid "Note particularly that the model formulae specify the @emph{columns of the model matrix}, the specification of the parameters being implicit.  This is not the case in other contexts, for example in specifying nonlinear models."
msgstr "모형식(model formula)을 정의하는 데 있어, @emph{모형행렬(model matrix)의 열}을 선택하는 것은 내재적으로 모형의 모수(parameters)를 선택하는 과정이기도 합니다.  하지만, 이런 내재적 의미는, 비선형(nonlinear)모형을 적합하는 것과 같은 다른 상황(context)에서는 성립하지 않는다는 점을 알아두시기 바랍니다."

#. type: cindex
#: R-intro.texi:4429
#: R-intro.texi:4431
#: R-intro.texi:4432
#: R-intro.texi:4433
#, no-wrap
msgid "Contrasts"
msgstr ""

#. type: Plain text
#: R-intro.texi:4439
msgid "We need at least some idea how the model formulae specify the columns of the model matrix.  This is easy if we have continuous variables, as each provides one column of the model matrix (and the intercept will provide a column of ones if included in the model)."
msgstr "이 부분에서는 최소한 모형식(model formula)을 지정하는 것이 모형 행렬(model matrix)의 열을 선택하는 것과 어떤 관련이 있는지 정도는 알고 있다고 가정하고 내용을 진행하겠습니다.  연속형 변수들이 각각의 열을 구성하는 모형 행렬(model matrix)을 생각해보면 (사용할 모형이 절편(intercept)를 포함할 경우, 이 행렬은 @math{1}로만 이루어진 열을 하나 더 포함할 것입니다.), 이 관계를 이해하는 것이 전혀 어렵지 않을 것 입니다."

#. type: Plain text
#: R-intro.texi:4449
msgid "What about a @math{k}-level factor @code{A}? The answer differs for unordered and ordered factors.  For @emph{unordered} factors @math{k - 1} columns are generated for the indicators of the second, @dots{}, @math{k}th levels of the factor. (Thus the implicit parameterization is to contrast the response at each level with that at the first.)  For @emph{ordered} factors the @math{k - 1} columns are the orthogonal polynomials on @math{1, @dots{}, k}, omitting the constant term."
msgstr "그러나, @math{k}-개의 수준(level)을 가진 요인 @code{A}이 모형에 포함된다고 가정하면, 이 요인이 순서형(ordered)인지 비순서형(unordered)인지에 따라 이 관계가 조금 달라지게 됩니다.우선 @emph{비순서형 요인(unordered factor)}의 경우, 두번째 수준부터 마지막 @math{k}번째 수준에 각각 대응되는 인디케이터(indicator/더미(dummy)변수)를 나타내기 위해 @math{k -1} 개의 열이 생성됩니다.(따라서, 이러한 모형화(parametrization)는 암묵적으로 각 수준이 첫번째 수준과 대조(contrast)시킵니다). 이와는 다르게, @emph{순서형 요인(ordered factor)}의 경우, @math{k-1}개의 열들은 상수항을 제외한 @math{1, @dots{}, k}에 해당하는 직교다차항(orthogonal polynomials)을 나타냅니다."

#. type: Plain text
#: R-intro.texi:4456
msgid "Although the answer is already complicated, it is not the whole story.  First, if the intercept is omitted in a model that contains a factor term, the first such term is encoded into @math{k} columns giving the indicators for all the levels.  Second, the whole behavior can be changed by the @code{options} setting for @code{contrasts}.  The default setting in @R{} is"
msgstr "이미 복잡한 내용이 되버리기는 했지만, 이것이 모형식과 모형행렬의 관계의 전부가 아닙니다. 우선, 요인은 포함하지만 절편(intercept)은 포함하지 않는 모형을 생각해 볼 수 있습니다. 이 경우 포함된 요인의 모든 수준(level)을 표현할 수 있도록  @math{k}개의 열로 코딩 되어야합니다. 두번째로 고려할 점은, @code{options}을 사용하여 대조(@code{contrasts})를 사용하는 방식을 변경할 경우, 모형에서 요인을 표현하는 방법이 완전히 달라지게 된다는 점입니다 .@R{}에서는 디폴트(default)로 아래와 같이 지정되어 있습니다."

#. type: example
#: R-intro.texi:4459
#, no-wrap
msgid "options(contrasts = c(\"contr.treatment\", \"contr.poly\"))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4466
msgid "The main reason for mentioning this is that @R{} and @Sl{} have different defaults for unordered factors, @Sl{} using Helmert contrasts.  So if you need to compare your results to those of a textbook or paper which used @SPLUS{}, you will need to set"
msgstr "이 부분을 따로 언급하는 이유는, @R{}과 @Sl{}에서 비순서형 요인(unordered factor)에 대해 다른 디폴트(default) 코딩을 사용하고 있기 때문입니다; @Sl{}의 경우는 @code{Helmert} 방식을 사용합니다.또 다른 경우는 비순서형 요소를 사용할 경우, @R{}과 @Sl{}의 기본동작이 서로 다르다는 것입니다.@Sl{}의 경우는 @code{Helmert}라는 방식을 이용합니다.따라서, 만약 @SPLUS{}를 사용한 결과를 바탕으로 쓰여진 책이나 논문의 내용을 @R{}로 분석한 결과물과 비교해 보고 싶다면, 다음과 같은 설정이 필요 합니다."

#. type: example
#: R-intro.texi:4469
#, no-wrap
msgid "options(contrasts = c(\"contr.helmert\", \"contr.poly\"))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4474
msgid "This is a deliberate difference, as treatment contrasts (@R{}'s default)  are thought easier for newcomers to interpret."
msgstr "@R{}에서 디폴트(default)로 @code{treatment} 대조를 채택한 이유는, 이 방법을 처음 다루는 초보자들에게는  @code{treatment} 대조로 생성된 결과를 해석하는 것이 쉬울것이라 믿었기 때문입니다."

#. type: Plain text
#: R-intro.texi:4478
msgid "We have still not finished, as the contrast scheme to be used can be set for each term in the model using the functions @code{contrasts} and @code{C}."
msgstr "이번에는 함수 @code{contrasts}과 @code{C}를 사용하여 각각의 항을 모형에 포함시키기 위한 대조(contrast)의 사용법(scheme)을 좀 더 자세히 다뤄보도록 하겠습니다. "

#. type: findex
#: R-intro.texi:4478
#, no-wrap
msgid "contrasts"
msgstr ""

#. type: findex
#: R-intro.texi:4479
#, no-wrap
msgid "C"
msgstr ""

#. type: Plain text
#: R-intro.texi:4483
msgid "We have not yet considered interaction terms: these generate the products of the columns introduced for their component terms."
msgstr "우리는 어떤 식으로 교차항(interaction terms)을 모형에 포함할지에 대해서도 아직 다루지 않았습니다.교차항은 교호작용을 구성하는 변수들의 해당 열을 서로 곱(product)하여 생성합니다."

#. type: Plain text
#: R-intro.texi:4489
msgid "Although the details are complicated, model formulae in @R{} will normally generate the models that an expert statistician would expect, provided that marginality is preserved.  Fitting, for example, a model with an interaction but not the corresponding main effects will in general lead to surprising results, and is for experts only."
msgstr "교차항을 다루기 위한 세부사항들은 너무 복잡하기 때문에, 여기서 다루지는 않겠습니다. 하지만, @R{}에서 모형을 사용하는 방법은 보통의 통계 전문가라면 예측할만한 방식을 크게 벗어나지 않습니다. 하지만 몇몇 예외가 있을 수 있는데, 교호작용(interaction)은 포함하지만 이에 대응하는 주효과(main effects)는 포함하지 않는 모형을 사용하는 것이 하나의 예가 될 수 있을 것입니다. 이 경우 일반적으로 기대하는 것과는 많이 다른 결과가 얻어질 수 있는데, 이는 아마도 이 분야 전문가들이나 관심을 가질만한 주제일 것 입니다."

#. type: Plain text
#: R-intro.texi:4497
msgid "The basic function for fitting ordinary multiple models is @code{lm()}, and a streamlined version of the call is as follows:"
msgstr "일반(ordinary) 다중(multiple,여러 개 항을 포함하는)모형을 적합하는 가장 간단한 방법은 아래와 같이 함수 @code{lm()}를 이용하는 것입니다:"

#. type: findex
#: R-intro.texi:4497
#, no-wrap
msgid "lm"
msgstr ""

#. type: example
#: R-intro.texi:4501
#, no-wrap
msgid "> @var{fitted.model} <- lm(@var{formula}, data = @var{data.frame})\n"
msgstr ""

#. type: example
#: R-intro.texi:4507
#, no-wrap
msgid "> fm2 <- lm(y ~ x1 + x2, data = production)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4512
msgid "would fit a multiple regression model of @math{y} on @math{x1} and @math{x2} (with implicit intercept term)."
msgstr "예를 들면, 아래의 코드는 종속변수 @math{y}를 설명변수 @math{x1}과 @math{x2}에 회귀시킨 다중회귀모형(multiple regression model)을 적합시킵니다.(따로 표시된 것은 아니지만, 상수항(intercept term)이 항상 포함된다는 점을 잊지 마시기 바랍니다.) "

#. type: Plain text
#: R-intro.texi:4518
msgid "The important (but technically optional) parameter @code{data = production} specifies that any variables needed to construct the model should come first from the @code{production} @emph{data frame}.  @emph{This is the case regardless of whether data frame @code{production} has been attached on the search path or not}."
msgstr "위 식에 사용된 것 중 중요한 (하지만 이 함수의 실행을 위해서는 반드시 필요한 것은 아닌) 모수(parameter)로는 @code{data = production}가 있습니다. 이 모수는 선형모형을 적합시키게 될 데이터를 지정하는 것으로, 여기서 지정된  @emph{데이터 프레임(data frame)} @code{production}는 반드시 모형에 포함될 모든 변수들을 포함하고 있어야 합니다. @emph{이러한 데이터 프레임의 지정은 해당 데이터 프레임,이 예제에서는 @code{production}이, 검색 경로(search path)상에 연결되었건(attached) 그렇지 않든 상관없이 동일하게 이루어져야 합니다.}"

#. type: Plain text
#: R-intro.texi:4527
msgid "The value of @code{lm()} is a fitted model object; technically a list of results of class @code{\"lm\"}.  Information about the fitted model can then be displayed, extracted, plotted and so on by using generic functions that orient themselves to objects of class @code{\"lm\"}.  These include"
msgstr "@code{lm()}을 사용하면 적합된 선형모형을 하나의 객체로 얻게됩니다; 이 객체는 클래스(class)가 @code{\"lm\"}인 여러 개의 결과물로 구성된 하나의 리스트 입니다. 이렇게 @code{lm()} 함수를 사용해 적합된 모형에 관련된 정보는 일반함수(generic functions)를 사용하여 생성된 결과물을 출력하거나, 일부 정보만을 따로 추출하거나, 또는 플롯을 그리는 등 다양하게 활용할 수 있습니다.이렇게 모형 정보를 다룰 수 있는 일반함수에는 다음과 같은 종류가 있습니다. "

#. type: example
#: R-intro.texi:4533
#, no-wrap
msgid ""
"add1    deviance   formula      predict  step\n"
"alias   drop1      kappa        print    summary\n"
"anova   effects    labels       proj     vcov\n"
"coef    family     plot         residuals\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4536
msgid "A brief description of the most commonly used ones is given below."
msgstr "이 중에서 가장 빈번하게 사용되는 일반함수들에 대해서 아래와 같이 정리해 보았습니다."

#. type: findex
#: R-intro.texi:4538
#: R-intro.texi:4665
#, no-wrap
msgid "anova"
msgstr ""

#. type: item
#: R-intro.texi:4539
#, no-wrap
msgid "anova(@var{object_1}, @var{object_2})"
msgstr ""

#. type: table
#: R-intro.texi:4542
msgid "Compare a submodel with an outer model and produce an analysis of variance table."
msgstr "이 함수는 두개의 적합된 모형을 비교하는 것으로, 분산분석표를 제공 합니다. (여기서 사용된 두 개의 모형은 임의로 선택된다기 보다는 하나의 새 모형(outer model)과 이 모형의 일부를 포함하는 다른 모형(submodel)이어야 합니다.) "

#. type: findex
#: R-intro.texi:4543
#, no-wrap
msgid "coefficients"
msgstr ""

#. type: findex
#: R-intro.texi:4544
#, no-wrap
msgid "coef"
msgstr ""

#. type: item
#: R-intro.texi:4545
#, no-wrap
msgid "coef(@var{object})"
msgstr ""

#. type: table
#: R-intro.texi:4547
msgid "Extract the regression coefficient (matrix)."
msgstr "적합된 선형계수를 (행렬의 형태로) 추출해줍니다.여기에서 @code{coef()}는 @code{coefficients()}라는 원래 함수의 약어 표현입니다."

#. type: table
#: R-intro.texi:4549
msgid "Long form: @code{coefficients(@var{object})}."
msgstr ""

#. type: findex
#: R-intro.texi:4550
#, no-wrap
msgid "deviance"
msgstr ""

#. type: item
#: R-intro.texi:4551
#, no-wrap
msgid "deviance(@var{object})"
msgstr ""

#. type: table
#: R-intro.texi:4553
msgid "Residual sum of squares, weighted if appropriate."
msgstr "잔차(residual)를 제곱하여 이를 모두 더한 값을 출력하며, 경우에 따라서는 weighted 된 잔차를 사용할 수도 있습니다. "

#. type: findex
#: R-intro.texi:4554
#, no-wrap
msgid "formula"
msgstr ""

#. type: item
#: R-intro.texi:4555
#, no-wrap
msgid "formula(@var{object})"
msgstr ""

#. type: table
#: R-intro.texi:4557
msgid "Extract the model formula."
msgstr "@var{object}를 적합하는데 사용한 모형식(model formula)을 보여줍니다."

#. type: findex
#: R-intro.texi:4558
#: R-intro.texi:5410
#, no-wrap
msgid "plot"
msgstr ""

#. type: item
#: R-intro.texi:4559
#, no-wrap
msgid "plot(@var{object})"
msgstr ""

#. type: table
#: R-intro.texi:4562
msgid "Produce four plots, showing residuals, fitted values and some diagnostics."
msgstr "@var{object}의 잔차(residuals)와 적합된 값(fitted values)을 보여주는 4가지 플롯과 함께 몇가지 모형진단(diagnostics)통계량을 제공합니다."

#. type: findex
#: R-intro.texi:4563
#, no-wrap
msgid "predict"
msgstr ""

#. type: item
#: R-intro.texi:4564
#, no-wrap
msgid "predict(@var{object}, newdata=@var{data.frame})"
msgstr ""

#. type: table
#: R-intro.texi:4569
msgid "The data frame supplied must have variables specified with the same labels as the original.  The value is a vector or matrix of predicted values corresponding to the determining variable values in @var{data.frame}."
msgstr "적합된 모형을 사용하여 예측값(predicted values)를 구해줍니다. 이때 예측에 사용될 데이터 프레임은 반드시 원래의 모형적합에 사용된 데이터와 같은 변수명을 가져야 합니다. 이 함수를 사용한 결과로 @var{data.frame}으로 입력된 변수값을 이용하여 계산된 예측값이 벡터 또는 행렬로 출력됩니다. "

#. type: findex
#: R-intro.texi:4578
#, no-wrap
msgid "print"
msgstr ""

#. type: item
#: R-intro.texi:4579
#, no-wrap
msgid "print(@var{object})"
msgstr ""

#. type: table
#: R-intro.texi:4581
msgid "Print a concise version of the object.  Most often used implicitly."
msgstr "객체를 간결한 형태로 출력합니다. 많은 경우, 별도의 입력 없이도 결과가 출력됩니다. "

#. type: findex
#: R-intro.texi:4582
#, no-wrap
msgid "residuals"
msgstr ""

#. type: findex
#: R-intro.texi:4583
#, no-wrap
msgid "resid"
msgstr ""

#. type: item
#: R-intro.texi:4584
#, no-wrap
msgid "residuals(@var{object})"
msgstr ""

#. type: table
#: R-intro.texi:4586
msgid "Extract the (matrix of) residuals, weighted as appropriate."
msgstr "적합된 모형에 대한 잔차 또는  weighted 잔차를 (행렬의 형태로) 추출합니다. (원래의 @code{residuals()} 함수를 약어인 @code{resid(@var{object})}로 사용하실 수도 있습니다.)"

#. type: table
#: R-intro.texi:4588
msgid "Short form: @code{resid(@var{object})}."
msgstr ""

#. type: findex
#: R-intro.texi:4589
#: R-intro.texi:4727
#, no-wrap
msgid "step"
msgstr ""

#. type: item
#: R-intro.texi:4590
#, no-wrap
msgid "step(@var{object})"
msgstr ""

#. type: table
#: R-intro.texi:4594
msgid "Select a suitable model by adding or dropping terms and preserving hierarchies.  The model with the smallest value of AIC (Akaike's An Information Criterion) discovered in the stepwise search is returned."
msgstr "스텝와이즈 (stepwise) 검색으로 최적모형을 찾아줍니다. 변수의 중요도(hierarchies)에 따라 한번 하나씩 항을 추가하거나 제거함으로서 적당한 모형을 선택하는 방법입니다. 스텝와이즈 검색을 사용할 경우, 가장 작은 AIC(Akaike's Information Criterion)값을 갖는 모형을 선택하게 됩니다."

#. type: item
#: R-intro.texi:4596
#, no-wrap
msgid "summary(@var{object})"
msgstr ""

#. type: table
#: R-intro.texi:4598
msgid "Print a comprehensive summary of the results of the regression analysis."
msgstr "회귀분석의 결과를 간결한 형태로 요약하여 보여줍니다."

#. type: findex
#: R-intro.texi:4599
#, no-wrap
msgid "vcov"
msgstr ""

#. type: item
#: R-intro.texi:4600
#, no-wrap
msgid "vcov(@var{object})"
msgstr ""

#. type: table
#: R-intro.texi:4603
msgid "Returns the variance-covariance matrix of the main parameters of a fitted model object."
msgstr "적합된 회귀계수들에 대한 분산-공분산 (variance-covariance) 행렬을 출력합니다."

#. type: cindex
#: R-intro.texi:4607
#, no-wrap
msgid "Analysis of variance"
msgstr ""

#. type: Plain text
#: R-intro.texi:4611
msgid "The model fitting function @code{aov(@var{formula}, data=@var{data.frame})}"
msgstr ""

#. type: findex
#: R-intro.texi:4611
#, no-wrap
msgid "aov"
msgstr ""

#. type: Plain text
#: R-intro.texi:4615
msgid "operates at the simplest level in a very similar way to the function @code{lm()}, and most of the generic functions listed in the table in @ref{Generic functions for extracting model information} apply."
msgstr "분산분석(analysis of variance)을 수행하기 위해 @code{aov(@code{formula}, data=@var{data.frame})} 함수를 사용할 수 있습니다. 이 함수는 @code{lm()} 함수와 대체로 비슷한 연산을 수행한다고 볼 수 있으며, 따라서 위의 @ref{Generic functions for extracting model information}편에서 열거한 일반함수(generic functions)들을 거의 그대로 사용할 수 있습니다. "

#. type: Plain text
#: R-intro.texi:4620
msgid "It should be noted that in addition @code{aov()} allows an analysis of models with multiple error strata such as split plot experiments, or balanced incomplete block designs with recovery of inter-block information.  The model formula"
msgstr "하지만, @code{aov()}함수는 오차의 다중계층(multiple error strata)구조를 가정한 모형을 다룰 수 있어, 분할법 실험(split plot experiment)이나 블럭간(inter-block)정보를 사용한 균형 불완비블럭설계(balanced incomplete block design)와 같은 모형을 분석하기 위해 사용할 수 있다는 큰 장점을 가지고 있습니다. 모형식은 다음과 같이 사용할 수 있습니다."

#. type: example
#: R-intro.texi:4623
#, no-wrap
msgid "@var{response} ~ @var{mean.formula} + Error(@var{strata.formula})\n"
msgstr ""

#. type: findex
#: R-intro.texi:4624
#, no-wrap
msgid "Error"
msgstr ""

#. type: Plain text
#: R-intro.texi:4631
msgid "specifies a multi-stratum experiment with error strata defined by the @var{strata.formula}.  In the simplest case, @var{strata.formula} is simply a factor, when it defines a two strata experiment, namely between and within the levels of the factor."
msgstr "위 식은 @var{strata.formula}에 정의된 대로 오차의 계층(error strata)구조를 가정한 다계층실험 (multi-stratum experiement)을 표현한 것입니다.가장 간단한 경우로, 요인의 수준(levels)간(between) 차이와 수준내(within) 차이만 고려하는 2계층-실험(two strata experiment)이 있고, 이 경우  @var{strata.formula}는 단순히 하나의 요인이 됩니다."

#. type: Plain text
#: R-intro.texi:4634
msgid "For example, with all determining variables factors, a model formula such as that in:"
msgstr "구체적인 예를 들면, 모형을 구성하는 모든 변수와 요인을 사용하여 아래와 같은 모형식(model formula)을 작성할 수 있습니다: "

#. type: example
#: R-intro.texi:4637
#, no-wrap
msgid "> fm <- aov(yield ~ v + n*p*k + Error(farms/blocks), data=farm.data)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4643
msgid "would typically be used to describe an experiment with mean model @code{v + n*p*k} and three error strata, namely ``between farms'', ``within farms, between blocks'' and ``within blocks''."
msgstr "이 식은 보통 @code{v + n*p*k}로 표현되는 평균 모형(mean model)으로 실험을 기술할 때 사용되며, 이 경우  ``between farms'', ``within farms'', 그리고 ``within blocks''라는 세 개의 오차계층(error strata)을 포함합니다."

#. type: subsection
#: R-intro.texi:4646
#: R-intro.texi:4648
#: R-intro.texi:4649
#, no-wrap
msgid "ANOVA tables"
msgstr ""

#. type: Plain text
#: R-intro.texi:4657
msgid "Note also that the analysis of variance table (or tables) are for a sequence of fitted models.  The sums of squares shown are the decrease in the residual sums of squares resulting from an inclusion of @emph{that term} in the model at @emph{that place} in the sequence.  Hence only for orthogonal experiments will the order of inclusion be inconsequential."
msgstr "분산분석(the analysis of variance,ANOVA)(또는 분산분석표)은 사실 여러 개의 모형을 적합한 결과를 나타내고 있다는 점을 이해할 필요가 있습니다. 보통 잔차합 (sums of squares,SS)은 주어진 시퀀스의 @emph{해당 위치(that place)}에 있는@emph{해당 변수(that term)}를 모형에 하나씩 포함시킬때 마다 점점 감소합니다. 즉, 오직 직교실험(orthogonal experiment)의 경우에만 항을 추가해나가는 순서가 중요하지 않습니다. "

#. type: Plain text
#: R-intro.texi:4662
msgid "For multistratum experiments the procedure is first to project the response onto the error strata, again in sequence, and to fit the mean model to each projection.  For further details, see Chambers & Hastie (1992)."
msgstr "다계층실험(multistratum experiments)의 경우, 우선 종속(response)변수를 오차계층(error strata)에 시퀀스 순서대로 정사영(project)시켜 나가면서, 각 정사영마다 평균모형( mean model)을 적합하는 과정을 통해 분산분석을 수행하게 됩니다. 여기에 대한 자세한 설명은 Chambers & Hastie (1992)의 책을 참고하시길 바랍니다. "

#. type: Plain text
#: R-intro.texi:4665
msgid "A more flexible alternative to the default full ANOVA table is to compare two or more models directly using the @code{anova()} function."
msgstr "이렇게 디폴트(default) ANOVA 테이블로 각 모형을 따로 적합한 결과들을 비교하는 것 보다는 좀 더 쉽게, 두개 이상의 모형들을 한번에 비교하고 싶다면, @code{anova()} 함수를 사용하면 됩니다."

#. type: example
#: R-intro.texi:4669
#, no-wrap
msgid "> anova(@var{fitted.model.1}, @var{fitted.model.2}, @dots{})\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4676
msgid "The display is then an ANOVA table showing the differences between the fitted models when fitted in sequence.  The fitted models being compared would usually be an hierarchical sequence, of course.  This does not give different information to the default, but rather makes it easier to comprehend and control."
msgstr "@code{anova()} 함수를 사용하면, 입력한 순서대로 적합된 모형 간의 차이를 보여주는 테이블을 생성합니다.이때, 비교하게 될 모형들은,물론 일종의 계층적 순서(hierarchical sequence)를 가져야만 합니다.@code{anova()} 함수를 사용하는 것이 디폴트(default) 함수를 사용했을 때와 다른 정보를 더 제공하는 것은 아니지만, 좀 더 이해하기 쉽고 손쉽게 모형을 비교하기 위해 사용한다고 보시면 됩니다."

#. type: Plain text
#: R-intro.texi:4684
msgid "The @code{update()} function is largely a convenience function that allows a model to be fitted that differs from one previously fitted usually by just a few additional or removed terms.  Its form is"
msgstr "@code{update()} 함수는 이미 적합된 모형에 몇 개의 항만을 추가하거나 혹은 제거해서 새로운 모형으로서 적합시키고자 할 때 매우 유용하게 사용할 수 있으며, 다음과 같이 사용합니다."

#. type: findex
#: R-intro.texi:4684
#, no-wrap
msgid "update"
msgstr ""

#. type: example
#: R-intro.texi:4688
#, no-wrap
msgid "> @var{new.model} <- update(@var{old.model}, @var{new.formula})\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4692
msgid "In the @var{new.formula} the special name consisting of a period, @samp{@code{.}},"
msgstr "위 식의 @var{new.formula} 부분에서 마침표(period) @samp{@code{.}} 하나가 사용될 경우, 이것은 \"이전 모형으로부터 온 부분들\"이라는 의미로 사용된 것 입니다. "

#. type: findex
#: R-intro.texi:4692
#, no-wrap
msgid "."
msgstr ""

#. type: Plain text
#: R-intro.texi:4695
msgid "only, can be used to stand for ``the corresponding part of the old model formula''.  For example,"
msgstr "좀 더 확실한 이해를 위해 아래의 예제를 살펴봅시다."

#. type: example
#: R-intro.texi:4700
#, no-wrap
msgid ""
"> fm05 <- lm(y ~ x1 + x2 + x3 + x4 + x5, data = production)\n"
"> fm6  <- update(fm05, . ~ . + x6)\n"
"> smf6 <- update(fm6, sqrt(.) ~ .)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4707
msgid "would fit a five variate multiple regression with variables (presumably)  from the data frame @code{production}, fit an additional model including a sixth regressor variable, and fit a variant on the model where the response had a square root transform applied."
msgstr "제일 먼저 데이터 프레임 @code{production}으로부터 온 5개의 변수를 포함하는 중회귀(multiple regression) 모형(fm05)을 적합하고, 이를 바탕으로 6번째 변수를 추가하여 모형을 다시 적합한 후(fm6), 다시 이 모형에서 제곱근(square root) 변환시킨 종속변수를 사용하여 모형을 적합한 것입니다 (smf6)."

#. type: Plain text
#: R-intro.texi:4711
msgid "Note especially that if the @code{data=} argument is specified on the original call to the model fitting function, this information is passed on through the fitted model object to @code{update()} and its allies."
msgstr "특히, 제일 처음으로 사용한 모형 적합 함수에서 @code{data=} 인자(argument)가 지정된 경우에는, 이 정보가 모형 적합에 사용되는 과정을 통헤  @code{update()} 함수와 그 함수족(allies)을 사용할 경우 그대로 전달되어 사용된다는 점을 기억하시기 바랍니다. "

#. type: Plain text
#: R-intro.texi:4714
msgid "The name @samp{.} can also be used in other contexts, but with slightly different meaning.  For example"
msgstr "또, @samp{@code{.}}는 다른 상황(contexts)에서 사용될 때는 위에서 설명한 것과 약간 다른 의미로 사용된다는 점도 주의해야 합니다. 아래의 예에서는, "

#. type: example
#: R-intro.texi:4717
#, no-wrap
msgid "> fmfull <- lm(y ~ . , data = production)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4722
msgid "would fit a model with response @code{y} and regressor variables @emph{all other variables in the data frame @code{production}}."
msgstr "종속(response)변수 @code{y}와 함께 데이터 프레임 @code{production}에 포함된 @emph{모든 변수들}을 회귀변수로 사용하는 모형을 적합하겠다는 의미입니다."

#. type: Plain text
#: R-intro.texi:4725
msgid "Other functions for exploring incremental sequences of models are @code{add1()}, @code{drop1()} and @code{step()}."
msgstr "순서대로 항을 늘려가며 모형을 비교하기 위해서는 @code{add1()}, @code{drop1()} 그리고 @code{step()}와 같은 함수들을 사용할 수 있습니다."

#. type: findex
#: R-intro.texi:4725
#, no-wrap
msgid "add1"
msgstr ""

#. type: findex
#: R-intro.texi:4726
#, no-wrap
msgid "drop1"
msgstr ""

#. type: Plain text
#: R-intro.texi:4730
msgid "The names of these give a good clue to their purpose, but for full details see the on-line help."
msgstr "이 함수들은 이름 그대로의 의미로 사용할 수 있으며,더 자세한 사항은 각 함수의 도움말을 살펴보시길 바랍니다."

#. type: Plain text
#: R-intro.texi:4740
msgid "Generalized linear modeling is a development of linear models to accommodate both non-normal response distributions and transformations to linearity in a clean and straightforward way.  A generalized linear model may be described in terms of the following sequence of assumptions:"
msgstr "일반화 선형 모델(generalized linear model)이란 정규분포가 아닌 분포를 갖는 종속변수(non-normal response)와 변수변환(transformation)을 통한 선형성(linearity)의 만족이라는 두 과제를 깔끔하게 해결하기 위해 선형모형(linear model)을 좀 더 발전시킨 것이라고 생각하시면 됩니다.일반화 선형 모형은 다음과 같은 가정(assumptions)들을 사용하여 정의할 수도 있습니다:"

#. type: itemize
#: R-intro.texi:4744
msgid "There is a response, @math{y}, of interest and stimulus variables"
msgstr "이 모형에는 하나의 종속(response)변수 @math{y}가 있고, 이 반응변수의 분포에 영향을 미치는 여러 개의 설명변수(stimulus variables) "

#. type: ifnottex
#: R-intro.texi:4746
msgid "x_1, x_2, @dots{},"
msgstr ""

#. type: tex
#: R-intro.texi:4749
#, no-wrap
msgid "$x_1$, $x_2$, @dots{},\n"
msgstr ""

#. type: itemize
#: R-intro.texi:4751
msgid "whose values influence the distribution of the response."
msgstr "가 포함되어 있습니다."

#. type: itemize
#: R-intro.texi:4756
msgid "The stimulus variables influence the distribution of @math{y} through @emph{a single linear function, only}.  This linear function is called the @emph{linear predictor}, and is usually written"
msgstr "이 모형헤어 설명변수들이 @math{y}의 분포에 미치는 영향은 @emph{오직 단순 선형 함수의 형태}로 나타낼 수 있어야 합니다. 이 선형 함수는 @emph{linear predictor}라고 부를 수 있으며, 다음과 같이 사용될 수 있습니다. "

#. type: display
#: R-intro.texi:4759
#, no-wrap
msgid "eta = beta_1 x_1 + beta_2 x_2 + @dots{} + beta_p x_p,\n"
msgstr ""

#. type: ifnottex
#: R-intro.texi:4762
msgid "hence x_i has no influence on the distribution of @math{y} if and only if beta_i is zero."
msgstr "따라서, i번째 설명변수 x_i의 선형계수인 beta_i가 0 인 경우에는 이 변수가 @math{y}의 분포에 아무런 영향을 미치지 않습니다."

#. type: tex
#: R-intro.texi:4767
#, no-wrap
msgid ""
"$$ \\eta = \\beta_1 x_1 + \\beta_2 x_2 + \\cdots + \\beta_p x_p, $$\n"
"hence $x_i$ has no influence on the distribution of @math{y} if and only\n"
"if $\\beta_i=0$.\n"
msgstr ""

#. type: itemize
#: R-intro.texi:4771
msgid "The distribution of @math{y} is of the form"
msgstr "@math{y}의 분포는 아래와 같은 형식으로 표현할 수 있습니다."

#. type: display
#: R-intro.texi:4775
#, no-wrap
msgid ""
"f_Y(y; mu, phi)\n"
"  = exp((A/phi) * (y lambda(mu) - gamma(lambda(mu))) + tau(y, phi))\n"
msgstr ""

#. type: ifnottex
#: R-intro.texi:4780
msgid "where phi is a @emph{scale parameter} (possibly known), and is constant for all observations, @math{A} represents a prior weight, assumed known but possibly varying with the observations, and $\\mu$ is the mean of @math{y}."
msgstr "위 예시에서 @code{phi}는 @emph{스케일 모수(scale parameter)}로 (주로 주어지는 값이며), 모든 관측치에 대해 같은 상수값을 갖습니다. 또, @math{A}는 사전가중치(prior weight)를 의미하며, 이 역시 주어진 값이긴 하지만 관측치에 따라 다른 값을 가질 수도 있습니다. 마지막으로 $\\mu$는 @math{y}의 평균을 의미합니다."

#. type: tex
#: R-intro.texi:4791
#, no-wrap
msgid ""
"$$\n"
"f_Y(y;\\mu,\\varphi)\n"
"= \\exp\\left[{A \\over \\varphi}\\left\\{y\\lambda(\\mu) -\n"
"\\gamma\\left(\\lambda(\\mu)\\right)\\right\\} + \\tau(y,\\varphi)\\right]\n"
"$$\n"
"where $\\varphi$ is a @emph{scale parameter} (possibly known), and is\n"
"constant for all observations, $A$ represents a prior weight, assumed\n"
"known but possibly varying with the observations, and $\\mu$ is the mean\n"
"of $y$.\n"
msgstr ""

#. type: itemize
#: R-intro.texi:4794
msgid "So it is assumed that the distribution of @math{y} is determined by its mean and possibly a scale parameter as well."
msgstr "따라서, 이 식에서 @math{y}의 분포는 평균과 스케일 모수(parameter)에 의해 결정 됩니다."

#. type: ifnottex
#: R-intro.texi:4798
msgid "The mean, mu, is a smooth invertible function of the linear predictor:"
msgstr "@math{y}의 평균 @code{mu}는 linear predictor의 스무드한 가역함수(smooth invertible function)로 표현됩니다:"

#. type: display
#: R-intro.texi:4800
#, no-wrap
msgid "mu = m(eta),    eta = m^@{-1@}(mu) = ell(mu)\n"
msgstr ""

#. type: ifnottex
#: R-intro.texi:4802
msgid "and this inverse function, ell(), is called the @emph{link function}."
msgstr "여기서 역함수인 ell()을 @emph{링크함수(link function)}이라고 합니다."

#. type: tex
#: R-intro.texi:4807
#, no-wrap
msgid ""
"The mean, $\\mu$, is a smooth invertible function of the linear predictor:\n"
"$$ \\mu = m(\\eta),\\qquad \\eta = m^{-1}(\\mu) = \\ell(\\mu) $$\n"
"and this inverse function, $\\ell()$, is called the @emph{link function}.\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4817
msgid "These assumptions are loose enough to encompass a wide class of models useful in statistical practice, but tight enough to allow the development of a unified methodology of estimation and inference, at least approximately.  The reader is referred to any of the current reference works on the subject for full details, such as McCullagh & Nelder (1989) or Dobson (1990)."
msgstr "위의 가정들은 통계실무에서 사용하는 꽤 광범위한 클래스의 모형들을 포함할 수 있는 최소한의 가정이지만, 추정(estimation)과 추론(inference)을 하기 위한 하나의 통일된 방법론(methodology)이나 그 비슷한 것을 개발할 수 있을 만큼 충분히 구체적이기도 합니다. 일반화 선형 모형의 최신 레퍼런스나 좀 더 자세한 정보에 관심이 있는 분들께는 McCullagh & Nelder (1989)와 Dobson (1990)을 찾아보실 것을 권하고 싶습니다."

#. type: node
#: R-intro.texi:4821
#: R-intro.texi:4823
#: R-intro.texi:4824
#: R-intro.texi:4825
#: R-intro.texi:4856
#, no-wrap
msgid "Families"
msgstr ""

#. type: node
#: R-intro.texi:4821
#: R-intro.texi:4823
#: R-intro.texi:4856
#, no-wrap
msgid "The glm() function"
msgstr ""

#. type: Plain text
#: R-intro.texi:4834
msgid "The class of generalized linear models handled by facilities supplied in @R{} includes @emph{gaussian}, @emph{binomial}, @emph{poisson}, @emph{inverse gaussian} and @emph{gamma} response distributions and also @emph{quasi-likelihood} models where the response distribution is not explicitly specified.  In the latter case the @emph{variance function} must be specified as a function of the mean, but in other cases this function is implied by the response distribution."
msgstr "@R{}에서는 일반화 선형모형에서 종속변수의 분포가 @emph{가우시안(gaussian = 정규분포)}, @emph{이항 (binomial)}, @emph{포아송 (poisson)}, @emph{역가우시안 (inverse gaussian)}, 그리고 @emph{감마 (gamma)}인 경우를 모두 다룰 수 있으며, 또 종속변수의 분포가 분포 함수에 의해 정확히 묘사될 수 없는 경우에 사용하는 @emph{쿼시-라이클리후드 (quasi-likelihood)} 모형 역시 지원합니다.특히 쿼시-라이클리후드 모형의 경우,  @emph{분산함수(variance function)}를 반드시 평균(mean)의 함수식 형태로 나타낼 수 있어야 하지만, 이 외의 다른 경우에는 종속변수의 분포가  분산함수(variance function)의 형태를 내포합니다.  "

#. type: Plain text
#: R-intro.texi:4838
msgid "Each response distribution admits a variety of link functions to connect the mean with the linear predictor.  Those automatically available are shown in the following table:"
msgstr "종속변수의 각 분포들은 아래와 같이 다양한 연결함수(link functions)를 사용하여 이 분포의 평균과 linear predictor를 연결합니다. 사용가능한  분포와 연결함수는 다음과 같습니다:"

#. type: multitable
#: R-intro.texi:4842
msgid "@headitem Family name"
msgstr ""

#. type: multitable
#: R-intro.texi:4842
msgid "Link functions"
msgstr ""

#. type: item
#: R-intro.texi:4842
#, no-wrap
msgid "@code{binomial} @tab @code{logit}, @code{probit}, @code{log}, @code{cloglog}"
msgstr ""

#. type: item
#: R-intro.texi:4843
#, no-wrap
msgid "@code{gaussian} @tab @code{identity}, @code{log}, @code{inverse}"
msgstr ""

#. type: item
#: R-intro.texi:4844
#, no-wrap
msgid "@code{Gamma} @tab @code{identity}, @code{inverse}, @code{log}"
msgstr ""

#. type: item
#: R-intro.texi:4845
#, no-wrap
msgid "@code{inverse.gaussian} @tab @code{1/mu^2}, @code{identity}, @code{inverse}, @code{log}"
msgstr ""

#. type: item
#: R-intro.texi:4846
#, no-wrap
msgid "@code{poisson} @tab @code{identity}, @code{log}, @code{sqrt}"
msgstr ""

#. type: item
#: R-intro.texi:4847
#, no-wrap
msgid "@code{quasi} @tab @code{logit}, @code{probit}, @code{cloglog},"
msgstr ""

#. type: multitable
#: R-intro.texi:4849
msgid "@code{identity}, @code{inverse}, @code{log}, @code{1/mu^2}, @code{sqrt}"
msgstr ""

#. type: Plain text
#: R-intro.texi:4855
msgid "The combination of a response distribution, a link function and various other pieces of information that are needed to carry out the modeling exercise is called the @emph{family} of the generalized linear model."
msgstr "종속변수의 분포와 연결함수, 그리고 모형을 실행하기 필요한 다른 모든 정보들의 조합을 일반화 선형모형에서의 @emph{분포족(family)}이라고 합니다. "

#. type: subsection
#: R-intro.texi:4857
#, no-wrap
msgid "The @code{glm()} function"
msgstr ""

#. type: findex
#: R-intro.texi:4858
#, no-wrap
msgid "glm"
msgstr ""

#. type: Plain text
#: R-intro.texi:4864
msgid "Since the distribution of the response depends on the stimulus variables through a single linear function @emph{only}, the same mechanism as was used for linear models can still be used to specify the linear part of a generalized model.  The family has to be specified in a different way."
msgstr "일반화 선형모형에서도 종속변수의 분포가 오직 단순 선형함수의 형태로만 설명변수들과 연관되기 때문에, 선형모형 적합에 사용된 방법이 일반화 모형의 선형 부분에도 그대로 적용될 수 있습니다. 다만, 분포족(family)을 지정해야한다는 차이가 있습니다."

#. type: Plain text
#: R-intro.texi:4867
msgid "The @R{} function to fit a generalized linear model is @code{glm()} which uses the form"
msgstr "일반화 선형모형을 적합하는데 사용하는 @R{} 함수는 @code{glm()}이며, 아래와 같이 사용합니다."

#. type: example
#: R-intro.texi:4870
#, no-wrap
msgid "> @var{fitted.model} <- glm(@var{formula}, family=@var{family.generator}, data=@var{data.frame})\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4878
msgid "The only new feature is the @var{family.generator}, which is the instrument by which the family is described.  It is the name of a function that generates a list of functions and expressions that together define and control the model and estimation process.  Although this may seem a little complicated at first sight, its use is quite simple."
msgstr "(@code{lm()}함수와 비교했을 때) 유일하게 하나 첨가된 기능은 @var{함수족.생성자(family.generator)}이며, 어떤 함수족을 모형에 사용할 것인지를 지정해주는 도구 같은 것입니다. 이 함수는 해당 모형과 그 추정(estimation)을 정의하고 실행하기위해 필요한 함수들과 표현식들의 리스트를 생성해 줍니다. 언뜻 매우 복잡할 것처럼 보일 수도 있지만, 사실 사용하기 매우 간단한 함수 입니다."

#. type: Plain text
#: R-intro.texi:4884
msgid "The names of the standard, supplied family generators are given under ``Family Name'' in the table in @ref{Families}.  Where there is a choice of links, the name of the link may also be supplied with the family name, in parentheses as a parameter.  In the case of the @code{quasi} family, the variance function may also be specified in this way."
msgstr "@code{함수족 생성자(family generator)}에 사용될 수 있는 분포들의 표준 표기명은 @ref{Families} 섹션에 있는 표에서 \"함수족 이름 (Family Name)\" 부분에서 찾으실 수 있습니다. 또 연결함수를 따로 선택하고 싶은 경우, 모수(paramter)를 지정할 때 처럼, 분포족(family)이름 옆 괄호(parentheses) 안에 연결함수의 이름을 입력하시면 됩니다.  또 @code{쿼시(quasi)}족의 경우, 분산함수(variance function)를 이와 비슷한 방식으로 입력할 수 있습니다. "

#. type: Plain text
#: R-intro.texi:4886
msgid "Some examples make the process clear."
msgstr "아래의 예들을 살펴보시면 사용법이 좀 더 분명하게 이해될 것입니다."

#. type: subsubheading
#: R-intro.texi:4887
#, no-wrap
msgid "The @code{gaussian} family"
msgstr ""

#. type: Plain text
#: R-intro.texi:4890
msgid "A call such as"
msgstr "아래와 같이 @code{glm()} 함수를 사용하면 @code{lm()}을 사용할 때와 같은 결과를 얻긴하지만 훨씬 비효율적입니다. "

#. type: example
#: R-intro.texi:4893
#, no-wrap
msgid "> fm <- glm(y ~ x1 + x2, family = gaussian, data = sales)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4897
msgid "achieves the same result as"
msgstr ""

#. type: example
#: R-intro.texi:4900
#, no-wrap
msgid "> fm <- lm(y ~ x1+x2, data=sales)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4908
msgid "but much less efficiently.  Note how the gaussian family is not automatically provided with a choice of links, so no parameter is allowed.  If a problem requires a gaussian family with a nonstandard link, this can usually be achieved through the @code{quasi} family, as we shall see later."
msgstr "가우시안족(gaussian family)은 연결함수의 선택이 그다지 필요하지 않기 때문에, 굳이 모수(parameter)를 지정할 필요가 없다는 점을 생각해보시기 바랍니다. 만약 가우시안족(gaussian family)에 표준이 아닌 (nonstandard) 연결함수를 사용하고 싶다면, 뒤에서 다루게 될, @code{쿼시족(quasi family)}을 사용하는 것이 보통입니다. "

#. type: subsubheading
#: R-intro.texi:4909
#, no-wrap
msgid "The @code{binomial} family"
msgstr ""

#. type: Plain text
#: R-intro.texi:4912
msgid "Consider a small, artificial example, from Silvey (1970)."
msgstr "Silvey (1970)에서 사용된 간단한 예제를 살펴봅시다."

#. type: Plain text
#: R-intro.texi:4917
msgid "On the Aegean island of Kalythos the male inhabitants suffer from a congenital eye disease, the effects of which become more marked with increasing age.  Samples of islander males of various ages were tested for blindness and the results recorded.  The data is shown below:"
msgstr "에게해의 한 섬인 Kalythos에는 남성들이 선천성 안질환을 앓고 있는데, 이 안질환은 주로 나이가 들어감에 따라 더욱 진행됩니다. 아래의 데이터는 이 섬에 거주하는 다양한 연령대의 남성들의 실명여부를 검사한 결과를 기록한 것입니다:"

#. type: item
#: R-intro.texi:4921
#: R-intro.texi:4929
#, no-wrap
msgid "Age:          @tab  20 @tab  35 @tab  45 @tab  55 @tab  70"
msgstr ""

#. type: item
#: R-intro.texi:4922
#: R-intro.texi:4930
#, no-wrap
msgid "No.@: tested: @tab  50 @tab  50 @tab  50 @tab  50 @tab  50"
msgstr ""

#. type: item
#: R-intro.texi:4923
#: R-intro.texi:4931
#, no-wrap
msgid "No.@: blind:  @tab  @w{ 6} @tab  17 @tab  26 @tab  37 @tab  44"
msgstr ""

#. type: Plain text
#: R-intro.texi:4938
msgid "The problem we consider is to fit both logistic and probit models to this data, and to estimate for each model the LD50, that is the age at which the chance of blindness for a male inhabitant is 50%."
msgstr "이 데이터에 로지스틱(logistic)과 프로빗(probit) 두가지 모형을 모두 적합시키고, 각 모형으로부터 남성거주자의 실명확률이 50%가 되는 나이인 LD50를 추정하고자 합니다."

#. type: Plain text
#: R-intro.texi:4941
msgid "If @math{y} is the number of blind at age @math{x} and @math{n} the number tested, both models have the form"
msgstr "만약 @math{y}가 연령 @math{x} 때의 테스트에서 확인된 실명한 사람들의 수이고, @math{n}은 테스트를 받은 사람의 수라면, 두 모형은 아래와 같이 표현됩니다."

#. type: ifnottex
#: R-intro.texi:4943
msgid "y ~ B(n, F(beta_0 + beta_1 x))"
msgstr ""

#. type: tex
#: R-intro.texi:4946
#, no-wrap
msgid "$$ y \\sim {\\rm B}(n, F(\\beta_0 + \\beta_1 x)) $$\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4953
msgid "where for the probit case, @eqn{F(z) = \\Phi(z), F(z) = Phi(z)} is the standard normal distribution function, and in the logit case (the default), @eqn{F(z) = e^z/(1+e^z),F(z) = e^z/(1+e^z)}.  In both cases the LD50 is"
msgstr "프로빗 모형의 경우,  @eqn{F(z) = \\Phi(z), F(z) = Phi(z)} 표준 정규 분포(standard normal distribution function)를, 로짓 모형의 경우, @eqn{F(z) = e^z/(1+e^z),F(z) = e^z/(1+e^z)} 입니다.두 경우 모두 LD50는"

#. type: ifnottex
#: R-intro.texi:4955
msgid "LD50 = - beta_0/beta_1"
msgstr ""

#. type: tex
#: R-intro.texi:4958
#, no-wrap
msgid "$$ \\hbox{LD50} = -\\beta_0/\\beta_1 $$\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4961
msgid "that is, the point at which the argument of the distribution function is zero."
msgstr "으로 계산할 수 있으며, 이 값은 분포함수 @code{F(z)}의 값이 @math{0}일 때의 @code{z}에 해당합니다"

#. type: Plain text
#: R-intro.texi:4963
msgid "The first step is to set the data up as a data frame"
msgstr "위 문제를 풀기위한 첫번째 단계로 우선 모형에서 다루게 될 데이터를 데이터 프레임의 형식으로 준비합니다."

#. type: example
#: R-intro.texi:4967
#, no-wrap
msgid ""
"> kalythos <- data.frame(x = c(20,35,45,55,70), n = rep(50,5),\n"
"                         y = c(6,17,26,37,44))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4971
msgid "To fit a binomial model using @code{glm()} there are three possibilities for the response:"
msgstr "@code{glm()} 함수를 이용하여 이항모형(binomial model)을 적합할 경우에는, 아래의 세가지 종속변수(response) 종류 중 한 가지를 선택하실 수 있습니다:"

#. type: itemize
#: R-intro.texi:4976
msgid "If the response is a @emph{vector} it is assumed to hold @emph{binary} data, and so must be a @math{0/1} vector."
msgstr "종속변수가 @emph{벡터(vector)}인 경우, @emph{이진법(binary)} 데이터를 담고 있으므로, 반드시 @math{0}과 @math{1}로만 구성된 벡터여야 합니다. "

#. type: itemize
#: R-intro.texi:4981
msgid "If the response is a @emph{two-column matrix} it is assumed that the first column holds the number of successes for the trial and the second holds the number of failures."
msgstr "종속변수가 @emph{2열의 행렬}이라면, 첫번째 열은 해당 시행(trial)에 대한 성공횟수 그리고 두번째 열은 실패횟수를 저장합니다."

#. type: itemize
#: R-intro.texi:4985
msgid "If the response is a @emph{factor}, its first level is taken as failure (0) and all other levels as `success' (1)."
msgstr "만약 종속변수가 @emph{요인(factor)}인 경우, 첫번째 수준을 실패(@math{0})로, 그 외의 모든 다른 수준들은 성공 (@math{1})이라고 간주합니다."

#. type: Plain text
#: R-intro.texi:4989
msgid "Here we need the second of these conventions, so we add a matrix to our data frame:"
msgstr "이 예제에서는 이 중 두번째 방법을 사용할 것입니다, 따라서 아래와 같이 행렬 하나를 준비된 데이터 프레임 안에 추가하겠습니다."

#. type: example
#: R-intro.texi:4992
#, no-wrap
msgid "> kalythos$Ymat <- cbind(kalythos$y, kalythos$n - kalythos$y)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4995
msgid "To fit the models we use"
msgstr "모형의 적합은 아래와 같습니다."

#. type: example
#: R-intro.texi:4999
#, no-wrap
msgid ""
"> fmp <- glm(Ymat ~ x, family = binomial(link=probit), data = kalythos)\n"
"> fml <- glm(Ymat ~ x, family = binomial, data = kalythos)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5003
msgid "Since the logit link is the default the parameter may be omitted on the second call.  To see the results of each fit we could use"
msgstr "@code{logit} 연결함수가 디폴트이므로, 두번째 식에서는 해당 모수(parameter)의 입력은 생략될 수 있습니다. 각 모형의 적합된 결과를 확인하기 위해,"

#. type: example
#: R-intro.texi:5007
#, no-wrap
msgid ""
"> summary(fmp)\n"
"> summary(fml)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5011
msgid "Both models fit (all too) well.  To find the LD50 estimate we can use a simple function:"
msgstr "두 모형 모두 적합결과가 아주 좋습니다. LD50을 추정하기 위해, 다음과 같은 간단한 함수를 작성할 수 있습니다:"

#. type: example
#: R-intro.texi:5015
#, no-wrap
msgid ""
"> ld50 <- function(b) -b[1]/b[2]\n"
"> ldp <- ld50(coef(fmp)); ldl <- ld50(coef(fml)); c(ldp, ldl)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5019
msgid "The actual estimates from this data are 43.663 years and 43.601 years respectively."
msgstr "이 데이터로부터 얻어진 실제 추정치는 각각 43.663세 와 43.601세 입니다."

#. type: subsubheading
#: R-intro.texi:5020
#, no-wrap
msgid "Poisson models"
msgstr ""

#. type: Plain text
#: R-intro.texi:5028
msgid "With the Poisson family the default link is the @code{log}, and in practice the major use of this family is to fit surrogate Poisson log-linear models to frequency data, whose actual distribution is often multinomial.  This is a large and important subject we will not discuss further here.  It even forms a major part of the use of non-gaussian generalized models overall."
msgstr "포아송족 (Poisson family)의 경우, 디폴트로 @code{log}가 연결함수로 지정되어 있으며, 보통 실무에서 포아송족(Poisson family)을 주로 사용하게 되는 경우는 빈도데이터(frequency data)를 대체형(surrogate) (포아송) 로그선형모형(Poisson log-linear model)에 적합할 때 입니다. 로그선형모형을 대체형(surrogate)이라고 한 이유는, 빈도데이터의 경우, 실제 분포는 대체로 (포아송이 아니라) 다항분포(multinomial distribution)이기 때문입니다. 이 모형의 사용은 매우 중요하지만 너무 방대한 주제라 여기서는 다루지 않겠습니다. 사실 빈도데이터에 포아송 분포를 가정하는 모형은 비정규형(non-gaussian) 일반화 모형 전체에서 가장 대표적인 방법이라고 할 수 있겠습니다.  "

#. type: Plain text
#: R-intro.texi:5034
msgid "Occasionally genuinely Poisson data arises in practice and in the past it was often analyzed as gaussian data after either a log or a square-root transformation.  As a graceful alternative to the latter, a Poisson generalized linear model may be fitted as in the following example:"
msgstr "물론 때때로 데이터가 정말 포아송 분포에서 얻어지는 경우도 있겠지만, 이 경우 과거에는, (실무에서는 아직도) 데이터를 로그나 제곱근으로 변환하여 가우시안(gaussian) 데이터로 바꾼 다음 분석을 수행했습니다. 하지만 이제는 아래와 같이 포이송 일반화 선형모형을 적합하는 것이  가능합니다."

#. type: example
#: R-intro.texi:5038
#, no-wrap
msgid ""
"> fmod <- glm(y ~ A + B + x, family = poisson(link=sqrt),\n"
"              data = worm.counts)\n"
msgstr ""

#. type: subsubheading
#: R-intro.texi:5040
#, no-wrap
msgid "Quasi-likelihood models"
msgstr ""

#. type: Plain text
#: R-intro.texi:5047
msgid "For all families the variance of the response will depend on the mean and will have the scale parameter as a multiplier.  The form of dependence of the variance on the mean is a characteristic of the response distribution; for example for the poisson distribution @eqn{\\hbox{Var}[y] = \\mu,Var(y) = mu}."
msgstr "일반화 선형모형의 모든 함수족(families)에서, 종속변수의 분산은 평균에 대한 함수이며, 스케일 모수(parameter)는 계수(multiplier)입니다. 분산이 평균과 어떤 식으로 연관되는지 나타내는 식은 종속변수분포의 중요한 특성이라 볼 수 있습니다; 예를 들면, 포아송 분포의 경우 @eqn{\\hbox{Var}[y] = \\mu,Var(y) = mu}."

#. type: Plain text
#: R-intro.texi:5055
msgid "For quasi-likelihood estimation and inference the precise response distribution is not specified, but rather only a link function and the form of the variance function as it depends on the mean.  Since quasi-likelihood estimation uses formally identical techniques to those for the gaussian distribution, this family provides a way of fitting gaussian models with non-standard link functions or variance functions, incidentally."
msgstr "쿼시-라이클리후드(Quasi-likelihood)를 이용한 추정(estimation)과 추론(inference)을 위해, 정확한 종속변수의 분포를 지정할 필요는 없지만, 연결함수(link function)와 평균(mean)의 함수 형태로 분산함수(variance function)는 지정되어야 합니다. 쿼시-라이클리후드(Quasi-likelihood)를 이용한 추정에는 가우시안 분포의 경우와 완전히 동일한 방법을 사용하므로, 표준혀이 아닌 (non-standard) 연결함수 또는 분산함수(variance funtion)를 가정하는 가우시안 모형을 적합하는 데도 사용할 수 있습니다."

#. type: Plain text
#: R-intro.texi:5057
msgid "For example, consider fitting the non-linear regression"
msgstr "예를들어, 아래와 같이 비선형회귀모형을 적합할 경우"

#. type: ifnottex
#: R-intro.texi:5059
msgid "y = theta_1 z_1 / (z_2 - theta_2) + e"
msgstr ""

#. type: tex
#: R-intro.texi:5062
#, no-wrap
msgid "$$ y = {\\theta_1z_1 \\over z_2 - \\theta_2} + e $$\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5064
msgid "which may be written alternatively as"
msgstr "이 모형은 아래와 같은 방법으로 사용할 수도 있습니다."

#. type: ifnottex
#: R-intro.texi:5066
msgid "y = 1 / (beta_1 x_1 + beta_2 x_2) + e"
msgstr ""

#. type: tex
#: R-intro.texi:5069
#, no-wrap
msgid "$$ y = {1 \\over \\beta_1x_1 + \\beta_2x_2} + e $$\n"
msgstr ""

#. type: ifnottex
#: R-intro.texi:5074
msgid "x_1 = z_2/z_1, x_2 = -1/z_1, beta_1 = 1/theta_1, and beta_2 = theta_2/theta_1."
msgstr ""

#. type: tex
#: R-intro.texi:5078
#, no-wrap
msgid ""
"$x_1 = z_2/z_1$, $x_2=-1/z_1$, $\\beta_1=1/\\theta_1$ and\n"
"$\\beta_2=\\theta_2/\\theta_1$.\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5081
msgid "Supposing a suitable data frame to be set up we could fit this non-linear regression as"
msgstr "적당한 데이터 프레임이 존재한다고 가정하면, 위의 비선형회귀모형은 다음과 같이 적합할 수도 있습니다."

#. type: example
#: R-intro.texi:5086
#, no-wrap
msgid ""
"> nlfit <- glm(y ~ x1 + x2 - 1,\n"
"               family = quasi(link=inverse, variance=constant),\n"
"               data = biochem)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5090
msgid "The reader is referred to the manual and the help document for further information, as needed."
msgstr "더 자세한 설명이 필요하면 해당 매뉴얼과 도움말을 이용하시길 바랍니다."

#. type: cindex
#: R-intro.texi:5093
#, no-wrap
msgid "Nonlinear least squares"
msgstr ""

#. type: Plain text
#: R-intro.texi:5100
msgid "Certain forms of nonlinear model can be fitted by Generalized Linear Models (@code{glm()}).  But in the majority of cases we have to approach the nonlinear curve fitting problem as one of nonlinear optimization.  @R{}'s nonlinear optimization routines are @code{optim()}, @code{nlm()} and @code{nlminb()},"
msgstr "특정한 형식을 갖춘 비선형모형은 일반화 선형모형(@code{glm()})을 사용하여 적합할 수 있습니다. 하지만 대부분의 경우, 비선형모형은 비선형 최적화(nonlinear optimization) 방법 중 하나를 사용하여 비선형 곡선(curve)에 적합시키는 방식으로 풀어야만 합니다. @R{}은 이런 비선형 최적화 문제를 풀어주는 @code{optim()}, @code{nlm()} 그리고 (@R{} 2.2.0 부터는) @code{nlminb()} 함수를 제공합니다. "

#. type: findex
#: R-intro.texi:5100
#: R-intro.texi:5155
#: R-intro.texi:5239
#, no-wrap
msgid "nlm"
msgstr ""

#. type: findex
#: R-intro.texi:5101
#, no-wrap
msgid "optim"
msgstr ""

#. type: findex
#: R-intro.texi:5102
#, no-wrap
msgid "nlminb"
msgstr ""

#. type: Plain text
#: R-intro.texi:5111
msgid "which provide the functionality (and more) of @SPLUS{}'s @code{ms()} and @code{nlminb()}.  We seek the parameter values that minimize some index of lack-of-fit, and they do this by trying out various parameter values iteratively.  Unlike linear regression for example, there is no guarantee that the procedure will converge on satisfactory estimates.  All the methods require initial guesses about what parameter values to try, and convergence may depend critically upon the quality of the starting values."
msgstr "특히, @code{nlminb()} 함수의 경우, @SPLUS{}에서 사용되는 @code{ms()}와 @code{nlminb()} 함수와 같은 (혹은 좀 더 다양한) 기능을 제공합니다. 이러한 함수를 사용할 경우, 주어진 적합결여지표(index of lack-of-fit)를 최소화시키는 모수의 값을 찾는것이 우리의 관심사이며,  위의 함수들은 모수에 여러 값을 반복적으로 대입하여 최적값을 찾습니다. 그러나, 이러한 프로시져를 사용할 경우, 선형회귀에서 모수를 추정할 때와는 달리, 만족스러울만한 추정치로 수렴하게 될거라는 보장은 없습니다. 모수 추정을 위해 초기값을 사용해야하는 모든 계산 방법에서는 이 초기값을 얼마나 잘 선택하는지에 따라 수렴결과가 크게 달라지기 때문입니다."

#. type: node
#: R-intro.texi:5115
#: R-intro.texi:5117
#: R-intro.texi:5118
#: R-intro.texi:5207
#, no-wrap
msgid "Least squares"
msgstr ""

#. type: cindex
#: R-intro.texi:5115
#: R-intro.texi:5117
#: R-intro.texi:5207
#: R-intro.texi:5208
#: R-intro.texi:5209
#, no-wrap
msgid "Maximum likelihood"
msgstr ""

#. type: Plain text
#: R-intro.texi:5123
msgid "One way to fit a nonlinear model is by minimizing the sum of the squared errors (SSE) or residuals.  This method makes sense if the observed errors could have plausibly arisen from a normal distribution."
msgstr "비선형모형을 적합하는 한가지 방법은 오차 혹은 잔차들의 제곱합(the sum of the squared errors or residuals)을 최소화시키는 것입니다. 이러한 최소제곱법은 관측된 오차들이 정규분포를 따른다고 보여질 경우에 권장됩니다."

#. type: Plain text
#: R-intro.texi:5125
msgid "Here is an example from Bates & Watts (1988), page 51.  The data are:"
msgstr "여기서 Bates & Watts (1988), page 51에 수록된 예제를 하나 살펴보도록 하겠습니다. 주어진 데이터는 아래와 같습니다."

#. type: example
#: R-intro.texi:5130
#, no-wrap
msgid ""
"> x <- c(0.02, 0.02, 0.06, 0.06, 0.11, 0.11, 0.22, 0.22, 0.56, 0.56,\n"
"         1.10, 1.10)\n"
"> y <- c(76, 47, 97, 107, 123, 139, 159, 152, 191, 201, 207, 200)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5133
msgid "The fit criterion to be minimized is:"
msgstr "최소화하기 위한 적합기준을 다음과 같습니다:"

#. type: example
#: R-intro.texi:5136
#, no-wrap
msgid "> fn <- function(p) sum((y - (p[1] * x)/(p[2] + x))^2)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5141
msgid "In order to do the fit we need initial estimates of the parameters.  One way to find sensible starting values is to plot the data, guess some parameter values, and superimpose the model curve using those values."
msgstr "모형적합을 위해 모수에 대한 초기값이 필요합니다. 그럴듯한 초기값을 찾는 방법 중 하나는 데이터를 플롯시킨 후, 모수값을 추측해서, 데이터 값과 유사한 패턴을 주는 모형의 곡선을 겹쳐 그려보는 것입니다."

#. type: example
#: R-intro.texi:5147
#, no-wrap
msgid ""
"> plot(x, y)\n"
"> xfit <- seq(.02, 1.1, .05)\n"
"> yfit <- 200 * xfit/(0.1 + xfit)\n"
"> lines(spline(xfit, yfit))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5151
msgid "We could do better, but these starting values of 200 and 0.1 seem adequate.  Now do the fit:"
msgstr "물론 더 나은 추측값이 있을 수 있지만, 200 과 0.1 을 초기값으로 하는 것에 무리는 없어 보입니다. 이제 모형을 적합시켜 보면:"

#. type: example
#: R-intro.texi:5154
#, no-wrap
msgid "> out <- nlm(fn, p = c(200, 0.1), hessian = TRUE)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5160
msgid "After the fitting, @code{out$minimum} is the SSE, and @code{out$estimate} are the least squares estimates of the parameters.  To obtain the approximate standard errors (SE) of the estimates we do:"
msgstr "모형을 적합시키고 나면, @code{out$minimum}는 SSE를, @code{out$estimate}는 최소제곱법을 이용한 모수 추정치(estimates)를 보여줍니다. 추정치의 표준오차(standard error, SE)의 근사치는 아래 식으로 구할 수 있습니다:"

#. type: example
#: R-intro.texi:5163
#, no-wrap
msgid "> sqrt(diag(2*out$minimum/(length(y) - 2) * solve(out$hessian)))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5169
msgid "The @code{2} which is subtracted in the line above represents the number of parameters.  A 95% confidence interval would be the parameter estimate @eqn{\\pm, +/-} 1.96 SE.  We can superimpose the least squares fit on a new plot:"
msgstr "위 식에서 숫자 2는 모형에 포함된 모수(parameter)의 개수를 의미합니다. 모수의 추정치에 대한 95% 신뢰구간은 추정치에 @eqn{\\pm, +/-} 1.96*SE 하여 계산할 수 있습니다. 또 최소제곱법으로 구한 추정치의 핏(fit)을 데이터 플롯 위에 덧그릴수도 있습니다:"

#. type: example
#: R-intro.texi:5175
#, no-wrap
msgid ""
"> plot(x, y)\n"
"> xfit <- seq(.02, 1.1, .05)\n"
"> yfit <- 212.68384222 * xfit/(0.06412146 + xfit)\n"
"> lines(spline(xfit, yfit))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5180
msgid "The standard package @pkg{stats} provides much more extensive facilities for fitting non-linear models by least squares.  The model we have just fitted is the Michaelis-Menten model, so we can use"
msgstr "표준 패키지인 @pkg{stats}에는 최소제곱법으로 비선형모형을 적합할 수 있는 많은 종류의 함수들이 포함되어 있습니다. 바로 위의 예제에서 우리는 Michaelis-Menten 모형을 적합했습니다. 이 분석은 다음과 같은 방법으로도 실행 가능합니다."

#. type: example
#: R-intro.texi:5192
#, no-wrap
msgid ""
"> df <- data.frame(x=x, y=y)\n"
"> fit <- nls(y ~ SSmicmen(x, Vm, K), df)\n"
"> fit\n"
"Nonlinear regression model\n"
"  model:  y ~ SSmicmen(x, Vm, K)\n"
"   data:  df\n"
"          Vm            K\n"
"212.68370711   0.06412123\n"
" residual sum-of-squares:  1195.449\n"
"> summary(fit)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:5194
#, no-wrap
msgid ""
"Formula: y ~ SSmicmen(x, Vm, K)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:5199
#, no-wrap
msgid ""
"Parameters:\n"
"    Estimate Std. Error t value Pr(>|t|)\n"
"Vm 2.127e+02  6.947e+00  30.615 3.24e-11\n"
"K  6.412e-02  8.281e-03   7.743 1.57e-05\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:5201
#, no-wrap
msgid ""
"Residual standard error: 10.93 on 10 degrees of freedom\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:5205
#, no-wrap
msgid ""
"Correlation of Parameter Estimates:\n"
"      Vm\n"
"K 0.7651\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5217
msgid "Maximum likelihood is a method of nonlinear model fitting that applies even if the errors are not normal.  The method finds the parameter values which maximize the log likelihood, or equivalently which minimize the negative log-likelihood.  Here is an example from Dobson (1990), pp.@: 108--111.  This example fits a logistic model to dose-response data, which clearly could also be fit by @code{glm()}.  The data are:"
msgstr "최우추정(Maximum likelihood)법 역시 비선형모형을 적합하는데 쓰일 수 있으며, 오차항이 정규분포를 따르지 않을 경우에도 사용할 수 있습니다. 이 방법은 로그-우도(log-likelihood) 함수를 최대화시켜주는 모수의 값을 추정치로 찾아주며, 이는 음의 로그-우도(negative log-likelihood)를 최소화시키는 모수의 값을 찾는것과 동일합니다. 이제 Dobson(1990), pp.108–111 에 나오는 예제를 살펴보도록 하겠습니다. 이 예제는 dose-response 데이터에 로지스틱 모형을 적합하는 것이며 @code{glm()}함수를 사용할 수 있습니다. 우선 주어진 데이터는 아래와 같습니다:"

#. type: example
#: R-intro.texi:5223
#, no-wrap
msgid ""
"> x <- c(1.6907, 1.7242, 1.7552, 1.7842, 1.8113,\n"
"         1.8369, 1.8610, 1.8839)\n"
"> y <- c( 6, 13, 18, 28, 52, 53, 61, 60)\n"
"> n <- c(59, 60, 62, 56, 63, 59, 62, 60)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5226
msgid "The negative log-likelihood to minimize is:"
msgstr "다음과 같이 음의 로그-우도 함수를 최소화 합니다:"

#. type: example
#: R-intro.texi:5231
#, no-wrap
msgid ""
"> fn <- function(p)\n"
"   sum( - (y*(p[1]+p[2]*x) - n*log(1+exp(p[1]+p[2]*x))\n"
"           + log(choose(n, y)) ))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5235
msgid "We pick sensible starting values and do the fit:"
msgstr "이 작업을 수행하기위해 적당한 초기값(starting values)을 선택합니다:"

#. type: example
#: R-intro.texi:5238
#, no-wrap
msgid "> out <- nlm(fn, p = c(-50,20), hessian = TRUE)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5245
msgid "After the fitting, @code{out$minimum} is the negative log-likelihood, and @code{out$estimate} are the maximum likelihood estimates of the parameters.  To obtain the approximate SEs of the estimates we do:"
msgstr "모형을 적합시키고나면, @code{out$minimum}사용해서 음의 로그-우도(negative log-likelihood) 함수값을, @code{out$estimate}를 사용해서 모수의 최대우도추정치(maximum likelihood estimates/MLE)를 확인할 수 있습니다.추정치의 표준오차(standard error, SE)의 근사치는 아래와 같이 구할 수 있습니다:"

#. type: example
#: R-intro.texi:5248
#, no-wrap
msgid "> sqrt(diag(solve(out$hessian)))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5252
msgid "A 95% confidence interval would be the parameter estimate @eqn{\\pm, +/-} 1.96 SE."
msgstr "마찬가지로, 95% 신뢰구간은 모수의 추정치에 @eqn{\\pm, +/-}1.96*SE 하여 계산하면 됩니다."

#. type: Plain text
#: R-intro.texi:5259
msgid "We conclude this chapter with just a brief mention of some of the other facilities available in @R{} for special regression and data analysis problems."
msgstr "이번 장은 특수한 회귀모형 및 데이터 분석방법을 다루기 위해  @R{}에서 이용가능한 기능들에 간단히 소개하면서 마무리하도록 하겠습니다."

#. type: cindex
#: R-intro.texi:5262
#, no-wrap
msgid "Mixed models"
msgstr ""

#. type: itemize
#: R-intro.texi:5265
msgid "@strong{Mixed models.} The recommended @CRANpkg{nlme} package provides functions @code{lme()} and @code{nlme()}"
msgstr "@strong{혼합모형 (Mixed models)}이란 선형 및 비선형 회귀모형의 회귀계수 중 일부가 랜덤효과(random effect)인 모형을 의미하는 것으로, "

#. type: findex
#: R-intro.texi:5265
#, no-wrap
msgid "lme"
msgstr ""

#. type: findex
#: R-intro.texi:5266
#, no-wrap
msgid "nlme"
msgstr ""

#. type: itemize
#: R-intro.texi:5271
msgid "for linear and non-linear mixed-effects models, that is linear and non-linear regressions in which some of the coefficients correspond to random effects.  These functions make heavy use of formulae to specify the models."
msgstr "이러한 혼합모형에 적합하기 위해서는 권장 패키지인 @CRANpkg{nlme}에서 제공하는 @code{lme()}와 @code{nlme()}를 사용할 수 있으며, 이런 함수들의 등장으로 혼합모형이  좀 더 많이 사용될 수 있게 되었습니다. "

#. type: cindex
#: R-intro.texi:5273
#, no-wrap
msgid "Local approximating regressions"
msgstr ""

#. type: itemize
#: R-intro.texi:5275
msgid "@strong{Local approximating regressions.} The @code{loess()}"
msgstr "@strong{로컬 근사 회귀(Local approximating regressions)}"

#. type: findex
#: R-intro.texi:5275
#: R-intro.texi:5283
#, no-wrap
msgid "loess"
msgstr ""

#. type: itemize
#: R-intro.texi:5280
msgid "function fits a nonparametric regression by using a locally weighted regression.  Such regressions are useful for highlighting a trend in messy data or for data reduction to give some insight into a large data set."
msgstr "@code{loess()} 함수는 로컬 가중치를 가정한 회귀(locally weighted regression)를 사용한 일종의 비모수회귀(nonparametric regression)모형을 적합합니다.이러한 회귀모형은 패턴이 깔끔하지 않은(messy) 데이터에서 추세를 찾아내거나, 데이터 크기 줄이기(data reduction)에 사용할 수도 있습니다. "

#. type: itemize
#: R-intro.texi:5283
msgid "Function @code{loess} is in the standard package @pkg{stats}, together with code for projection pursuit regression."
msgstr "@code{loess()} 함수는 projection pursuit regression을 위한 함수인 @code{ppr()}과 함께 표준패키지인 @pkg{stats}에서 제공됩니다."

#. type: cindex
#: R-intro.texi:5286
#, no-wrap
msgid "Robust regression"
msgstr ""

#. type: itemize
#: R-intro.texi:5290
msgid "@strong{Robust regression.} There are several functions available for fitting regression models in a way resistant to the influence of extreme outliers in the data.  Function @code{lqs}"
msgstr "@strong{로버스트 회귀(Robust regression)}는 데이터에 포함된 이상치(extreme outliers)들의 영향력을 줄여 회귀모형을 적합하는 방법들 중 하나 입니다. 권장패키지인 @pkg{MASS}에 포함되어 있는 @code{lqs} "

#. type: findex
#: R-intro.texi:5290
#, no-wrap
msgid "lqs"
msgstr ""

#. type: itemize
#: R-intro.texi:5295
msgid "in the recommended package @CRANpkg{MASS} provides state-of-art algorithms for highly-resistant fits.  Less resistant but statistically more efficient methods are available in packages, for example function @code{rlm}"
msgstr "함수의 경우, 상당히 안정적인 적합치(fits)를 얻을 수 있는 최신의(state-of-art) 알고리즘들을 사용합니다. 또 이상치의 영향력에 대해서는 다소 덜 안정적이라도, 통계적으로 좀 더 효율적인 방법들이 여러 패키지에서 제공되는데, @pkg{MASS} 패키지의 @code{rlm}와 같은 함수가 그 중 하나의 예입니다."

#. type: findex
#: R-intro.texi:5295
#, no-wrap
msgid "rlm"
msgstr ""

#. type: itemize
#: R-intro.texi:5297
msgid "in package @CRANpkg{MASS}."
msgstr ""

#. type: cindex
#: R-intro.texi:5299
#, no-wrap
msgid "Additive models"
msgstr ""

#. type: itemize
#: R-intro.texi:5304
msgid "@strong{Additive models.} This technique aims to construct a regression function from smooth additive functions of the determining variables, usually one for each determining variable.  Functions @code{avas} and @code{ace}"
msgstr "@strong{가법 모형(Additive models)}은 설명변수(determining variable)들에 대한 스무드한 가법(즉, 교호작용을 포함하지 않는) 함수(smooth additive functions)를 사용하여 회귀모형식을 세우는 것으로, 보통 하나의 설명변수에 대해 하나의 함수를 사용합니다. @CRANpkg{acepack}에서 제공하는 @code{avas} 함수"

#. type: findex
#: R-intro.texi:5304
#, no-wrap
msgid "avas"
msgstr ""

#. type: findex
#: R-intro.texi:5305
#, no-wrap
msgid "ace"
msgstr ""

#. type: itemize
#: R-intro.texi:5307
msgid "in package @CRANpkg{acepack} and functions @code{bruto} and @code{mars}"
msgstr ""

#. type: findex
#: R-intro.texi:5307
#, no-wrap
msgid "bruto"
msgstr ""

#. type: findex
#: R-intro.texi:5308
#, no-wrap
msgid "mars"
msgstr ""

#. type: itemize
#: R-intro.texi:5313
msgid "in package @CRANpkg{mda} provide some examples of these techniques in user-contributed packages to @R{}.  An extension is @strong{Generalized Additive Models}, implemented in user-contributed packages @CRANpkg{gam} and @CRANpkg{mgcv}."
msgstr "함수 등은 @R{}에서 사용자-기여 패키지(user-contributed packages)를 통해 이 모형을 적합할 수 있다는 것을 보여주는 몇 가지 예 입니다 .이 모형을 조금 더 확장한 것으로 @strong{일반화 가법 모형 (Generalized Additive Models)}이 있으며, 마찬가지로 사용자-기여 패키지인 @CRANpkg{gam}과 @CRANpkg{mgcv}를 통해 구현가능합니다."

#. type: cindex
#: R-intro.texi:5315
#, no-wrap
msgid "Tree-based models"
msgstr ""

#. type: itemize
#: R-intro.texi:5323
msgid "@strong{Tree-based models.} Rather than seek an explicit global linear model for prediction or interpretation, tree-based models seek to bifurcate the data, recursively, at critical points of the determining variables in order to partition the data ultimately into groups that are as homogeneous as possible within, and as heterogeneous as possible between.  The results often lead to insights that other data analysis methods tend not to yield."
msgstr "@strong{트리 기반 모형 (Tree-based models)}은 (모형을 통한) 예측이나 (모형에 대한) 해석을 위해 하나의 글로벌 선형 모형을 찾는다기 보다는, 데이터를 분할(partition) 합니다. 즉, 설명변수의 임계점 (critical points)에서 데이터를 두 그룹으로 나누는 과정을 반복해서, 궁극적으로는 데이터를 그룹 내(within)에서는 가능한 동질하고(homogeneous), 그룹 간(between)은 가능한 이질적인(heterogeneous) 그룹들로 나누게 됩니다.그런데, 이러한 데이터 분할의 결과로 종종 다른 데이터 분석법으로부터는 찾을 수 없었던 것들을 발견하게 되기도 합니다. "

#. type: itemize
#: R-intro.texi:5326
msgid "Models are again specified in the ordinary linear model form.  The model fitting function is @code{tree()},"
msgstr "이 모형 역시 보통의 선형모형(ordinary linear model)의 형태로 표현할 수 있습니다. 모형을 적합을 위해 사용할 수 있는 함수로 @code{tree()}가 있습니다."

#. type: findex
#: R-intro.texi:5326
#, no-wrap
msgid "tree"
msgstr ""

#. type: itemize
#: R-intro.texi:5330
msgid "but many other generic functions such as @code{plot()} and @code{text()} are well adapted to displaying the results of a tree-based model fit in a graphical way."
msgstr "또 결과물을 효과적인 시각화를 위해 @code{plot()}와 @code{text()}와 같은 일반함수(generic function)와 연동시켜 사용하는 것도 가능합니다."

#. type: itemize
#: R-intro.texi:5333
msgid "Tree models are available in @R{} @emph{via} the user-contributed packages @CRANpkg{rpart} and @CRANpkg{tree}."
msgstr "@R{}에서는  사용자-기여 패키지(user contributed package)인 @CRANpkg{rpart}과 @CRANpkg{tree} 등을 사용해서 이러한 트리 모형을 사용하는 것이 가능합니다."

#. type: chapter
#: R-intro.texi:5337
#, no-wrap
msgid "Graphical procedures"
msgstr ""

#. type: Plain text
#: R-intro.texi:5343
msgid "Graphical facilities are an important and extremely versatile component of the @R{} environment.  It is possible to use the facilities to display a wide variety of statistical graphs and also to build entirely new types of graph."
msgstr "@R{} 환경(environment)에서 가장 중요고도 유용하게 활용되는 부분이 바로 그래픽 기능일 것입니다. @R{}의 그래픽 기능을 사용해서, 다양한 통계 관련 그래프들을 생성할 수 있으며, 또 완전히 새로운 종류의 그래프를 만들어 내는 것도 가능합니다."

#. type: Plain text
#: R-intro.texi:5353
msgid "The graphics facilities can be used in both interactive and batch modes, but in most cases, interactive use is more productive.  Interactive use is also easy because at startup time @R{} initiates a graphics @emph{device driver} which opens a special @emph{graphics window} for the display of interactive graphics.  Although this is done automatically, it may useful to know that the command used is @code{X11()} under UNIX, @code{windows()} under Windows and @code{quartz()} under OS X.  A new device can always be opened by @code{dev.new()}."
msgstr "그래픽 기능들은 대화형(interactive)이나 일괄식(batch)으로 사용하는 것 모두 가능하지만,대부분의 경우에는 대화형으로 작업하는 것이 좀 더 쉽고 효과적입니다. 대화형 사용이 좀 더 쉬운 이유는, @R{}이 시작될 때 대화형 그래픽을 출력하는 특별한 @emph{그래픽 윈도우(graphics window)}를 여는 @emph{device driver}(장치 드라이버)가 자동으로 초기화되기 때문입니다.  물론 이러한 과정은 자동적으로 실행되지만, UNIX에서는 @code{X11()}, 윈도우즈에서는 @code{windows()}, 그리고 Mac OS X에서는 @code{quartz()} 함수를 사용해서 그래픽 장치(graphic device)를 시작할 수 있다는 것을 알아두시면 유용할 것 입니다. "

#. type: Plain text
#: R-intro.texi:5357
msgid "Once the device driver is running, @R{} plotting commands can be used to produce a variety of graphical displays and to create entirely new kinds of display."
msgstr "일단 장치 드라이버가 실행되면, @R{}의 플롯팅(plotting) 명령어들은 다양한 종류의 그래픽 처리 및 새로운 종류의 그래픽 생성을 위해 사용할 수 있습니다."

#. type: Plain text
#: R-intro.texi:5359
msgid "Plotting commands are divided into three basic groups:"
msgstr "플롯팅 명령어들은 다음과 같이 크게 세 그룹으로 나눌 수 있습니다:"

#. type: itemize
#: R-intro.texi:5364
msgid "@strong{High-level} plotting functions create a new plot on the graphics device, possibly with axes, labels, titles and so on."
msgstr "@strong{하이-레벨 (High-level)} 플롯팅 함수들은 그래픽 디바이스 상에 축(axes), 레이블(labels), 제목(titles) 등으로 여러 요소로 구성된 새로운 플롯을 그려줍니다."

#. type: itemize
#: R-intro.texi:5367
msgid "@strong{Low-level} plotting functions add more information to an existing plot, such as extra points, lines and labels."
msgstr "들을 추가하여 좀 더 많은 정보들을 표현할 수 있도록 하는데  사용 됩니다."

#. type: itemize
#: R-intro.texi:5371
msgid "@strong{Interactive} graphics functions allow you interactively add information to, or extract information from, an existing plot, using a pointing device such as a mouse."
msgstr "@strong{대화형 (Interactive)} 그래픽 함수들은 마우스와 같은 포인팅 장치(pointing device)를 이용하여 이미 생성된 플롯에 정보를 추가하거나 또는 지우는 작업을 지원합니다."

#. type: Plain text
#: R-intro.texi:5375
msgid "In addition, @R{} maintains a list of @emph{graphical parameters} which can be manipulated to customize your plots."
msgstr "또한, @R{}은 사용자가 원하는대로 플롯을 수정 및 변경하는 데 사용할 수 있도록 여러 종류의 @emph{그래픽 파라미터 (graphical parameters)}들을 제공합니다."

#. type: Plain text
#: R-intro.texi:5381
msgid "This manual only describes what are known as `base' graphics.  A separate graphics sub-system in package @pkg{grid} coexists with base -- it is more powerful but harder to use.  There is a recommended package @CRANpkg{lattice} which builds on @pkg{grid} and provides ways to produce multi-panel plots akin to those in the @emph{Trellis} system in @Sl{}."
msgstr "이 매뉴얼에서는 일단 `기본(base)' 그래픽이라고 알려진 것들에 대해서만 다루겠습니다.  이러한 기본 그래픽과는 별도로 @pkg{grid} 패키지를 통해 사용할 수 있는 별도의 그래픽 서브-시스템이 존재하는데, 좀 더 강력한 그래픽 기능들을 제공하지만, 사용하기가 쉽지는 않습니다. 또, @pkg{grid}를 기반해서 제작된 @CRANpkg{lattice}라는 권장패키지도 있는데, 이는 @Sl{}에서 @emph{Trellis}(트렐리스)라는 시스템이 제공하는 다중패널 플롯(multi-panel plots)과 거의 비슷한 기능들을 사용할 수 있도록 지원합니다."

#. type: node
#: R-intro.texi:5390
#: R-intro.texi:5392
#: R-intro.texi:5393
#: R-intro.texi:5408
#: R-intro.texi:5449
#: R-intro.texi:5505
#: R-intro.texi:5562
#: R-intro.texi:5622
#, no-wrap
msgid "High-level plotting commands"
msgstr ""

#. type: node
#: R-intro.texi:5390
#: R-intro.texi:5392
#: R-intro.texi:5622
#: R-intro.texi:5623
#: R-intro.texi:5731
#: R-intro.texi:5753
#: R-intro.texi:5782
#, no-wrap
msgid "Low-level plotting commands"
msgstr ""

#. type: node
#: R-intro.texi:5390
#: R-intro.texi:5622
#: R-intro.texi:5782
#: R-intro.texi:5783
#: R-intro.texi:5849
#, no-wrap
msgid "Interacting with graphics"
msgstr ""

#. type: node
#: R-intro.texi:5390
#: R-intro.texi:5782
#: R-intro.texi:5849
#: R-intro.texi:5850
#: R-intro.texi:5872
#: R-intro.texi:5927
#: R-intro.texi:5948
#, no-wrap
msgid "Using graphics parameters"
msgstr ""

#. type: node
#: R-intro.texi:5390
#: R-intro.texi:5849
#: R-intro.texi:5875
#: R-intro.texi:5948
#: R-intro.texi:5976
#: R-intro.texi:6070
#: R-intro.texi:6124
#: R-intro.texi:6161
#: R-intro.texi:6227
#, no-wrap
msgid "Graphics parameters"
msgstr ""

#. type: node
#: R-intro.texi:5390
#: R-intro.texi:5948
#: R-intro.texi:6227
#: R-intro.texi:6228
#: R-intro.texi:6293
#: R-intro.texi:6329
#: R-intro.texi:6398
#, no-wrap
msgid "Device drivers"
msgstr ""

#. type: cindex
#: R-intro.texi:5390
#: R-intro.texi:6227
#: R-intro.texi:6398
#: R-intro.texi:6399
#: R-intro.texi:6400
#, no-wrap
msgid "Dynamic graphics"
msgstr ""

#. type: Plain text
#: R-intro.texi:5400
msgid "High-level plotting functions are designed to generate a complete plot of the data passed as arguments to the function.  Where appropriate, axes, labels and titles are automatically generated (unless you request otherwise.) High-level plotting commands always start a new plot, erasing the current plot if necessary."
msgstr "하이-레벨 플롯팅 함수들은 함수에 몇 개의 인자만 입력해도 하나의 완전한(complete) 플롯이 생성될 수 있도록 디자인 되었습니다. 따라서, 별도의 설정없이 자동적으로 적절한 위치에 축, 레이블, 그리고 제목들이 놓이게 되며 (물론 설정을 통해 바꾸는 것도 가능합니다). 하이레벨 플롯팅 명령어들은 언제나 새 플롯을 그리기 시작할 때, 필요하다면, 현재 출력 중인 플롯을 지워 버립니다."

#. type: node
#: R-intro.texi:5406
#: R-intro.texi:5408
#: R-intro.texi:5449
#, no-wrap
msgid "The plot() function"
msgstr ""

#. type: node
#: R-intro.texi:5406
#: R-intro.texi:5408
#: R-intro.texi:5449
#: R-intro.texi:5450
#: R-intro.texi:5505
#, no-wrap
msgid "Displaying multivariate data"
msgstr ""

#. type: node
#: R-intro.texi:5406
#: R-intro.texi:5449
#: R-intro.texi:5505
#: R-intro.texi:5506
#: R-intro.texi:5562
#, no-wrap
msgid "Display graphics"
msgstr ""

#. type: subsection
#: R-intro.texi:5406
#: R-intro.texi:5505
#: R-intro.texi:5562
#: R-intro.texi:5563
#, no-wrap
msgid "Arguments to high-level plotting functions"
msgstr ""

#. type: subsection
#: R-intro.texi:5409
#, no-wrap
msgid "The @code{plot()} function"
msgstr ""

#. type: Plain text
#: R-intro.texi:5416
msgid "One of the most frequently used plotting functions in @R{} is the @code{plot()} function.  This is a @emph{generic} function: the type of plot produced is dependent on the type or @emph{class} of the first argument."
msgstr "@R{}에서 가장 빈번하게 사용되는 플롯팅 함수는 @code{plot()} 입니다. 이는 @emph{일반함수(generic function)} 중 하나 입니다: 생성되는 플롯의 종류는 (플롯의) 타입(type) 또는 함수의 첫번째 인자의 @emph{클래스(class)}에 의해서 결정됩니다."

#. type: item
#: R-intro.texi:5419
#, no-wrap
msgid "plot(@var{x}, @var{y})"
msgstr ""

#. type: itemx
#: R-intro.texi:5420
#, no-wrap
msgid "plot(@var{xy})"
msgstr ""

#. type: table
#: R-intro.texi:5425
msgid "If @var{x} and @var{y} are vectors, @code{plot(@var{x}, @var{y})} produces a scatterplot of @var{y} against @var{x}.  The same effect can be produced by supplying one argument (second form) as either a list containing two elements @var{x} and @var{y} or a two-column matrix."
msgstr "만약, @var{x}와 @var{y} 두 개 모두 벡터이면, @code{plot(@var{x}, @var{y})}은 @var{x}와 @var{y}의 관계를 살펴볼 수 있는 산점도(scatter plot)를 생성합니다. 하나의 인자만을 입력 받지만, 두 번째 표현 역시 같은 산점도를 출력합니다. 하지만 이 경우, 인자는 @var{x}와 @var{y} 두개의 컴포넌트로 구성된 리스트이거나, 또는 2 열의 행렬 형식이어야 합니다."

#. type: item
#: R-intro.texi:5426
#, no-wrap
msgid "plot(@var{x})"
msgstr ""

#. type: table
#: R-intro.texi:5432
msgid "If @var{x} is a time series, this produces a time-series plot. If @var{x} is a numeric vector, it produces a plot of the values in the vector against their index in the vector.  If @var{x} is a complex vector, it produces a plot of imaginary versus real parts of the vector elements."
msgstr "만약 @var{x}가 시계열(time-series)이면, 이 함수는 시계열 플롯(time-series plot)을 생성합니다. 또, 만약 @var{x}가 수치형 벡터인 경우에는, @var{x}의 인덱스를 @code{x}로 @var{x}의 값을 @code{y}로 하는 플롯을 생성합니다. 마지막으로, @var{x}가 복소수(complex) 벡터이면, 이 함수는 실수부분을 @code{x}로 허수부분을 @code{y}로 하는 플롯을 생성합니다."

#. type: item
#: R-intro.texi:5433
#, no-wrap
msgid "plot(@var{f})"
msgstr ""

#. type: itemx
#: R-intro.texi:5434
#, no-wrap
msgid "plot(@var{f}, @var{y})"
msgstr ""

#. type: table
#: R-intro.texi:5438
msgid "@var{f} is a factor object, @var{y} is a numeric vector.  The first form generates a bar plot of @var{f}; the second form produces boxplots of @var{y} for each level of @var{f}."
msgstr "여기서 @var{f}는 요인을, @var{y}는 수치형 벡터를 의미합니다. 첫번째 표현식은 벡터 @var{f}에 대한 막대 그래프 (bar plot)를 생성하고, 두번째 표현식은 @var{f}의 각 수준 별로 @var{y}의 박스플롯(boxplot)을 생성합니다."

#. type: item
#: R-intro.texi:5439
#, no-wrap
msgid "plot(@var{df})"
msgstr ""

#. type: itemx
#: R-intro.texi:5440
#, no-wrap
msgid "plot(~ @var{expr})"
msgstr ""

#. type: itemx
#: R-intro.texi:5441
#, no-wrap
msgid "plot(@var{y} ~ @var{expr})"
msgstr ""

#. type: table
#: R-intro.texi:5447
msgid "@var{df} is a data frame, @var{y} is any object, @var{expr} is a list of object names separated by `@code{+}' (e.g., @code{a + b + c}).  The first two forms produce distributional plots of the variables in a data frame (first form) or of a number of named objects (second form).  The third form plots @var{y} against every object named in @var{expr}."
msgstr "여기에서 @var{df}는 데이터 프레임, @var{y}는 임의의 객체, @var{expr}는, @code{a+b+c}와 같이, @code{+}로 구분된 여러 개체 이름의 리스트를 의미합니다. 첫번째 표현식은 데이터 프레임에 포함된 모든 변수들을 대상으로 각 변수의 분포를 보여주고, 두번째 표현식은 @code{expr}내에 사용된 변수들만을 대상으로 분포를 보여줍니다. 마지막 세번째 표현식은 @var{expr}에 사용된 모든 변수 각각에 대한 @var{y}의 분포를 보여 줍니다."

#. type: Plain text
#: R-intro.texi:5454
msgid "@R{} provides two very useful functions for representing multivariate data.  If @code{X} is a numeric matrix or data frame, the command"
msgstr "@R{}은 다변량 데이터를 시각화하기 위한 두 가지 매우 유용한 함수들을 제공합니다. 만약, @code{X}가 수치형 행렬 혹은 수치형 데이터 프레임이면, 아래의 명령문은 "

#. type: example
#: R-intro.texi:5457
#, no-wrap
msgid "> pairs(X)\n"
msgstr ""

#. type: findex
#: R-intro.texi:5458
#, no-wrap
msgid "pairs"
msgstr ""

#. type: Plain text
#: R-intro.texi:5466
msgid "produces a pairwise scatterplot matrix of the variables defined by the columns of @code{X}, that is, every column of @code{X} is plotted against every other column of @code{X} and the resulting @math{n(n-1)} plots are arranged in a matrix with plot scales constant over the rows and columns of the matrix."
msgstr "@code{X}의 열들로 구성된 변수들로 그린 페어와이즈 산점도(pairwise scatterplot) 행렬을 그립니다.이것은  @code{X}의 각각의 열(@code{행})이 다른 모든 열들(@code{열})에 대하여 플롯되어,총 @math{n(n-1)}개의 플롯이 생성되고, 행과 열이 모두 같은 플롯 스케일(scales)을 갖는 하나의 행렬처럼 나열됩니다. "

#. type: Plain text
#: R-intro.texi:5471
msgid "When three or four variables are involved a @emph{coplot} may be more enlightening.  If @code{a} and @code{b} are numeric vectors and @code{c} is a numeric vector or factor object (all of the same length), then the command"
msgstr "세 개 혹은 네 개의 변수만을 사용할 경우에는 @emph{coplot}을 사용하는 것이 보다 효과적일 수 있습니다. @code{a}와 @code{b}는 수치형 벡터이고, @code{c}는 수치형 벡터 혹은 요인(factor)인 경우 (세 벡터는 모두 길이가 같아야 합니다.),다음의 명령문을 사용하면, "

#. type: example
#: R-intro.texi:5474
#, no-wrap
msgid "> coplot(a ~ b | c)\n"
msgstr ""

#. type: findex
#: R-intro.texi:5475
#, no-wrap
msgid "coplot"
msgstr ""

#. type: Plain text
#: R-intro.texi:5488
msgid "produces a number of scatterplots of @code{a} against @code{b} for given values of @code{c}.  If @code{c} is a factor, this simply means that @code{a} is plotted against @code{b} for every level of @code{c}.  When @code{c} is numeric, it is divided into a number of @emph{conditioning intervals} and for each interval @code{a} is plotted against @code{b} for values of @code{c} within the interval.  The number and position of intervals can be controlled with @code{given.values=} argument to @code{coplot()}---the function @code{co.intervals()} is useful for selecting intervals.  You can also use two @emph{given} variables with a command like"
msgstr "@code{c}가 요인인 경우에는, 이 함수는 주어진 @code{c}의 각 수준에서 @code{a}(@code{y})에 대한 @code{b}(@code{x})의 산점도를 그립니다. 또, @code{c}가 수치형 벡터인 경우에는, @code{c}를 몇 개의 @emph{조건부 구간 (conditioning intervals)}로 나누어 각 구간에서 그 구간에 해당하는 @code{c}값을 갖는 데이터를 대상으로, @code{a}(@code{y})에 대한 @code{b}(@code{x})의 산점도를 그립니다. 이 조건부 구간의 개수와 위치는 @code{coplot()} 함수의 @code{given.values=} 인자를 설정하여 조정할 수 있습니다. 함수 @code{co.intervals()}와 병행하여 사용하면 구간선택시 매우 유용합니다--- 이 경우,  @code{co.intervals()} 함수는 구간을 선택하는데 도움을 줄 수 있습니다.   또한, @emph{주어진} 두 개의 변수에 대해 이 플롯을 그리고 싶다면, 아래와 같이 명령문을 사용하시면 됩니다. "

#. type: example
#: R-intro.texi:5491
#, no-wrap
msgid "> coplot(a ~ b | c + d)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5496
msgid "which produces scatterplots of @code{a} against @code{b} for every joint conditioning interval of @code{c} and @code{d}."
msgstr "이 명령문은 @code{c}와 @code{d}의 결합 조건부 구간(joint conditioning interval)을 생성하여, 각 구간별로 @code{a}(@code{y})에 대한 @code{b}(@code{x})의 산점도를 그립니다."

#. type: Plain text
#: R-intro.texi:5504
msgid "The @code{coplot()} and @code{pairs()} function both take an argument @code{panel=} which can be used to customize the type of plot which appears in each panel.  The default is @code{points()} to produce a scatterplot but by supplying some other low-level graphics function of two vectors @code{x} and @code{y} as the value of @code{panel=} you can produce any type of plot you wish.  An example panel function useful for coplots is @code{panel.smooth()}."
msgstr "@code{coplot()}과 @code{pairs()} 함수는 모두 @code{panel=}이라는 인자를 가지는데,이 인자를 설정함으로써 각각의 패널에 어떤 종류의 플롯을 그릴것인지 선택할 수 있습니다. 디폴트(default)로는 산점도를 생성하는데 사용되는 @code{points()}라는 설정되어 있지만, @code{x}와 @code{y} 두 벡터를 사용하는 다른 종류의 로우-레벨 그래픽 함수를 @code{panel=}에 입력하여 원하는 형태의 플롯으로 바꿀 수 있습니다.@code{coplot()}에 사용될 수 있는 유용한 패널함수 중 하나로 @code{panel.smooth()}가 있습니다."

#. type: Plain text
#: R-intro.texi:5510
msgid "Other high-level graphics functions produce different types of plots.  Some examples are:"
msgstr "다른 하이-레벨 그래픽 함수들은 다른 종류의 플롯을 생성하는 데 사용됩니다.사용가능한 함수 중 몇 가지는 다음과 같습니다."

#. type: item
#: R-intro.texi:5519
#, no-wrap
msgid "qqnorm(x)"
msgstr ""

#. type: itemx
#: R-intro.texi:5520
#, no-wrap
msgid "qqline(x)"
msgstr ""

#. type: itemx
#: R-intro.texi:5521
#, no-wrap
msgid "qqplot(x, y)"
msgstr ""

#. type: findex
#: R-intro.texi:5524
#, no-wrap
msgid "qqplot"
msgstr ""

#. type: table
#: R-intro.texi:5531
msgid "Distribution-comparison plots.  The first form plots the numeric vector @code{x} against the expected Normal order scores (a normal scores plot)  and the second adds a straight line to such a plot by drawing a line through the distribution and data quartiles.  The third form plots the quantiles of @code{x} against those of @code{y} to compare their respective distributions."
msgstr "다음은 분포 비교(Distribution-comparison)를 위한 플롯을 생성하는 함수들에 대해 다루겠습니다.첫번째 표현식은 수치형 벡터 @code{x}(@code{y})를 정규 순서통계량의 기대값(expected Normal order score(@code{x})에 대해 플롯한 정규스코어플롯(Normal scores plot)을 생성합니다. (즉, 이 플롯의 @code{x} 값으로는 정규 분포를 따르는 순서통계량이 (플롯 생성시 Theoretical Quantiles로 레이블 됨), @code{y} 값으로는 실제 데이터의 분포를 따르는 순서통계량이 (플롯 생성시 Sample Quantiles로 레이블 됨)이 사용됩니다. 두번째 표현식은 첫번째 표현식을 통해 얻은 플롯에 데이터와 정규분포의 4분위수(quartiles)들를 지나는 직선을 더해줍니다. 세번째 표현식은 @code{x}의 분위수(퀀타일, quantiles)에 대해 @code{y}의 분위수(quantiles)를 플롯하여, 두 분포를 비교할 수 있도록 합니다. "

#. type: item
#: R-intro.texi:5532
#, no-wrap
msgid "hist(x)"
msgstr ""

#. type: itemx
#: R-intro.texi:5533
#, no-wrap
msgid "hist(x, nclass=@var{n})"
msgstr ""

#. type: itemx
#: R-intro.texi:5534
#, no-wrap
msgid "hist(x, breaks=@var{b}, @dots{})"
msgstr ""

#. type: table
#: R-intro.texi:5542
msgid "Produces a histogram of the numeric vector @code{x}.  A sensible number of classes is usually chosen, but a recommendation can be given with the @code{nclass=} argument.  Alternatively, the breakpoints can be specified exactly with the @code{breaks=} argument.  If the @code{probability=TRUE} argument is given, the bars represent relative frequencies divided by bin width instead of counts."
msgstr "수치형 벡터 @code{x}에 대한 히스토그램을 생성합니다. 플롯하기 위해 필요한 클래스의 개수는 알아서 적절하게 선택되지만, 구간의 개수를 지정하고 싶다면 @code{nclass=} 인자(argument)를 입력하시면 됩니다. 또한, 브레이크 포인트/각 클래스의 끝점(breakpoint)의 개수를 지정하고 싶으면 @code{breaks=} 인자(argument)를 정확히 원하는 값으로 지정하시면 됩니다.만약, @code{probability=TRUE} 인자가 입력되면, 히스토그램의 막대(bars)들은 전체 도수(counts)대신 막대의 넓이(bin width)로 나누어진 상대적 빈도(relative frequencies)가 됩니다."

#. type: item
#: R-intro.texi:5543
#, no-wrap
msgid "dotchart(x, @dots{})"
msgstr ""

#. type: findex
#: R-intro.texi:5544
#, no-wrap
msgid "dotchart"
msgstr ""

#. type: table
#: R-intro.texi:5549
msgid "Constructs a dotchart of the data in @code{x}.  In a dotchart the @math{y}-axis gives a labelling of the data in @code{x} and the @math{x}-axis gives its value.  For example it allows easy visual selection of all data entries with values lying in specified ranges."
msgstr "@code{x}에대한 점도표(다트 챠트, dotchart)를 그립니다. 점도표에서는 @math{y}-축은 데이터 @code{x}에 대응되는 데이터의 레이블이, @math{x}-축에는 데이터의 값이 표시됩니다.이 플롯으로 정해진 범위의 값을 갖는 데이터들을 선택적으로 보여주는 작업을 쉽게 할 수 있습니다 ."

#. type: item
#: R-intro.texi:5550
#, no-wrap
msgid "image(x, y, z, @dots{})"
msgstr ""

#. type: itemx
#: R-intro.texi:5551
#, no-wrap
msgid "contour(x, y, z, @dots{})"
msgstr ""

#. type: itemx
#: R-intro.texi:5552
#, no-wrap
msgid "persp(x, y, z, @dots{})"
msgstr ""

#. type: findex
#: R-intro.texi:5553
#, no-wrap
msgid "image"
msgstr ""

#. type: findex
#: R-intro.texi:5554
#, no-wrap
msgid "contour"
msgstr ""

#. type: findex
#: R-intro.texi:5555
#, no-wrap
msgid "persp"
msgstr ""

#. type: table
#: R-intro.texi:5560
msgid "Plots of three variables.  The @code{image} plot draws a grid of rectangles using different colours to represent the value of @code{z}, the @code{contour} plot draws contour lines to represent the value of @code{z}, and the @code{persp} plot draws a 3D surface."
msgstr "3개의 변수로 플롯을 그리는 방법들입니다. @code{image} 플롯은 서로 다른 @code{z} 값을 나타내기 위해 여러 색을 사용하며, 여러 개 직사각형들을 포함하는 하나의 그리드(grid)를 그립니다. 또한, @code{contour} 플롯은 @code{z}의 값을 표현하기 위해 여러 개의 등고선 (contour lines)을 사용하며, @code{persp} 플롯은 3차원 표면도(surface plot)을 그립니다."

#. type: Plain text
#: R-intro.texi:5567
msgid "There are a number of arguments which may be passed to high-level graphics functions, as follows:"
msgstr "하이-레벨 그래픽 함수에 자주 사용되는 인자들에는 다음과 같은 것들이 있습니다."

#. type: item
#: R-intro.texi:5569
#, no-wrap
msgid "add=TRUE"
msgstr ""

#. type: table
#: R-intro.texi:5572
msgid "Forces the function to act as a low-level graphics function, superimposing the plot on the current plot (some functions only)."
msgstr "이 함수를 로우-레벨 그래픽 함수처럼 사용하여, 현재의 플롯 위에 새로운 플롯을 겹쳐 그리도록 합니다 (모든 함수에 적용 가능한  것은 아닙니다)."

#. type: item
#: R-intro.texi:5573
#, no-wrap
msgid "axes=FALSE"
msgstr ""

#. type: table
#: R-intro.texi:5577
msgid "Suppresses generation of axes---useful for adding your own custom axes with the @code{axis()} function.  The default, @code{axes=TRUE}, means include axes."
msgstr "축이 생성되지 않도록 해주는 인자로, 사용자가 직접 @code{axis()} 함수로 축을 지정할 때 유용하게 사용할 수 있습니다.디폴트는 @code{axes=TRUE}이며, 따라서 하이-레벨 플롯은 축을 포함합니다."

#. type: item
#: R-intro.texi:5578
#, no-wrap
msgid "log=\"x\""
msgstr ""

#. type: itemx
#: R-intro.texi:5579
#, no-wrap
msgid "log=\"y\""
msgstr ""

#. type: itemx
#: R-intro.texi:5580
#, no-wrap
msgid "log=\"xy\""
msgstr ""

#. type: table
#: R-intro.texi:5583
msgid "Causes the @math{x}, @math{y} or both axes to be logarithmic.  This will work for many, but not all, types of plot."
msgstr "@math{x}, @math{y} 또는 두 축 모두를 @math{log}(로그)변환(logarithmic) 합니다.인자는 많은 종류의 플롤세 사용할 수 있지만, 모든 함수에 전부 적용될 수 있는 것은 아닙니다."

#. type: item
#: R-intro.texi:5584
#, no-wrap
msgid "type="
msgstr ""

#. type: table
#: R-intro.texi:5587
msgid "The @code{type=} argument controls the type of plot produced, as follows:"
msgstr "@code{type=} 인자는 생성될 플롯의 종류를 지정하는 것으로, 아래와 같이 사용할 수 있습니다:"

#. type: item
#: R-intro.texi:5589
#, no-wrap
msgid "type=\"p\""
msgstr ""

#. type: table
#: R-intro.texi:5591
msgid "Plot individual points (the default)"
msgstr "(디폴트로 지정되어 있으며,) 개별 포인트(점)들로 플롯합니다."

#. type: item
#: R-intro.texi:5591
#, no-wrap
msgid "type=\"l\""
msgstr ""

#. type: table
#: R-intro.texi:5593
msgid "Plot lines"
msgstr "선으로 플롯합니다. "

#. type: item
#: R-intro.texi:5593
#, no-wrap
msgid "type=\"b\""
msgstr ""

#. type: table
#: R-intro.texi:5595
msgid "Plot points connected by lines (@emph{both})"
msgstr "포인트와 이들을 연결한 선 @emph{두가지 모두}를 플롯합니다."

#. type: item
#: R-intro.texi:5595
#, no-wrap
msgid "type=\"o\""
msgstr ""

#. type: table
#: R-intro.texi:5597
msgid "Plot points overlaid by lines"
msgstr "포인트들과 이들을 지나는 선을 플롯합니다."

#. type: item
#: R-intro.texi:5597
#, no-wrap
msgid "type=\"h\""
msgstr ""

#. type: table
#: R-intro.texi:5599
msgid "Plot vertical lines from points to the zero axis (@emph{high-density})"
msgstr "@math{0}에서부터 시작해서 각 포인트의 높이까지 세로로 이어진 수직선들을 플롯합니다. (@emph{하이-덴서티(high-density)}플롯이라고도 하며, 히스토그램\"처럼\" 생겼으나, 선으로 그려진 플롯입니다.) "

#. type: item
#: R-intro.texi:5599
#, no-wrap
msgid "type=\"s\""
msgstr ""

#. type: itemx
#: R-intro.texi:5600
#, no-wrap
msgid "type=\"S\""
msgstr ""

#. type: table
#: R-intro.texi:5603
msgid "Step-function plots.  In the first form, the top of the vertical defines the point; in the second, the bottom."
msgstr "스텝(계단)함수 (step-function)를 플롯합니다. 첫번째 표현식에서는 점핑포인트에서 수직선의 윗부분이, 두번째 표현식에서는 점핑포인트에서 수직선의 아랫부분이 해당 데이터 포이트의 값(@code{y})에 대응됩니다."

#. type: item
#: R-intro.texi:5603
#, no-wrap
msgid "type=\"n\""
msgstr ""

#. type: table
#: R-intro.texi:5607
msgid "No plotting at all.  However axes are still drawn (by default) and the coordinate system is set up according to the data.  Ideal for creating plots with subsequent low-level graphics functions."
msgstr "이 인자를 선택하면 화면에 아무것도 플롯되지 않습니다. 하지만, (디폴트에 의해) 축은 여전히 그려지고, 그에 따라 입력된 데이터에 대한 좌표시스템 역시 설정되어집니다. 이러한 기능은 로우-레벨 그래픽 함수를 이용하기 전 이를 적용할 틀을 만드는 데 사용하면 좋을 것입니다."

#. type: item
#: R-intro.texi:5609
#, no-wrap
msgid "xlab=@var{string}"
msgstr ""

#. type: itemx
#: R-intro.texi:5610
#, no-wrap
msgid "ylab=@var{string}"
msgstr ""

#. type: table
#: R-intro.texi:5614
msgid "Axis labels for the @math{x} and @math{y} axes.  Use these arguments to change the default labels, usually the names of the objects used in the call to the high-level plotting function."
msgstr "@math{x}축과 @math{y}축에 대한 레이블을 표기합니다.이 인자들을 입력하면, 하이-레벨 플롯팅 함수에 입력했던 객체들의 이름이 축 이름으로 레이블되는 디폴트 설정을 바꿀 수 있습니다. "

#. type: item
#: R-intro.texi:5615
#, no-wrap
msgid "main=@var{string}"
msgstr ""

#. type: table
#: R-intro.texi:5617
msgid "Figure title, placed at the top of the plot in a large font."
msgstr "플롯의 윗 부분에 (플롯에 사용된 것 보다) 큰 폰트로 주제목(title)을 표시합니다."

#. type: item
#: R-intro.texi:5618
#, no-wrap
msgid "sub=@var{string}"
msgstr ""

#. type: table
#: R-intro.texi:5620
msgid "Sub-title, placed just below the @math{x}-axis in a smaller font."
msgstr "@math{x}-축 바로 밑에, 주제목보다는 약간 작은 폰트로 부제목을 표시합니다."

#. type: Plain text
#: R-intro.texi:5629
msgid "Sometimes the high-level plotting functions don't produce exactly the kind of plot you desire.  In this case, low-level plotting commands can be used to add extra information (such as points, lines or text) to the current plot."
msgstr "하이레벨(high-level)플롯팅 함수를 사용하면, 때때로 내가 원하는 것을 정확히 반영한 플롯을 그릴 수 없는 경우가 생깁니다.이럴 때, 로우-레벨(low-level) 플롯팅 함수들을 이용하면 현재 플롯에 포인트, 선 또는 텍스트 같은 부가적인 정보를 더할 수 있습니다."

#. type: Plain text
#: R-intro.texi:5631
msgid "Some of the more useful low-level plotting functions are:"
msgstr "유용하게 사용할 수 있는 로우-레벨 플롯팅 함수들에는 다음과 같은 것들 같습니다. "

#. type: item
#: R-intro.texi:5633
#, no-wrap
msgid "points(x, y)"
msgstr ""

#. type: itemx
#: R-intro.texi:5634
#, no-wrap
msgid "lines(x, y)"
msgstr ""

#. type: findex
#: R-intro.texi:5635
#, no-wrap
msgid "points"
msgstr ""

#. type: findex
#: R-intro.texi:5636
#, no-wrap
msgid "lines"
msgstr ""

#. type: table
#: R-intro.texi:5641
msgid "Adds points or connected lines to the current plot.  @code{plot()}'s @code{type=} argument can also be passed to these functions (and defaults to @code{\"p\"} for @code{points()} and @code{\"l\"} for @code{lines()}.)"
msgstr "현재의 플롯에 포인트나 선을 추가합니다. 위 함수들은 @code{plot()}함수에서 @code{type=} 인자를 지정하는 것과 같은 작업을 수행합니다. (이 인자의 디폴트값인 @code{\"p\"}는 @code{points()}함수와, 이 인자의 @code{\"l\"} 값은 @code{lines()}와 동일합니다.)"

#. type: item
#: R-intro.texi:5642
#, no-wrap
msgid "text(x, y, labels, @dots{})"
msgstr ""

#. type: var{#1}
#: R-intro.texi:5643
#: R-intro.texi:7615
#, no-wrap
msgid "text"
msgstr ""

#. type: table
#: R-intro.texi:5648
msgid "Add text to a plot at points given by @code{x, y}.  Normally @code{labels} is an integer or character vector in which case @code{labels[i]} is plotted at point @code{(x[i], y[i])}.  The default is @code{1:length(x)}."
msgstr "@code{x,y}에 해당하는 점의 위치에 텍스트를 추가합니다. 보통 @code{레이블(labels)}은 하나의 정수나 문자형 벡터이며, @code{i 번째 데이터의 레이블/labels[i]}은 @code{(x[i], y[i])}의 위치에 표시됩니다. (별도의 레이블이 지정되지 않더라도) 디폴트로 @code{1:length(x)} 겂이 사용됩니다."

#. type: table
#: R-intro.texi:5650
msgid "@strong{Note}: This function is often used in the sequence"
msgstr "@strong{주의}: 이 함수는 다음과 같은 순서로 사용되어야 합니다."

#. type: example
#: R-intro.texi:5653
#, no-wrap
msgid "> plot(x, y, type=\"n\"); text(x, y, names)\n"
msgstr ""

#. type: table
#: R-intro.texi:5659
msgid "The graphics parameter @code{type=\"n\"} suppresses the points but sets up the axes, and the @code{text()} function supplies special characters, as specified by the character vector @code{names} for the points."
msgstr "그래픽 파라미터(parameter)인 @code{type=\"n\"}은 포인트를 보이지 않게 하지만 좌표축(axes)은 이미 설정되어 있으며, @code{text()}함수는 @code{names}에 문자형 벡터를 입력된 경우, 원래 포인트의 위치에 (입력된 벡터에 저장되어 있는) 문자값을 출력합니다. "

#. type: item
#: R-intro.texi:5660
#, no-wrap
msgid "abline(a, b)"
msgstr ""

#. type: itemx
#: R-intro.texi:5661
#, no-wrap
msgid "abline(h=@var{y})"
msgstr ""

#. type: itemx
#: R-intro.texi:5662
#, no-wrap
msgid "abline(v=@var{x})"
msgstr ""

#. type: itemx
#: R-intro.texi:5663
#, no-wrap
msgid "abline(@var{lm.obj})"
msgstr ""

#. type: findex
#: R-intro.texi:5664
#, no-wrap
msgid "abline"
msgstr ""

#. type: table
#: R-intro.texi:5672
msgid "Adds a line of slope @code{b} and intercept @code{a} to the current plot.  @code{h=@var{y}} may be used to specify @math{y}-coordinates for the heights of horizontal lines to go across a plot, and @code{v=@var{x}} similarly for the @math{x}-coordinates for vertical lines.  Also @var{lm.obj} may be list with a @code{coefficients} component of length 2 (such as the result of model-fitting functions,)  which are taken as an intercept and slope, in that order."
msgstr "기울기  @code{b}이고 절편이 @code{a}인 직선을 현재의 플롯에 첨가합니다. @code{h=@var{y}}는 높이가 @math{y}인 플롯 전체를 가로지르는 수평선(horizontal line)을 그리기 위해, 마찬가지로 @code{v=@var{x}}은 (x축에서) @math{x} 좌표값을 갖는 수직선(vertical line)을 그립니다. 또, @var{lm.obj} 는 (모형적함으로 얻어진) 길이 2인 @code{회귀계수(coefficients)}들을 성분으로 갖는 리스트이며, 이 경우에는 이 두 숫자는 순서대로 (플롯에 첨가될 선의) 절편과 기울기로 사용될 것입니다."

#. type: item
#: R-intro.texi:5673
#, no-wrap
msgid "polygon(x, y, @dots{})"
msgstr ""

#. type: findex
#: R-intro.texi:5674
#, no-wrap
msgid "polygon"
msgstr ""

#. type: table
#: R-intro.texi:5678
msgid "Draws a polygon defined by the ordered vertices in (@code{x}, @code{y})  and (optionally) shade it in with hatch lines, or fill it if the graphics device allows the filling of figures."
msgstr "(@code{x}, @code{y})의 형태로 입력된 꼭짓점(vertices)들을 순서대로 연결해서 다각형(polygon)을 그립니다. (옵션으로) 그려진 다각형의 내부에 해치 라인(hatch line)을 사용해서 음영을 주거나,사용중인 그래픽 장치가 지원가능할 경우, 색으로 내부를 채우는 것도 가능합니다. "

#. type: item
#: R-intro.texi:5679
#, no-wrap
msgid "legend(x, y, legend, @dots{})"
msgstr ""

#. type: findex
#: R-intro.texi:5680
#, no-wrap
msgid "legend"
msgstr ""

#. type: table
#: R-intro.texi:5686
msgid "Adds a legend to the current plot at the specified position.  Plotting characters, line styles, colors etc., are identified with the labels in the character vector @code{legend}.  At least one other argument @var{v} (a vector the same length as @code{legend}) with the corresponding values of the plotting unit must also be given, as follows:"
msgstr "지정된 위치에 현재 플롯의 범례(legend)를 첨가합니다. @code{범례(legend)}에는 문자형 벡터로된 (해당 플롯의) 레이블과 함께 플롯에 사용됐던 문자, 선의 종류, 색 등을 함께 사용하는 것이 가능합니다. 이렇게 레이블 이외의 다른 요소들을 사용하기 위해서는, @var{v} 이외의 최소한 한개 이상의 인자가 입력되어야 하며, (이 인자는 @var{v}와 같은 길이를 가진) 이미 플롯에 사용된 것과 같은 값들을 가지고 있어야 합니다. 다음과 같이 말이지요:"

#. type: item
#: R-intro.texi:5688
#, no-wrap
msgid "legend( , fill=@var{v})"
msgstr ""

#. type: table
#: R-intro.texi:5690
msgid "Colors for filled boxes"
msgstr "(다각형의) 영역을 채울게 될 색상들"

#. type: item
#: R-intro.texi:5690
#, no-wrap
msgid "legend( , col=@var{v})"
msgstr ""

#. type: table
#: R-intro.texi:5692
msgid "Colors in which points or lines will be drawn"
msgstr "포인트나 선에 사용될 색상들"

#. type: item
#: R-intro.texi:5692
#, no-wrap
msgid "legend( , lty=@var{v})"
msgstr ""

#. type: table
#: R-intro.texi:5694
msgid "Line styles"
msgstr "선의 종류"

#. type: item
#: R-intro.texi:5694
#, no-wrap
msgid "legend( , lwd=@var{v})"
msgstr ""

#. type: table
#: R-intro.texi:5696
msgid "Line widths"
msgstr "선의 굵기"

#. type: item
#: R-intro.texi:5696
#, no-wrap
msgid "legend( , pch=@var{v})"
msgstr ""

#. type: table
#: R-intro.texi:5698
msgid "Plotting characters (character vector)"
msgstr "(문자형 벡터로) 입력된 문자들을 출력"

#. type: item
#: R-intro.texi:5700
#, no-wrap
msgid "title(main, sub)"
msgstr ""

#. type: findex
#: R-intro.texi:5701
#, no-wrap
msgid "title"
msgstr ""

#. type: table
#: R-intro.texi:5704
msgid "Adds a title @code{main} to the top of the current plot in a large font and (optionally) a sub-title @code{sub} at the bottom in a smaller font."
msgstr "현재 플롯의 윗부분에 큰 글시로 주요(main) 제목을 첨가하고 (선택에 의해) 좀 더 작은 크기의 클씨로 부(sub)제목을 아랫 부분에 표시합니다."

#. type: item
#: R-intro.texi:5705
#, no-wrap
msgid "axis(side, @dots{})"
msgstr ""

#. type: findex
#: R-intro.texi:5706
#, no-wrap
msgid "axis"
msgstr ""

#. type: table
#: R-intro.texi:5712
msgid "Adds an axis to the current plot on the side given by the first argument (1 to 4, counting clockwise from the bottom.)  Other arguments control the positioning of the axis within or beside the plot, and tick positions and labels.  Useful for adding custom axes after calling @code{plot()} with the @code{axes=FALSE} argument."
msgstr "현재 플롯에 첫번째 인수에 (@code{side}) 지정된 방향에 축(axis)을 첨가합니다. (이 @code{side}는 @math{1}부터 @math{4}까지의 숫자로 나타나며, 바닥(bottom)에서 시작해 반시계 방향으로 해당 사면을 의미합니다.) 이 함수에 다른 인수들을 지정하여 축의 위치를 플롯의 내부나 옆으로 바꾸거나, 틱마크와 레이블의 위치를 조정할 수도 있습니다. 또 사용자 정의대로 축을 생성하기위해, @code{plot()} 함수에서 @code{axes=FALSE}로 입력하고 이 함수로 새축을 생성할 수도 있을 것입니다."

#. type: Plain text
#: R-intro.texi:5719
msgid "Low-level plotting functions usually require some positioning information (e.g., @math{x} and @math{y} coordinates) to determine where to place the new plot elements.  Coordinates are given in terms of @emph{user coordinates} which are defined by the previous high-level graphics command and are chosen based on the supplied data."
msgstr "로우-레벨(Low-level) 플롯팅 함수들은 대체로 새로운 플롯의 구성요소를 어디에 배치할지 위치를 (@math{x}와 @math{y} 좌표로) 지정해주어야 합니다. 이러한 위치는 이미 사용된 하이-레벨 그래픽 명령어에의해 생성된 @emph{사용자 좌표 (user coordinates)}에 의해 표현되어야하며, 이러한 좌표 시스템은 주어진 데이터에 의해 결정되는 것입니다."

#. type: Plain text
#: R-intro.texi:5725
msgid "Where @code{x} and @code{y} arguments are required, it is also sufficient to supply a single argument being a list with elements named @code{x} and @code{y}.  Similarly a matrix with two columns is also valid input.  In this way functions such as @code{locator()} (see below)  may be used to specify positions on a plot interactively."
msgstr "@code{x}와 @code{y} 인자가 필요한 경우, @code{x}와 @code{y}라는 이름을 가진 두 요소를 묶은 하나의 리스트를 하나의 인자로 입력하는 것 역시 가능합니다. 마찬가지로 2열의 행렬을 사용하는는 것도 가능합니다. 이렇게 입력할 위치를 지정하기 위해서, @code{locator()}(아래 참조) 등의 함수를 사용하여 대화형으로(interactively) 찾은 플롯 내의 위치정보를 사용할수도 있을 것입니다."

#. type: node
#: R-intro.texi:5729
#: R-intro.texi:5731
#: R-intro.texi:5732
#: R-intro.texi:5753
#, no-wrap
msgid "Mathematical annotation"
msgstr ""

#. type: subsection
#: R-intro.texi:5729
#: R-intro.texi:5731
#: R-intro.texi:5753
#: R-intro.texi:5754
#, no-wrap
msgid "Hershey vector fonts"
msgstr ""

#. type: Plain text
#: R-intro.texi:5739
msgid "In some cases, it is useful to add mathematical symbols and formulae to a plot.  This can be achieved in @R{} by specifying an @emph{expression} rather than a character string in any one of @code{text}, @code{mtext}, @code{axis}, or @code{title}.  For example, the following code draws the formula for the Binomial probability function:"
msgstr "경우에 따라, 수학적 기호(symbols)나 공식(formulae)을 플롯에 첨가하는 것이 필요할 것입니다. @R{}에서는 이러한 표현을 위해, 개별 문자열에 @code{text}, @code{mtext}, @code{axis}, 또는 @code{title} 등의 개별 함수를 사용하기 보다는 하나의 @emph{expression}을 사용합니다. 예를 들면, 다음의 코드는 이항분포함수(binomial probability function)의 공식을 표현한 것입니다:"

#. type: example
#: R-intro.texi:5742
#, no-wrap
msgid "> text(x, y, expression(paste(bgroup(\"(\", atop(n, x), \")\"), p^x, q^@{n-x@})))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5746
msgid "More information, including a full listing of the features available can obtained from within @R{} using the commands:"
msgstr "사용가능한 모든 기능에 대한 전체 리스트를 포함해, 더 많은 정보는 다음과 같은 @R{} 명령문을 통해 확인할 수 있습니다:"

#. type: example
#: R-intro.texi:5751
#, no-wrap
msgid ""
"> help(plotmath)\n"
"> example(plotmath)\n"
"> demo(plotmath)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5759
msgid "It is possible to specify Hershey vector fonts for rendering text when using the @code{text} and @code{contour} functions.  There are three reasons for using the Hershey fonts:"
msgstr "@code{text}와 @code{contour} 함수를 사용할 때, 텍스트를 편집하기위해 허쉬벡터폰트(Hershey vector fonts)를 사용할 수 있습니다. 허쉬폰트를 사용하는 데는 다음과 같은 세가지 정도의 이유가 있습니다:"

#. type: itemize
#: R-intro.texi:5763
msgid "Hershey fonts can produce better output, especially on a computer screen, for rotated and/or small text."
msgstr "허쉬폰트는, 특히 컴퓨터 스크린 상에서, 텍스트를 회전시키거나 작은 텍스트를 사용할 때 더 나은 결과물을 보여줍니다."

#. type: itemize
#: R-intro.texi:5768
msgid "Hershey fonts provide certain symbols that may not be available in the standard fonts.  In particular, there are zodiac signs, cartographic symbols and astronomical symbols."
msgstr "또한 허쉬폰트는 기본폰트에서 제공하지 않는 특수한 몇몇 기호들(symbols)을 제공합니다. 조디악 기호(zodiac sign), 지도용(cartographic)심볼, 그리고 천문학용(astronomical)심볼 등이 그러한 예 입니다."

#. type: itemize
#: R-intro.texi:5770
msgid "Hershey fonts provide cyrillic and japanese (Kana and Kanji) characters."
msgstr "허쉬폰트는 키릴(Cyrillic)과 일본어(가나(Kana)와 간지(Kanji)문자 포함) 문자들을 제공합니다."

#. type: Plain text
#: R-intro.texi:5774
msgid "More information, including tables of Hershey characters can be obtained from within @R{} using the commands:"
msgstr "허쉬문자표들의 리스트를 포함한, 좀 더 많은 정보는 @R{}에서 다음과 같은 명령문을 사용해서 확인할 수 있습니다:"

#. type: example
#: R-intro.texi:5780
#, no-wrap
msgid ""
"> help(Hershey)\n"
"> demo(Hershey)\n"
"> help(Japanese)\n"
"> demo(Japanese)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5788
msgid "@R{} also provides functions which allow users to extract or add information to a plot using a mouse.  The simplest of these is the @code{locator()} function:"
msgstr "@R{}에서는 마우스를 사용하여 플롯에 새로운 정보를 추가하거나 제거하는 작업을 할 수 있습니다. 이런 함수들 중 가장 간단한 것으로 @code{locator()} 함수가 있습니다:"

#. type: item
#: R-intro.texi:5790
#, no-wrap
msgid "locator(n, type)"
msgstr ""

#. type: findex
#: R-intro.texi:5791
#, no-wrap
msgid "locator"
msgstr ""

#. type: table
#: R-intro.texi:5799
msgid "Waits for the user to select locations on the current plot using the left mouse button.  This continues until @code{n} (default 512) points have been selected, or another mouse button is pressed.  The @code{type} argument allows for plotting at the selected points and has the same effect as for high-level graphics commands; the default is no plotting.  @code{locator()} returns the locations of the points selected as a list with two components @code{x} and @code{y}."
msgstr "현재 플롯에서 사용자가 마우스 왼쪽 버튼을 사용하여 위치를 선택할 때까지 기다립니다. 이러한 대기 상태는, 함수는 입력된 @code{n}개(디폴트는 512)개의 점들을 모두 선택하고, 다음 번 마우스 버튼을 누를 때까지 계속 됩니다. @code{type} 인자는 선택된 포인들을 현재 플롯상에 어떻게 나타날지 결정해주는 것으로, 하이-레벨 (high-level)그래픽 함수처럼 사용됩니다; 디폴트로는 아무것도 표시되지 않도록 지정되어 있습니다. @code{locator()}는 선택된 포인트들의 위치는 @code{x}와 @code{y} 두 개의 요소로 구성된 하나의 리스트로 출력합니다."

#. type: Plain text
#: R-intro.texi:5806
msgid "@code{locator()} is usually called with no arguments.  It is particularly useful for interactively selecting positions for graphic elements such as legends or labels when it is difficult to calculate in advance where the graphic should be placed.  For example, to place some informative text near an outlying point, the command"
msgstr "하지만 @code{locator()} 함수는 인수의 입력없이 사용되는 경우가 더 많습니다. 이 함수는 범례(legends)나 레이블(labels) 같은 그래픽 요소들을 배치할 때, 이러한 요소들이 해당 그래픽 내에서 정확하게 어디에 위치하는 것이 좋을지 결정하기 어려운 경우, 대화형(interactively)으로 위치를 찾을 수 있도록 해주므로 매우 유용합니다. 예를 들면, 이상점(outlier)과 같이 특별한 데이터 포인트에 대한 정보를 표기하기위해 다음과 같은 명령문을 사용할 수 있습니다:"

#. type: example
#: R-intro.texi:5809
#, no-wrap
msgid "> text(locator(1), \"Outlier\", adj=0)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5814
msgid "may be useful.  (@code{locator()} will be ignored if the current device, such as @code{postscript} does not support interactive pointing.)"
msgstr "(@code{locator()} 함수는 현재 디바이스가 postscript와 같이 대화형 선택(interactive pointing) 기능을 제공하지 않는 경우에는 실행되지 않습니다.)"

#. type: item
#: R-intro.texi:5816
#, no-wrap
msgid "identify(x, y, labels)"
msgstr ""

#. type: findex
#: R-intro.texi:5817
#, no-wrap
msgid "identify"
msgstr ""

#. type: table
#: R-intro.texi:5823
msgid "Allow the user to highlight any of the points defined by @code{x} and @code{y} (using the left mouse button) by plotting the corresponding component of @code{labels} nearby (or the index number of the point if @code{labels} is absent).  Returns the indices of the selected points when another button is pressed."
msgstr "@code{x}와 @code{y} 정보가 입력된 포인트들을 대상으로, 이 중 특정 포인트들 (마우스의 왼쪽 버튼 클릭으로 선택) 근처에 해당 포인트에 대응하는 @code{레이블(labels)} 값을 표기하여 선택된 포인트들을 구분합니다.(@code{labels}인자가 따로 입력되지 않은 경우는, 해당 포인트의 인덱스를 출력합니다). (포인트의 선택 후) 버튼을 한 번 더 누르면 선택된 포인트들의 인덱스가 출력됩니다."

#. type: Plain text
#: R-intro.texi:5831
msgid "Sometimes we want to identify particular @emph{points} on a plot, rather than their positions.  For example, we may wish the user to select some observation of interest from a graphical display and then manipulate that observation in some way.  Given a number of @math{(x, y)} coordinates in two numeric vectors @code{x} and @code{y}, we could use the @code{identify()} function as follows:"
msgstr "때때로 우리는 포인트 위치를 미리 지정하는 대신, 해당 플롯 상에서 포인트를 직접 선택하고 싶은 경우가 있습니다. 예를 들면, 그래픽 디스플레이 상에서 관심있는 몇 개의 관측치만 선택해서, 선택된 관측치들만 따로 처리하고 싶은 경우가 있습니다. 이 경우, 두 개의 숫치형 벡터인 @code{x}와 @code{y}로 표현된 @math{(x, y)} 좌표쌍이 입력된 상태에서, identify() 함수는 다음과 같이 사용할 수 있습니다:"

#. type: example
#: R-intro.texi:5835
#, no-wrap
msgid ""
"> plot(x, y)\n"
"> identify(x, y)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5848
msgid "The @code{identify()} functions performs no plotting itself, but simply allows the user to move the mouse pointer and click the left mouse button near a point.  If there is a point near the mouse pointer it will be marked with its index number (that is, its position in the @code{x}/@code{y} vectors) plotted nearby.  Alternatively, you could use some informative string (such as a case name) as a highlight by using the @code{labels} argument to @code{identify()}, or disable marking altogether with the @code{plot = FALSE} argument.  When the process is terminated (see above), @code{identify()} returns the indices of the selected points; you can use these indices to extract the selected points from the original vectors @code{x} and @code{y}."
msgstr "@code{identify()} 함수는 그 자체로 플롯을 그리지는 않지만, 사용자들이 마우스 포인터로 자유롭게 움직이다 왼쪽 버튼 클릭으로 원하는 포인트(또는 그 포인트의 근처)를 선택할 수 있도록 해줍니다. 마우스 포인터 근처에 데이터 포인터가 위치한 경우, 해당 포인트의 근처에 인덱스가 표시될 것 입니다. (이 인덱스는, 해당 포인트의 @code{x} 또는 @code{y} 벡터에서의 위치를 의미합니다). 선택된 포인트를 표기하는 또 다른 방법으로는, @code{identify()} 함수에 @code{labels} 인자를 사용해서, (해당 케이스의 이름과 같은) 좀 더 유용한(informative) 표현을 사용할 수 있도록하거나,  @code{plot = FALSE} 인자를 사용하면 아무것도 표기하지않도록 지정할 수도 있습니다. (포인트를 선택하는) 프로세스가 끝나고 나면(위 참조), @code{identify()}는 선택된 포인트들의 인덱스를 출력합니다; 이 선택된 포인트들의 인덱스를 사용하면, 원래의 @code{x} 와 @code{y} 벡터 형태로 위치를 확인하는 것도 가능합니다."

#. type: Plain text
#: R-intro.texi:5860
msgid "When creating graphics, particularly for presentation or publication purposes, @R{}'s defaults do not always produce exactly that which is required.  You can, however, customize almost every aspect of the display using @emph{graphics parameters}.  @R{} maintains a list of a large number of graphics parameters which control things such as line style, colors, figure arrangement and text justification among many others.  Every graphics parameter has a name (such as `@code{col}', which controls colors,) and a value (a color number, for example.)"
msgstr "그래픽을 생성할 때, 특히 프리젠테이션이나 출판을 위한 목적이라면, @R{} 제공하는 디폴트만으로는 항상 원하는 형태의 플롯을 얻을 수 없을지도 모릅니다. 하지만, 그래픽 파라미터(graphics parameters)를 이용하면 거의 모든 그래프의 구성요소를 사용자가 원하는대로 바꿀 수 있습니다. @R{}은 선의 형태, 색, 그림의 배치, 그리고 텍스트 정의 등에 이르기까지 굉장히 다양한 작업을 수행할 수 있는 그래픽 파라미터들을 제공합니다. 또 , 모든 그래픽 파라미터는 이름(e.g. `@code{col}'의 경우, 사용할 색을 결정하는 파라미터입니다)과 값(value, `@code{col}'의 경우, 숫자로 사용할 색을 지정합니다)의 두가지 요소로 구성됩니다."

#. type: Plain text
#: R-intro.texi:5866
msgid "A separate list of graphics parameters is maintained for each active device, and each device has a default set of parameters when initialized.  Graphics parameters can be set in two ways: either permanently, affecting all graphics functions which access the current device; or temporarily, affecting only a single graphics function call."
msgstr "현재 사용중인(active) 디바이스마다 사용할 그래픽 파라미터(parameters)의 리스트를 따로 정의하는 것이 가능하며, 각 디바스 별로 서로 다른 디폴트 파라미터들이 초기화됩니다. 그래픽 파라미터를 사용하는 방법은 크게 두 가지로 나눌 수 있습니다: 하나는, 보다 \"영구적(permanently)\"인 방법으로 현재 디바이스에서 사용할게 될 모든 그래픽 함수들에 영향을 미치게 되며, 좀 더 \"일시적(temporarily)\"인 방법은 사용하게 될 오직 하나의 그래픽 함수에만 영향을 줍니다."

# Note from Chel Hee Lee - Don't touch!
#. type: node
#: R-intro.texi:5870
#: R-intro.texi:5872
#: R-intro.texi:5927
#, no-wrap
msgid "The par() function"
msgstr "The par() function"

#. type: node
#: R-intro.texi:5870
#: R-intro.texi:5872
#: R-intro.texi:5927
#, no-wrap
msgid "Arguments to graphics functions"
msgstr ""

#. type: subsection
#: R-intro.texi:5873
#, no-wrap
msgid "Permanent changes: The @code{par()} function"
msgstr "영구적(permanent) 변환을 원할 때: @code{par()} 함수"

#. type: findex
#: R-intro.texi:5874
#, no-wrap
msgid "par"
msgstr ""

#. type: Plain text
#: R-intro.texi:5879
msgid "The @code{par()} function is used to access and modify the list of graphics parameters for the current graphics device."
msgstr "par()함수는 현재의 그래픽 디바이스에서 사용할 그래픽 파라미터들을 지정하고 그 값을 바꾸는데 사용합니다."

#. type: item
#: R-intro.texi:5881
#, no-wrap
msgid "par()"
msgstr ""

#. type: table
#: R-intro.texi:5884
msgid "Without arguments, returns a list of all graphics parameters and their values for the current device."
msgstr "아무런 인수를 입력하지 않고 사용하면, 현재 디바이스에서 사용되고 있는 모든 그래픽 파라미터의 이름과 해당 파라미터들이 가진 값(values)들이 출력됩니다."

#. type: item
#: R-intro.texi:5884
#, no-wrap
msgid "par(c(\"col\", \"lty\"))"
msgstr ""

#. type: table
#: R-intro.texi:5887
msgid "With a character vector argument, returns only the named graphics parameters (again, as a list.)"
msgstr "(인수의 이름들을 포함한) 문자 벡터가 인수로 사용되면, 오직 지정된 그래픽 파라미터들에 대해서만 사용 중인 값(values)이 (리스트의 형태로) 출력됩니다."

#. type: item
#: R-intro.texi:5887
#, no-wrap
msgid "par(col=4, lty=2)"
msgstr ""

#. type: table
#: R-intro.texi:5891
msgid "With named arguments (or a single list argument), sets the values of the named graphics parameters, and returns the original values of the parameters as a list."
msgstr "그래픽 파라미터와 해당 파라미터의 값들을 따로 인수(하나의 인수도 가능)로 지정하면, 지정된 값이 리스트로 출력됩니다."

#. type: Plain text
#: R-intro.texi:5899
msgid "Setting graphics parameters with the @code{par()} function changes the value of the parameters @emph{permanently}, in the sense that all future calls to graphics functions (on the current device) will be affected by the new value.  You can think of setting graphics parameters in this way as setting ``default'' values for the parameters, which will be used by all graphics functions unless an alternative value is given."
msgstr "par()함수를 사용해서 그래픽 파라미터를 지정하면 해당 파라미터와 그 값은 “영구적”으로 바뀝니다. 즉 미래에 해당 그래픽 함수를 (현재 디바이스에서) 사용하면 새로 지정된 값이 반영되어 출력되는 것 입니다. 따라서 이 방법을 사용해서 그래픽 파라미터를 지정하는 것은 일종의 “디폴트” 값을 지정하는 것과 같다고 생각할 수 있을 겁니다. 즉, 다른 값이 다시 지정되지 않는 한, 모든 그래픽 함수가 이 지정값에 영향을 받게 되는 것입니다."

#. type: Plain text
#: R-intro.texi:5908
msgid "Note that calls to @code{par()} @emph{always} affect the global values of graphics parameters, even when @code{par()} is called from within a function.  This is often undesirable behavior---usually we want to set some graphics parameters, do some plotting, and then restore the original values so as not to affect the user's @R{} session.  You can restore the initial values by saving the result of @code{par()} when making changes, and restoring the initial values when plotting is complete."
msgstr "par()를 사용하면, @emph{언제나}, 심지어 @code{par()}가 다른 함수 안에서 사용된 경우라도, (현재 디바이스 내) 모든 그래픽 파라미터들의 값이 (the global values of graphics parameters) 영향을 받게 된다는 점을 주의하시기 바랍니다. 이러한 결과는, 대부분의 경우 그다지 바람직하고 할 수 없을 겁니다 - 보통 우리가 바라는 것은 몇 개의 그래픽 파라미터만을 따로 지정하고, 이 상태에서 몇 개의 플롯을 작업한 후, 다시 처음의 설정으로 돌아갈 수 있도록 현재의 @R{} 세션 전체에는 영향을 주지 않는 것입니다. 따라서, 몇 개의 그래픽 파라미터를 바꿔서 작업하고 싶은 경우, 초기값들을 @code{par()}의 결과로 저장해두면, 변경된 파라미터로 플롯 작업을 끝낸 다음에, 이 저장된 값을 실행하면 다시 초기값으로 복원됩니다."

#. type: example
#: R-intro.texi:5913
#, no-wrap
msgid ""
"> oldpar <- par(col=4, lty=2)\n"
"  @r{@dots{} plotting commands @dots{}}\n"
"> par(oldpar)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5919
msgid "To save and restore @emph{all} settable@footnote{Some graphics parameters such as the size of the current device are for information only.} graphical parameters use"
msgstr "설정가능한 @emph{모든} 그래픽 파라미터의 값을 저장했다 다시 사용하기 위해서는,  @footnote{물론 이 중 일부 그래픽 파라미터들은 현재 디바이스의 크기 처럼, 오직 정보 확인의 목적만을 가진 것들도 있습니다.}그래픽 파라미터를 다음과 같이 지정하면 됩니다."

#. type: example
#: R-intro.texi:5924
#, no-wrap
msgid ""
"> oldpar <- par(no.readonly=TRUE)\n"
"  @r{@dots{} plotting commands @dots{}}\n"
"> par(oldpar)\n"
msgstr ""

#. type: subsection
#: R-intro.texi:5928
#, no-wrap
msgid "Temporary changes: Arguments to graphics functions"
msgstr "인자를 사용한 일시적 변환(Temporary changes: Arguments to graphics functions)"

#. type: Plain text
#: R-intro.texi:5934
msgid "Graphics parameters may also be passed to (almost) any graphics function as named arguments.  This has the same effect as passing the arguments to the @code{par()} function, except that the changes only last for the duration of the function call.  For example:"
msgstr "그래픽 파라미터들은 (거의 모든) 그래픽 함수에서 적당한 인수로 사용될 수 있습니다. 인수로 사용했을 때는 오직 해당 함수가 사용되는 동안만 새로 지정한 값이 적용된다는 점을 제외하고는, par()함수 내에서 사용했을 때와 거의 같은 효과를 갖습니다. 예를 들면:"

#. type: example
#: R-intro.texi:5937
#, no-wrap
msgid "> plot(x, y, pch=\"+\")\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5942
msgid "produces a scatterplot using a plus sign as the plotting character, without changing the default plotting character for future plots."
msgstr "위 명령문의 결과로 더하기 기호(@code{+})를 플롯 문자(plotting character)로 사용한 산점도를 그리게 되는데, 이 경우 앞으로 그리게 될 플롯의 디폴트 플롯문자를 바꾸지는 않습니다."

#. type: Plain text
#: R-intro.texi:5946
msgid "Unfortunately, this is not implemented entirely consistently and it is sometimes necessary to set and reset graphics parameters using @code{par()}."
msgstr "안타깝게도, 항상 이런 방식이 항상 일관성있게 적용되는 것은 아니므로, 경우에 따라서는 @code{par()}를 사용해서 그래픽 파라미터들을 원하는대로 지정하고 다시 되돌리는 작업을 해야할 수도 있습니다."

#. type: section
#: R-intro.texi:5949
#, no-wrap
msgid "Graphics parameters list"
msgstr "그래픽 파라미터 목록"

#. type: Plain text
#: R-intro.texi:5955
msgid "The following sections detail many of the commonly-used graphical parameters.  The @R{} help documentation for the @code{par()} function provides a more concise summary; this is provided as a somewhat more detailed alternative."
msgstr "앞으로 몇 개의 섹션에서는 일반적으로 많이 사용되는 그래픽 파라미터들에 대해 자세히 설명하겠습니다. @code{par()} 함수의 @R{} 도움말 문서에 간단히 요약되어있지만, 이 문서에서는 좀 더 자세히 설명하겠습니다."

#. type: Plain text
#: R-intro.texi:5957
msgid "Graphics parameters will be presented in the following form:"
msgstr "그래픽 파라미터들은 다음의 형식으로 사용됩니다:"

#. type: item
#: R-intro.texi:5959
#, no-wrap
msgid "@var{name}=@var{value}"
msgstr ""

#. type: table
#: R-intro.texi:5964
msgid "A description of the parameter's effect.  @var{name} is the name of the parameter, that is, the argument name to use in calls to @code{par()} or a graphics function.  @var{value} is a typical value you might use when setting the parameter."
msgstr "파라미터의 효과에 대한 설명. @var{name}은 파라미터의 이름(the name of the parameter), 즉 @code{par()} 또는 그래픽 함수에서 사용할 인수의 이름을 의미합니다. @var{value}는 파라미터를 원하는대로 지정하기위해(setting) 사용하는 일반적인 값(values) 중 하나를 의미합니다."

#. type: Plain text
#: R-intro.texi:5968
msgid "Note that @code{axes} is @strong{not} a graphics parameter but an argument to a few @code{plot} methods: see @code{xaxt} and @code{yaxt}."
msgstr "단, @code{축(axes)}은 @strong{그래픽 파라미터가 아니라}, @code{plot} 함수에만 적용가능한 몇 안되는 인자들 중의 하나라는 점을 기억하시기 바랍니다: 여기에 대해서는 @code{xaxt}와 @code{yaxt}를 참고하시기 바랍니다."

#. type: node
#: R-intro.texi:5974
#: R-intro.texi:5976
#: R-intro.texi:5977
#: R-intro.texi:6070
#, no-wrap
msgid "Graphical elements"
msgstr "그래픽 요소들의 활용(Graphical elements)"

#. type: node
#: R-intro.texi:5974
#: R-intro.texi:5976
#: R-intro.texi:6070
#: R-intro.texi:6071
#: R-intro.texi:6124
#, no-wrap
msgid "Axes and tick marks"
msgstr "축과 틱 마크 (tick marks)"

#. type: node
#: R-intro.texi:5974
#: R-intro.texi:6070
#: R-intro.texi:6124
#: R-intro.texi:6125
#: R-intro.texi:6161
#, no-wrap
msgid "Figure margins"
msgstr "그림 (figure)의 여백"

#. type: subsection
#: R-intro.texi:5974
#: R-intro.texi:6124
#: R-intro.texi:6161
#: R-intro.texi:6162
#, no-wrap
msgid "Multiple figure environment"
msgstr "중첩된 그림 (figure) 환경"

#. type: Plain text
#: R-intro.texi:5982
msgid "@R{} plots are made up of points, lines, text and polygons (filled regions.) Graphical parameters exist which control how these @emph{graphical elements} are drawn, as follows:"
msgstr "@R{}의 플롯은 점, 선, 텍스트 그리고 (영역이 채워진) 다각형이라는 구성 요소들로 이루어져 있습니다. 이러한 @emph{그래픽 요소(graphical elements)}들이 그려지는 방식을 제어하는 그래픽 파라미터에는 다음과 같은 것들이 있습니다:"

#. type: item
#: R-intro.texi:5984
#, no-wrap
msgid "pch=\"+\""
msgstr ""

#. type: table
#: R-intro.texi:5987
msgid "Character to be used for plotting points.  The default varies with graphics drivers, but it is usually"
msgstr "점을 플롯팅에 사용할 문자(character)를 지정합니다. 디폴트는 그래픽 드라이버(driver)의 종류에 따라 차이가 있긴하지만, 일반적으로는 (속이 빈) "

#. type: ifnottex
#: R-intro.texi:5989
msgid "a circle."
msgstr "원의 형태입니다. "

#. type: tex
#: R-intro.texi:5992
#, no-wrap
msgid "`$\\circ$'.\n"
msgstr ""

#. type: table
#: R-intro.texi:5996
msgid "Plotted points tend to appear slightly above or below the appropriate position unless you use @code{\".\"} as the plotting character, which produces centered points."
msgstr "선택한 포인팅 문자의 종류에 따라 자동적으로 점의 위아래의 위치가 적절하게 조정되며, 예를 들면, @code{\".\"}의 경우 점이 가운데로 정렬됩니다."

#. type: item
#: R-intro.texi:5997
#, no-wrap
msgid "pch=4"
msgstr ""

#. type: table
#: R-intro.texi:6001
msgid "When @code{pch} is given as an integer between 0 and 25 inclusive, a specialized plotting symbol is produced.  To see what the symbols are, use the command"
msgstr "@code{pch}에 0에서 25사이의 정수가 입력될 경우, 각 번호에 해당하는 기호(symbol)를 사용한 플롯을 그립니다.  각 번호에 해당하는 기호(symbol)가 무엇인지 확인하려면, 다음과 같은 명령어를 사용할 수 있습니다."

#. type: example
#: R-intro.texi:6004
#, no-wrap
msgid "> legend(locator(1), as.character(0:25), pch = 0:25)\n"
msgstr ""

#. type: table
#: R-intro.texi:6010
msgid "Those from 21 to 25 may appear to duplicate earlier symbols, but can be coloured in different ways: see the help on @code{points} and its examples."
msgstr "또, 21에서 25사이의 숫자가 선택될 경우, 0에서 20 사이에 이미 사용되었던 기호(symbol)가 다른 방식으로 색이 칠해져(coloured/속이 빈 원의 경우, 까만 원으로 그려질 수 있습니다) 그려질 수 있습니다: @code{points} 에 관한 도움말과 예제를 참조하시기 바랍니다."

#. type: table
#: R-intro.texi:6013
msgid "In addition, @code{pch} can be a character or a number in the range @code{32:255} representing a character in the current font."
msgstr "또한, @code{pch}는 @code{32:255}의 범위에 해당하는 숫자로, 현재 폰트에서 문자(character)로 사용되는, 문자나 숫자로 점을 플롯할 수 있습니다."

#. type: item
#: R-intro.texi:6014
#, no-wrap
msgid "lty=2"
msgstr ""

#. type: table
#: R-intro.texi:6019
msgid "Line types.  Alternative line styles are not supported on all graphics devices (and vary on those that do) but line type 1 is always a solid line, line type 0 is always invisible, and line types 2 and onwards are dotted or dashed lines, or some combination of both."
msgstr "선의 종류(types)를 지정하는 옵션. 이 옵션으로 지정한 선의 종류를 모든 그래픽 디바이스가 항상 출력가능한 것은 아니며, 또 디바이스의 종류에 따라 선을 출력하는 방식이 다를 수도 있습니다. 그러나 @code{lty=1}은 항상 실선(solid line)을, @code{lty=0}은 항상 선을 보이지 않게, @code{lty=2}와 그 이상의 번호는 점선(dotted)이나 파선(dashed), 혹은 이 둘을 다양하게 조합한 선으로 출력합니다. "

#. type: item
#: R-intro.texi:6020
#, no-wrap
msgid "lwd=2"
msgstr ""

#. type: table
#: R-intro.texi:6025
msgid "Line widths.  Desired width of lines, in multiples of the ``standard'' line width.  Affects axis lines as well as lines drawn with @code{lines()}, etc.  Not all devices support this, and some have restrictions on the widths that can be used."
msgstr "선의 굵기(width)를 지정하는 옵션. “표준(standard)” 두께의 몇 배인지를 숫자로 지정하여, 원하는대로 선의 두께를 지정합니다. @code{lines()}함수로 그린 선은 물론이고, 플롯의 축(axis)선 및 다른 선들의 굵기를 조정하는 것도 가능합니다. 모든  디바이스가 이 파라미터를 지원하는 것은 아니며, 디바이스의 종류에 따라 사용가능한 선의 굵기에 제약이 있을 수 있습니다."

#. type: item
#: R-intro.texi:6026
#, no-wrap
msgid "col=2"
msgstr ""

#. type: table
#: R-intro.texi:6029
msgid "Colors to be used for points, lines, text, filled regions and images.  A number from the current palette (see @code{?palette}) or a named colour."
msgstr "점, 선, 덱스트, 그리고 색으로 채워진 영역과 이미지 모두에 색을 지정하기 위해 사용 가능합니다. 현재 사용 중인 파레트 (palette, 자세한 사용은 @code{?palette} 부분 참조)로부터 번호를 선택하거나, 또는 색 이름을 직접 입력해서 선택하는 것도 가능 합니다. "

#. type: item
#: R-intro.texi:6030
#, no-wrap
msgid "col.axis"
msgstr ""

#. type: itemx
#: R-intro.texi:6031
#, no-wrap
msgid "col.lab"
msgstr ""

#. type: itemx
#: R-intro.texi:6032
#, no-wrap
msgid "col.main"
msgstr ""

#. type: itemx
#: R-intro.texi:6033
#, no-wrap
msgid "col.sub"
msgstr ""

#. type: table
#: R-intro.texi:6036
msgid "The color to be used for axis annotation, @math{x} and @math{y} labels, main and sub-titles, respectively."
msgstr "비슷한 색(color)지정 파라미터들로 위와 같은 것들이 있으며, 위에서부터 순서대로 축의 주석(axis annotation), @math{x}와 @math{y}의 레이블(label), 주(main)타이틀과 서브(sub)-타이틀에 각각 사용 가능합니다."

#. type: item
#: R-intro.texi:6037
#, no-wrap
msgid "font=2"
msgstr ""

#. type: table
#: R-intro.texi:6042
msgid "An integer which specifies which font to use for text.  If possible, device drivers arrange so that @code{1} corresponds to plain text, @code{2} to bold face, @code{3} to italic, @code{4} to bold italic and @code{5} to a symbol font (which include Greek letters)."
msgstr "정수 값을 사용하여 텍스트(text)를 출력에 사용할 폰트(font)의 종류를 지정합니다. 장치 드라이버가 지원가능한 경우,  @code{1}은 기본형 텍스트(plain text), @code{2}는 볼드체(굸은 글씨, bold face), 3은 이탤릭체(italic), @code{3}는 볼드 이탤릭, 그리고 @code{5}는 (그리스 문자 등을 포함하는) 기호(symbol) 폰트로 출력합니다. "

#. type: item
#: R-intro.texi:6043
#, no-wrap
msgid "font.axis"
msgstr ""

#. type: itemx
#: R-intro.texi:6044
#, no-wrap
msgid "font.lab"
msgstr ""

#. type: itemx
#: R-intro.texi:6045
#, no-wrap
msgid "font.main"
msgstr ""

#. type: itemx
#: R-intro.texi:6046
#, no-wrap
msgid "font.sub"
msgstr ""

#. type: table
#: R-intro.texi:6049
msgid "The font to be used for axis annotation, @math{x} and @math{y} labels, main and sub-titles, respectively."
msgstr "폰트 역시 적용하게 될 대상에 따라, 위에서부터 순서대로 축의 주석 (axis annotation), @math{x}와 @math{y}의 레이블(label), 주(main)타이틀과 서브(sub)-타이틀에 각각 사용 가능합니다."

#. type: item
#: R-intro.texi:6050
#, no-wrap
msgid "adj=-0.1"
msgstr ""

#. type: table
#: R-intro.texi:6057
msgid "Justification of text relative to the plotting position.  @code{0} means left justify, @code{1} means right justify and @code{0.5} means to center horizontally about the plotting position.  The actual value is the proportion of text that appears to the left of the plotting position, so a value of @code{-0.1} leaves a gap of 10% of the text width between the text and the plotting position."
msgstr "플롯의 위치를 기준으로 텍스트를 상대적으로 정렬(justification)합니다. @code{0}은 좌측정렬(left justify), @code{1}은 우측정렬(right justify), 그리고 @code{0.5}는 플롯의 위치를 기준으로 가운데에 수평으로(center horizontally)로 정렬하는 것을 의미합니다. 즉, 지정된 숫자는 텍스트의 비율을 의미하는 것으로, 플롯의 위치에서 왼쪽을 기준으로 얼마만큼 간격을 두는지 결정합니다. 따라서, @code{-0.1}를 지정할 경우, 플롯의 위치와 텍스트 사이에 텍스트 너비(width)의 10% 만큼의 간격을 두게 됩니다. "

#. type: item
#: R-intro.texi:6058
#, no-wrap
msgid "cex=1.5"
msgstr ""

#. type: table
#: R-intro.texi:6061
msgid "Character expansion.  The value is the desired size of text characters (including plotting characters) relative to the default text size."
msgstr "문자 (character)의 확대 비율을 지정합니다. 이 옵션의 값은 텍스트 문자(플로팅 문자(plotting characters) 포함)의 크기를 텍스트의 디폴트(default) 크기를 기준으로 했을 때의 상대적 크기로 출력합니다. "

#. type: item
#: R-intro.texi:6062
#, no-wrap
msgid "cex.axis"
msgstr ""

#. type: itemx
#: R-intro.texi:6063
#, no-wrap
msgid "cex.lab"
msgstr ""

#. type: itemx
#: R-intro.texi:6064
#, no-wrap
msgid "cex.main"
msgstr ""

#. type: itemx
#: R-intro.texi:6065
#, no-wrap
msgid "cex.sub"
msgstr ""

#. type: table
#: R-intro.texi:6068
msgid "The character expansion to be used for axis annotation, @math{x} and @math{y} labels, main and sub-titles, respectively."
msgstr "역시 대상에 따라, 위에서부터 순서대로 축의 주석 (axis annotation), @math{x}와 @math{y}의 레이블(label), 주(main)타이틀과 서브(sub)-타이틀에 각각 적용됩니다."

#. type: Plain text
#: R-intro.texi:6080
msgid "Many of @R{}'s high-level plots have axes, and you can construct axes yourself with the low-level @code{axis()} graphics function.  Axes have three main components: the @emph{axis line} (line style controlled by the @code{lty} graphics parameter), the @emph{tick marks} (which mark off unit divisions along the axis line) and the @emph{tick labels} (which mark the units.) These components can be customized with the following graphics parameters."
msgstr "@R{}의 하이-레벨에 플롯(high-level plots)에서는 많은 경우 축이 자동 포함되지만, 로-레벨(low-level) 그래픽 함수인 @code{axis()} 등을 사용하여 원하는 대로 축을 지정하는 것 역시 가능합니다. 축은 세 가지 요소에 의해 결정 됩니다: @emph{축선 (axis line)} (선의 종류는 @code{lty} 그래픽 파라미터에 의해 지정됨), @emph{틱 마크(tick marks)} (축선을 따라서 단위별로 분할하는 선을 표기),그리고 @emph{틱의 레이블 (tick labels)}(틱 마크의 단위 표기)가 그 세 가지 입니다. 이러한 요소들은 다음과 같은 그래픽 파라미터들을 사용하여 조정할 수 있습니다. "

#. type: item
#: R-intro.texi:6082
#, no-wrap
msgid "lab=c(5, 7, 12)"
msgstr ""

#. type: table
#: R-intro.texi:6088
msgid "The first two numbers are the desired number of tick intervals on the @math{x} and @math{y} axes respectively.  The third number is the desired length of axis labels, in characters (including the decimal point.)  Choosing a too-small value for this parameter may result in all tick labels being rounded to the same number!"
msgstr "처음의 두 숫자는 각각 @math{x}와 @math{y}축에의  틱의 간격을 지정합니다. 세번째 숫자는 축 레이블(axis labels)이 출력될 길이(소수점 아래 길이 포함)를 (사용 가능한) 문자길이로 지정합니다. 이 파라미터가 너무 작은 값으로 선택될 경우, 모든 틱 레이블들이 반올림되어져 같은 숫자가 되어버리는 문제가 발생할 수 있습니다."

#. type: item
#: R-intro.texi:6089
#, no-wrap
msgid "las=1"
msgstr ""

#. type: table
#: R-intro.texi:6093
msgid "Orientation of axis labels.  @code{0} means always parallel to axis, @code{1} means always horizontal, and @code{2} means always perpendicular to the axis."
msgstr "축 레이블의 정렬될 방향(orientation)을 지정합니다. @code{0}은 축에 평행하게(parallel to axis), @code{1}은 수평으로(horizontal), 그리고 @code{0}는 축에 수직으로(perpendicular to the axis) 레이블을 출력합니다."

#. type: item
#: R-intro.texi:6094
#, no-wrap
msgid "mgp=c(3, 1, 0)"
msgstr ""

#. type: table
#: R-intro.texi:6101
msgid "Positions of axis components.  The first component is the distance from the axis label to the axis position, in text lines.  The second component is the distance to the tick labels, and the final component is the distance from the axis position to the axis line (usually zero).  Positive numbers measure outside the plot region, negative numbers inside."
msgstr "축 요소들에 대해 위치를 지정합니다. 첫번째 숫자는 축 레이블(axis label)에서 축의 위치까지의 거리를, 텍스트의 줄 간격으로 표시합니다. 두번째 요소는 틱 레이블까지의 거리를, 마지막 값은 축의 위치에서부터 축선까지의 거리(보통은 0)를 지정합니다. 양수 값을 지정할 경우 플롯의 영역의 바깥쪽에 해당 요소들이 나타나며, 음수값의 경우는 안쪽에 나타납니다."

#. type: item
#: R-intro.texi:6102
#, no-wrap
msgid "tck=0.01"
msgstr ""

#. type: table
#: R-intro.texi:6109
msgid "Length of tick marks, as a fraction of the size of the plotting region.  When @code{tck} is small (less than 0.5) the tick marks on the @math{x} and @math{y} axes are forced to be the same size.  A value of 1 gives grid lines.  Negative values give tick marks outside the plotting region.  Use @code{tck=0.01} and @code{mgp=c(1,-1.5,0)} for internal tick marks."
msgstr "틱마크(tick marks)의 길이를 플롯된 영역의 크기에 대한 비율(fraction)로 지정합니다. @code{tck}이 작게 (0.5보다 작을 경우) 지정된 경우, @math{x}와 @math{y} 축에 표시된 틱마크들은 모두 같은 크기로 나타나게 됩니다. 1로 지정할 경우, 그리드 선(grid lines)으로 나타내며, 음수값은 플롯 영역의 바깥에 틱마크를 표시합니다.안쪽에 틱마크를 표시하고 싶다면, @code{tck=0.01}와 @code{mgp=c(1,-1.5,0)}를 같이 사용하세요."

#. type: item
#: R-intro.texi:6110
#, no-wrap
msgid "xaxs=\"r\""
msgstr ""

#. type: itemx
#: R-intro.texi:6111
#, no-wrap
msgid "yaxs=\"i\""
msgstr ""

#. type: table
#: R-intro.texi:6117
msgid "Axis styles for the @math{x} and @math{y} axes, respectively.  With styles @code{\"i\"} (internal) and @code{\"r\"} (the default) tick marks always fall within the range of the data, however style @code{\"r\"} leaves a small amount of space at the edges.  (@Sl{} has other styles not implemented in @R{}.)"
msgstr "각각 @math{x}와 @math{y} 축의 스타일을 지정합니다.  스타일이 \"i\" (internal)와 \"r\" (디폴트 (default))인 경우, 틱마크가 항상 데이타 범위 내에서만 나타나지만, @code{\"r\"} 의 경우 모서리에서 약간의 공백을 남기고 출력합니다. (@Sl{}의 경우, @R{}에는 적용되지 않는 다른 스타일을 사용합니다.) "

#. type: Plain text
#: R-intro.texi:6131
msgid "A single plot in @R{} is known as a @code{figure} and comprises a @emph{plot region} surrounded by margins (possibly containing axis labels, titles, etc.) and (usually) bounded by the axes themselves."
msgstr "@R{}에서는 하나의 플롯이 하나의 @code{그림(figure)}으로 나타나며, 이 그림은 여백(margins)으로 둘러싸인 @emph{플롯 영역(plot region)} (축, 레이틀, 제목 등을 포함하는)과 (많은 경우) 축에 의해 둘러싸여 있습니다. "

#. type: ifnotinfo
#: R-intro.texi:6134
msgid "A typical figure is"
msgstr "아래는 전형적인 예입니다."

#. type: ifnotinfo
#: R-intro.texi:6136
msgid "@image{images/fig11,7cm}"
msgstr ""

#. type: Plain text
#: R-intro.texi:6139
msgid "Graphics parameters controlling figure layout include:"
msgstr "이러한 그림의 레이아웃 (구성 요소의 배열)은 다음과 같은 그래픽 파라미터들에의해 결정됩니다:"

#. type: item
#: R-intro.texi:6141
#, no-wrap
msgid "mai=c(1, 0.5, 0.5, 0)"
msgstr ""

#. type: table
#: R-intro.texi:6144
msgid "Widths of the bottom, left, top and right margins, respectively, measured in inches."
msgstr "순서대로 아래, 왼쪽, 위 그리고 오른쪽 여백(margin)의 너비를 조정합니다. 단위는 인치 입니다."

#. type: item
#: R-intro.texi:6145
#, no-wrap
msgid "mar=c(4, 2, 2, 1)"
msgstr ""

#. type: table
#: R-intro.texi:6147
msgid "Similar to @code{mai}, except the measurement unit is text lines."
msgstr "위의 mai 와 같은 기능을 하지만, 유일한 차이는 텍스트의 줄 간격을 단위로 한다는 점입니다.  "

#. type: Plain text
#: R-intro.texi:6160
msgid "@code{mar} and @code{mai} are equivalent in the sense that setting one changes the value of the other.  The default values chosen for this parameter are often too large; the right-hand margin is rarely needed, and neither is the top margin if no title is being used.  The bottom and left margins must be large enough to accommodate the axis and tick labels.  Furthermore, the default is chosen without regard to the size of the device surface: for example, using the @code{postscript()} driver with the @code{height=4} argument will result in a plot which is about 50% margin unless @code{mar} or @code{mai} are set explicitly.  When multiple figures are in use (see below) the margins are reduced, however this may not be enough when many figures share the same page."
msgstr "@code{mar}와 @code{mai}는, 두 가지 중 하나만 사용하더라도 다른 한쪽이 영향을 받는다는 점에서, 두 함수는 동등하다고 할 수 있겠습니다. 이 파라미터는 디폴트(default)로 지정된 값이 좀 큰 편이라 조정이 필요할 것입니다; 오른쪽 여백 (margin)을 조정할 일은 거의 없다고 할 수 있으며, 윗 여백 역시 거의 사용할 일이 없을 것입니다. 하지만, 아래와 왼쪽여백의 경우, 축이나 틱레이블을 출력할 수 있을 만큼의 여백이 필요합니다. 무엇보다, 디폴트 값은 디바이스가 어느 정도의 크기로 출력할지 전혀 고려하지 않은 채 설정되어져 있습니다: 예를 들면, @code{postscript()} 드라이버를 사용할 경우, 따로 @code{mar}나 @code{mai}를 지정하지 않고, @code{height=4} 만 사용할 경우, 플롯 크기의 반 크기에 해당하는 여백을 포함하게 됩니다.  또 여러 그래프를 중첩해서 사용할 경우 (아래 multiple figure environment 참조) 자동적으로 여백은 줄어들지만, 이렇게 줄어든 여백으로도 여러 개의 그래프를 한 페이지에 모두 출력하기에는 충분하지 않을 수 있습니다."

#. type: Plain text
#: R-intro.texi:6168
msgid "@R{} allows you to create an @math{n} by @math{m} array of figures on a single page.  Each figure has its own margins, and the array of figures is optionally surrounded by an @emph{outer margin}, as shown in the following figure."
msgstr "@R{}에서는 한 페이지에 출력 가능하도록, @math{n} 행 @math{m} 열로된 그림의 배열(array)을 생성할 수 있습니다. 각각의 그림(figure)은 각자의 여백을 포함하며, 그림의 배열(array)은 외부여백 (outer margin)을 포함하는 것이 가능합니다."

#. type: ifnotinfo
#: R-intro.texi:6171
msgid "@image{images/fig12,6cm}"
msgstr ""

#. type: Plain text
#: R-intro.texi:6174
msgid "The graphical parameters relating to multiple figures are as follows:"
msgstr "그래프의 중첩과 관련된 그래픽 파라미터에는 다음과 같은 것들이 있습니다:"

#. type: item
#: R-intro.texi:6176
#, no-wrap
msgid "mfcol=c(3, 2)"
msgstr ""

#. type: itemx
#: R-intro.texi:6177
#, no-wrap
msgid "mfrow=c(2, 4)"
msgstr ""

#. type: table
#: R-intro.texi:6182
msgid "Set the size of a multiple figure array.  The first value is the number of rows; the second is the number of columns.  The only difference between these two parameters is that setting @code{mfcol} causes figures to be filled by column; @code{mfrow} fills by rows."
msgstr "여러 그림을 배열할 크기를 지정합니다. 각 파라미터의 첫번째 값은 행의 수를, 두번째 값은 열의 수를 지정합니다. 이 두 파라미터의 유일한 차이점은 지정된 틀에 그래프를 채워나가는 순서인데, @code{mfcol}의 경우 플롯을 (그리는) 순서대로 열 별로(by column) 그래프를 채워나가고 @code{mfrow}의 경우, 행별로(by rows) 그래프를 채워나갑니다.  "

#. type: table
#: R-intro.texi:6186
msgid "The layout in the Figure could have been created by setting @code{mfrow=c(3,2)}; the figure shows the page after four plots have been drawn."
msgstr "즉, 그림의 레이아웃(layout)은 @code{mfrow=c(3,2)}과 같은 지정에 의해 생성된 것입니다; 이 그림의 경우 6개의 플롯이 모두 그려진 다음 해당 페이지를 출력하게 됩니다."

#. type: table
#: R-intro.texi:6192
msgid "Setting either of these can reduce the base size of symbols and text (controlled by @code{par(\"cex\")} and the pointsize of the device).  In a layout with exactly two rows and columns the base size is reduced by a factor of 0.83: if there are three or more of either rows or columns, the reduction factor is 0.66."
msgstr "두 파라미터 중 하나가 사용될 경우, (@code{par(\"cex\")}와 현재 디바이스에서의 폰트 크기에 영향을 받는) 기호(symbols)와 텍스트의 기본 크기(base size)가 줄어들 수 있습니다. 2행과 2열의 레이아웃의 경우, 여기에 포함된 텍스트는 기본 크기가 처음 크기의 0.83 배가 되며, 만약 세 개나 그 이상의 행이나 열이 한 레이아웃에 포함될 경우, 텍스트는 처음 크기의 0.66배가 됩니다."

#. type: item
#: R-intro.texi:6193
#, no-wrap
msgid "mfg=c(2, 2, 3, 2)"
msgstr ""

#. type: table
#: R-intro.texi:6200
msgid "Position of the current figure in a multiple figure environment.  The first two numbers are the row and column of the current figure; the last two are the number of rows and columns in the multiple figure array.  Set this parameter to jump between figures in the array.  You can even use different values for the last two numbers than the @emph{true} values for unequally-sized figures on the same page."
msgstr "중첩 (그림) 환경( multiple figure environment)에서 현재 그림의 위치를 지정합니다. 처음 두 개의 숫자는 현재 그림의 행과 열의 위치를 표시하며, 나중의 두 숫자는 여러 그림이 배열되었을 때의 위치를 행과 열로 표시합니다. 이미 배열이 된 그림들 사이에 간격을 주기 위해서도 이 문장을 사용할 수 있습니다. 또한 한 페이지 상의 크기가 다른 두 그림을 조정하기 위해, 이 그래픽 파라미터의 마지막 두 숫자를 @emph{실제}값과 다른 값으로 지정하는 것도 가능합니다."

#. type: item
#: R-intro.texi:6201
#, no-wrap
msgid "fig=c(4, 9, 1, 4)/10"
msgstr ""

#. type: table
#: R-intro.texi:6208
msgid "Position of the current figure on the page.  Values are the positions of the left, right, bottom and top edges respectively, as a percentage of the page measured from the bottom left corner.  The example value would be for a figure in the bottom right of the page.  Set this parameter for arbitrary positioning of figures within a page.  If you want to add a figure to a current page, use @code{new=TRUE} as well (unlike S)."
msgstr "해당 페이지에서 현재 그림의 위치를 조정합니다. 각각의 숫자들은 그림의 왼쪽, 오른쪽, 아래 그리고 위 모서리의 위치를 나타내는 것으로, 왼쪽 아래 모서리에서부터 재었을 때의 해당 페이지의 비율을 나타냅니다. 이 모수를 지정하면 한 페이지 안의 어떤 위치에라도 그림(figures)을 출력하는 것이 가능해집니다. 만약 현재 페이지에 그림을 하나 더 추가하고 싶다면, @code{new=TRUE} 라는 옵션을 함께 사용해야 합니다. (이 점은 S와 다릅니다.)"

#. type: item
#: R-intro.texi:6209
#, no-wrap
msgid "oma=c(2, 0, 3, 0)"
msgstr ""

#. type: itemx
#: R-intro.texi:6210
#, no-wrap
msgid "omi=c(0, 0, 0.8, 0)"
msgstr ""

#. type: table
#: R-intro.texi:6214
msgid "Size of outer margins.  Like @code{mar} and @code{mai}, the first measures in text lines and the second in inches, starting with the bottom margin and working clockwise."
msgstr "외부여백(outer margins)의 크기를 조정합니다.  @code{mar}와 @code{mai}에서와 마찬가지로,  @code{oma}는 텍스트 줄 간격으로, @code{omi}는 인치 단위로 여백의 크기를 지정하며, 입력된 네 숫자는 아래여백부터 시작해서 시계 방향으로 표기한 것 입니다."

#. type: Plain text
#: R-intro.texi:6222
msgid "Outer margins are particularly useful for page-wise titles, etc.  Text can be added to the outer margins with the @code{mtext()} function with argument @code{outer=TRUE}.  There are no outer margins by default, however, so you must create them explicitly using @code{oma} or @code{omi}."
msgstr "외부여백(outer margins)은 페이지 별로 표기되는(page-wise) 타이틀 등을 제대로 출력하기 위해 지정되어야 합니다. 외부 여백에 텍스트를 출력하고 싶다면, @code{mtext()} 함수와 @code{outer=TRUE} 인자를 사용하면 됩니다. 외부 여백은 디폴트로 지정되지 않았으므로, 반드시 @code{oma}나 @code{omi}를 사용해서 따로 지정해야마 합니다."

#. type: Plain text
#: R-intro.texi:6226
msgid "More complicated arrangements of multiple figures can be produced by the @code{split.screen()} and @code{layout()} functions, as well as by the @pkg{grid} and @CRANpkg{lattice} packages."
msgstr "좀 더 복잡하게 배열된 그래픽 중첩을 사용하고 싶다면, @code{split.screen()}과 @code{layout()} 같은 함수들을 사용할 수 있으며, @pkg{grid}나 @CRANpkg{lattice} 등의 패키지를 사용하는 것도 가능합니다."

#. type: cindex
#: R-intro.texi:6229
#, no-wrap
msgid "Graphics device drivers"
msgstr "그래픽 디바이스 드라이버 (graphic device driver)"

#. type: Plain text
#: R-intro.texi:6237
msgid "@R{} can generate graphics (of varying levels of quality) on almost any type of display or printing device.  Before this can begin, however, @R{} needs to be informed what type of device it is dealing with.  This is done by starting a @emph{device driver}.  The purpose of a device driver is to convert graphical instructions from @R{} (``draw a line,'' for example) into a form that the particular device can understand."
msgstr "@R{}은 거의 모든 종류의 디스플레이나 프린팅 디바이스에서 (다양한 수준의) 그래픽을 생성합니다. 하지만, 이러한 작업을 시작하기전, 반드시 @R{}에 어떤 종류의 디바이스를 사용할 것인지를 지정해야 합니다. 이러한 디바이스 지정은 하나의 @emph{장치 드라이버 (device driver)}를 작동시키는 것입니다. 이렇게 장치 드라이버를 작동시켜야하는 이유는 @R{}에서 사용된 그래픽 명령문(예를 들어, “선을 그어라” 같은)을 사용하고자 하는 디바이스가 이해할 수 있는 형태로 전환하기 위해서입니다.   "

#. type: Plain text
#: R-intro.texi:6241
msgid "Device drivers are started by calling a device driver function.  There is one such function for every device driver: type @code{help(Devices)} for a list of them all.  For example, issuing the command"
msgstr "장치 드라이버는 장치 드라이버 함수를 사용해서(calling) 작동시킵니다. (@R{}에서 사용 가능한) 모든 종류의 장치 드라이버에는 이러한 기능을 가진 함수가 하나씩 있습니다:  @code{help(Devices)}라고 입력하시면 사용가능한 모든 디바이스와 해당 디바이스를 작동시키는 함수의 리스트를 확인할 수 있습니다. 예를 들면, 다음과 같은 명령문을 입력하면"

#. type: example
#: R-intro.texi:6244
#, no-wrap
msgid "> postscript()\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:6249
msgid "causes all future graphics output to be sent to the printer in PostScript format.  Some commonly-used device drivers are:"
msgstr "앞으로 생성하게 될 모든 그래픽 결과물들이 PostScript 포맷으로 프린터로 보내지게 됩니다. 자주 자용되는 장치 드라이버에는 다음과 같은 것들이 있습니다:"

#. type: item
#: R-intro.texi:6251
#: R-intro.texi:6342
#, no-wrap
msgid "X11()"
msgstr ""

#. type: findex
#: R-intro.texi:6252
#, no-wrap
msgid "X11"
msgstr ""

#. type: table
#: R-intro.texi:6254
msgid "For use with the X11 window system on Unix-alikes"
msgstr "Unix와 같은 X11 윈도우 시스템을 사용하기 위한 함수"

#. type: item
#: R-intro.texi:6254
#: R-intro.texi:6344
#, no-wrap
msgid "windows()"
msgstr ""

#. type: findex
#: R-intro.texi:6255
#, no-wrap
msgid "windows"
msgstr ""

#. type: table
#: R-intro.texi:6257
msgid "For use on Windows"
msgstr "윈도우를 사용하기 위한 함수"

#. type: item
#: R-intro.texi:6257
#: R-intro.texi:6348
#, no-wrap
msgid "quartz()"
msgstr ""

#. type: findex
#: R-intro.texi:6258
#, no-wrap
msgid "quartz"
msgstr ""

#. type: table
#: R-intro.texi:6260
msgid "For use on OS X"
msgstr "Mac OS X 를 사용하기 위한 함수"

#. type: item
#: R-intro.texi:6260
#: R-intro.texi:6350
#, no-wrap
msgid "postscript()"
msgstr ""

#. type: findex
#: R-intro.texi:6261
#, no-wrap
msgid "postscript"
msgstr ""

#. type: table
#: R-intro.texi:6264
msgid "For printing on PostScript printers, or creating PostScript graphics files."
msgstr "PostScript로 프린터를 사용하거나, 또는 PostScript 포맷으로 된 그래픽 파일을 생성하기 위한 함수"

#. type: itemx
#: R-intro.texi:6264
#: R-intro.texi:6351
#, no-wrap
msgid "pdf()"
msgstr ""

#. type: findex
#: R-intro.texi:6265
#, no-wrap
msgid "pdf"
msgstr ""

#. type: table
#: R-intro.texi:6267
msgid "Produces a PDF file, which can also be included into PDF files."
msgstr "PDF 파일을 생성하며, 이 파일을 다른 PDF 파일에 포함시키는 것도 가능"

#. type: item
#: R-intro.texi:6267
#: R-intro.texi:6352
#, no-wrap
msgid "png()"
msgstr ""

#. type: findex
#: R-intro.texi:6268
#, no-wrap
msgid "png"
msgstr ""

#. type: table
#: R-intro.texi:6270
msgid "Produces a bitmap PNG file. (Not always available: see its help page.)"
msgstr "비트맵 PNG 파일을 생성하는 함수 (언제나 실행 가능한 것은 아닙니다: help 참조)"

#. type: item
#: R-intro.texi:6270
#: R-intro.texi:6353
#, no-wrap
msgid "jpeg()"
msgstr ""

#. type: findex
#: R-intro.texi:6271
#, no-wrap
msgid "jpeg"
msgstr ""

#. type: table
#: R-intro.texi:6274
msgid "Produces a bitmap JPEG file, best used for @code{image} plots.  (Not always available: see its help page.)"
msgstr "비트맵 JPEG 파일을 생성하는 함수로 @code{image} 플롯을 저장하기에 최적화된 방법 (언제나 실행 가능한 것은 아닙니다: help 참조)"

#. type: Plain text
#: R-intro.texi:6278
msgid "When you have finished with a device, be sure to terminate the device driver by issuing the command"
msgstr "하나의 디바이스의 사용이 끝나면, 다음과 같은 명령어를 사용해서 해당 디바이스를 종료시키는 것을 잊지 마십시기 바랍니다."

#. type: example
#: R-intro.texi:6281
#, no-wrap
msgid "> dev.off()\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:6287
msgid "This ensures that the device finishes cleanly; for example in the case of hardcopy devices this ensures that every page is completed and has been sent to the printer.  (This will happen automatically at the normal end of a session.)"
msgstr "이 문장을 사용하면 현재 사용 중인 디바이스를 좀 더 확실하게 종료시킬 수 있습니다; 예를 들면, 하드카피로 출력하는 디바이스를 사용 중인 경우, 이 명령문을 사용하면 각 페이지가 종료된 다음 프린터로 보내집니다. (원래 페이지의 종료는 R에서 하나의 세션이 종료될 때 자동적으로 이루어지게 됩니다.)"

#. type: node
#: R-intro.texi:6291
#: R-intro.texi:6293
#: R-intro.texi:6294
#: R-intro.texi:6329
#, no-wrap
msgid "PostScript diagrams for typeset documents"
msgstr "조판 문서를 위한 포스트스크립트 다이어그램 생성하기(PostScript diagrams for typeset documents)"

#. type: subsection
#: R-intro.texi:6291
#: R-intro.texi:6293
#: R-intro.texi:6329
#: R-intro.texi:6330
#, no-wrap
msgid "Multiple graphics devices"
msgstr "다수의 그래픽 디바이스 (graphic devices)"

#. type: Plain text
#: R-intro.texi:6303
msgid "By passing the @code{file} argument to the @code{postscript()} device driver function, you may store the graphics in PostScript format in a file of your choice.  The plot will be in landscape orientation unless the @code{horizontal=FALSE} argument is given, and you can control the size of the graphic with the @code{width} and @code{height} arguments (the plot will be scaled as appropriate to fit these dimensions.) For example, the command"
msgstr "@code{postscript()} 장치 드라이버에 @code{file}을 인수로 지정하면, 작업힌 그래픽을 PostScript 포맷으로 지정한 파일 안에 저장할 수 있습니다. 플롯은 별도로 @code{horizontal=FALSE} 지정을 하지 않는다면, 가로정렬(landscape orientation) 되며, @code{width}와 @code{height} 인수를 사용하면 그래픽의 크기를 조정할 수 있습니다 (플롯은 지정된 페이지 크기에 맞춰 자동적으로 크기가 조절됩니다).예를 들면, 다음과 같은 명령문을 사용할 경우"

#. type: example
#: R-intro.texi:6306
#, no-wrap
msgid "> postscript(\"file.ps\", horizontal=FALSE, height=5, pointsize=10)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:6314
msgid "will produce a file containing PostScript code for a figure five inches high, perhaps for inclusion in a document.  It is important to note that if the file named in the command already exists, it will be overwritten.  This is the case even if the file was only created earlier in the same @R{} session."
msgstr "PostScript 코드로 된 높이가 5인치인 그림 파일 하나가 생성되며, 이 파일은 아마도 다른 문서에 포함될 수도 있을 것입니다. 만약 명령문에 사용된 파일의 이름이 이미 존재하는 파일의 이름과 같다면, 이 문장으로 실행으로 덮어쓰기(overwritten)가 되어버립니다. 이러한 덮어쓰기는 설사 해당 파일이 현재 @R{} 세션에서 방금 전에 생성된 것이라고 하더라도 발생하게 됩니다."

#. type: Plain text
#: R-intro.texi:6322
msgid "Many usages of PostScript output will be to incorporate the figure in another document.  This works best when @emph{encapsulated} PostScript is produced: @R{} always produces conformant output, but only marks the output as such when the @code{onefile=FALSE} argument is supplied.  This unusual notation stems from @Sl{}-compatibility: it really means that the output will be a single page (which is part of the EPSF specification).  Thus to produce a plot for inclusion use something like"
msgstr "PostScript 포맷을 사용하는 가장 많이 사용되는 곳은 생성된 그림(figure)을 다른 문서에 포함시키는 작업을 할 때 입니다. 이러한 작업은 파일을 PostScript 포맷으로 @emph{고정시키면(encapsulated)} 훨씬 쉬워집니다: @R{}은 별도로 @code{onefile=FALSE} 인자가 지정되지 않으면, 계속 같은 파일로(conformant) 결과를 출력합니다. 이러한 특이한 출력방식은 @Sl{} 과의 호환성(compatibility)에서 기인합니다: 다시 말해, 모든 결과물이 (EPSF 기준을 따르기 때문에) 한 페이지에 출력된다는 의미입니다. 따라서, 다른 문서에 포함될 수 있는(for inclusion use) 플롯을 그리기 위해서는 다음과 같은 문장을 사용해야 합니다."

#. type: example
#: R-intro.texi:6326
#, no-wrap
msgid ""
"> postscript(\"plot1.eps\", horizontal=FALSE, onefile=FALSE,\n"
"             height=8, width=6, pointsize=10)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:6337
msgid "In advanced use of @R{} it is often useful to have several graphics devices in use at the same time.  Of course only one graphics device can accept graphics commands at any one time, and this is known as the @emph{current device}.  When multiple devices are open, they form a numbered sequence with names giving the kind of device at any position."
msgstr "@R{}의 중상급 이상의 사용자라면 종종 여러 개의 그래픽 디바이스에서 동시에 작업해야할 필요를 느낄 수도 있습니다. 물론, 실제로는 한 번에 하나의 명령문이 오직 하나의 그래픽 디바이스에서만 실행되며, 이때 사용 중인 디바이스를 @emph{현재 디바이스(current device)}라고 부릅니다. 여러 개의 디바이스가 사용중인 경우(open), 디바이스들은 열린 순서대로 리스트 상 하나의 위치에 할당되며, 해당 디바이스의 종류가 이름처럼 표기됩니다. "

#. type: Plain text
#: R-intro.texi:6340
msgid "The main commands used for operating with multiple devices, and their meanings are as follows:"
msgstr "여러 디바이스들을 동시에 열어 작동시키기위해 사용할 수 있는 주요 명령문과 그 의미는 아래와 같습니다:"

#. type: table
#: R-intro.texi:6344
msgid "[UNIX]"
msgstr ""

#. type: itemx
#: R-intro.texi:6345
#, no-wrap
msgid "win.printer()"
msgstr ""

#. type: itemx
#: R-intro.texi:6346
#, no-wrap
msgid "win.metafile()"
msgstr ""

#. type: table
#: R-intro.texi:6348
msgid "[Windows]"
msgstr ""

#. type: table
#: R-intro.texi:6350
msgid "[OS X]"
msgstr ""

#. type: item
#: R-intro.texi:6354
#, no-wrap
msgid "tiff()"
msgstr ""

#. type: item
#: R-intro.texi:6355
#, no-wrap
msgid "bitmap()"
msgstr ""

#. type: itemx
#: R-intro.texi:6356
#, no-wrap
msgid "@dots{}"
msgstr ""

#. type: table
#: R-intro.texi:6360
msgid "Each new call to a device driver function opens a new graphics device, thus extending by one the device list.  This device becomes the current device, to which graphics output will be sent."
msgstr "새로운 장치 드라이버 함수를 입력할 때마다 새 그래픽 디바이스가 작동되며, 따라서 디바이스 리스트도 사용된 함수의 숫자 만큼 하나씩 길어지게 됩니다. 이렇게 작동된 디바이스는 현재 디바이스가 되며, 앞으로 생성될 그래픽 결과물은 이 현재 디바이스가 출력합니다."

#. type: item
#: R-intro.texi:6361
#, no-wrap
msgid "dev.list()"
msgstr ""

#. type: findex
#: R-intro.texi:6362
#, no-wrap
msgid "dev.list"
msgstr ""

#. type: table
#: R-intro.texi:6366
msgid "Returns the number and name of all active devices.  The device at position 1 on the list is always the @emph{null device} which does not accept graphics commands at all."
msgstr "현재 사용중인 모든 디바이스들의 개수와 이름을 보여주는 명령문. 이 리스트 상의 첫번째 위치(position 1)에는 항상 @emph{널 디바이스 (null device)}가 위치하지만, 사실 이 디바이스는 그랙픽 명령문을 전혀 실행하지 않습니다."

#. type: item
#: R-intro.texi:6367
#, no-wrap
msgid "dev.next()"
msgstr ""

#. type: itemx
#: R-intro.texi:6368
#, no-wrap
msgid "dev.prev()"
msgstr ""

#. type: findex
#: R-intro.texi:6369
#, no-wrap
msgid "dev.next"
msgstr ""

#. type: findex
#: R-intro.texi:6370
#, no-wrap
msgid "dev.prev"
msgstr ""

#. type: table
#: R-intro.texi:6373
msgid "Returns the number and name of the graphics device next to, or previous to the current device, respectively."
msgstr "리스트 상에서 현재 디바이스 보다 각각 (순서상) 앞이나 뒤에 위치한 그래픽 디바이스들의 개수와 이름을 보여주는 명령문."

#. type: item
#: R-intro.texi:6374
#, no-wrap
msgid "dev.set(which=@var{k})"
msgstr ""

#. type: findex
#: R-intro.texi:6375
#, no-wrap
msgid "dev.set"
msgstr ""

#. type: table
#: R-intro.texi:6378
msgid "Can be used to change the current graphics device to the one at position @var{k} of the device list.  Returns the number and label of the device."
msgstr "디바이스 리스트 상 @var{k} 번째에 위치한 그래픽 디바이스를 현재 디바이스로 지정하기위해 사용하는 명령문. 새로 지정된 디바이스의 숫자와 이름을 출력합니다."

#. type: item
#: R-intro.texi:6379
#, no-wrap
msgid "dev.off(@var{k})"
msgstr ""

#. type: findex
#: R-intro.texi:6380
#, no-wrap
msgid "dev.off"
msgstr ""

#. type: table
#: R-intro.texi:6385
msgid "Terminate the graphics device at point @var{k} of the device list.  For some devices, such as @code{postscript} devices, this will either print the file immediately or correctly complete the file for later printing, depending on how the device was initiated."
msgstr "디바이스 리스트 상 @var{k} 번째 그래픽 디바이스를 종료시킵니다. @code{postscript} 와 같은 몇몇 디바이스의 경우, 디바이스의 종류에 따라 이 명령문은 해당 파일을 즉시 출력하거나 또는 나중에 출력하기 위해 해당 파일을 제대로 종료하는 것으로 실행됩니다."

#. type: item
#: R-intro.texi:6386
#, no-wrap
msgid "dev.copy(device, @dots{}, which=@var{k})"
msgstr ""

#. type: itemx
#: R-intro.texi:6387
#, no-wrap
msgid "dev.print(device, @dots{}, which=@var{k})"
msgstr ""

#. type: table
#: R-intro.texi:6393
msgid "Make a copy of the device @var{k}.  Here @code{device} is a device function, such as @code{postscript}, with extra arguments, if needed, specified by @samp{@dots{}}.  @code{dev.print} is similar, but the copied device is immediately closed, so that end actions, such as printing hardcopies, are immediately performed."
msgstr "@var{k} 번째 디바이스를 복사(copy)하는 명령문. 여기서 @code{디바이스 (device)}는 @code{포스트 스크립트(postscript)} 같은 하나의 디바이스 함수를 의미하며, 필요할 경우 @samp{@dots{}} 부분에 인수를 입력하여 사용할 수도 있습니다. @code{dev.print}도 비슷하게 사용되지만, 이 함수는 디바이스를 복사(copy)한 후 바로 종료시키므로, 하드 카피로 출력과 같은 명령을 즉시 실행하게 됩니다."

#. type: item
#: R-intro.texi:6394
#, no-wrap
msgid "graphics.off()"
msgstr ""

#. type: table
#: R-intro.texi:6396
msgid "Terminate all graphics devices on the list, except the null device."
msgstr "널 디바이스(null device)를 제외한 리스트 상의 모든 그래픽 디바이스들을 종료합니다."

#. type: Plain text
#: R-intro.texi:6407
msgid "@R{} does not have builtin capabilities for dynamic or interactive graphics, e.g.@ rotating point clouds or to ``brushing'' (interactively highlighting) points. However, extensive dynamic graphics facilities are available in the system GGobi by Swayne, Cook and Buja available from"
msgstr "@R{}은 다이나믹(dynamic) 또는 대화형(interactive) 그래픽을 위한 빌트인(built-in) 기능을 제공하지 않습니다. (e.g. 포인트 덩어리(point clouds)를 회전시킨다거나, 포인트들을 “색칠하는 (brushing)” (대화형으로 포인트들을 하일라이팅하는,interactively highlighting points) 것 등등). 하지만, Swayne, Cook과 Buja가 개발한 GGobi 시스템에서는 이런 기능을 사용할 수 있습니다."

#. type: quotation
#: R-intro.texi:6410
msgid "@uref{http://www.ggobi.org/}"
msgstr ""

#. type: Plain text
#: R-intro.texi:6415
msgid "and these can be accessed from @R{} via the package @CRANpkg{rggobi}, described at @uref{http://www.ggobi.org/rggobi}."
msgstr "또 @R{}에서는, 아래의 @CRANpkg{rggobi} 패키지를 설치하여 이러한 그래픽 기능들을 사용할 수 있습니다. "

#. type: Plain text
#: R-intro.texi:6418
msgid "Also, package @CRANpkg{rgl} provides ways to interact with 3D plots, for example of surfaces."
msgstr "또한, @CRANpkg{rgl} 패키지는 3D plots에서, 좀 더 구체적으로 plot 의 표면(surfaces)에서, 대화형(interactive) 작업을 지원합니다."

#. type: Plain text
#: R-intro.texi:6431
msgid "All @R{} functions and datasets are stored in @emph{packages}.  Only when a package is loaded are its contents available.  This is done both for efficiency (the full list would take more memory and would take longer to search than a subset), and to aid package developers, who are protected from name clashes with other code.  The process of developing packages is described in @ref{Creating R packages, , Creating R packages, R-exts, Writing R Extensions}.  Here, we will describe them from a user's point of view."
msgstr "@R{}의 모든 함수들과 데이터셋들은 @emph{패키지 (packages)}안에 저장되어 있습니다. 따라서, 어떤 패키지가 로드(loaded)되었을 때만 패키지 안의 내용물들을 사용할 수 있습니다.이러한 패키지 시스템은 효율성(efficiency)과 개발자의 편의 (to aid package developers)라는 장점을 가집니다: 전체 리스트를 사용할 때 보다 메모리의 사용량이 적고, 필요한 내요을 검색하는 데도 훨씬 적은 시간이 걸린다는 점에서 효율적이며, 다른 코드와 같은 이름을 사용하게 되는 것(name clashes with other code)을 자연스럽게 방지하는 역할도 있으므로 패키지 개발자의 편의를 고려했다고 볼 수 있습니다. 패키지를 개발하는 과정에 대해서는 @ref{Creating R packages, , Creating R packages, R-exts, Writing R Extensions}를 살펴보시길 바랍니다.여기에서 우리는 사용자 측면에 대해서만 이야기할 것입니다."

#. type: Plain text
#: R-intro.texi:6433
msgid "To see which packages are installed at your site, issue the command"
msgstr "어떤 패키지들이 여러분이 사용중인 @R{} 프로그램(사이트, site)에 설치되어 있는지 알고싶다면, 인자의 입력 없이 다음의 함수를 사용하시면 됩니다."

#. type: example
#: R-intro.texi:6436
#, no-wrap
msgid "> library()\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:6442
msgid "with no arguments.  To load a particular package (e.g., the @CRANpkg{boot} package containing functions from Davison & Hinkley (1997)), use a command like"
msgstr "특정한 하나의 패키지를 로드(load)하기 위해서는(예를 들면, Davison & Hinkley (1997)에 사용된 함수들이 포함되어 있는 @CRANpkg{boot}를 사용하고 싶다고 가정합시다), 아래와 같은 명령어를 입력하면 됩니다. "

#. type: example
#: R-intro.texi:6445
#, no-wrap
msgid "> library(boot)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:6452
msgid "Users connected to the Internet can use the @code{install.packages()} and @code{update.packages()} functions (available through the @code{Packages} menu in the Windows and OS X GUIs, @pxref{Installing packages, , , R-admin, R Installation and Administration}) to install and update packages."
msgstr "인터넷을 사용할 수 있다면, @code{install.packages()}와 @code{update.packages()} 함수들을 이용하여 패키지를 설치하거나 업데이트 할 수 있습니다. (윈도우즈와 RAqua GUI에서는 @code{Packages} 메뉴를 통해 이러한 작업을 실행할 수도 있습니다. @pxref{Installing packages, , , R-admin, R Installation and Administration})를 참고하시길 바랍니다.)"

#. type: Plain text
#: R-intro.texi:6454
msgid "To see which packages are currently loaded, use"
msgstr "현재 로드되어 있는 패키지들을 확인하고 싶다면 아래의 함수를 입력하여"

#. type: example
#: R-intro.texi:6457
#, no-wrap
msgid "> search()\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:6463
msgid "to display the search list.  Some packages may be loaded but not available on the search list (@pxref{Namespaces}): these will be included in the list given by"
msgstr "검색 리스트(search list)를 확인할 수 있습니다.일부 패키지들은 로드되어있다고 하더라도 검색 리스트에서 보이지 않을 수도 있습니다.(여기에 대해서는 @pxref{Namespaces}를 찾아보시길 바랍니다): 이러한 패키지들은 다음의 명령어를 사용하면 확인이 가능합니다."

#. type: example
#: R-intro.texi:6466
#, no-wrap
msgid "> loadedNamespaces()\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:6471
msgid "To see a list of all available help topics in an installed package, use"
msgstr "설치된 패키지에서 사용가능한 모든 도움말(help) 주제의 목록을 확인해보고 싶다면 아래의 명령어를 사용하시기 바랍니다."

#. type: Plain text
#: R-intro.texi:6479
msgid "to start the @HTML{} help system, and then navigate to the package listing in the @code{Reference} section."
msgstr "이 명령어로 @HTML{} 도움말 시스템(help system)이 시작되며, @code{Reference} 섹션에서 패키지 목록을 찾으시면 됩니다."

#. type: node
#: R-intro.texi:6484
#: R-intro.texi:6486
#: R-intro.texi:6487
#: R-intro.texi:6496
#, no-wrap
msgid "Standard packages"
msgstr "표준 패키지들 (Standard packages)"

#. type: node
#: R-intro.texi:6484
#: R-intro.texi:6486
#: R-intro.texi:6496
#: R-intro.texi:6512
#, no-wrap
msgid "Contributed packages and CRAN"
msgstr "사용자-기여 패키지(Contributed packages)와 @acronym{CRAN}"

#. type: section
#: R-intro.texi:6484
#: R-intro.texi:6496
#: R-intro.texi:6512
#: R-intro.texi:6513
#, no-wrap
msgid "Namespaces"
msgstr "네임스페이스 (Namespaces)"

#. type: Plain text
#: R-intro.texi:6495
msgid "The standard (or @emph{base}) packages are considered part of the @R{} source code.  They contain the basic functions that allow @R{} to work, and the datasets and standard statistical and graphical functions that are described in this manual.  They should be automatically available in any @R{} installation.  @xref{Which add-on packages exist for R?, , R packages, R-FAQ, R FAQ}, for a complete list."
msgstr "표준(또는 @emph{기본 (base)}) 패키지들은 @R{} 소스코드(source code)에서 매우 중요한 부분을 차지합니다.이 표준 패키지들은 @R{}이 작동할 수 있도록하는 기본 함수들(basic functions)은 물론이고, 데이터셋, 표준 통계분석 및 (앞부분에서 설명된) 그래픽 함수들로 구성되어 있습니다. 이러한 표준 패키지들은 @R{} 설치시에 자동으로 따라 옵니다. 모든 표준패키지 목록을 보고싶으시면 다음을 참조하세요. @xref{Which add-on packages exist for R?, ,R packages, R-FAQ, R FAQ}."

#. type: section
#: R-intro.texi:6497
#, no-wrap
msgid "Contributed packages and @acronym{CRAN}"
msgstr "사용자-기여 패키지(Contributed packages)와 @acronym{CRAN}"

#. type: cindex
#: R-intro.texi:6498
#, no-wrap
msgid "CRAN"
msgstr ""

#. type: Plain text
#: R-intro.texi:6511
msgid "There are thousands of contributed packages for @R{}, written by many different authors.  Some of these packages implement specialized statistical methods, others give access to data or hardware, and others are designed to complement textbooks.  Some (the @emph{recommended} packages) are distributed with every binary distribution of @R{}.  Most are available for download from @acronym{CRAN} (@uref{http://CRAN.R-project.org/} and its mirrors) and other repositories such as Bioconductor (@uref{http://www.bioconductor.org/})  and Omegahat (@uref{http://www.omegahat.org/}).  The @emph{R FAQ} contains a list of CRAN packages current at the time of release, but the collection of available packages changes very frequently."
msgstr "@R{}에는 수없이 많은 개발자들에 의해 작성된, 매우 방대한 양의 기여된 패키지(contributed packages)들이 있습니다. 이 중 일부는 특수한 통계방법들을 구현하였고, 또다른 것들은 데이터 또는 하드웨어에 대한 접근을 다루고있으며, 그 외에도 교과서의 부록으로(to complement textbooks) 제작된 것들도 있습니다. 일부 @emph{권장 (recommended)} 패키지들은 @R{}의 바이너리 배포 때 함께 배포됩니다. 하지만 대부분의 패키지는 @acronym{CRAN}(@uref{http://CRAN.R-project.org/}과 이 사이트의 미러 사이트들) 그리고 Bioconductor (@uref{http://www.bioconductor.org/})나 Omegahat (@uref{http://www.omegahat.org/})과 같은 저장소들(repositories)을 통해서 다운로드 할 수 있습니다. @emph{R FAQ}에는 이 문서의 출시(release)를 기준으로 최근의 CRAN 패키지들의 목록을 포함하고는 있지만, 이용가능한 패키지들의 목록은 매우 자주 변경됩니다."

#. type: cindex
#: R-intro.texi:6514
#, no-wrap
msgid "Namespace"
msgstr "네임스페이스 (Namespaces)"

#. type: findex
#: R-intro.texi:6515
#, no-wrap
msgid "::"
msgstr ""

#. type: findex
#: R-intro.texi:6516
#, no-wrap
msgid ":::"
msgstr ""

#. type: Plain text
#: R-intro.texi:6524
msgid "All packages have @emph{namespaces}, and have since @R{} 2.14.0.  Namespaces do three things: they allow the package writer to hide functions and data that are meant only for internal use, they prevent functions from breaking when a user (or other package writer) picks a name that clashes with one in the package, and they provide a way to refer to an object within a particular package."
msgstr "패키지들은 @emph{네임스페이스(namespaces)}라는 것을 가질 수 있으며, 현재 @code{datasets} 패키지를 제외한 모든 기본 (base)과 권장(recommended ) 패키지들은 이 네임스페이스를 가지고 있습니다. 네임스페이스는 크게 다음의 세가지 역할을 수행합니다:첫째, 패키지 작성자가 내부적 사용만을 목적으로 개발한 함수들과 데이터들을 숨길 수 있도록 합니다. 둘째, 사용자나 (혹은 다른 패키지 작성자)가 해당 패키지에서 사용중인 함수명과 같은 이름의 함수를 사용하고자 할때, 같은 이름의 두 함수가 충돌하여 작동이 중단(breaking)되는 것을 방지합니다.마지막으로 특정 패키지 내의 하나의 객체(object)를 지칭하는 또다른 방법을 제시합니다."

#. type: Plain text
#: R-intro.texi:6529
msgid "For example, @code{t()} is the transpose function in @R{}, but users might define their own function named @code{t}.  Namespaces prevent the user's definition from taking precedence, and breaking every function that tries to transpose a matrix."
msgstr "예를 들면, @code{t()}는 @R{}에서 행렬을 전치(transpose)하는 함수 입니다.  그러나, 사용자들 중에는 @code{t}라는 같은 이름을 갖는 자신만의 고유한 함수를 정의하고 싶은 사람도 있을 것입니다.이때 네임스페이스(namespaces)는 사용자 정의 함수가 우선권을 갖게 되어 행렬을 전치하기 위해 @code{t()}함수를 사용할 수 없게 되는  일이 없도록 방지합니다."

#. type: Plain text
#: R-intro.texi:6536
msgid "There are two operators that work with namespaces.  The double-colon operator @code{::} selects definitions from a particular namespace.  In the example above, the transpose function will always be available as @code{base::t}, because it is defined in the @code{base} package.  Only functions that are exported from the package can be retrieved in this way."
msgstr "네임스페이스와 함께 사용되는 두개의 연산자들(operators)이 있습니다. 하나는 더블콜론(double-colon) 연산자 @code{::}로, 특정 네임스페이스에 정의된 함수(definitions)들을 선택합니다.위의 예제를 다시 이용하면, 전치함수는 @code{base} 패키지 안에 정의되어 있기 때문에, 언제라도 @code{base::t}로  불러내는 것이 가능합니다.용할 수 있습니다. 하지만, 오직 패키지에서 내보내진(exported) 함수들만이 이런 식으로 사용될 수 있습니다."

#. type: Plain text
#: R-intro.texi:6541
msgid "The triple-colon operator @code{:::} may be seen in a few places in R code: it acts like the double-colon operator but also allows access to hidden objects.  Users are more likely to use the @code{getAnywhere()} function, which searches multiple packages."
msgstr "트리플-콜론(triple-colon) 연산자 @code{:::}가 @R 코드 내에서 사용되는 경우가 있습니다: 이 연산자는 더블-콜론 연산자와 비슷한 기능을 수행하지만, 숨겨진 객체(hidden objects)에 대해서도 접근할 수 있다는 점에서 차이가 있습니다.그러나, 여러개의 패키지들을 대상으로 검색할 수 있는, @code{getAnywhere()} 함수가 더 선호되는 경향이 있습니다."

#. type: Plain text
#: R-intro.texi:6547
msgid "Packages are often inter-dependent, and loading one may cause others to be automatically loaded.  The colon operators described above will also cause automatic loading of the associated package.  When packages with namespaces are loaded automatically they are not added to the search list."
msgstr "패키지들은 서로 상호의존적(inter-dependent)이라, 하나를 로딩할 때 자동으로 다른 패키지들을 함께 로딩할 수 있습니다. 위에서 설명한 콜론 연산자들은 사용할 때도 관련있는 패키지들이 자동 로딩 됩니다.네임스페이스를 가진 패키지들이 자동 로드로 실행되면, 이들은 검색목록(search list)에 추가되지는 않습니다."

#. type: Plain text
#: R-intro.texi:6554
msgid "@R{} has quite extensive facilities to access the OS under which it is running: this allows it to be used as a scripting language and that ability is much used by @R{} itself, for example to install packages."
msgstr "@R {}은 실행 중인 운영 체제를 이용할수있는 꽤 광범위 한 시설을가지고 있습니다: 이것은 @R {}이 스크립트 언어로 사용될수 있고, @R {} 자체가 그 능력을 십분 활용하고 있습니다. 예: 패키지 설치."

#. type: Plain text
#: R-intro.texi:6558
msgid "Because @R{}'s own scripts need to work across all platforms, considerable effort has gone into make the scripting facilities as platform-independent as is feasible."
msgstr "@R {} 자체의 스크립트가 모든 플랫폼에서 작동 할수있어야 하기 때문에, 스크립팅 시설들이 플랫폼에 제한되지않게 가능한한 독자적으로 만들기위하여 상당한 노력이 들어갔습니다."

#. type: node
#: R-intro.texi:6564
#: R-intro.texi:6566
#: R-intro.texi:6567
#: R-intro.texi:6611
#, no-wrap
msgid "Files and directories"
msgstr "파일 및 디렉터리"

#. type: node
#: R-intro.texi:6564
#: R-intro.texi:6566
#: R-intro.texi:6611
#: R-intro.texi:6612
#: R-intro.texi:6686
#, no-wrap
msgid "Filepaths"
msgstr ""

#. type: node
#: R-intro.texi:6564
#: R-intro.texi:6611
#: R-intro.texi:6686
#: R-intro.texi:6687
#: R-intro.texi:6706
#, no-wrap
msgid "System commands"
msgstr "시스템 명령어"

#. type: section
#: R-intro.texi:6564
#: R-intro.texi:6686
#: R-intro.texi:6706
#: R-intro.texi:6707
#, no-wrap
msgid "Compression and Archives"
msgstr "압축과 아카이브 (archive)"

#. type: Plain text
#: R-intro.texi:6571
msgid "There are many functions to manipulate files and directories. Here are pointers to some of the more commonly used ones."
msgstr "파일및 디렉터리를 조작할수있는 함수는 많이있습니다. 좀 더 보편적으로 쓰이는 함수들 몇가지를 여기에서 설명하겠습니다."

#. type: Plain text
#: R-intro.texi:6576
msgid "To create an (empty) file or directory, use @code{file.create} or @code{create.dir}.  (These are the analogues of the POSIX utilities @command{touch} and @command{mkdir}.)  For temporary files and directories in the @R{} session directory see @code{tempfile}."
msgstr "비어있는 파일이나 디렉터리를 만들고 싶은 경우 @code{file.create} 이나 @code{dir.create} 를 사용합니다. (이 함수들은 POSIX utilities 의 @command{touch} 및@command{mkdir} 과 유사합니다.) @R{} 세션 디렉터리에서 임시적으로 만든 파일이나 디렉터리일 경우 @code{tempfile} 을 참조 하십시요."

#. type: Plain text
#: R-intro.texi:6579
msgid "Files can be removed by either @code{file.remove} or @code{unlink}: the latter can remove directory trees."
msgstr "파일을 삭제할 때 @code{file.remove} 이나 @code{unlink} 를 사용할수 있습니다: 디렉터리 트리도 같이 삭제 시키고 싶은 경우 @code{unlink} 를 사용 하면 됩니다."

#. type: Plain text
#: R-intro.texi:6583
msgid "For directory listings use @code{list.files} (also available as @code{dir}) or @code{list.dirs}. These can select files using a regular expression: to select by wildcards use @code{Sys.glob}."
msgstr "디렉터리 리스트 출력을 원할경우 @code{list.files} (@code{dir} 로도 사용가능) 이나 @code{list.dirs} 를 사용합니다. 이 함수들은 정규 표현식 (regular expression) 을 사용해 파일들을 찾을 수 있습니다: 와일드 카드를 사용할경우 @code{Sys.glob} 를 사용합니다."

#. type: Plain text
#: R-intro.texi:6586
msgid "Many types of information on a filepath (including for example if it is a file or directory) can be found by @code{file.info}."
msgstr "@code{file.info}를 사용하여 filepath (예로 파일이나 디렉터리를 포함함) 에 있는 많은 양식의 정보들을 찾을수 있습니다."

#. type: Plain text
#: R-intro.texi:6593
msgid "There are several ways to find out if a file `exists' (and file can exist on the filesystem and not be visible to the current user).  There are functions @code{file.exists}, @code{file.access} and @code{file_test} with various versions of this test: @code{file_test} is a version of the POSIX @command{test} command for those familiar with shell scripting."
msgstr "파일이 '존재'하는지  (파일이 파일 시스템에 존재하지만 현재 사용자에게 보이지 않는 경우도 있습니다) 확인하는 몇 가지 방법이 있습니다. 다양한 버전의 @code{file.exists}, @code{file.access} 그리고 @code{file_test} 함수들이 있습니다: 셸 스크립팅에 익숙한 분들을 위한 예로 @code{file_test} 는 POSIX @command{test} 명령어의 한 버전 입니다."

#. type: Plain text
#: R-intro.texi:6596
msgid "Function @code{file.copy} is the @R{} analogue of the POSIX command @command{cp}."
msgstr "@R{} 의 @code{file.copy} 라는 함수는 POSIX 명령어인 @command{cp} 의 유사체 입니다."

#. type: Plain text
#: R-intro.texi:6601
msgid "Choosing files can be done interactively by @code{file.choose}: the Windows port has the more versatile functions @code{choose.files} and @code{choose.dir} and there are similar functions in the @pkg{tcltk} package: @code{tk_choose.files} and @code{tk_choose.dir}."
msgstr "@code{file.choose} 를 사용하여 파일을 선택하는 작업을  대화 형으로 수행 할 수 있습니다: 윈도우즈 포트는 더 다양한 기능을 갖은 @code{choose.files} 와 @code{choose.dir} 함수들을 가지고 있으며, @pkg{tcltk} 패키지에 유사한 함수들이 있습니다 : @code{tk_choose.files} 와 @code{tk_choose.dir}."

#. type: Plain text
#: R-intro.texi:6606
msgid "Functions @code{file.show} and @code{file.edit} will display and edit one or more files in a way appropriate to the @R{} port, using the facilities of a console (such as RGui on Windows or R.app on OS X) if one is in use."
msgstr "@code{file.show} 와 @code{file.edit} 과 같은 함수들은, 만약 콘솔 (예로 윈도우즈에서 RGui나 OS X에서 R.app)을 사용중일 경우, 콘솔의 기능을 사용하여 @R{} 포트에 적절한 방법으로 하나 이상의 파일을 표시및 편집합니다."

#. type: Plain text
#: R-intro.texi:6609
msgid "There is some support for @emph{links} in the filesystem: see functions @code{file.link} and @code{Sys.readlink}."
msgstr "파일 시스템에 있는 @emph{links} 를 일부 지원 하고 있습니다: @code{file.link} 와 @code{Sys.readlink}를 참조하십시오."

#. type: Plain text
#: R-intro.texi:6620
msgid "With a few exceptions, @R{} relies on the underlying OS functions to manipulate filepaths.  Some aspects of this are allowed to depend on the OS, and do, even down to the version of the OS.  There are POSIX standards for how OSes should interpret filepaths and many @R{} users assume POSIX compliance: but Windows does not claim to be compliant and other OSes may be less than completely compliant."
msgstr "몇 가지 예외를 제외하고, @R{} 은 filepaths를 조작할때 기본 운영체제의 기능에 의존합니다. 어떤 면에서는 운영체제에 의존하게 허락되있고. 이것은 운영체제의 버전까지도 포함됩니다. 운영체제가 filepaths를 해석하는 방법에 대한 POSIX 표준이있습니다, 그리고 많은 @R{} 사용자들이 POSIX 표준에 대한 준수를 가정하지만, 윈도우즈는 준수함을 제기하지 않고있으며, 다른 운영체제들도 완전히 준수하지는 않을 수 있습니다."

#. type: Plain text
#: R-intro.texi:6622
msgid "The following are some issues which have been encountered with filepaths."
msgstr "다음은 filepaths 에 관해서 발생 된 몇 가지 문제들 입니다."

#. type: itemize
#: R-intro.texi:6630
msgid "POSIX filesystems are case-sensitive, so @file{foo.png} and @file{Foo.PNG} are different files.  However, the defaults on Windows and OS X are to be case-insensitive, and FAT filesystems (commonly used on removable storage) are not normally case-sensitive (and all filepaths may be mapped to lower case)."
msgstr "POSIX 파일 시스템은 대소 문자를 구분합니다, 그래서 @file{foo.png} 와 @file{Foo.PNG} 는 다른 파일이 됩니다. 그러나, 윈도우즈와 OS X에서 기본값은 대소 문자를 구별하지 않게 되있습니다, 그리고 FAT 파일 시스템은 (일반적으로 이동식 저장 장치에 사용됨) 보통 대소 문자를 구분하지 않습니다 (그리고 모든 filepaths가 소문자로 매핑이 되 있습니다)."

#. type: itemize
#: R-intro.texi:6635
msgid "Almost all the Windows' OS services support the use of slash or backslash as the filepath separator, and @R{} converts the known exceptions to the form required by Windows."
msgstr "거의 모든 윈도우즈 기본 운영체제 서비스는 filepath 구분 기호(separator)로 슬래시 또는 백 슬래시의 사용을 지원하고, @R{} 은 윈도우에서 요구하는 양식으로 알려진 예외를 변환합니다."

#. type: itemize
#: R-intro.texi:6641
msgid "The behaviour of filepaths with a trailing slash is OS-dependent.  Such paths are not valid on Windows and should not be expected to work.  POSIX-2008 requires such paths to match only directories, but earlier versions allowed them to also match files.  So they are best avoided."
msgstr "filepaths 끝에 추가되는 슬래시가 작용하는 효과는 기본 운영체제에 따라 다릅니다. 윈도우즈에서 이런 paths는 유효하지 않으며 작동하지도 않을것 입니다. POSIX-2008에서 이런 paths는 디렉터리일때만 유효하지만, 예전 버전에서는 파일일 경우에도 유효했습니다. 그러므로 이런 형식의 filepaths는 사용하지 않는게 최선일 것입니다. "

#. type: itemize
#: R-intro.texi:6647
msgid "Multiple slashes in filepaths such as @file{/abc//def} are valid on POSIX filesystems and treated as if there was only one slash.  They are @emph{usually} accepted by Windows' OS functions.  However, leading double slashes may have a different meaning."
msgstr "@file{/abc//def} 처럼 중복된 슬래시가 있는 filepaths는 POSIX 파일 시스템에서 유효합니다, 그리고 이런 경우 중복되 있더라도 하나의 슬래시로 취급됩니다. 윈도우즈 기본 운영체제 기능은 @emph{일반적으로} 이런 filepaths를 수용하고 있습니다. 하지만 앞에 추가되는 이중 슬래시는 다른 의미를 갖고있습니다."

#. type: itemize
#: R-intro.texi:6653
msgid "Windows' UNC filepaths (such as @file{\\\\server\\dir1\\dir2\\file} and @file{\\\\?\\UNC\\server\\dir1\\dir2\\file}) are not supported, but they may work in some @R{} functions.  POSIX filesystems are allowed to treat a leading double slash specially."
msgstr "윈도우즈에서 사용하는 UNC filepaths (@file{\\\\server\\dir1\\dir2\\file} 와 @file{\\\\?\\UNC\\server\\dir1\\dir2\\file} 같은 path) 는 지원되지 않습니다, 그러나 일부 @R{} 함수에서는 사용될수도 있습니다. POXIS 파일 시스템들은 앞에 추가되는 이중 슬래시를 특별히 취급하도록 되있습니다.  "

#. type: itemize
#: R-intro.texi:6660
msgid "Windows allows filepaths containing drives and relative to the current directory on a drive, e.g.@: @file{d:foo/bar} refers to @file{d:/a/b/c/foo/bar} if the current directory @emph{on drive @file{d:}} is @file{/a/b/c}.  It is intended that these work, but the use of absolute paths is safer."
msgstr "윈도우즈에서는 filepaths에 드라이브가 추가되있어도 유효하고, 드라이브 없이 현제 디렉토리에 비례되어도 유효합니다. 예: @file{d:foo/bar} 는 @file{d:/a/b/c/foo/bar} 를 가리킵니다, 만약 @emph{@file{d:} 드라이브에 있는} 현제 디렉터리가 @file{/a/b/c} 일 경우.  이런식으로 작동을 하게 의도되 있지만, 안전하게 작업을 하려면 완전한 paths 를 사용하십시요."

#. type: Plain text
#: R-intro.texi:6667
msgid "Functions @code{basename} and @code{dirname} select parts of a file path: the recommended way to assemble a file path from components is @code{file.path}.  Function @code{pathexpand} does `tilde expansion', substituting values for home directories (the current user's, and perhaps those of other users)."
msgstr "@code{basename} 과 @code{dirname} 함수들을 사용하여 file path의 부분을 선택할수 있습니다: 구성 요소들을 이용하여 file path를 만들때 권장되는 방법은 @code{file.path}입니다. @code{pathexpand} 함수는 (현재 사용자의, 그리고 아마도 다른 사용자들의) 홈 디렉토리에 대한 값을 대체하여 '틸드 확장'을 할수있게 합니다."

#. type: Plain text
#: R-intro.texi:6671
msgid "On filesystems with links, a single file can be referred to by many filepaths.  Function @code{normalizePath} will find a canonical filepath."
msgstr "링크가 들어있는 파일 시스템일 경우, 하나의 파일이 많은 filepaths로 불려질수 있습니다.  @code{normalizePath} 함수로 정식 filepath를 찾을 수 있습니다."

#. type: Plain text
#: R-intro.texi:6677
msgid "Windows has the concepts of short (`8.3') and long file names: @code{normalizePath} will return an absolute path using long file names and @code{shortPathName} will return a version using short names.  The latter does not contain spaces and uses backslash as the separator, so is sometimes useful for exporting names from @R{}."
msgstr "윈도우즈는 긴 파일 이름 및 짧은 ('8.3') 파일 이름의 컨셉트를 갖고 있습니다: @code{normalizePath} 는 긴 파일 이름을 사용 하여  path의 절대 값을 출력하고 @code{shortPathName}은  짧은 이름을 사용는 버전을 출력 합니다.  후자는 공백을 포함 하지 않고 구분 기호로 백슬래시를 사용 합니다. 그래서, 때로는 @R{}에서 이름을 export 하는 데 유용합니다."

#. type: Plain text
#: R-intro.texi:6685
msgid "File @emph{permissions} are a related topic.  @R{} has support for the POSIX concepts of read/write/execute permission for owner/group/all but this may be only partially supported on the filesystem (so for example on Windows only read-only files (for the account running the @R{} session) are recognized.  Access Control Lists (ACLs) are employed on several filesystems, but do not have an agreed standard and @R{} has no facilities to control them.  Use @code{Sys.chmod} to change permissions."
msgstr "파일 @emph{사용 권한}에 관련된 주제입니다.  @R{}는 owner/group/all 에 대 하여 read/write/execute 권한의 POSIX 컨셉트를 지원하지만 파일 시스템은 부분적으로만 지원됩니다 (그래서 윈도우즈에만 관련된 예로 (@R{} 세션을 실행 하는 계정에서) read-only 파일이 인식이 됩니다).  액세스 제어 목록 (Access Control Lists - ACLs)이 여러 파일 시스템에 사용 되고 있지만 합의된 표준이 없고 @R{}역시 그 목록들을 제어할 수 있는 시설이 없습니다.  사용 권한을 변경 하려면 @code{Sys.chmod}를 사용하면 됩니다."

#. type: Plain text
#: R-intro.texi:6693
msgid "Functions @code{system} and @code{system2} are used to invoke a system command and optionally collect its output.  @code{system2} is a little more general but its main advantage is that it is easier to write cross-platform code using it."
msgstr "@code{system} 과 @code{system2} 함수들은 시스템 명령을 호출하고 선택적으로 출력을 수집하는데 사용됩니다. @code{system2}는 좀 더 일반적이지만, 그것의 주요 장점은 그것을 사용하는 크로스 플랫폼 코드를 작성하기가 더 쉽다는 것입니다."

#. type: Plain text
#: R-intro.texi:6698
msgid "@code{system} behaves differently on Windows from other OSes (because the API C call of that name does).  Elsewhere it invokes a shell to run the command: the Windows port of @R{} has a function @code{shell} to do that."
msgstr "@code{system} 은 윈도우즈에서 다른 운영체제들과  다르게 작용합니다  (이것과 같은 이름의 API C 명령이 이작업을 하기 때문입니다) . 다른 곳에서 이 함수는 명령을 실행하는 쉘을 호출합니다: @R{} 의 윈도우즈 포트에서 쉘을 호줄 하려면 @code{shell} 함수를 사용합니다."

#. type: Plain text
#: R-intro.texi:6702
msgid "To find out if the OS includes a command, use @code{Sys.which}, which attempts to do this in a cross-platform way (unfortunately it is not a standard OS service)."
msgstr "운영 체제가 명령을 포함하고 있는지 확인하려면, 크로스 플랫폼 방식으로이 작업을 수행하려고하는 @code{Sys.which} 를 사용합니다 (불행하게도 이것은 운영체제의 표준 서비스가 아닙니다)."

#. type: Plain text
#: R-intro.texi:6705
msgid "Function @code{shQuote} will quote filepaths as needed for commands in the current OS."
msgstr "@code{shQuote} 함수는 사용하고있는 운영체제 내에서의 명령을 위하여 필요에 따라 filepaths를 인용합니다."

#. type: Plain text
#: R-intro.texi:6715
msgid "Recent versions of @R{} have extensive facilities to read and write compressed files, often transparently.  Reading of files in @R{} is to a vey large extent done by @emph{connections}, and the @code{file} function which is used to open a connection to a file (or a URL) and is able to identify the compression used from the `magic' header of the file."
msgstr "@R{} 의 최신 버전은 종종 투명하게, 압축 파일을 읽고 쓸 수있는 광범위한 시설들이 있습니다.  @R{} 에서 파일을 읽는 작업은 @emph{연결 (connections)} 과  @code{file} 함수에 의해 대부분 수행 됩니다. @code{file} 함수는 파일 (또는 URL)의 연결을 열어줄때 사용하고, 파일의 'magic' 헤더로 부터 사용된 압축방식을 식별할수도 있습니다. "

#. type: Plain text
#: R-intro.texi:6724
msgid "The type of compression which has been supported for longest is @command{gzip} compression, and that remains a good general compromise.  Files compressed by the earlier Unix @command{compress} utility can also be read, but these are becoming rare.  Two other forms of compression, those of the @command{bzip2} and @command{xz} utilities are also available.  These generally achieve higher rates of compression (depending on the file, much higher) at the expense of slower decompression and much slower compression."
msgstr "압축방식 중 지원된지 가장 오래된 방식은 @command{gzip} 압축이고 이것은 적합하고 일반적인 절충안으로 남아있습니다. 예전 리눅스의 @command{compress} 유틸리티로 압축된 파일들 또한 읽어질수 있지만 이런 경우는 드물어 지고 있습니다. 두 가지 다른 압축 방식으로 @command{bzip2} 와 @command{xz} 유틸리티들이 이용될수 있습니다. 이 방식들은 보통 더 높은 압축률을 이루지만 (파일에 따라서 훨씬 더 높을 수도 있음) 느린 감압시간과 훨씬 더 느린 압축시간을 감수해야 합니다. "

#. type: Plain text
#: R-intro.texi:6729
msgid "There is some confusion between @command{xz} and @command{lzma} compression (see @uref{http://en.wikipedia.org/wiki/Xz} and @uref{http://en.wikipedia.org/wiki/LZMA}): @R{} can read files compressed by most versions of either."
msgstr "@command{xz} 와 @command{lzma} 압축 사이에 일부 혼란이 있습니다 (@uref{http://en.wikipedia.org/wiki/Xz} 와@uref{http://en.wikipedia.org/wiki/LZMA} 참조): @R{} 은 두 가지방법의 다양한 버전으로 압축된 파일들을 읽을 수 있습니다."

#. type: Plain text
#: R-intro.texi:6735
msgid "File archives are single files which contain a collection of files, the most common ones being `tarballs' and zip files as used to distribute @R{} packages.  @R{} can list and unpack both (see functions @code{untar} and @code{unzip}) and create both (for @command{zip} with the help of an external program)."
msgstr "파일 아카이브란 파일들을 수집한 단일의 파일로, @R{} 패키지들을 배포할때 사용되듯이, 'tarballs' 과 zip 파일들이 가장 일반적으로 사용됩니다. @R{} 은 이 두 가지 파일형태를 등재할수도 풀수도 있습니다 (@code{untar} 와 @code{unzip} 함수 참조), 그리고 두 가지 형태를 모두 생산할수도 있습니다 (@command{zip} 같은 경우 외부 프로그램의 도움이 있어야 합니다). "

#. type: Plain text
#: R-intro.texi:6745
msgid "The following session is intended to introduce to you some features of the @R{} environment by using them.  Many features of the system will be unfamiliar and puzzling at first, but this puzzlement will soon disappear."
msgstr "다음 세션(session)은 @R{} 환경(environment)의 일부 기능을 처음 접하는 사용자에게 소개할 목적으로 준비되었습니다. 처음에는 시스템의 많은 기능들이 익숙하지 않고 혼란스러울 수 있으나, 이러한 불편함을 곧 사라지게 될 것입니다."

#. type: item
#: R-intro.texi:6747
#, no-wrap
msgid "Start @R{} appropriately for your platform (@pxref{Invoking R})."
msgstr "사용자의 플랫폼에 맞추어 @R{}을 올바르게 실행하도록 합니다 (@pxref{Invoking R (R을 실행하기)}) "

#. type: table
#: R-intro.texi:6750
msgid "The @R{} program begins, with a banner."
msgstr "@R{} 프로그램이 배너와 함께 시작됩니다."

#. type: table
#: R-intro.texi:6753
msgid "(Within @R{} code, the prompt on the left hand side will not be shown to avoid confusion.)"
msgstr "(혼돈을 피하기 위해서 @R{} 코드를 표시할 때 왼쪽에 있는 프롬프트는 표시하지 않습니다.)"

#. type: item
#: R-intro.texi:6754
#, no-wrap
msgid "help.start()"
msgstr ""

#. type: table
#: R-intro.texi:6758
msgid "Start the @HTML{} interface to on-line help (using a web browser available at your machine).  You should briefly explore the features of this facility with the mouse."
msgstr "사용자의 기계에서 이용이 가능한 인터넷 브라우저를 이용하여 @HTML{} 인터페이스를 가진 온라인 도움말을 시작합니다. 마우스를 이용하여 어떻게 이용하는 것인지 간단히 살펴보시길 바랍니다."

#. type: table
#: R-intro.texi:6760
msgid "Iconify the help window and move on to the next part."
msgstr "다음의 내용들을 실습하기 위하여 도움말 창을 작게 만들어 놓습니다."

#. type: item
#: R-intro.texi:6761
#, no-wrap
msgid "x <- rnorm(50)"
msgstr ""

#. type: itemx
#: R-intro.texi:6762
#, no-wrap
msgid "y <- rnorm(x)"
msgstr ""

#. type: table
#: R-intro.texi:6765
msgid "Generate two pseudo-random normal vectors of @math{x}- and @math{y}-coordinates."
msgstr "이것은 정규분포로부터 발생시킨 50개의 난수를 벡터 @math{x}와 @math{y}에 저장한 것입니다."

#. type: item
#: R-intro.texi:6766
#: R-intro.texi:6802
#, no-wrap
msgid "plot(x, y)"
msgstr ""

#. type: table
#: R-intro.texi:6768
msgid "Plot the points in the plane.  A graphics window will appear automatically."
msgstr "평면공간에 @math{x}와 @math{y}의 좌표로 이루어진 점들을 플랏해봅니다. 그패픽 창이 자동으로 나타나는 것을 볼 수 있습니다."

#. type: item
#: R-intro.texi:6769
#, no-wrap
msgid "ls()"
msgstr ""

#. type: table
#: R-intro.texi:6771
msgid "See which @R{} objects are now in the @R{} workspace."
msgstr "@R{} 작업공간(workspace)에 어떤 @R{} 객체들이 있는지 확인해봅니다."

#. type: item
#: R-intro.texi:6772
#, no-wrap
msgid "rm(x, y)"
msgstr ""

#. type: table
#: R-intro.texi:6774
msgid "Remove objects no longer needed. (Clean up)."
msgstr "더 이상 사용하지 않는 객체들을 작업공간으로부터 제거합니다."

#. type: item
#: R-intro.texi:6775
#, no-wrap
msgid "x <- 1:20"
msgstr ""

#. type: table
#: R-intro.texi:6777
msgid "Make @math{x = (1, 2, @dots{}, 20)}."
msgstr "@math{x = (1, 2, @dots{}, 20)}를 생성합니다"

#. type: item
#: R-intro.texi:6778
#, no-wrap
msgid "w <- 1 + sqrt(x)/2"
msgstr ""

#. type: table
#: R-intro.texi:6780
msgid "A `weight' vector of standard deviations."
msgstr "표준편차(standard deviation)의 가중치(weight)를 생성합니다."

#. type: item
#: R-intro.texi:6781
#, no-wrap
msgid "dummy <- data.frame(x=x, y= x + rnorm(x)*w)"
msgstr ""

#. type: itemx
#: R-intro.texi:6782
#, no-wrap
msgid "dummy"
msgstr ""

#. type: table
#: R-intro.texi:6785
msgid "Make a @emph{data frame} of two columns, @math{x} and @math{y}, and look at it."
msgstr "@math{x}와 @math{y}의 두 개의 열을 가지는 데이터프레임(@emph{data frame})을 생성하고, 이를 살펴봅니다."

#. type: item
#: R-intro.texi:6786
#, no-wrap
msgid "fm <- lm(y ~ x, data=dummy)"
msgstr ""

#. type: itemx
#: R-intro.texi:6787
#: R-intro.texi:6866
#, no-wrap
msgid "summary(fm)"
msgstr ""

#. type: table
#: R-intro.texi:6791
msgid "Fit a simple linear regression and look at the analysis.  With @code{y} to the left of the tilde, we are modelling @math{y} dependent on @math{x}."
msgstr "단순 선형회귀(simple linear regression)을 적합합니다. 틸다표시 좌측에 있는 @code{y}에 관하여, 우리는 @math{y}가 @math{x}에 의존한다는 것을 모델한 것입니다."

#. type: item
#: R-intro.texi:6792
#, no-wrap
msgid "fm1 <- lm(y ~ x, data=dummy, weight=1/w^2)"
msgstr ""

#. type: itemx
#: R-intro.texi:6793
#, no-wrap
msgid "summary(fm1)"
msgstr ""

#. type: table
#: R-intro.texi:6795
msgid "Since we know the standard deviations, we can do a weighted regression."
msgstr "우리는 표준편차를 알고 있기 때문에, 가중회귀(weighted regression)분석을 수행합니다."

#. type: item
#: R-intro.texi:6796
#, no-wrap
msgid "attach(dummy)"
msgstr ""

#. type: table
#: R-intro.texi:6798
msgid "Make the columns in the data frame visible as variables."
msgstr "데이터프레임 내에 있는 열들을 일반적인 변수와 같이 접근할 수 있도록 해주는 것입니다."

#. type: item
#: R-intro.texi:6799
#, no-wrap
msgid "lrf <- lowess(x, y)"
msgstr ""

#. type: table
#: R-intro.texi:6801
msgid "Make a nonparametric local regression function."
msgstr "비모수 국지회귀함수(nonparametric local regression)를 수행합니다."

#. type: table
#: R-intro.texi:6804
msgid "Standard point plot."
msgstr "일반적인 방법으로 @math{x}와 @math{y}를 플랏해 봅니다."

#. type: item
#: R-intro.texi:6805
#, no-wrap
msgid "lines(x, lrf$y)"
msgstr ""

#. type: table
#: R-intro.texi:6807
msgid "Add in the local regression."
msgstr "그래프에 회귀분석으로부터 나온 결과를 이용하여 회귀선을 추가합니다."

#. type: item
#: R-intro.texi:6808
#, no-wrap
msgid "abline(0, 1, lty=3)"
msgstr ""

#. type: table
#: R-intro.texi:6810
msgid "The true regression line: (intercept 0, slope 1)."
msgstr "그래픽에 기울기가 1이고 절편이 0인 회귀선을 표시합니다."

#. type: item
#: R-intro.texi:6811
#, no-wrap
msgid "abline(coef(fm))"
msgstr ""

#. type: table
#: R-intro.texi:6813
msgid "Unweighted regression line."
msgstr "가중치없이 수행한 회귀모형(unweighted regression)으로부터 얻은 회귀계수들을 이용하여 회귀선을 표시합니다."

#. type: item
#: R-intro.texi:6814
#, no-wrap
msgid "abline(coef(fm1), col = \"red\")"
msgstr ""

#. type: table
#: R-intro.texi:6816
msgid "Weighted regression line."
msgstr ""

#. type: item
#: R-intro.texi:6817
#: R-intro.texi:6874
#, no-wrap
msgid "detach()"
msgstr ""

#. type: table
#: R-intro.texi:6819
msgid "Remove data frame from the search path."
msgstr "탐색경로(search path)로부터 데이터프레임을 제거합니다."

#. type: item
#: R-intro.texi:6820
#, no-wrap
msgid "plot(fitted(fm), resid(fm),"
msgstr ""

#. type: itemx
#: R-intro.texi:6821
#, no-wrap
msgid "@w{@ @ @ @ @ xlab=\"Fitted values\"},"
msgstr ""

#. type: itemx
#: R-intro.texi:6822
#, no-wrap
msgid "@w{@ @ @ @ @ ylab=\"Residuals\"},"
msgstr ""

#. type: w{#1}
#: R-intro.texi:6823
#, no-wrap
msgid "@ @ @ @ @ main=\"Residuals vs Fitted\")"
msgstr ""

#. type: table
#: R-intro.texi:6826
msgid "A standard regression diagnostic plot to check for heteroscedasticity.  Can you see it?"
msgstr "이분산성(heteroscedasticity)을 확인하기 위해서 표준회귀 진단플랏(standard regression diagnostic plot)을 그립니다. 이를 볼 수 있나요?"

#. type: item
#: R-intro.texi:6827
#, no-wrap
msgid "qqnorm(resid(fm), main=\"Residuals Rankit Plot\")"
msgstr ""

#. type: table
#: R-intro.texi:6830
msgid "A normal scores plot to check for skewness, kurtosis and outliers.  (Not very useful here.)"
msgstr "비대칭도(skewness), 첨도(kurtosis), 그리고 이상치(outliers)를 찾기 위해서 정규스코어플랏(normal score plot)을 이용해 봅니다. (실제로는 이 문제에 대해서 별로 유용하지 않습니다)."

#. type: item
#: R-intro.texi:6831
#, no-wrap
msgid "rm(fm, fm1, lrf, x, dummy)"
msgstr ""

#. type: table
#: R-intro.texi:6833
#: R-intro.texi:6961
msgid "Clean up again."
msgstr ""

#. type: Plain text
#: R-intro.texi:6839
msgid "The next section will look at data from the classical experiment of Michelson to measure the speed of light.  This dataset is available in the @code{morley} object, but we will read it to illustrate the @code{read.table} function."
msgstr "다음 섹션에서는 Michelson이 빛의 속도를 측정하기 위해서 사용했던 실험으로부터 모은 데이터를 이용해 보도록 하겠습니다. 이 데이터셋은 @code{morley}라고 객체명을 입력하면 이용이 가능하지만, 여기에서는 @code{read.table} 함수의 사용법을 알아보기 위해서 직접 데이터를 불러보도록 하겠습니다."

#. type: item
#: R-intro.texi:6841
#, no-wrap
msgid "filepath <- system.file(\"data\", \"morley.tab\" , package=\"datasets\")"
msgstr ""

#. type: itemx
#: R-intro.texi:6842
#, no-wrap
msgid "filepath"
msgstr ""

#. type: table
#: R-intro.texi:6844
msgid "Get the path to the data file."
msgstr "시스템내에 데이터 파일이 존재하는 위치에 대한 파일경로를 얻습니다."

#. type: item
#: R-intro.texi:6845
#, no-wrap
msgid "file.show(filepath)"
msgstr ""

#. type: table
#: R-intro.texi:6847
msgid "Optional.  Look at the file."
msgstr "꼭 해보지 않아도 되지만, 파일의 내용을 살펴봅니다."

#. type: item
#: R-intro.texi:6848
#, no-wrap
msgid "mm <- read.table(filepath)"
msgstr ""

#. type: itemx
#: R-intro.texi:6849
#, no-wrap
msgid "mm"
msgstr ""

#. type: table
#: R-intro.texi:6854
msgid "Read in the Michelson data as a data frame, and look at it.  There are five experiments (column @code{Expt}) and each has 20 runs (column @code{Run}) and @code{sl} is the recorded speed of light, suitably coded."
msgstr "Michelson 데이터를 데이터프레임의 형식으로 읽어들인 뒤, 이를 확인해 보도록 합니다. 이 데이터셋은 @code{Expt} 변수에 5가지 종류의 실험정보를 저장했고, @code{Run} 변수에 종류별로 각각 20번씩 실험되었다는 정보를 가지고 있음을 보여줍니다. 그리고 @code{sl} 변수에 각 조건별 빛의 속도가 입력되어 있음을 알 수 있습니다."

#. type: item
#: R-intro.texi:6855
#, no-wrap
msgid "mm$Expt <- factor(mm$Expt)"
msgstr ""

#. type: itemx
#: R-intro.texi:6856
#, no-wrap
msgid "mm$Run <- factor(mm$Run)"
msgstr ""

#. type: table
#: R-intro.texi:6858
msgid "Change @code{Expt} and @code{Run} into factors."
msgstr "@code{Expt}와 @code{Run} 변수들에 대한 데이터형을 요인(factor)로 변경합니다."

#. type: item
#: R-intro.texi:6859
#, no-wrap
msgid "attach(mm)"
msgstr ""

#. type: table
#: R-intro.texi:6861
msgid "Make the data frame visible at position 3 (the default)."
msgstr "데이터프레임을 포지션 3 (기본값)에서 볼 수 있도록 합니다. "

#. type: item
#: R-intro.texi:6862
#, no-wrap
msgid "plot(Expt, Speed, main=\"Speed of Light Data\", xlab=\"Experiment No.\")"
msgstr ""

#. type: table
#: R-intro.texi:6864
msgid "Compare the five experiments with simple boxplots."
msgstr "박스플랏(boxplot)을 이용하여 5가지 종류의 실험들을 서로 비교해보도록 합니다."

#. type: item
#: R-intro.texi:6865
#, no-wrap
msgid "fm <- aov(Speed ~ Run + Expt, data=mm)"
msgstr ""

#. type: table
#: R-intro.texi:6868
msgid "Analyze as a randomized block, with `runs' and `experiments' as factors."
msgstr "`runs'와 `experiments'를 요인으로 놓은 상태에서 랜덤마이즈된 블락(randomized block) 분석을 합니다."

#. type: item
#: R-intro.texi:6869
#, no-wrap
msgid "fm0 <- update(fm, . ~ . - Run)"
msgstr ""

#. type: itemx
#: R-intro.texi:6870
#, no-wrap
msgid "anova(fm0, fm)"
msgstr ""

#. type: table
#: R-intro.texi:6873
msgid "Fit the sub-model omitting `runs', and compare using a formal analysis of variance."
msgstr "`runs'를 제외한 모델 (sub-model)을 이용하여 적합한뒤, 일반적인 분산분석(analysis of variance)와 비교를 해봅니다."

#. type: itemx
#: R-intro.texi:6875
#, no-wrap
msgid "rm(fm, fm0)"
msgstr ""

#. type: table
#: R-intro.texi:6877
msgid "Clean up before moving on."
msgstr "다음 분석으로 넘어가기 전에 불필요한 객체들을 삭제합니다."

#. type: Plain text
#: R-intro.texi:6881
msgid "We now look at some more graphical features: contour and image plots."
msgstr "이제 컨투어(contour)와 이미지(image) 플랏이라는 그래픽 기능에 대해서 알아보도록 합니다."

#. type: item
#: R-intro.texi:6883
#, no-wrap
msgid "x <- seq(-pi, pi, len=50)"
msgstr ""

#. type: itemx
#: R-intro.texi:6884
#, no-wrap
msgid "y <- x"
msgstr ""

#. type: table
#: R-intro.texi:6886
msgid "@math{x} is a vector of 50 equally spaced values in"
msgstr "@math{x}는  구간 [-pi\\, pi]을 50등분한 값들을 가진 벡터입니다."

#. type: ifnottex
#: R-intro.texi:6888
msgid "the interval [-pi\\, pi]."
msgstr ""

#. type: tex
#: R-intro.texi:6892
#, no-wrap
msgid "$-\\pi\\leq x \\leq \\pi$.\n"
msgstr "구간 $-\\pi\\leq x \\leq \\pi$을 50등분한 값들을 가진 벡터입니다.\n"

#. type: table
#: R-intro.texi:6895
msgid "@math{y} is the same."
msgstr "벡터 @math{y}는 벡터 @math{x}와 동일합니다."

#. type: item
#: R-intro.texi:6896
#, no-wrap
msgid "f <- outer(x, y, function(x, y) cos(y)/(1 + x^2))"
msgstr ""

#. type: table
#: R-intro.texi:6900
msgid "@math{f} is a square matrix, with rows and columns indexed by @math{x} and @math{y} respectively, of values of the function @eqn{\\cos(y)/(1 + x^2),cos(y)/(1 + x^2)}."
msgstr "@math{f}는 @math{x}가 행이고, @math{y}가 열인 정방행렬입니다.  이 행렬의 구성요소는 @math{x}의 구성요소와 @math{y}의 구성요소를 하나의 짝을 이루도록 하여 함수 @eqn{\\cos(y)/(1 + x^2),cos(y)/(1 + x^2)}를 적용하여 얻은 값으로 얻어지게 됩니다."

#. type: item
#: R-intro.texi:6901
#, no-wrap
msgid "oldpar <- par(no.readonly = TRUE)"
msgstr ""

#. type: item
#: R-intro.texi:6902
#: R-intro.texi:6935
#, no-wrap
msgid "par(pty=\"s\")"
msgstr ""

#. type: table
#: R-intro.texi:6904
msgid "Save the plotting parameters and set the plotting region to ``square''."
msgstr "현재 저장되어 있는 플랏팅 모수 (parameters)들을 보관한 뒤, 플랏팅 영역 (plotting region)을 ``square''로 설정합니다."

#. type: item
#: R-intro.texi:6905
#, no-wrap
msgid "contour(x, y, f)"
msgstr ""

#. type: itemx
#: R-intro.texi:6906
#, no-wrap
msgid "contour(x, y, f, nlevels=15, add=TRUE)"
msgstr ""

#. type: table
#: R-intro.texi:6908
msgid "Make a contour map of @math{f}; add in more lines for more detail."
msgstr "@math{f}의 컨투어 맵(contour map)을 생성하고, 15개의 컨투어 레벨(등고선)을 보여지도록 합니다."

#. type: item
#: R-intro.texi:6909
#, no-wrap
msgid "fa <- (f-t(f))/2"
msgstr ""

#. type: table
#: R-intro.texi:6912
msgid "@code{fa} is the ``asymmetric part'' of @math{f}.  (@code{t()} is transpose)."
msgstr "@code{fa}는 @math{f}의 ``asymmetric part''(비대칭 부분)입니다 (여기에서 @code{t()}는 행렬의 전치를 의미합니다)."

#. type: item
#: R-intro.texi:6913
#, no-wrap
msgid "contour(x, y, fa, nlevels=15)"
msgstr ""

#. type: table
#: R-intro.texi:6915
msgid "Make a contour plot, @dots{}"
msgstr "컨투어 플랏을 생성합니다."

#. type: item
#: R-intro.texi:6916
#, no-wrap
msgid "par(oldpar)"
msgstr ""

#. type: table
#: R-intro.texi:6918
msgid "@dots{} and restore the old graphics parameters."
msgstr "이전에 보관한 그래픽 파라미터들을 원래대로 복구시킵니다."

#. type: item
#: R-intro.texi:6919
#, no-wrap
msgid "image(x, y, f)"
msgstr ""

#. type: itemx
#: R-intro.texi:6920
#, no-wrap
msgid "image(x, y, fa)"
msgstr ""

#. type: table
#: R-intro.texi:6923
msgid "Make some high density image plots, (of which you can get hardcopies if you wish), @dots{}"
msgstr "이미지 플랏을 생성합니다."

#. type: item
#: R-intro.texi:6924
#, no-wrap
msgid "objects(); rm(x, y, f, fa)"
msgstr ""

#. type: table
#: R-intro.texi:6926
msgid "@dots{} and clean up before moving on."
msgstr "어떤 객체들이 워크스페이스에 있는지 확인한 뒤, 다음 분석을 수행하기 전에 불필요한 객체들을 제거합니다."

#. type: Plain text
#: R-intro.texi:6929
msgid "@R{} can do complex arithmetic, also."
msgstr "@R{}에서는 복소수 연산(complex arithmetic) 또한 가능합니다."

#. type: item
#: R-intro.texi:6931
#, no-wrap
msgid "th <- seq(-pi, pi, len=100)"
msgstr ""

#. type: itemx
#: R-intro.texi:6932
#, no-wrap
msgid "z <- exp(1i*th)"
msgstr ""

#. type: table
#: R-intro.texi:6934
msgid "@code{1i} is used for the complex number @math{i}."
msgstr "@code{1i}는 복소수(complex number) @math{i}를 나타냅니다."

#. type: itemx
#: R-intro.texi:6936
#, no-wrap
msgid "plot(z, type=\"l\")"
msgstr ""

#. type: table
#: R-intro.texi:6939
msgid "Plotting complex arguments means plot imaginary versus real parts.  This should be a circle."
msgstr "허수(imaginary part)와 실수(real part)부분을 플랏합니다. 반드시 원의 모양이어야 합니다."

#. type: item
#: R-intro.texi:6940
#, no-wrap
msgid "w <- rnorm(100) + rnorm(100)*1i"
msgstr ""

#. type: table
#: R-intro.texi:6944
msgid "Suppose we want to sample points within the unit circle.  One method would be to take complex numbers with standard normal real and imaginary parts @dots{}"
msgstr "반지름이 1인 단위 원(unit circle) 안 쪽 부분으로부터 우리는 샘플링을 한다고 가정합니다. 한 가지 방법은 표준정규분포가 실수와 허수부분에 적용된 복소수를 취하는 것입니다."

#. type: item
#: R-intro.texi:6945
#, no-wrap
msgid "w <- ifelse(Mod(w) > 1, 1/w, w)"
msgstr ""

#. type: table
#: R-intro.texi:6947
msgid "@dots{} and to map any outside the circle onto their reciprocal."
msgstr "단위 원 밖에 놓여 있는 값들은 역수를 취하도록 합니다."

#. type: item
#: R-intro.texi:6948
#, no-wrap
msgid "plot(w, xlim=c(-1,1), ylim=c(-1,1), pch=\"+\",xlab=\"x\", ylab=\"y\")"
msgstr ""

#. type: itemx
#: R-intro.texi:6949
#: R-intro.texi:6955
#, no-wrap
msgid "lines(z)"
msgstr ""

#. type: table
#: R-intro.texi:6952
msgid "All points are inside the unit circle, but the distribution is not uniform."
msgstr "단위 원(unit circle)내에 모든 점들이 있음을 알 수 있지만, 이들이 균일하게 분포(uniform distribution)된 것이 아님을 알 수 있습니다. "

#. type: item
#: R-intro.texi:6953
#, no-wrap
msgid "w <- sqrt(runif(100))*exp(2*pi*runif(100)*1i)"
msgstr ""

#. type: itemx
#: R-intro.texi:6954
#, no-wrap
msgid "plot(w, xlim=c(-1,1), ylim=c(-1,1), pch=\"+\", xlab=\"x\", ylab=\"y\")"
msgstr ""

#. type: table
#: R-intro.texi:6958
msgid "The second method uses the uniform distribution.  The points should now look more evenly spaced over the disc."
msgstr "두 번째 방법으로는 균일분포(uniform distribution)를 이용하는 것입니다. 이것은 디스크에 점들이 균등하게 퍼져있는 것처럼 보여야 합니다."

#. type: item
#: R-intro.texi:6959
#, no-wrap
msgid "rm(th, w, z)"
msgstr ""

#. type: item
#: R-intro.texi:6962
#, no-wrap
msgid "q()"
msgstr ""

#. type: table
#: R-intro.texi:6966
msgid "Quit the @R{} program.  You will be asked if you want to save the @R{} workspace, and for an exploratory session like this, you probably do not want to save it."
msgstr "@R{} 프로그램을 종료합니다. 이때,  @R{} 작업공간(workspace)를 저장하고 싶은지에 대해서 물어보게 될 것입니다. 기초사용법에 대한 설명을 목적으로 한 세션이므로 꼭 저장하고 싶지는 않을 것입니다."

#. type: Plain text
#: R-intro.texi:6973
msgid "Users of @R{} on Windows or OS X should read the OS-specific section first, but command-line use is also supported."
msgstr "Windows 또는 Mac OS X에서 @R{}을 이용하는 사용자들은 특정 운영체제에 관한 설명이 되어 있는 섹션을 먼저 읽어보시길 바랍니다.  그러나, 명령어를 이용한 사용 또한 지원되고 있습니다. "

#. type: node
#: R-intro.texi:6979
#: R-intro.texi:6981
#: R-intro.texi:6982
#: R-intro.texi:7322
#, no-wrap
msgid "Invoking R from the command line"
msgstr ""

#. type: node
#: R-intro.texi:6979
#: R-intro.texi:6981
#: R-intro.texi:7322
#: R-intro.texi:7323
#: R-intro.texi:7392
#, no-wrap
msgid "Invoking R under Windows"
msgstr ""

#. type: node
#: R-intro.texi:6979
#: R-intro.texi:7322
#: R-intro.texi:7392
#: R-intro.texi:7393
#: R-intro.texi:7408
#, no-wrap
msgid "Invoking R under OS X"
msgstr ""

#. type: appendixsec
#: R-intro.texi:6979
#: R-intro.texi:7392
#: R-intro.texi:7408
#: R-intro.texi:7409
#, no-wrap
msgid "Scripting with R"
msgstr ""

#. type: Plain text
#: R-intro.texi:6986
msgid "When working at a command line on UNIX or Windows, the command @samp{R} can be used both for starting the main @R{} program in the form"
msgstr "UNIX 또는 Windows 환경에서 명령어를 이용하여 작업을 할때, 명령어 @samp{R}은 아래와 같은 형식으로 @R{} 프로그램을 실행하는데 사용될 수 있습니다."

#. type: display
#: R-intro.texi:6989
#, no-wrap
msgid "@code{R} [@var{options}] [@code{<}@var{infile}] [@code{>}@var{outfile}],\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:6995
msgid "or, via the @code{R CMD} interface, as a wrapper to various @R{} tools (e.g., for processing files in @R{} documentation format or manipulating add-on packages) which are not intended to be called ``directly''."
msgstr "또한, @code{R CMD}라는 인터페이스를 통하여 다양한 @R{} 도구들 (즉, @R{}의 문서형식으로 되어 있는 파일들을 프로세싱하거나 애드온 패키지들을 조작하는데 사용하기 위한 것들)을 직접 호출하지 않고도 사용할 수 있습니다."

#. type: Plain text
#: R-intro.texi:6998
msgid "At the Windows command-line, @command{Rterm.exe} is preferred to @command{R}."
msgstr "Windows 커맨드 라인에서는 @command{R}보다는 @command{Rterm.exe}를 이용하는 것을 선호합니다."

#. type: Plain text
#: R-intro.texi:7002
msgid "You need to ensure that either the environment variable @env{TMPDIR} is unset or it points to a valid place to create temporary files and directories."
msgstr "환경 변수(environment variable) @env{TMPDIR}이 지정되지 않았거나, 임시 파일과 디렉토리 생성을 하는데 이용되는 공간을 올바르게 지정했는가에 대해서 확인하는 것이 필요합니다."

#. type: Plain text
#: R-intro.texi:7007
msgid "Most options control what happens at the beginning and at the end of an @R{} session.  The startup mechanism is as follows (see also the on-line help for topic @samp{Startup} for more information, and the section below for some Windows-specific details)."
msgstr "대부분의 옵션들은 @R{} 세션의 시작과 끝에서 어떤 것들을 해야하는가를 조절하게 됩니다. 스타트업 메카니즘 (startup mechanism)은 다음과 같습니다 (더 많은 정보를 @samp{Startup}이라는 주제와 관련한 온라인 도움말에서 찾아볼 수 있으며, 일부 Windows와 관련된 내용들은 아래의 섹션에서 찾아볼 수 있습니다)."

#. type: itemize
#: R-intro.texi:7023
msgid "Unless @option{--no-environ} was given, @R{} searches for user and site files to process for setting environment variables.  The name of the site file is the one pointed to by the environment variable @env{R_ENVIRON}; if this is unset, @file{@var{R_HOME}/etc/Renviron.site} is used (if it exists).  The user file is the one pointed to by the environment variable @env{R_ENVIRON_USER} if this is set; otherwise, files @file{.Renviron} in the current or in the user's home directory (in that order) are searched for.  These files should contain lines of the form @samp{@var{name}=@var{value}}.  (See @code{help(\"Startup\")} for a precise description.)  Variables you might want to set include @env{R_PAPERSIZE} (the default paper size), @env{R_PRINTCMD} (the default print command) and @env{R_LIBS} (specifies the list of @R{} library trees searched for add-on packages)."
msgstr "@option{--no-environ}이라는 옵션이 주어지지 않는다면, @R{}은 환경변수들을 설정하기 위한 작업을 진행하기 위해서 사용자와 사이트 파일들(user and site files)을 찾습니다.  사이트 파일의 이름은 환경변수 @env{R_ENVIRON}에 의해 지정됩니다. 만약, 이것이 설정되어 있지 않다면, @file{@var{R_HOME}/etc/Renviron.site}이 이용됩니다 (만약 존재할 경우에 한합니다).사용자 파일은 @env{R_ENVIRON_USER}라는 환경변수가 설정되어 있다면 이 파일에 의해서 지정됩니다. 그렇지 않다면 현재 또는 사용자의 홈디렉토리내에 있는 @file{.Renviron}이라는 파일을 찾습니다.  이러한 파일들은 @samp{@var{name}=@var{value}}이라는 형식을 가진 라인들을 포함해야 합니다. (구체적인 이해를 위해서 @code{help(\"Startup\")}을 살펴보시길 바랍니다) 설정하고 싶은 변수들은 아마도 기본 페이퍼의 크기를 정하는 @env{R_PAPERSIZE}, 기본 프린터 명령을 정해주는 @env{R_PRINTCMD}, 그리고 애드온 패키지들을 찾는데 사용된 @R{} 라이브러리 트리(library tree)들의 목록을 지정하는 @env{R_LIBS}가 있습니다. "

#. type: itemize
#: R-intro.texi:7030
msgid "Then @R{} searches for the site-wide startup profile unless the command line option @option{--no-site-file} was given.  The name of this file is taken from the value of the @env{R_PROFILE} environment variable.  If that variable is unset, the default @file{@var{R_HOME}/etc/Rprofile.site} is used if this exists."
msgstr "명령어 옵션 @option{--no-site-file}이 주어지지 않았다면, @R{}은 사이트-와이드 스타트업 프로파일(site-wide startup profile)을 찾습니다. 이 파일의 이름은 @env{R_PROFILE} 환경 변수의 값으로부터 얻을 수 있습니다. 만약 이 변수가 지정되지 않았다면 기본적으로 @file{@var{R_HOME}/etc/Rprofile.site}이 이용됩니다 (만약 존재한다면)."

#. type: itemize
#: R-intro.texi:7037
msgid "Then, unless @option{--no-init-file} was given, @R{} searches for a user profile and sources it.  The name of this file is taken from the environment variable @env{R_PROFILE_USER}; if unset, a file called @file{.Rprofile} in the current directory or in the user's home directory (in that order) is searched for."
msgstr "만약 @option{--no-init-file}이 주어지지 않았다면 @R{}은 사용자 프로파일(user profile)을 탐색 후 이를 읽어들이게 됩니다. 이 파일의 이름은 환경변수 @env{R_PROFILE_USER}로 부터 얻을 수 있습니다. 이것이 설정되지 않았다면, 현재 디렉토리에 있거나 사용자의 홈 디렉토리에 있는 @file{.Rprofile} 파일을 찾을 것입니다. "

#. type: itemize
#: R-intro.texi:7042
msgid "It also loads a saved workspace from file @file{.RData} in the current directory if there is one (unless @option{--no-restore} or @option{--no-restore-data} was specified)."
msgstr "또한, (@option{--no-restore} 또는 @option{--no-restore-data} 옵션이 지정되지 않았다면) 현재의 디렉토리에 @file{.RData} 파일로부터 저장된 작업공간을 불러올 수 있습니다. "

#. type: itemize
#: R-intro.texi:7048
msgid "Finally, if a function @code{.First()} exists, it is executed.  This function (as well as @code{.Last()} which is executed at the end of the @R{} session) can be defined in the appropriate startup profiles, or reside in @file{.RData}."
msgstr "마지막으로 @code{.First()} 함수가 존재한다면, 이것은 실행될 것입니다. (@R{} 세션의 끝부분에서 실행된 @code{.Last()}함수와 같이) 이 함수는 적절한 스타트업 프로파일들 내에 정의될 수 있습니다.  또는 @file{.RData}에 위치할 수도 있습니다. "

#. type: Plain text
#: R-intro.texi:7054
msgid "In addition, there are options for controlling the memory available to the @R{} process (see the on-line help for topic @samp{Memory} for more information).  Users will not normally need to use these unless they are trying to limit the amount of memory used by @R{}."
msgstr "추가적으로 @R{} 처리과정에 이용되는 메모리를 조절하는 옵션들이 있습니다. (더 많은 정보를 원하신다면 @samp{Memory}와 관련된 온라인 도움말을 살펴보시길 바랍니다). @R{}에 의하여 사용되는 메모리를 크기를 조절하고자 하지 않는다면 사용자는 이들을 사용해야 할 필요는 없습니다. "

#. type: Plain text
#: R-intro.texi:7056
msgid "@R{} accepts the following command-line options."
msgstr "@R{}은 다음과 같은 명령어 옵션들을 제공합니다."

#. type: item
#: R-intro.texi:7058
#, no-wrap
msgid "--help"
msgstr ""

#. type: itemx
#: R-intro.texi:7059
#, no-wrap
msgid "-h"
msgstr ""

#. type: table
#: R-intro.texi:7061
msgid "Print short help message to standard output and exit successfully."
msgstr "표준 출력(standard output)으로 짧은 도움말 메시지를 보여주고 종료합니다. "

#. type: item
#: R-intro.texi:7062
#, no-wrap
msgid "--version"
msgstr ""

#. type: table
#: R-intro.texi:7064
msgid "Print version information to standard output and exit successfully."
msgstr "표준 출력(standard output)으로 버전정보를 표시해주고 종료합니다."

#. type: item
#: R-intro.texi:7065
#, no-wrap
msgid "--encoding=@var{enc}"
msgstr ""

#. type: table
#: R-intro.texi:7073
msgid "Specify the encoding to be assumed for input from the console or @code{stdin}.  This needs to be an encoding known to @code{iconv}: see its help page.  (@code{--encoding @var{enc}} is also accepted.)  The input is re-encoded to the locale @R{} is running in and needs to be representable in the latter's encoding (so e.g.@ you cannot re-encode Greek text in a French locale unless that locale uses the UTF-8 encoding)."
msgstr "@code{stdin} 또는 콘솔로부터의 입력에 사용될 인코딩(encoding)을 지정합니다. 이것은 @code{iconv}에서 사용될 수 있는 알려진 인코딩이어야 합니다. 도움말 페이지를 참고하시길 바랍니다. (@code{--encoding @var{enc}}) 또한 사용될 수 있습니다. "

#. type: item
#: R-intro.texi:7074
#, no-wrap
msgid "RHOME"
msgstr ""

#. type: table
#: R-intro.texi:7079
msgid "Print the path to the @R{} ``home directory'' to standard output and exit successfully.  Apart from the front-end shell script and the man page, @R{} installation puts everything (executables, packages, etc.)  into this directory."
msgstr "표준출력에 @R{} ``home directory'' (홈디렉토리)의 경로를 보여주고 종료합니다.  사용자가 직접 작성하는 쉘 스크립트(shell script)와 도움말 페이지(man page)를 제외하고 실행이 가능한 파일들, 패키지 등 모두가 @R{}이 설치되어 집니다. "

#. type: item
#: R-intro.texi:7080
#, no-wrap
msgid "--save"
msgstr ""

#. type: itemx
#: R-intro.texi:7081
#, no-wrap
msgid "--no-save"
msgstr ""

#. type: table
#: R-intro.texi:7087
msgid "Control whether data sets should be saved or not at the end of the @R{} session.  If neither is given in an interactive session, the user is asked for the desired behavior when ending the session with @kbd{q()}; in non-interactive use one of these must be specified or implied by some other option (see below)."
msgstr "@R{}세션을 종료할때 데이터 셋들을 저장할 것인지에 대한 여부를 조절합니다. "

#. type: item
#: R-intro.texi:7088
#, no-wrap
msgid "--no-environ"
msgstr ""

#. type: table
#: R-intro.texi:7090
msgid "Do not read any user file to set environment variables."
msgstr "환경변수를 설정하기 위한 어떠한 유저파일(user file)을 읽어들이지 않습니다."

#. type: item
#: R-intro.texi:7091
#, no-wrap
msgid "--no-site-file"
msgstr ""

#. type: table
#: R-intro.texi:7093
msgid "Do not read the site-wide profile at startup."
msgstr "스타트업(startup)에서 사이트-와이드 프로파일 (site-wide profile)을 읽어들이지 않습니다."

#. type: item
#: R-intro.texi:7094
#, no-wrap
msgid "--no-init-file"
msgstr ""

#. type: table
#: R-intro.texi:7096
msgid "Do not read the user's profile at startup."
msgstr "스타트업(startup)에서 사용자의 프로파일을 읽어들이지 않습니다. "

#. type: item
#: R-intro.texi:7097
#, no-wrap
msgid "--restore"
msgstr ""

#. type: itemx
#: R-intro.texi:7098
#, no-wrap
msgid "--no-restore"
msgstr ""

#. type: itemx
#: R-intro.texi:7099
#, no-wrap
msgid "--no-restore-data"
msgstr ""

#. type: table
#: R-intro.texi:7104
msgid "Control whether saved images (file @file{.RData} in the directory where @R{} was started) should be restored at startup or not.  The default is to restore. (@option{--no-restore} implies all the specific @option{--no-restore-*} options.)"
msgstr "스타트업(startup)할때 @R{}이 시작된 디렉토리내에서 @file{.RData}의 형식으로 저장되어진 이미지들 복구할 것인지를 조절합니다. 기본값은 복구하는 것입니다. (@option{--no-restore}는 좀 더 세부적인 @option{--no-restore-*}과 같은 옵션들 모두를 의미합니다)"

#. type: item
#: R-intro.texi:7105
#, no-wrap
msgid "--no-restore-history"
msgstr ""

#. type: table
#: R-intro.texi:7110
msgid "Control whether the history file (normally file @file{.Rhistory} in the directory where @R{} was started, but can be set by the environment variable @env{R_HISTFILE}) should be restored at startup or not.  The default is to restore."
msgstr "@R{}이 시작된 디렉토리내에 일반적으로 @file{.Rhistory}로 되어 있는 작업기록파일 (history file)을 스타트업 (startup)할때 복구할 것인지를 조절합니다. 이 파일은 환경변수 @env{R_HISTFILE}에 의해서 지정될 수도 있습니다. 기본값은 복구하는 것입니다. "

#. type: item
#: R-intro.texi:7111
#, no-wrap
msgid "--no-Rconsole"
msgstr ""

#. type: table
#: R-intro.texi:7113
msgid "(Windows only) Prevent loading the @file{Rconsole} file at startup."
msgstr "(Windows에만 적용되는 옵션입니다). 이는 스타트업시에 @file{Rconsole} 파일을 로딩하지 못하게 합니다."

#. type: item
#: R-intro.texi:7114
#, no-wrap
msgid "--vanilla"
msgstr ""

#. type: table
#: R-intro.texi:7119
msgid "Combine @option{--no-save}, @option{--no-environ}, @option{--no-site-file}, @option{--no-init-file} and @option{--no-restore}.  Under Windows, this also includes @option{--no-Rconsole}."
msgstr "@option{--no-save}, @option{--no-environ}, @option{--no-site-file}, @option{--no-init-file}, @option{--no-restore}를 모두 한데 묶은 것입니다. Windows상에서는 이 옵션은 또한 @option{--no-Rconsole}을 포함합니다."

#. type: item
#: R-intro.texi:7120
#, no-wrap
msgid "-f @var{file}"
msgstr ""

#. type: itemx
#: R-intro.texi:7121
#, no-wrap
msgid "--file=@var{file}"
msgstr ""

#. type: table
#: R-intro.texi:7126
msgid "(not @command{Rgui.exe}) Take input from @var{file}: @samp{-} means @code{stdin}.  Implies @option{--no-save} unless @option{--save} has been set.  On a Unix-alike, shell metacharacters should be avoided in @var{file} (but spaces are allowed)."
msgstr "(@command{Rgui.exe}에 적용되지 않습니다). @var{file}로부터 입력을 가져옵니다: @samp{-}은 @code{stdin}을 의미합니다. @option{--save}가 지정되지 않았다면 @option{--no-save}를 의미하게 됩니다. Unix와 같은 환경에서는 쉡 메타문자(shell metacharacters)는 @var{file}내에서 사용을 피해야 합니다. (그러나, @R{} 2.14.0 부터 공백(spaces)들이 허용됩니다)."

#. type: item
#: R-intro.texi:7127
#, no-wrap
msgid "-e @var{expression}"
msgstr ""

#. type: table
#: R-intro.texi:7134
msgid "(not @command{Rgui.exe}) Use @var{expression} as an input line.  One or more @option{-e} options can be used, but not together with @option{-f} or @option{--file}.  Implies @option{--no-save} unless @option{--save} has been set.  (There is a limit of 10,000 bytes on the total length of expressions used in this way.  Expressions containing spaces or shell metacharacters will need to be quoted.)"
msgstr "(@command{Rgui.exe}에서는 사용할 수 없습니다). @var{expression}을 한줄의 입력라인 (input line)으로 이용하세요.하나 또는 그 이상의 @option{-e} 옵션들이 사용될 수 있으나, @option{-f} 또는 @option{--file}과는 함께 사용할 수 없습니다. @option{--save}가 지정되어 있지 않다면 @option{--no-svae}을 의미하게 됩니다. (이러한 방식으로 expression 부분에 들어갈 수 있는 최대 길이는 10,000 바이트 입니다. 공백 또는 쉘 메타문자들을 포함하는 expressions들은 따옴표를 사용해야 할 필요가 있습니다)"

#. type: item
#: R-intro.texi:7135
#, no-wrap
msgid "--no-readline"
msgstr ""

#. type: table
#: R-intro.texi:7142
msgid "(UNIX only) Turn off command-line editing via @strong{readline}.  This is useful when running @R{} from within Emacs using the @acronym{ESS} (``Emacs Speaks Statistics'') package.  @xref{The command-line editor}, for more information.  Command-line editing is enabled for default interactive use (see @option{--interactive}).  This option also affects tilde-expansion: see the help for @code{path.expand}."
msgstr "(UNIX에서만 사용됩니다) @strong{readline}을 통해서 명령어줄(command-line)을 편집하는 것을 끕니다. 이것은 @acronym{ESS}(``Emacs Speaks Statistics'') 패키지를 이용하여 Emacs상에서 @R{}을 실행할 때 유용합니다. 더 많은 정보를 원하시면 @xref{The command-line editor (명령어라인 편집기)}를 살펴보시길 바랍니다. 명령어라인 편집은 기본적으로 대화식으로 사용합니다. (@option{--interactive}를 살펴보세요). 이 옵션은 또한 틸데확장(tilde-expansion)에 영향을 미칩니다. 이것에 대해서는 @code{path.expand}에 대한 도움말을 살펴보시길 바랍니다."

#. type: item
#: R-intro.texi:7143
#, no-wrap
msgid "--min-vsize=@var{N}"
msgstr ""

#. type: itemx
#: R-intro.texi:7144
#, no-wrap
msgid "--min-nsize=@var{N}"
msgstr ""

#. type: table
#: R-intro.texi:7150
msgid "For expert use only: set the initial trigger sizes for garbage collection of vector heap (in bytes) and @emph{cons cells} (number)  respectively.  Suffix @samp{M} specifies megabytes or millions of cells respectively.  The defaults are 6Mb and 350k respectively and can also be set by environment variables @env{R_NSIZE} and @env{R_VSIZE}."
msgstr "고급사용자들에게만 권장됩니다. 바이트단위의 벡터 힙(vector heap)과 @emph{cons cells} (numbers)에 대한 가비지 컬렉션 (garbage collection)에 대한 초기 트리거 크기 (initial trigger sizes)를 설정합니다. 접미사 @samp{M}은 메가바이트 (megabytes)또는 수백만개의 셀 (millions of cells)을 지정합니다.기본값은 6Mb 와 350k 입니다. "

#. type: item
#: R-intro.texi:7151
#, no-wrap
msgid "--max-ppsize=@var{N}"
msgstr ""

#. type: table
#: R-intro.texi:7156
msgid "Specify the maximum size of the pointer protection stack as @var{N} locations.  This defaults to 10000, but can be increased to allow large and complicated calculations to be done.  Currently the maximum value accepted is 100000."
msgstr "@var{N}위치만큼 해당하는 포인터 프로텍션 스택(pointer protection stack)의 최대 크기를 지정합니다. 기본값은 10000이지만, 대규모의 복잡한 연산을 위하여 증가될 수 있습니다. 현재의 최대값은 100000입니다."

#. type: item
#: R-intro.texi:7157
#, no-wrap
msgid "--max-mem-size=@var{N}"
msgstr ""

#. type: table
#: R-intro.texi:7165
msgid "(Windows only) Specify a limit for the amount of memory to be used both for @R{} objects and working areas.  This is set by default to the smaller of the amount of physical RAM in the machine and for 32-bit @R{}, 1.5Gb@footnote{2.5Gb on versions of Windows that support 3Gb per process and have the support enabled: see the @file{rw-FAQ} Q2.9; 3.5Gb on most 64-bit versions of Windows.}, and must be between 32Mb and the maximum allowed on that version of Windows."
msgstr "(Windows에만 해당합니다) @R{}객체들과 작업영역을 위해 사용되는 메모리의 양의 한계를 지정합니다. 기본적으로 이는 @R{} 32-비트를 기준으로 물리적인 RAM의 크기보다 작은 1.5Gb@footnote{프로세스당 3Gb를 지원하는 Windows에서는 2.5Gb이며, 이는 @file{rw-FAQ} Q2.9를 살펴보세요; 일부 64 비트의 Windows는 3.5Gb입니다}로 지정되어 있습니다.  이는 반드시 32Mb와 Windows의 해당버전에서 허용하는 최고치 사이어야 합니다. "

#. type: item
#: R-intro.texi:7166
#, no-wrap
msgid "--quiet"
msgstr ""

#. type: itemx
#: R-intro.texi:7167
#, no-wrap
msgid "--silent"
msgstr ""

#. type: itemx
#: R-intro.texi:7168
#, no-wrap
msgid "-q"
msgstr ""

#. type: table
#: R-intro.texi:7170
msgid "Do not print out the initial copyright and welcome messages."
msgstr "실행 초기에 보여지는 카피라이트(copyright)와 환영 메시지를 보여주지 않습니다."

#. type: item
#: R-intro.texi:7171
#, no-wrap
msgid "--slave"
msgstr ""

#. type: table
#: R-intro.texi:7175
msgid "Make @R{} run as quietly as possible.  This option is intended to support programs which use @R{} to compute results for them.  It implies @option{--quiet} and @option{--no-save}."
msgstr "@R{}를 가능한 조용히 실행합니다. 이 옵션은 @R{}을 이용하여 연산을 수행하는 프로그램을 지원하기 위한 목적으로 존재합니다. @option{--quiet}와 @option{--no-save}를 의미합니다."

#. type: item
#: R-intro.texi:7176
#, no-wrap
msgid "--interactive"
msgstr ""

#. type: table
#: R-intro.texi:7184
msgid "(UNIX only) Assert that @R{} really is being run interactively even if input has been redirected: use if input is from a FIFO or pipe and fed from an interactive program.  (The default is to deduce that @R{} is being run interactively if and only if @file{stdin} is connected to a terminal or @code{pty}.)  Using @option{-e}, @option{-f} or @option{--file} asserts non-interactive use even if @option{--interactive} is given."
msgstr "(UNIX에서만 사용가능합니다) 입력의 방향이 설정되어 있을지라도 @R{}이 대화식으로 사용되도록 하게 합니다. (기본적으로 @file{stdin}이 터미널(terminal) 또는 @code{pty}에 연결되어 있을 때 @R{}은 대화식으로 실행되도록 되어 있습니다). 만약 @option{--interactive}이 주어져 있을지라도, @option{-e}, @option{-f}, 또는  @option{--file}은 비대화식 모드로 사용하게 됩니다."

#. type: table
#: R-intro.texi:7186
msgid "Note that this does not turn on command-line editing."
msgstr ""

#. type: item
#: R-intro.texi:7187
#, no-wrap
msgid "--ess"
msgstr ""

#. type: table
#: R-intro.texi:7191
msgid "(Windows only) Set @code{Rterm} up for use by @code{R-inferior-mode} in @acronym{ESS}, including asserting interactive use (without the command-line editor) and no buffering of @file{stdout}."
msgstr "(Windows만 가능합니다) 명령어를 이용한 에디터 사용없이 대화식으로 사용할 수 있는 기능을 포함하여 @acronym{ESS} 내에서 @code{R-inferior-mode}에 의해서 사용할 수 있도록 @code{Rterm}을 지정합니다. "

#. type: item
#: R-intro.texi:7192
#, no-wrap
msgid "--verbose"
msgstr ""

#. type: table
#: R-intro.texi:7196
msgid "Print more information about progress, and in particular set @R{}'s option @code{verbose} to @code{TRUE}.  @R{} code uses this option to control the printing of diagnostic messages."
msgstr "진행과정에 대한 정보를 출력하고, 특히 @R{}의 옵션 @code{verbose}를 @code{TRUE}로 지정합니다. @R{} 코드는 이 옵션을 이용하여 진단 메시지 (diagnostic message)의 출력을 조정하게 됩니다. "

#. type: item
#: R-intro.texi:7197
#, no-wrap
msgid "--debugger=@var{name}"
msgstr ""

#. type: itemx
#: R-intro.texi:7198
#, no-wrap
msgid "-d @var{name}"
msgstr ""

#. type: table
#: R-intro.texi:7204
msgid "(UNIX only) Run @R{} through debugger @var{name}.  For most debuggers (the exceptions are @command{valgrind} and recent versions of @command{gdb}), further command line options are disregarded, and should instead be given when starting the @R{} executable from inside the debugger."
msgstr "(UNIX에서만 이용이 가능합니다). @var{name}이라는 이름의 디버거(debugger)를 통해 @R{}을 실행합니다. @command{valgrind}와 최신버전의 @command{gdb}를 제외한 대부분의 디버거들에서, 추가적인 명령어 라인 옵션 (command line options)들이 무시되는 대신에 @R{}이 실행될 때 디버거 내에서 실행이 가능합니다. "

#. type: item
#: R-intro.texi:7205
#, no-wrap
msgid "--gui=@var{type}"
msgstr ""

#. type: itemx
#: R-intro.texi:7206
#, no-wrap
msgid "-g @var{type}"
msgstr ""

#. type: table
#: R-intro.texi:7212
msgid "(UNIX only) Use @var{type} as graphical user interface (note that this also includes interactive graphics).  Currently, possible values for @var{type} are @samp{X11} (the default) and, provided that @samp{Tcl/Tk} support is available, @samp{Tk}. (For back-compatibility, @samp{x11} and @samp{tk} are accepted.)"
msgstr "(UNIX에서만 이용가능합니다) 그래픽 사용자 환경으로서 @var{type}을 이용합니다 (이것은 대화식 기능의 그래픽 또한 포함합니다). 현재 @var{type}에서 사용가능한 값들은 기본적으로 @samp{X11}이며, @samp{Tcl/Tk}가 지원된다는 가정하에 @samp{Tk}입니다. (back-compatibility를 위해서 @samp{x11}과 @samp{tk}도 사용될 수 있습니다)."

#. type: item
#: R-intro.texi:7213
#, no-wrap
msgid "--arch=@var{name}"
msgstr ""

#. type: table
#: R-intro.texi:7215
msgid "(UNIX only) Run the specified sub-architecture."
msgstr ""

#. type: item
#: R-intro.texi:7216
#, no-wrap
msgid "--args"
msgstr ""

#. type: table
#: R-intro.texi:7220
msgid "This flag does nothing except cause the rest of the command line to be skipped: this can be useful to retrieve values from it with @code{commandArgs(TRUE)}."
msgstr "이 플래그(flag)는 커맨드라인의 남은 부분을 건너뛰도록 유도하는 것을 제외하면 다른 기능은 없습니다.  @code{commandArgs(TRUE)}와 함께 값을 검색 또는 다시 불러오는데 유용합니다. "

#. type: Plain text
#: R-intro.texi:7226
msgid "Note that input and output can be redirected in the usual way (using @samp{<} and @samp{>}), but the line length limit of 4095 bytes still applies.  Warning and error messages are sent to the error channel (@code{stderr})."
msgstr "@samp{<}와 @samp{>}를 이용하여 일반적인 방법으로 입력과 출력의 방향을 조절할 수 있으나, 라인의 길인에 대한 4095 바이트의 제한은 여전히 적용되게 됩니다.  경고와 에러메시들이 에러 채널인 @code{stderr}로 보내어지게 됩니다. "

#. type: Plain text
#: R-intro.texi:7230
msgid "The command @code{R CMD} allows the invocation of various tools which are useful in conjunction with @R{}, but not intended to be called ``directly''.  The general form is"
msgstr "명령어 @code{R CMD}는 @R{}과 함께 사용될 수 있는 유용한 도구들을 실행시키도록 해줍니다. 그러나 이것은 직접적으로 실행시키기 보다는 다음과 같은 일반적인 형식을 가집니다. "

#. type: example
#: R-intro.texi:7233
#, no-wrap
msgid "R CMD @var{command} @var{args}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7238
msgid "where @var{command} is the name of the tool and @var{args} the arguments passed on to it."
msgstr "여기에서 @var{command}는 도구의 이름이고 @var{args}는 그 도구에 넘겨지게 될 입력인자들을 의미합니다."

#. type: Plain text
#: R-intro.texi:7240
msgid "Currently, the following tools are available."
msgstr "현재, 다음과 같은 도구들을 사용할 수 있습니다. "

#. type: item
#: R-intro.texi:7242
#, no-wrap
msgid "BATCH"
msgstr ""

#. type: table
#: R-intro.texi:7245
msgid "Run @R{} in batch mode.  Runs @command{R --restore --save} with possibly further options (see @code{?BATCH})."
msgstr "@R{}을 배치모드(batch mode)에서 실행시킵니다. @command{R --restore --save}와 추가적인 옵션들을 이용할 수 있습니다. (@code{?BATCH}를 참조하기 바랍니다)."

#. type: item
#: R-intro.texi:7245
#, no-wrap
msgid "COMPILE"
msgstr ""

#. type: table
#: R-intro.texi:7247
msgid "(UNIX only) Compile C, C++, Fortran @dots{} files for use with @R{}."
msgstr "(UNIX에서만 사용할 수 있습니다) @R{}과 함께 사용할 수 있는 C, C++, Fortran @dots{} 파일들을 컴파일합니다. "

#. type: item
#: R-intro.texi:7247
#, no-wrap
msgid "SHLIB"
msgstr ""

#. type: table
#: R-intro.texi:7249
msgid "Build shared library for dynamic loading."
msgstr "다이나믹 로딩을 위하여 공유된 라이브러리 (shared library)를 빌드(build)합니다."

#. type: item
#: R-intro.texi:7249
#, no-wrap
msgid "INSTALL"
msgstr ""

#. type: table
#: R-intro.texi:7251
msgid "Install add-on packages."
msgstr "애드온(add-on) 패키지들을 설치합니다."

#. type: item
#: R-intro.texi:7251
#, no-wrap
msgid "REMOVE"
msgstr ""

#. type: table
#: R-intro.texi:7253
msgid "Remove add-on packages."
msgstr "애드온(add-on) 패키지들을 제거합니다."

#. type: item
#: R-intro.texi:7253
#, no-wrap
msgid "build"
msgstr ""

#. type: table
#: R-intro.texi:7255
msgid "Build (that is, package) add-on packages."
msgstr "애드온(add-on) 패키지들을 빌드(build)합니다."

#. type: item
#: R-intro.texi:7255
#, no-wrap
msgid "check"
msgstr ""

#. type: table
#: R-intro.texi:7257
msgid "Check add-on packages."
msgstr "애드온(add-on) 패키지들을 체크(check)합니다."

#. type: item
#: R-intro.texi:7257
#, no-wrap
msgid "LINK"
msgstr ""

#. type: table
#: R-intro.texi:7259
msgid "(UNIX only) Front-end for creating executable programs."
msgstr "(UNIX에서만 사용가능합니다) 실행가능한 프로그램을 생성하기 위하여 전처리 (front-end)입니다. "

#. type: item
#: R-intro.texi:7259
#, no-wrap
msgid "Rprof"
msgstr ""

#. type: table
#: R-intro.texi:7261
msgid "Post-process @R{} profiling files."
msgstr ""

#. type: item
#: R-intro.texi:7261
#, no-wrap
msgid "Rdconv"
msgstr ""

#. type: itemx
#: R-intro.texi:7262
#, no-wrap
msgid "Rd2txt"
msgstr ""

#. type: table
#: R-intro.texi:7266
msgid "Convert Rd format to various other formats, including @HTML{}, @LaTeX{}, plain text, and extracting the examples.  @code{Rd2txt} can be used as shorthand for @code{Rd2conv -t txt}."
msgstr "Rd 포맷을 @HTML{}, LaTex, 일반 텍스트, 그리고 예제들을 추출하는 등 다양한 포맷으로 전환합니다. @code{Rd2txt}는 @code{Rd2conv -t txt}의 약식 표기입니다."

#. type: item
#: R-intro.texi:7266
#, no-wrap
msgid "Rd2pdf"
msgstr ""

#. type: table
#: R-intro.texi:7268
msgid "Convert Rd format to PDF."
msgstr "Rd 포맷을 PDF로 전환합니다."

#. type: item
#: R-intro.texi:7268
#, no-wrap
msgid "Stangle"
msgstr ""

#. type: table
#: R-intro.texi:7270
msgid "Extract S/R code from Sweave or other vignette documentation"
msgstr "Sweave 문서로부터 S/R 코드를 추출합니다."

#. type: item
#: R-intro.texi:7270
#, no-wrap
msgid "Sweave"
msgstr ""

#. type: table
#: R-intro.texi:7272
msgid "Process Sweave or other vignette documentation"
msgstr "Sweave 문서를 프로세스 합니다."

#. type: item
#: R-intro.texi:7272
#, no-wrap
msgid "Rdiff"
msgstr ""

#. type: table
#: R-intro.texi:7274
msgid "Diff @R{} output ignoring headers etc"
msgstr ""

#. type: item
#: R-intro.texi:7274
#, no-wrap
msgid "config"
msgstr ""

#. type: table
#: R-intro.texi:7276
msgid "Obtain configuration information"
msgstr "환경설정에 대한 정보 (configuration information)을 가져옵니다."

#. type: item
#: R-intro.texi:7276
#, no-wrap
msgid "javareconf"
msgstr ""

#. type: table
#: R-intro.texi:7278
msgid "(Unix only) Update the Java configuration variables"
msgstr "(UNIX에서만 사용가능합니다) Java 설정 변수들을 업데이트 합니다."

#. type: item
#: R-intro.texi:7278
#, no-wrap
msgid "rtags"
msgstr ""

#. type: table
#: R-intro.texi:7280
msgid "(Unix only) Create Emacs-style tag files from C, R, and Rd files"
msgstr "(UNIX에서만 사용가능합니다) C, R, 그리고 Rd 파일들로부터 이맥스 (Emacs)스타일의 태그 파일들을 생성합니다."

#. type: item
#: R-intro.texi:7280
#, no-wrap
msgid "open"
msgstr ""

#. type: table
#: R-intro.texi:7282
msgid "(Windows only) Open a file via Windows' file associations"
msgstr "(Windows에서만 사용가능합니다)  Windows의 파일연결(file association)을 이용하여 파일을 엽니다."

#. type: item
#: R-intro.texi:7282
#, no-wrap
msgid "texify"
msgstr ""

#. type: table
#: R-intro.texi:7284
msgid "(Windows only) Process (La)TeX files with R's style files"
msgstr "(Windows에서만 사용가능합니다)  R 스타일 파일을 사용하는 (La)TeX 파일들을 프로세싱합니다."

#. type: example
#: R-intro.texi:7290
#, no-wrap
msgid "R CMD @var{command} --help\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7295
msgid "to obtain usage information for each of the tools accessible via the @code{R CMD} interface."
msgstr "@code{R CMD}를 통하여 사용이 가능한 도구들의 각각에 대한 사용방법을 알고 싶을 때는 다음과 같이 입력하세요. "

#. type: Plain text
#: R-intro.texi:7308
msgid "In addition, you can use options @option{--arch=}, @option{--no-environ}, @option{--no-init-file}, @option{--no-site-file} and @option{--vanilla} between @command{R} and @command{CMD}: these affect any @R{} processes run by the tools.  (Here @option{--vanilla} is equivalent to @option{--no-environ --no-site-file --no-init-file}.)  However, note that @command{R CMD} does not of itself use any @R{} startup files (in particular, neither user nor site @file{Renviron} files), and all of the @R{} processes run by these tools (except @command{BATCH}) use @option{--no-restore}.  Most use @option{--vanilla} and so invoke no @R{} startup files: the current exceptions are @command{INSTALL}, @command{REMOVE}, @command{Sweave} and @command{SHLIB} (which uses @option{--no-site-file --no-init-file})."
msgstr "추가적으로 도구들에 의해 실행되는 어떠한 @R{} 프로세스들에 영향을 미칠 수 있는 @option{--arch=}, @option{--no-environ}, @option{--no-init-file}, @option{--no-site-file} 그리고 @option{--vanilla} 옵션들을 @command{R}과 @command{CMD} 사이에 사용@footnote{@R{} 2.13.0부터}할 수 있습니다. (여기에서 @option{--vanilla}는 @option{--no-environ --no-site-file --no-init-file}과 동일합니다.)그러나, @command{R CMD} 이 자체로는 어떠한 @R{} 스타드업 파일들을 사용하지 않는다는 것을 알고 계셔야 합니다 (특히, 사용자 또는 사이트 @file{Renviron} 파일 모두 이용하지 않습니다). 그리고, @command{BATCH}를 제외한 이러한 도구들에 의해서 실행되는 @R{} 프로세스들의 모두는 @option{--no-restore}를 사용합니다. 대부분은 @option{--vanilla}를 사용하고 @R{} 스타트업 파일들을 작동시키지 않습니다. 현재 예외라고 할 수 있는 것들은 @command{INSTALL}, @command{REMOVE}, @command{Sweave} 그리고 (@option{--no-site-file --no-init-file}을 이용하고 있는) @command{SHLIB} 입니다. 절대경로 (absolute filepath)에 의해서 주어진 또는 해당경로상에 있는 어떠한 다른 실행가능한 @command{@var{cmd}}을 사용하기 위해서는 아래와 같이 사용합니다. "

#. type: example
#: R-intro.texi:7311
#, no-wrap
msgid "R CMD @var{cmd} @var{args}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7320
msgid "for any other executable @command{@var{cmd}} on the path or given by an absolute filepath: this is useful to have the same environment as @R{} or the specific commands run under, for example to run @command{ldd} or @command{pdflatex}.  Under Windows @var{cmd} can be an executable or a batch file, or if it has extension @code{.sh} or @code{.pl} the appropriate interpreter (if available) is called to run it."
msgstr "이렇게 하는 것은 @R{} 또는 @command{ldd} 또는  @command{pdflatex}와 같은 어떤 특정한 명령어가 수행되어져야 하는 환경을 동일하게 해주는데 유용합니다. Windows 상에서 @var{cmd}는 실행이 가능할 수도 있고 배치파일 (batch file)일수도 있으며, 만약 @code{.sh} 또는 @code{.pl}과 같은 확장자를 가진다면 적합한 인터프리터(interpreter)가 이들을 실행시키기 위해서 호출되어집니다."

#. type: Plain text
#: R-intro.texi:7330
msgid "There are two ways to run @R{} under Windows.  Within a terminal window (e.g.@ @code{cmd.exe} or a more capable shell), the methods described in the previous section may be used, invoking by @code{R.exe} or more directly by @code{Rterm.exe}.  For interactive use, there is a console-based GUI (@code{Rgui.exe})."
msgstr "Windows에서 @R{}을 실행하는 방법은 두 가지가 있습니다. @code{cmd.exe} 또는 이보다 좀 더 많은 기능들을 가지고 있는 쉘과 같은 터미널을 보여주는 윈도우 내에서는 이전 섹션에서 설명한 방법들이 사용될 수 있는데, 이는 @code{R.exe} 또는 @code{Rterm.exe}를 실행하는 것입니다. 대화식으로 사용하기 위해서는 콘솔기반의 그래픽 사용자 환경인 @code{Rgui.exe}가 있습니다. "

#. type: Plain text
#: R-intro.texi:7343
msgid "The startup procedure under Windows is very similar to that under UNIX, but references to the `home directory' need to be clarified, as this is not always defined on Windows.  If the environment variable @env{R_USER} is defined, that gives the home directory.  Next, if the environment variable @env{HOME} is defined, that gives the home directory.  After those two user-controllable settings, @R{} tries to find system defined home directories.  It first tries to use the Windows \"personal\" directory (typically @code{C:\\Documents and Settings\\username\\My Documents} in Windows XP).  If that fails, and environment variables @env{HOMEDRIVE} and @env{HOMEPATH} are defined (and they normally are) these define the home directory.  Failing all those, the home directory is taken to be the starting directory."
msgstr "Windows 상에서 스타트업 방식은 UNIX와 유사하지만, 'home directory' (홈디렉토리)에 대한 참조는 Windows상에서 항상 정의되는 것이 아니기 때문에 좀 더 명확히 정해줘야 합니다.환경변수(environment variable) @env{R_USER}을 정의하는 것은 홈디렉토리를 지정하는 것입니다.또한, 환경변수 @env{HOME}을 정의하는 것 역시 홈디렉토리를 정하는 것입니다.사용자가 조절할 수 있는 이 두 변수들이 설정되면, @R{}은 홈디렉토리를 지정하는 시스템을 찾으려고 합니다. 제일먼저, Windows 개인 디렉토리 (일반적으로 Windows XP의 경우에는 @code{C:\\Documents and Settings\\username\\My Documents}를 의미합니다)를 지정합니다.실패시에는 환경변수 @env{HOMEDRIVE}와 @env{HOMEPATH}가 지정하는 홈디렉토리를 사용하게 됩니다. 이 모든 과정이 실패할 경우에 홈디렉토리는 스타팅 디렉토리로 정해지게 됩니다. "

#. type: Plain text
#: R-intro.texi:7347
msgid "You need to ensure that either the environment variables @env{TMPDIR}, @env{TMP} and @env{TEMP} are either unset or one of them points to a valid place to create temporary files and directories."
msgstr "환경변수 @env{TMPDIR}, @env{TMP} 혹은 @env{TEMP}가 결정되지 않거나, 이 둘 중 하나가 일시적인 파일 혹은 디렉토리 생성을 위한 유효한 공간을 지정하게 끔 설정해야 합니다."

#. type: Plain text
#: R-intro.texi:7350
msgid "Environment variables can be supplied as @samp{@var{name}=@var{value}} pairs on the command line."
msgstr "환경변수들은 명령어 라인에서 @samp{@var{name}=@var{value}}와 같은 형식으로 제공됩니다."

#. type: Plain text
#: R-intro.texi:7358
msgid "If there is an argument ending @file{.RData} (in any case) it is interpreted as the path to the workspace to be restored: it implies @option{--restore} and sets the working directory to the parent of the named file.  (This mechanism is used for drag-and-drop and file association with @code{RGui.exe}, but also works for @code{Rterm.exe}.  If the named file does not exist it sets the working directory if the parent directory exists.)"
msgstr "만약 어떠한 경우에라도 @file{.RData}로 끝나는 인자가 있다면, 이것은 불러오게 될 작업공간에 대한 경로로서 인식되어집니다.이것은 @option{--restore}를 의미하는 것이고, 주어진 이름을 가진 파일의 상위디렉토리에 대한 작업 디렉토리를 지정하는 것이기 때문입니다.(이러한 메카니즘은 드래그-앤-드랍(drag-and-drop)과 @code{RGui.exe}와 사용되는 파일연결(file association)을 위해 사용됩니다.  그러나, 또한 @code{Rterm.exe}를 위해 사용되기도 합니다. 만약 주어진 이름을 가진 파일이 존재하지 않는다면 이것은 작업디렉토리를 부모디렉토리가 있을경우에 지정하게 됩니다)."

#. type: Plain text
#: R-intro.texi:7361
msgid "The following additional command-line options are available when invoking @code{RGui.exe}."
msgstr "@code{RGui.exe}를 작동시킬때 다음과 같은 추가적인 명령어 옵션들이 이용가능합니다. "

#. type: item
#: R-intro.texi:7363
#, no-wrap
msgid "--mdi"
msgstr ""

#. type: itemx
#: R-intro.texi:7364
#, no-wrap
msgid "--sdi"
msgstr ""

#. type: itemx
#: R-intro.texi:7365
#, no-wrap
msgid "--no-mdi"
msgstr ""

#. type: table
#: R-intro.texi:7370
msgid "Control whether @code{Rgui} will operate as an MDI program (with multiple child windows within one main window) or an SDI application (with multiple top-level windows for the console, graphics and pager).  The command-line setting overrides the setting in the user's @file{Rconsole} file."
msgstr "@code{Rgui}가 하나의 주 윈도우 상에 여러 개의 작은 윈도우 창을 이용하는 MDI 프로그램 혹은 콘솔, 그래픽, 또는 페이저를 위한 다수의 최상의 윈도우들을 가진 SDI 어플리케이션으로 사용할 것인지를 조절합니다. 명령어라인을 이용한 설정은 사용자의 @file{Rconsole} 파일에 있는 설정을 덮어쓰게 됩니다."

#. type: item
#: R-intro.texi:7371
#, no-wrap
msgid "--debug"
msgstr ""

#. type: table
#: R-intro.texi:7374
msgid "Enable the ``Break to debugger'' menu item in @code{Rgui}, and trigger a break to the debugger during command line processing."
msgstr "@code{Rgui}내에서 ``Break to debugger''라는 메뉴 항목을 이용할 수 있게 해주고, 커맨드 라인이 프로세싱되는 동안 디버거에게 브레이크를 작동시켜줍니다. "

#. type: Plain text
#: R-intro.texi:7382
msgid "Under Windows with @code{R CMD} you may also specify your own @file{.bat}, @file{.exe}, @file{.sh} or @file{.pl} file.  It will be run under the appropriate interpreter (Perl for @file{.pl}) with several environment variables set appropriately, including @env{R_HOME}, @env{R_OSTYPE}, @env{PATH}, @env{BSTINPUTS} and @env{TEXINPUTS}.  For example, if you already have @file{latex.exe} on your path, then"
msgstr "Windows에서 @code{R CMD}를 이용할 때 당신이 소유한  @file{.bat}, @file{.exe}, @file{.sh} 또는 @file{.pl} 파일들 또한 지정할 수 있습니다. 이것은 적합한 인터프리터 (즉, @file{.pl}파일은 Perl을 이용합니다)와 @env{R_HOME}, @env{R_OSTYPE}, @env{PATH}, @env{BSTINPUTS}, 그리고 @env{TEXINPUTS}를 포함하여 올바르게 지정된 여러가지의 환경변수들과 함께 실행될 것입니다. 예를들면, 당신의 경로에 @file{latex.exe}파일을 이미 가지고 있다면 아래와 같이 방법으로 @env{TEXINPUTS}에 추가되어 있는 @R{}의 @file{share/texmf} 매크로를 이용하여 @file{mydoc.tex}에 대해서 @LaTeX{}를  실행시킬 수 있습니다. "

#. type: example
#: R-intro.texi:7385
#, no-wrap
msgid "R CMD latex.exe mydoc\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7391
msgid "will run @LaTeX{} on @file{mydoc.tex}, with the path to @R{}'s @file{share/texmf} macros appended to @env{TEXINPUTS}.  (Unfortunately, this does not help with the MiKTeX build of @LaTeX{}, but @command{R CMD texify mydoc} will work in that case.)"
msgstr "(안타깝게도, MiKTex @LaTeX{}에서는 적용되지 않습니다. 그러나, @command{R CMD texify mydoc}은 작동할 것입니다.)"

#. type: Plain text
#: R-intro.texi:7400
msgid "There are two ways to run @R{} under OS X.  Within a @code{Terminal.app} window by invoking @code{R}, the methods described in the first subsection apply.  There is also console-based GUI (@code{R.app}) that by default is installed in the @code{Applications} folder on your system.  It is a standard double-clickable OS X application."
msgstr "Mac OS X 상에서 @R{}을 실행하는 방법에는 두가지가 있습니다. 첫 번째 서브섹션에서 설명된 방법처럼 @code{Terminal.app} 창을 이용하여 @code{R}을 작동하는 것입니다. 또 다른 방법은 당신의 시스템에 있는 @code{Applications} 폴더에 기본적으로 설치된 콘솔기반의 GUI (@code{R.app})을 이용하는것입니다. 이것은 더블클릭이 가능한 Mac OS X 응용프로그램입니다."

#. type: Plain text
#: R-intro.texi:7407
msgid "The startup procedure under OS X is very similar to that under UNIX, but @code{R.app} does not make use of command-line arguments.  The `home directory' is the one inside the R.framework, but the startup and current working directory are set as the user's home directory unless a different startup directory is given in the Preferences window accessible from within the GUI."
msgstr "Mac OS X에 있는 스타트업 프로시져는 유닉스의 것과 유사합니다. `home directory' 는 R.framework 내부에 있지만, GUI내로부터 접근이 가능한 Preference 창에 있는 스타트업 디렉토이와 다르지 않다면 스타트업과 현재 작업디렉토리는 사용자의 홈디렉토리와 같이 지정됩니다."

#. type: Plain text
#: R-intro.texi:7416
msgid "If you just want to run a file @file{foo.R} of @R{} commands, the recommended way is to use @command{R CMD BATCH foo.R}.  If you want to run this in the background or as a batch job use OS-specific facilities to do so: for example in most shells on Unix-alike OSes @command{R CMD BATCH foo.R &} runs a background job."
msgstr "만약에 @R{} 명령어들로 이루어진 @file{foo.R}라는 파일을 실행시키고자 한다면,  @command{R CMD BATCH foo.R}를 사용하길 권장합니다. 만약 당신이 이를 일괄처리 (batch job) 작업으로서 또는 후순위 작업 (background job, 백그라운드 작업)를 하고자 한다면, 당신의 운영체제에 맞는 기능을 사용하길 바랍니다. 예를들면, 유닉스와 같은 운영체제들은 쉘상에서 @command{R CMD BATCH foo.R&}라고 입력하게 되면 후순위작업 (background job)이 실행되게 됩니다. "

#. type: Plain text
#: R-intro.texi:7420
msgid "You can pass parameters to scripts via additional arguments on the command line: for example (where the exact quoting needed will depend on the shell in use)"
msgstr "명령어 라인을 사용할때 추가적인 인자들을 이용하여 스크립트에 파미미터 (또는 입력해야 할 인자들)에 값을 넣어줄 수 있습니다. 예를들면 (어떤 쉘을 이용하는가에 따라 다르지만, 아래와 같이 큰 따옴표의 사용이 필요합니다)."

#. type: example
#: R-intro.texi:7423
#, no-wrap
msgid "R CMD BATCH \"--args arg1 arg2\" foo.R &\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7428
msgid "will pass arguments to a script which can be retrieved as a character vector by"
msgstr "위에서 사용된 명령어 라인은 아래와 같은 방법으로 다시 확인할 수 있는 문자형 벡터로서 스크립트에 인자들을 넘겨줄 수 있습니다. "

#. type: example
#: R-intro.texi:7431
#, no-wrap
msgid "args <- commandArgs(TRUE)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7435
msgid "This is made simpler by the alternative front-end @command{Rscript}, which can be invoked by"
msgstr "이렇게 하는 것은 사용자가 직접 아래와 같이 @command{Rscript}에 인자들을 전달할 수 있는 더 간단한 방법입니다. "

#. type: example
#: R-intro.texi:7438
#, no-wrap
msgid "Rscript foo.R arg1 arg2\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7443
msgid "and this can also be used to write executable script files like (at least on Unix-alikes, and in some Windows shells)"
msgstr "그리고 이렇게 하는 것은 (적어도 유닉스와 같은 환경 및 일부 Windows의 쉘상에서) 실행가능한 스크립트를 작성하는데 사용될 수 있습니다.  예를들면, 아래와 같습니다. "

#. type: example
#: R-intro.texi:7449
#, no-wrap
msgid ""
"#! /path/to/Rscript\n"
"args <- commandArgs(TRUE)\n"
"...\n"
"q(status=<exit status code>)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7455
msgid "If this is entered into a text file @file{runfoo} and this is made executable (by @command{chmod 755 runfoo}), it can be invoked for different arguments by"
msgstr "만약에 @file{runfoo}라는 텍스트 파일에 입력하고, 이것을 @command{chmod 755 runfoo}라는 명령어를 이용하여 실행가능하게 만들어 준다면, 아래와 같이 실행도 가능합니다. "

#. type: example
#: R-intro.texi:7458
#, no-wrap
msgid "runfoo arg1 arg2\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7464
msgid "For further options see @command{help(\"Rscript\")}.  This writes @R{} output to @file{stdout} and @file{stderr}, and this can be redirected in the usual way for the shell running the command."
msgstr "더 많은 옵션들을 알아보고 싶으시다면 @command{help(\"Rscript\")}를 살펴보시길 바랍니다. 이것은 @R{}의 결과물을 @file{stdout}과 @file{stderr}에 작성합니다.  그리고 이것은 명령어를 실행시키는 쉘상에서 일반적인 방법으로 다른 방향으로 전환이 가능합니다. "

#. type: Plain text
#: R-intro.texi:7469
msgid "If you do not wish to hardcode the path to @command{Rscript} but have it in your path (which is normally the case for an installed @R{} except on Windows, but e.g.@: OS X users may need to add @file{/usr/local/bin} to their path), use"
msgstr "만약 당신이 @command{Rscript}에 경로를 쉽게 변경하고자 하면, 이를 아래와 같이 경로를 적어두어야 합니다. (Windows를 제외한 경우 설치된 @R{}의 일반적인 경우이지만 @: Mac OS X 사용자들은 아마도 @file{/usr/local/bin} 이라고 할 수도 있습니다)."

#. type: example
#: R-intro.texi:7473
#, no-wrap
msgid ""
"#! /usr/bin/env Rscript\n"
"...\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7479
msgid "At least in Bourne and bash shells, the @code{#!} mechanism does @strong{not} allow extra arguments like @code{#! /usr/bin/env Rscript --vanilla}."
msgstr "본(Bourne)과 bash(배쉬) 쉘상에서는 @code{#!} 메카니즘은 @code{#! /usr/bin/env Rscript --vanilla}와 같은 추가적인 인자의 사용을 허용하지 않습니다."

#. type: Plain text
#: R-intro.texi:7482
msgid "One thing to consider is what @code{stdin()} refers to.  It is commonplace to write @R{} scripts with segments like"
msgstr "한 가지 고려해야 할 점은 @code{stdin()}이 무엇을 의미하는지 알아야 합니다. @R{} 스크립트를 아래와 같이 작성하는 것은 매우 흔한일입니다."

#. type: example
#: R-intro.texi:7487
#, no-wrap
msgid ""
"chem <- scan(n=24)\n"
"2.90 3.10 3.40 3.40 3.70 3.70 2.80 2.50 2.40 2.40 2.70 2.20\n"
"5.28 3.37 3.03 3.03 28.95 3.77 3.40 2.20 3.50 3.60 3.70 3.70\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7493
msgid "and @code{stdin()} refers to the script file to allow such traditional usage.  If you want to refer to the process's @file{stdin}, use @code{\"stdin\"} as a @code{file} connection, e.g.@: @code{scan(\"stdin\", ...)}."
msgstr "여기에서 @code{stdin()}이란 기존의 사용방법을 허용하는 스크립트 파일 자체를 의미합니다. 프로세스의 @file{stdin}을 참조하고 싶다면, @code{\"stdin\"}을 @code{file} 커넥션과 같이 사용하시면 됩니다. 즉, @: @code{scan(\"stdin\", ...)}."

#. type: Plain text
#: R-intro.texi:7496
msgid "Another way to write executable script files (suggested by Fran@,{c}ois Pinard) is to use a @emph{here document} like"
msgstr "또다른 방법으로 실행가능한 스크립트 파일들을 만드는 방법들은 (Fran@,{c}ois Pinard에 의해 제안된) @emph{이곳의 문서}와 같이 사용하는 것입니다. "

#. type: example
#: R-intro.texi:7501
#, no-wrap
msgid ""
"#!/bin/sh\n"
"[environment variables can be set here]\n"
"R --slave [other options] <<EOF\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:7503
#, no-wrap
msgid ""
"   R program goes here...\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:7505
#, no-wrap
msgid "EOF\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7510
msgid "but here @code{stdin()} refers to the program source and @code{\"stdin\"} will not be usable."
msgstr "그러나, 여기에서 @code{stdin()}은 프로그램 소스를 가리키며 @code{\"stdin\"}은 사용가능하지 않을 것입니다. "

#. type: Plain text
#: R-intro.texi:7513
msgid "Short scripts can be passed to @command{Rscript} on the command-line @emph{via} the @option{-e} flag.  (Empty scripts are not accepted.)"
msgstr "매우 짧은 길이의 스크립트는 @option{-e} 플래그를 이용하여 @command{Rscript}에 보낼 수도 있습니다. "

#. type: Plain text
#: R-intro.texi:7516
msgid "Note that on a Unix-alike the input filename (such as @file{foo.R})  should not contain spaces nor shell metacharacters."
msgstr "유닉스와 같은 환경에서 @file{foo.R}와 같은 입력파일명은 반드시 공간을 포함해서도 안되며, 쉘의 메타문자 역시 포함해서는 안됩니다. "

#. type: Plain text
#: R-intro.texi:7522
msgid "@appendixsection Preliminaries"
msgstr ""

#. type: Plain text
#: R-intro.texi:7528
msgid "When the @acronym{GNU} @strong{readline} library is available at the time @R{} is configured for compilation under UNIX, an inbuilt command line editor allowing recall, editing and re-submission of prior commands is used.  Note that other versions of @strong{readline} exist and may be used by the inbuilt command line editor: this used to happen on OS X."
msgstr "UNIX 상에서 컴파일을 위하여 @R{}의 환경설정을 할때 @acronym{GNU} @strong{readline} 라이브러리가 사용가능 할 때, 이전 명령어들의 기억기능(recall), 편집(editing), 그리고 재입력(resubmission) 기능을 허용하는 내재된 커맨드기반의 에디터가 이용됩니다. 다른 버전의 @strong{readline}이 존재 할 수 있고, 이들이 내재된 커맨드 기반의 명령어에 의해서 사용될 수도 있습니다.보통 Mac OS X에서 이러합니다"

#. type: Plain text
#: R-intro.texi:7533
msgid "It can be disabled (useful for usage with @acronym{ESS} @footnote{The `Emacs Speaks Statistics' package; see the @acronym{URL} @uref{http://ESS.R-project.org}}) using the startup option @option{--no-readline}."
msgstr "스타트업 옵션 @option{--no-readline}을 이용하여 사용되지 않도록 할 수도 있습니다. (이렇게 하는 것은 @acronym{ESS}@footnote{`Emacs Speaks Statistics'패키지를 말하며, @acronym{URL} @uref{http://ESS.R-project.org}를 살펴보시길 바랍니다}를 사용할 때 유용합니다)."

#. type: Plain text
#: R-intro.texi:7538
msgid "Windows versions of @R{} have somewhat simpler command-line editing: see @samp{Console} under the @samp{Help} menu of the @acronym{GUI}, and the file @file{README.Rterm} for command-line editing under @code{Rterm.exe}."
msgstr "Windows 버전에서 @R{}은 다소 간단한 형식의 커맨드라인 편집기능을 가지고 있습니다. @acronym{GUI}에서 @samp{Help} 메뉴에 있는 @samp{Console}을 살펴보시고, @code{Rterm.exe}내에 있는 커맨드라인을 위한 파일 @file{README.Rterm}을 살펴보시길 바랍니다."

#. type: Plain text
#: R-intro.texi:7542
msgid "When using @R{} with @strong{readline} capabilities, the functions described below are available, as well as others (probably) documented in @command{man readline} or @command{info readline} on your system."
msgstr "@strong{readline}의 기능과 함께 @R{}을 사용할 때, (아마도) 당신의 시스템에 있는 @command{man readline} 또는 @command{info readline}에 기술되어 있는 함수들과 아래에 기술된 함수들을 이용할 수 있습니다."

#. type: Plain text
#: R-intro.texi:7556
msgid "Many of these use either Control or Meta characters.  Control characters, such as @kbd{Control-m}, are obtained by holding the @key{CTRL} down while you press the @key{m} key, and are written as @kbd{C-m} below.  Meta characters, such as @kbd{Meta-b}, are typed by holding down @key{META}@footnote{On a PC keyboard this is usually the Alt key, occasionally the `Windows' key.  On a Mac keyboard normally no meta key is available.} and pressing @key{b}, and written as @kbd{M-b} in the following.  If your terminal does not have a @key{META} key enabled, you can still type Meta characters using two-character sequences starting with @kbd{ESC}.  Thus, to enter @kbd{M-b}, you could type @key{ESC}@key{b}.  The @kbd{ESC} character sequences are also allowed on terminals with real Meta keys.  Note that case is significant for Meta characters."
msgstr "이들중의 많은 것들이 컨트롤 (Control)과 메타(Meta) 문자들을 사용합니다. @kbd{Control-m}과 같은 형식으로 컨트롤 문자들은 @key{CTRL}키를 누른 상태에서 @key{m}키를 누르는 것입니다.그리고 이것을 @kbd{C-m}이라고 표시합니다.@kbd{Meta-b}와 같이 메타문자들은 @key{META}@footnote{PC 키보드에서는 이것은 일반적으로 Alt 키이거나 가끔 `Windows'키이기도 합니다. Mac 키보드에서는 일반적으로 사용가능한 메타키가 없습니다}를 누른 상태에서 @key{b}를 누르는 것이며, 이는 @kbd{M-b}라고 씁니다.만약에 당신의 터미널이 활성화된 @key{META}키를 가지고 있지 않다면, 당신은 @kbd{ESC}를 사용하여 메타문자들을 입력할 수 있습니다.그러므로, @kbd{M-b}를 입력하기 위해서는, 당신은 @key{ESC}@key{b}라고 입력합니다.다음은 중요한 메타 문자들을 정리한 것입니다. "

#. type: Plain text
#: R-intro.texi:7558
msgid "@appendixsection Editing actions"
msgstr ""

#. type: Plain text
#: R-intro.texi:7570
msgid "The @R{} program keeps a history of the command lines you type, including the erroneous lines, and commands in your history may be recalled, changed if necessary, and re-submitted as new commands.  In Emacs-style command-line editing any straight typing you do while in this editing phase causes the characters to be inserted in the command you are editing, displacing any characters to the right of the cursor.  In @emph{vi} mode character insertion mode is started by @kbd{M-i} or @kbd{M-a}, characters are typed and insertion mode is finished by typing a further @key{ESC}.  (The default is Emacs-style, and only that is described here: for @emph{vi} mode see the @strong{readline} documentation.)"
msgstr "@R{} 프로그램은 당신이 입력한 명령어 라인들에 대한 기록을 보관합니다. 이때 잘못 입력한 명령어도 보관이 되며, 기록상에 보관된 명령어들은 다시 불러올 수 있고, 필요하다면 변경하여, 새로운 명령어처럼 다시 사용될 수 있습니다. 이맥스 스타일(Emacs-style)의 명령어라인 편집환경에서는 당신이 입력하는 것들이 편집하는 명령어 속에 삽입되거나, 커서의 오른쪽에 있는 문자들을 변경하하기도 합니다. @emph{vi} 모드에서는 @key{ESC}를 입력함으로서 문자가 입력되거나 삽입모드를 종료할 수 있습니다. (기본적으로는 이맥스 스타일이 사용되며, @emph{vi} 모드에 대해서는 @strong{readline} 문서를 확인하시길 바랍니다)."

#. type: Plain text
#: R-intro.texi:7573
msgid "Pressing the @key{RET} command at any time causes the command to be re-submitted."
msgstr "어떤 상황이던지 간에 @key{RET}키를 누르는 것은 명령어를 실행하도록 전달하는 것과 같습니다. "

#. type: Plain text
#: R-intro.texi:7575
msgid "Other editing actions are summarized in the following table."
msgstr "다른 편집 기능들은 아래의 표에 정리되어 있습니다."

#. type: Plain text
#: R-intro.texi:7577
msgid "@appendixsection Command-line editor summary"
msgstr "커맨드라인 에디터에 대한 요약 "

#. type: subheading
#: R-intro.texi:7578
#, no-wrap
msgid "Command recall and vertical motion"
msgstr "커서의 상하이동을 통하여 명령어를 되부르기"

#. type: item
#: R-intro.texi:7581
#, no-wrap
msgid "C-p"
msgstr ""

#. type: table
#: R-intro.texi:7583
msgid "Go to the previous command (backwards in the history)."
msgstr "이전에 사용한 명령어로 이동합니다 (히스토리 상에서 한 단계 뒤로 이동하는 것입니다)."

#. type: item
#: R-intro.texi:7583
#, no-wrap
msgid "C-n"
msgstr ""

#. type: table
#: R-intro.texi:7585
msgid "Go to the next command (forwards in the history)."
msgstr "다음 명령어로 이동합니다 (히스토리상에서 한 단계 다음으로 이동하는 것입니다)."

#. type: item
#: R-intro.texi:7585
#, no-wrap
msgid "C-r @var{text}"
msgstr ""

#. type: table
#: R-intro.texi:7587
msgid "Find the last command with the @var{text} string in it."
msgstr "@var{text}를 포함하는 마지막 명령어를 찾습니다."

#. type: Plain text
#: R-intro.texi:7591
msgid "On most terminals, you can also use the up and down arrow keys instead of @kbd{C-p} and @kbd{C-n}, respectively."
msgstr "대부분의 터미널에서 @kbd{C-p}와 @kbd{C-n}를 이용하는 대신에 당신은 위쪽 또는 아래쪽 방향의 화살표를 이용하여 이를 이용할 수 있습니다. "

#. type: subheading
#: R-intro.texi:7592
#, no-wrap
msgid "Horizontal motion of the cursor"
msgstr "커서를 좌우로 이동하여 할 수 있는 명령어들"

#. type: item
#: R-intro.texi:7595
#, no-wrap
msgid "C-a"
msgstr ""

#. type: table
#: R-intro.texi:7597
msgid "Go to the beginning of the command."
msgstr "명령어의 가장 처음으로 이동합니다."

#. type: item
#: R-intro.texi:7597
#, no-wrap
msgid "C-e"
msgstr ""

#. type: table
#: R-intro.texi:7599
msgid "Go to the end of the line."
msgstr "라인의 끝으로 이동합니다. "

#. type: item
#: R-intro.texi:7599
#, no-wrap
msgid "M-b"
msgstr ""

#. type: table
#: R-intro.texi:7601
msgid "Go back one word."
msgstr "한 단어 뒤로 이동합니다."

#. type: item
#: R-intro.texi:7601
#, no-wrap
msgid "M-f"
msgstr ""

#. type: table
#: R-intro.texi:7603
msgid "Go forward one word."
msgstr "한 단어 앞으로 이동합니다. "

#. type: item
#: R-intro.texi:7603
#, no-wrap
msgid "C-b"
msgstr ""

#. type: table
#: R-intro.texi:7605
msgid "Go back one character."
msgstr "한 문자 뒤로 이동합니다."

#. type: item
#: R-intro.texi:7605
#, no-wrap
msgid "C-f"
msgstr ""

#. type: table
#: R-intro.texi:7607
msgid "Go forward one character."
msgstr "한 문자 앞으로 이동합니다. "

#. type: Plain text
#: R-intro.texi:7611
msgid "On most terminals, you can also use the left and right arrow keys instead of @kbd{C-b} and @kbd{C-f}, respectively."
msgstr "대부분의 터미널에서는 당신은 @kbd{C-b}와 @kbd{C-f}를 이용하는 대신에 좌측 또는 우측 화살표를 이용할 수 있습니다. "

#. type: subheading
#: R-intro.texi:7612
#, no-wrap
msgid "Editing and re-submission"
msgstr "편집 후 재실행하기 "

#. type: table
#: R-intro.texi:7617
msgid "Insert @var{text} at the cursor."
msgstr "커서의 위치에 @var{text} 삽입합니다."

#. type: item
#: R-intro.texi:7617
#, no-wrap
msgid "C-f @var{text}"
msgstr ""

#. type: table
#: R-intro.texi:7619
msgid "Append @var{text} after the cursor."
msgstr "커서의 위치 다음부분 부터 @var{text}를 추가합니다."

#. type: key{#1}
#: R-intro.texi:7619
#, no-wrap
msgid "DEL"
msgstr ""

#. type: table
#: R-intro.texi:7621
msgid "Delete the previous character (left of the cursor)."
msgstr "커서의 왼쪽에 위한 문자를 삭제합니다"

#. type: item
#: R-intro.texi:7621
#, no-wrap
msgid "C-d"
msgstr ""

#. type: table
#: R-intro.texi:7623
msgid "Delete the character under the cursor."
msgstr "커서의 바로 아래 있는 문자를 삭제합니다. "

#. type: item
#: R-intro.texi:7623
#, no-wrap
msgid "M-d"
msgstr ""

#. type: table
#: R-intro.texi:7625
msgid "Delete the rest of the word under the cursor, and ``save'' it."
msgstr "커서의 아래에 있는 위치하는 문자 이후의 모든 것을 삭제하고 ``저장'' 합니다. "

#. type: item
#: R-intro.texi:7625
#, no-wrap
msgid "C-k"
msgstr ""

#. type: table
#: R-intro.texi:7627
msgid "Delete from cursor to end of command, and ``save'' it."
msgstr "커서의 위치로부터 명령어의 끝 부분까지 삭제한 뒤, ``저장'' 합니다."

#. type: item
#: R-intro.texi:7627
#, no-wrap
msgid "C-y"
msgstr ""

#. type: table
#: R-intro.texi:7629
msgid "Insert (yank) the last ``saved'' text here."
msgstr "마지막으로 저장된 텍스트를 이곳에 삽입니다. "

#. type: item
#: R-intro.texi:7629
#, no-wrap
msgid "C-t"
msgstr ""

#. type: table
#: R-intro.texi:7631
msgid "Transpose the character under the cursor with the next."
msgstr "다음 문자를 커서 아래에 있는 문자와 전치합니다."

#. type: item
#: R-intro.texi:7631
#, no-wrap
msgid "M-l"
msgstr ""

#. type: table
#: R-intro.texi:7633
msgid "Change the rest of the word to lower case."
msgstr "단어의 남겨진 부분들을 소문자로 변경합니다."

#. type: item
#: R-intro.texi:7633
#, no-wrap
msgid "M-c"
msgstr ""

#. type: table
#: R-intro.texi:7635
msgid "Change the rest of the word to upper case."
msgstr "단어의 남겨진 부분들을 대문자로 변경합니다. "

#. type: key{#1}
#: R-intro.texi:7635
#, no-wrap
msgid "RET"
msgstr ""

#. type: table
#: R-intro.texi:7637
msgid "Re-submit the command to @R{}."
msgstr "@R{}에 명령어를 다시 전달합니다."

#. type: Plain text
#: R-intro.texi:7640
msgid "The final @key{RET} terminates the command line editing sequence."
msgstr "마지막 @key{RET} 키는 명령어 라인의 편집 시퀀스를 종료하는 것입니다."

#. type: Plain text
#: R-intro.texi:7644
msgid "The @strong{readline} key bindings can be customized in the usual way @emph{via} a @file{~/.inputrc} file.  These customizations can be conditioned on application @code{R}, that is by including a section like"
msgstr "@strong{Readline} 키바인딩 (key binding)은  @file{~/.inputrc} 파일을 @emph{통해서} 일반적인 방법으로 조정될 수 있습니다.  @R{} 2.12.0 부터는 이러한 개인설정 (customization)은 @code{R}에 따라 조건적일 수 있습니다. "

#. type: example
#: R-intro.texi:7649
#, no-wrap
msgid ""
"$if R\n"
"  \"\\C-xd\": \"q('no')\\n\"\n"
"$endif\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7666
msgid "D.@: M.@: Bates and D.@: G.@: Watts (1988), @emph{Nonlinear Regression Analysis and Its Applications.} John Wiley & Sons, New York."
msgstr ""

#. type: Plain text
#: R-intro.texi:7671
msgid "Richard A.@: Becker, John M.@: Chambers and Allan R.@: Wilks (1988), @emph{The New S Language.} Chapman & Hall, New York.  This book is often called the ``@emph{Blue Book}''."
msgstr ""

#. type: Plain text
#: R-intro.texi:7676
msgid "John M.@: Chambers and Trevor J.@: Hastie eds. (1992), @emph{Statistical Models in S.} Chapman & Hall, New York.  This is also called the ``@emph{White Book}''."
msgstr ""

#. type: Plain text
#: R-intro.texi:7681
msgid "John M.@: Chambers (1998)  @emph{Programming with Data}. Springer, New York.  This is also called the ``@emph{Green Book}''."
msgstr ""

#. type: Plain text
#: R-intro.texi:7685
msgid "A.@: C.@: Davison and D.@: V.@: Hinkley (1997), @emph{Bootstrap Methods and Their Applications}, Cambridge University Press."
msgstr ""

#. type: Plain text
#: R-intro.texi:7689
msgid "Annette J.@: Dobson (1990), @emph{An Introduction to Generalized Linear Models}, Chapman and Hall, London."
msgstr ""

#. type: Plain text
#: R-intro.texi:7693
msgid "Peter McCullagh and John A.@: Nelder (1989), @emph{Generalized Linear Models.} Second edition, Chapman and Hall, London."
msgstr ""

#. type: Plain text
#: R-intro.texi:7697
msgid "John A.@ Rice (1995), @emph{Mathematical Statistics and Data Analysis.} Second edition.  Duxbury Press, Belmont, CA."
msgstr ""

#. type: Plain text
#: R-intro.texi:7700
msgid "S.@: D.@: Silvey (1970), @emph{Statistical Inference.} Penguin, London."
msgstr ""
