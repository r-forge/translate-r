# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the translate.R package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: translate.R VERSION\n"
"Report-Msgid-Bugs-To: chl948@mail.usask.ca\n"
"POT-Creation-Date: 2015-09-29 17:08-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: top
#: R-intro.texi:4 R-intro.texi:52 R-intro.texi:70
#, no-wrap
msgid "An Introduction to R"
msgstr ""

#. type: dircategory
#: R-intro.texi:14
#, no-wrap
msgid "Programming"
msgstr ""

#. type: menuentry
#: R-intro.texi:17
msgid "R Introduction: (R-intro)"
msgstr ""

#. type: menuentry
#: R-intro.texi:17
msgid "An introduction to R."
msgstr ""

#. type: include
#: R-intro.texi:21
#, no-wrap
msgid "R-defs.texi"
msgstr ""

#. type: include
#: R-intro.texi:22
#, no-wrap
msgid "version.texi"
msgstr ""

#. type: copying
#: R-intro.texi:26
msgid "This manual is for R, version @value{VERSION}."
msgstr ""

#. type: copying
#: R-intro.texi:32
msgid ""
"Copyright @copyright{} 1990 W.@: N.@: Venables@* Copyright @copyright{} 1992 "
"W.@: N.@: Venables & D.@: M.@: Smith@* Copyright @copyright{} 1997 R.@: "
"Gentleman & R.@: Ihaka@* Copyright @copyright{} 1997, 1998 M.@: Maechler@* "
"@Rcopyright{1999}"
msgstr ""

#. type: quotation
#: R-intro.texi:35
msgid "@permission{}"
msgstr ""

#. type: subtitle
#: R-intro.texi:53
#, no-wrap
msgid "Notes on @R{}: A Programming Environment for Data Analysis and Graphics"
msgstr ""

#. type: subtitle
#: R-intro.texi:54
#, no-wrap
msgid "Version @value{VERSION}"
msgstr ""

#. type: author
#: R-intro.texi:55
#, no-wrap
msgid "W. N. Venables, D. M. Smith"
msgstr ""

#. type: author
#: R-intro.texi:56
#, no-wrap
msgid "and the R Core Team"
msgstr ""

#. type: node
#: R-intro.texi:69 R-intro.texi:112 R-intro.texi:112 R-intro.texi:142 R-intro.texi:576 R-intro.texi:1180 R-intro.texi:1407 R-intro.texi:1582 R-intro.texi:2374 R-intro.texi:2719 R-intro.texi:2954 R-intro.texi:3358 R-intro.texi:3503 R-intro.texi:4194 R-intro.texi:5336 R-intro.texi:6419 R-intro.texi:6548 R-intro.texi:6736 R-intro.texi:6968 R-intro.texi:7518 R-intro.texi:7651 R-intro.texi:7656 R-intro.texi:7661
#, no-wrap
msgid "Top"
msgstr ""

#. type: node
#: R-intro.texi:69 R-intro.texi:110 R-intro.texi:112 R-intro.texi:113 R-intro.texi:142
#, no-wrap
msgid "Preface"
msgstr ""

#. type: node
#: R-intro.texi:69 R-intro.texi:69
#, no-wrap
msgid "(dir)"
msgstr ""

#. type: ifnottex
#: R-intro.texi:80
msgid ""
"This is an introduction to R (``GNU S''), a language and environment for "
"statistical computing and graphics.  R is similar to the "
"award-winning@footnote{ACM Software Systems award, 1998: "
"@uref{https://awards.acm.org/award_winners/chambers_6640862.cfm}.} S system, "
"which was developed at Bell Laboratories by John Chambers et al.  It "
"provides a wide variety of statistical and graphical techniques (linear and "
"nonlinear modelling, statistical tests, time series analysis, "
"classification, clustering, ...)."
msgstr ""

#. type: ifnottex
#: R-intro.texi:83
msgid ""
"This manual provides information on data types, programming elements, "
"statistical modelling and graphics."
msgstr ""

#. type: node
#: R-intro.texi:110 R-intro.texi:112 R-intro.texi:140 R-intro.texi:142 R-intro.texi:143 R-intro.texi:158 R-intro.texi:158 R-intro.texi:194 R-intro.texi:219 R-intro.texi:246 R-intro.texi:266 R-intro.texi:346 R-intro.texi:424 R-intro.texi:473 R-intro.texi:494 R-intro.texi:526 R-intro.texi:576
#, no-wrap
msgid "Introduction and preliminaries"
msgstr ""

#. type: node
#: R-intro.texi:110 R-intro.texi:142 R-intro.texi:576 R-intro.texi:591 R-intro.texi:591 R-intro.texi:667 R-intro.texi:778 R-intro.texi:861 R-intro.texi:910 R-intro.texi:967 R-intro.texi:1019 R-intro.texi:1142 R-intro.texi:1180
#, no-wrap
msgid "Simple manipulations numbers and vectors"
msgstr ""

#. type: node
#: R-intro.texi:110 R-intro.texi:576 R-intro.texi:1180 R-intro.texi:1182 R-intro.texi:1198 R-intro.texi:1198 R-intro.texi:1286 R-intro.texi:1334 R-intro.texi:1364 R-intro.texi:1407
#, no-wrap
msgid "Objects"
msgstr ""

#. type: cindex
#: R-intro.texi:110 R-intro.texi:1180 R-intro.texi:1407 R-intro.texi:1409 R-intro.texi:1469 R-intro.texi:1469 R-intro.texi:1565 R-intro.texi:1582 R-intro.texi:4440
#, no-wrap
msgid "Factors"
msgstr ""

#. type: node
#: R-intro.texi:110 R-intro.texi:1407 R-intro.texi:1582 R-intro.texi:1583 R-intro.texi:1598 R-intro.texi:1598 R-intro.texi:1643 R-intro.texi:1683 R-intro.texi:1775 R-intro.texi:1866 R-intro.texi:1939 R-intro.texi:1964 R-intro.texi:2249 R-intro.texi:2294 R-intro.texi:2323 R-intro.texi:2374
#, no-wrap
msgid "Arrays and matrices"
msgstr ""

#. type: node
#: R-intro.texi:110 R-intro.texi:1582 R-intro.texi:2374 R-intro.texi:2375 R-intro.texi:2383 R-intro.texi:2383 R-intro.texi:2464 R-intro.texi:2512 R-intro.texi:2719
#, no-wrap
msgid "Lists and data frames"
msgstr ""

#. type: node
#: R-intro.texi:110 R-intro.texi:2374 R-intro.texi:2719 R-intro.texi:2720 R-intro.texi:2721 R-intro.texi:2747 R-intro.texi:2747 R-intro.texi:2830 R-intro.texi:2882 R-intro.texi:2926 R-intro.texi:2954
#, no-wrap
msgid "Reading data from files"
msgstr ""

#. type: node
#: R-intro.texi:110 R-intro.texi:2719 R-intro.texi:2954 R-intro.texi:2955 R-intro.texi:2956 R-intro.texi:2964 R-intro.texi:2964 R-intro.texi:3041 R-intro.texi:3201 R-intro.texi:3358
#, no-wrap
msgid "Probability distributions"
msgstr ""

#. type: node
#: R-intro.texi:110 R-intro.texi:2954 R-intro.texi:3358 R-intro.texi:3360 R-intro.texi:3367 R-intro.texi:3367 R-intro.texi:3383 R-intro.texi:3503
#, no-wrap
msgid "Loops and conditional execution"
msgstr ""

#. type: node
#: R-intro.texi:110 R-intro.texi:3358 R-intro.texi:3503 R-intro.texi:3504 R-intro.texi:3548 R-intro.texi:3548 R-intro.texi:3620 R-intro.texi:3649 R-intro.texi:3710 R-intro.texi:3740 R-intro.texi:3759 R-intro.texi:3907 R-intro.texi:4032 R-intro.texi:4091 R-intro.texi:4194
#, no-wrap
msgid "Writing your own functions"
msgstr ""

#. type: node
#: R-intro.texi:110 R-intro.texi:3503 R-intro.texi:4194 R-intro.texi:4195 R-intro.texi:4224 R-intro.texi:4224 R-intro.texi:4491 R-intro.texi:4519 R-intro.texi:4605 R-intro.texi:4677 R-intro.texi:4731 R-intro.texi:5091 R-intro.texi:5253 R-intro.texi:5336
#, no-wrap
msgid "Statistical models in R"
msgstr ""

#. type: node
#: R-intro.texi:110 R-intro.texi:4194 R-intro.texi:5336 R-intro.texi:5392 R-intro.texi:5392 R-intro.texi:5622 R-intro.texi:5782 R-intro.texi:5849 R-intro.texi:5948 R-intro.texi:6227 R-intro.texi:6398 R-intro.texi:6419
#, no-wrap
msgid "Graphics"
msgstr ""

#. type: node
#: R-intro.texi:110 R-intro.texi:221 R-intro.texi:5336 R-intro.texi:6419 R-intro.texi:6420 R-intro.texi:6421 R-intro.texi:6486 R-intro.texi:6486 R-intro.texi:6496 R-intro.texi:6512 R-intro.texi:6548
#, no-wrap
msgid "Packages"
msgstr ""

#. type: node
#: R-intro.texi:110 R-intro.texi:6419 R-intro.texi:6548 R-intro.texi:6549 R-intro.texi:6566 R-intro.texi:6566 R-intro.texi:6611 R-intro.texi:6686 R-intro.texi:6706 R-intro.texi:6736
#, no-wrap
msgid "OS facilities"
msgstr ""

#. type: node
#: R-intro.texi:110 R-intro.texi:6548 R-intro.texi:6736 R-intro.texi:6737 R-intro.texi:6968
#, no-wrap
msgid "A sample session"
msgstr ""

#. type: node
#: R-intro.texi:110 R-intro.texi:6736 R-intro.texi:6968 R-intro.texi:6969 R-intro.texi:6981 R-intro.texi:6981 R-intro.texi:7322 R-intro.texi:7392 R-intro.texi:7408 R-intro.texi:7518
#, no-wrap
msgid "Invoking R"
msgstr ""

#. type: node
#: R-intro.texi:110 R-intro.texi:6968 R-intro.texi:7518 R-intro.texi:7519 R-intro.texi:7651
#, no-wrap
msgid "The command-line editor"
msgstr ""

#. type: node
#: R-intro.texi:110 R-intro.texi:7518 R-intro.texi:7651 R-intro.texi:7652 R-intro.texi:7656
#, no-wrap
msgid "Function and variable index"
msgstr ""

#. type: node
#: R-intro.texi:110 R-intro.texi:7651 R-intro.texi:7656 R-intro.texi:7657 R-intro.texi:7661
#, no-wrap
msgid "Concept index"
msgstr ""

#. type: appendix
#: R-intro.texi:110 R-intro.texi:7656 R-intro.texi:7661 R-intro.texi:7662
#, no-wrap
msgid "References"
msgstr ""

#. type: Plain text
#: R-intro.texi:120
msgid ""
"This introduction to @R{} is derived from an original set of notes "
"describing the @Sl{} and @SPLUS{} environments written in 1990--2 by Bill "
"Venables and David M. Smith when at the University of Adelaide.  We have "
"made a number of small changes to reflect differences between the @R{} and "
"@Sl{} programs, and expanded some of the material."
msgstr ""

#. type: Plain text
#: R-intro.texi:124
msgid ""
"We would like to extend warm thanks to Bill Venables (and David Smith)  for "
"granting permission to distribute this modified version of the notes in this "
"way, and for being a supporter of @R{} from way back."
msgstr ""

#. type: Plain text
#: R-intro.texi:127
msgid ""
"Comments and corrections are always welcome.  Please address email "
"correspondence to @email{R-core@@R-project.org}."
msgstr ""

#. type: subheading
#: R-intro.texi:128
#, no-wrap
msgid "Suggestions to the reader"
msgstr ""

#. type: Plain text
#: R-intro.texi:133
msgid ""
"Most @R{} novices will start with the introductory session in Appendix A.  "
"This should give some familiarity with the style of @R{} sessions and more "
"importantly some instant feedback on what actually happens."
msgstr ""

#. type: Plain text
#: R-intro.texi:137
msgid ""
"Many users will come to @R{} mainly for its graphical facilities.  "
"@xref{Graphics}, which can be read at almost any time and need not wait "
"until all the preceding sections have been digested."
msgstr ""

#. type: node
#: R-intro.texi:156 R-intro.texi:158 R-intro.texi:159 R-intro.texi:194
#, no-wrap
msgid "The R environment"
msgstr ""

#. type: node
#: R-intro.texi:156 R-intro.texi:158 R-intro.texi:194 R-intro.texi:195 R-intro.texi:219
#, no-wrap
msgid "Related software and documentation"
msgstr ""

#. type: node
#: R-intro.texi:156 R-intro.texi:194 R-intro.texi:219 R-intro.texi:220 R-intro.texi:246
#, no-wrap
msgid "R and statistics"
msgstr ""

#. type: node
#: R-intro.texi:156 R-intro.texi:219 R-intro.texi:246 R-intro.texi:247 R-intro.texi:266
#, no-wrap
msgid "R and the window system"
msgstr ""

#. type: node
#: R-intro.texi:156 R-intro.texi:246 R-intro.texi:266 R-intro.texi:267 R-intro.texi:346
#, no-wrap
msgid "Using R interactively"
msgstr ""

#. type: node
#: R-intro.texi:156 R-intro.texi:266 R-intro.texi:346 R-intro.texi:424
#, no-wrap
msgid "Getting help"
msgstr ""

#. type: node
#: R-intro.texi:156 R-intro.texi:346 R-intro.texi:424 R-intro.texi:473
#, no-wrap
msgid "R commands; case sensitivity etc"
msgstr ""

#. type: node
#: R-intro.texi:156 R-intro.texi:424 R-intro.texi:473 R-intro.texi:474 R-intro.texi:494
#, no-wrap
msgid "Recall and correction of previous commands"
msgstr ""

#. type: node
#: R-intro.texi:156 R-intro.texi:473 R-intro.texi:494 R-intro.texi:495 R-intro.texi:526
#, no-wrap
msgid "Executing commands from or diverting output to a file"
msgstr ""

#. type: section
#: R-intro.texi:156 R-intro.texi:494 R-intro.texi:526 R-intro.texi:527
#, no-wrap
msgid "Data permanency and removing objects"
msgstr ""

#. type: Plain text
#: R-intro.texi:164
msgid ""
"@R{} is an integrated suite of software facilities for data manipulation, "
"calculation and graphical display.  Among other things it has"
msgstr ""

#. type: itemize
#: R-intro.texi:168
msgid "an effective data handling and storage facility,"
msgstr ""

#. type: itemize
#: R-intro.texi:170
msgid "a suite of operators for calculations on arrays, in particular matrices,"
msgstr ""

#. type: itemize
#: R-intro.texi:173
msgid ""
"a large, coherent, integrated collection of intermediate tools for data "
"analysis,"
msgstr ""

#. type: itemize
#: R-intro.texi:176
msgid ""
"graphical facilities for data analysis and display either directly at the "
"computer or on hardcopy, and"
msgstr ""

#. type: itemize
#: R-intro.texi:181
msgid ""
"a well developed, simple and effective programming language (called `S')  "
"which includes conditionals, loops, user defined recursive functions and "
"input and output facilities.  (Indeed most of the system supplied functions "
"are themselves written in the @Sl{} language.)"
msgstr ""

#. type: Plain text
#: R-intro.texi:187
msgid ""
"The term ``environment'' is intended to characterize it as a fully planned "
"and coherent system, rather than an incremental accretion of very specific "
"and inflexible tools, as is frequently the case with other data analysis "
"software."
msgstr ""

#. type: Plain text
#: R-intro.texi:193
msgid ""
"@R{} is very much a vehicle for newly developing methods of interactive data "
"analysis.  It has developed rapidly, and has been extended by a large "
"collection of @emph{packages}.  However, most programs written in @R{} are "
"essentially ephemeral, written for a single piece of data analysis."
msgstr ""

#. type: Plain text
#: R-intro.texi:200
msgid ""
"@R{} can be regarded as an implementation of the @Sl{} language which was "
"developed at Bell Laboratories by Rick Becker, John Chambers and Allan "
"Wilks, and also forms the basis of the @SPLUS{} systems."
msgstr ""

#. type: Plain text
#: R-intro.texi:212
msgid ""
"The evolution of the @Sl{} language is characterized by four books by John "
"Chambers and coauthors.  For @R{}, the basic reference is @emph{The New "
"@Sl{} Language: A Programming Environment for Data Analysis and Graphics} by "
"Richard A.@: Becker, John M.@: Chambers and Allan R.@: Wilks.  The new "
"features of the 1991 release of @Sl{} are covered in @emph{Statistical "
"Models in @Sl{}} edited by John M.@: Chambers and Trevor J.@: Hastie.  The "
"formal methods and classes of the @pkg{methods} package are based on those "
"described in @emph{Programming with Data} by John M.@: Chambers.  "
"@xref{References}, for precise references."
msgstr ""

#. type: Plain text
#: R-intro.texi:218
msgid ""
"There are now a number of books which describe how to use @R{} for data "
"analysis and statistics, and documentation for @Sl{}/@SPLUS{} can typically "
"be used with @R{}, keeping the differences between the @Sl{} implementations "
"in mind.  @xref{What documentation exists for R?, , , R-FAQ, The R "
"statistical system FAQ}."
msgstr ""

#. type: Plain text
#: R-intro.texi:233
msgid ""
"Our introduction to the @R{} environment did not mention @emph{statistics}, "
"yet many people use @R{} as a statistics system.  We prefer to think of it "
"of an environment within which many classical and modern statistical "
"techniques have been implemented.  A few of these are built into the base "
"@R{} environment, but many are supplied as @emph{packages}.  There are about "
"25 packages supplied with @R{} (called ``standard'' and ``recommended'' "
"packages) and many more are available through the @acronym{CRAN} family of "
"Internet sites (via @uref{https://CRAN.R-project.org}) and elsewhere.  More "
"details on packages are given later (@pxref{Packages})."
msgstr ""

#. type: Plain text
#: R-intro.texi:237
msgid ""
"Most classical statistics and much of the latest methodology is available "
"for use with @R{}, but users may need to be prepared to do a little work to "
"find it."
msgstr ""

#. type: Plain text
#: R-intro.texi:245
msgid ""
"There is an important difference in philosophy between @Sl{} (and hence "
"@R{}) and the other main statistical systems.  In @Sl{} a statistical "
"analysis is normally done as a series of steps, with intermediate results "
"being stored in objects.  Thus whereas SAS and SPSS will give copious output "
"from a regression or discriminant analysis, @R{} will give minimal output "
"and store the results in a fit object for subsequent interrogation by "
"further @R{} functions."
msgstr ""

#. type: Plain text
#: R-intro.texi:254
msgid ""
"The most convenient way to use @R{} is at a graphics workstation running a "
"windowing system.  This guide is aimed at users who have this facility.  In "
"particular we will occasionally refer to the use of @R{} on an X window "
"system although the vast bulk of what is said applies generally to any "
"implementation of the @R{} environment."
msgstr ""

#. type: Plain text
#: R-intro.texi:260
msgid ""
"Most users will find it necessary to interact directly with the operating "
"system on their computer from time to time.  In this guide, we mainly "
"discuss interaction with the operating system on UNIX machines.  If you are "
"running @R{} under Windows or OS X you will need to make some small "
"adjustments."
msgstr ""

#. type: Plain text
#: R-intro.texi:265
msgid ""
"Setting up a workstation to take full advantage of the customizable features "
"of @R{} is a straightforward if somewhat tedious procedure, and will not be "
"considered further here.  Users in difficulty should seek local expert help."
msgstr ""

#. type: Plain text
#: R-intro.texi:275
msgid ""
"When you use the @R{} program it issues a prompt when it expects input "
"commands.  The default prompt is @samp{@code{>}}, which on UNIX might be the "
"same as the shell prompt, and so it may appear that nothing is happening.  "
"However, as we shall see, it is easy to change to a different @R{} prompt if "
"you wish.  We will assume that the UNIX shell prompt is @samp{@code{$}}."
msgstr ""

#. type: Plain text
#: R-intro.texi:278
msgid ""
"In using @R{} under UNIX the suggested procedure for the first occasion is "
"as follows:"
msgstr ""

#. type: enumerate
#: R-intro.texi:284
msgid ""
"Create a separate sub-directory, say @file{work}, to hold data files on "
"which you will use @R{} for this problem.  This will be the working "
"directory whenever you use @R{} for this particular problem."
msgstr ""

#. type: example
#: R-intro.texi:288
#, no-wrap
msgid ""
"$ mkdir work\n"
"$ cd work\n"
msgstr ""

#. type: enumerate
#: R-intro.texi:292
msgid "Start the @R{} program with the command"
msgstr ""

#. type: example
#: R-intro.texi:295
#, no-wrap
msgid "$ R\n"
msgstr ""

#. type: enumerate
#: R-intro.texi:299
msgid "At this point @R{} commands may be issued (see later)."
msgstr ""

#. type: enumerate
#: R-intro.texi:302
msgid "To quit the @R{} program the command is"
msgstr ""

#. type: example
#: R-intro.texi:305
#, no-wrap
msgid "> q()\n"
msgstr ""

#. type: enumerate
#: R-intro.texi:314
msgid ""
"At this point you will be asked whether you want to save the data from your "
"@R{} session.  On some systems this will bring up a dialog box, and on "
"others you will receive a text prompt to which you can respond @kbd{yes}, "
"@kbd{no} or @kbd{cancel} (a single letter abbreviation will do) to save the "
"data before quitting, quit without saving, or return to the @R{} session.  "
"Data which is saved will be available in future @R{} sessions."
msgstr ""

#. type: Plain text
#: R-intro.texi:318
msgid "Further @R{} sessions are simple."
msgstr ""

#. type: enumerate
#: R-intro.texi:323
msgid "Make @file{work} the working directory and start the program as before:"
msgstr ""

#. type: example
#: R-intro.texi:327
#, no-wrap
msgid ""
"$ cd work\n"
"$ R\n"
msgstr ""

#. type: enumerate
#: R-intro.texi:332
msgid ""
"Use the @R{} program, terminating with the @code{q()} command at the end of "
"the session."
msgstr ""

#. type: Plain text
#: R-intro.texi:339
msgid ""
"To use @R{} under Windows the procedure to follow is basically the same.  "
"Create a folder as the working directory, and set that in the @file{Start "
"In} field in your @R{} shortcut.  Then launch @R{} by double clicking on the "
"icon."
msgstr ""

#. type: section
#: R-intro.texi:340
#, no-wrap
msgid "An introductory session"
msgstr ""

#. type: Plain text
#: R-intro.texi:345
msgid ""
"Readers wishing to get a feel for @R{} at a computer before proceeding are "
"strongly advised to work through the introductory session given in @ref{A "
"sample session}."
msgstr ""

#. type: section
#: R-intro.texi:347
#, no-wrap
msgid "Getting help with functions and features"
msgstr ""

#. type: findex
#: R-intro.texi:348 R-intro.texi:357
#, no-wrap
msgid "help"
msgstr ""

#. type: Plain text
#: R-intro.texi:353
msgid ""
"@R{} has an inbuilt help facility similar to the @code{man} facility of "
"UNIX.  To get more information on any specific named function, for example "
"@code{solve}, the command is"
msgstr ""

#. type: example
#: R-intro.texi:356
#, no-wrap
msgid "> help(solve)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:360 R-intro.texi:1884
msgid "An alternative is"
msgstr ""

#. type: example
#: R-intro.texi:363
#, no-wrap
msgid "> ?solve\n"
msgstr ""

#. type: findex
#: R-intro.texi:364
#, no-wrap
msgid "?"
msgstr ""

#. type: Plain text
#: R-intro.texi:370
msgid ""
"For a feature specified by special characters, the argument must be enclosed "
"in double or single quotes, making it a ``character string'': This is also "
"necessary for a few words with syntactic meaning including @code{if}, "
"@code{for} and @code{function}."
msgstr ""

#. type: example
#: R-intro.texi:373
#, no-wrap
msgid "> help(\"[[\")\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:378
msgid ""
"Either form of quote mark may be used to escape the other, as in the string "
"@code{\"It's important\"}.  Our convention is to use double quote marks for "
"preference."
msgstr ""

#. type: Plain text
#: R-intro.texi:381
msgid "On most @R{} installations help is available in @HTML{} format by running"
msgstr ""

#. type: example
#: R-intro.texi:384 R-intro.texi:6474
#, no-wrap
msgid "> help.start()\n"
msgstr ""

#. type: findex
#: R-intro.texi:385
#, no-wrap
msgid "help.start"
msgstr ""

#. type: Plain text
#: R-intro.texi:395
msgid ""
"which will launch a Web browser that allows the help pages to be browsed "
"with hyperlinks.  On UNIX, subsequent help requests are sent to the "
"@HTML{}-based help system.  The `Search Engine and Keywords' link in the "
"page loaded by @code{help.start()} is particularly useful as it is contains "
"a high-level concept list which searches though available functions.  It can "
"be a great way to get your bearings quickly and to understand the breadth of "
"what @R{} has to offer."
msgstr ""

#. type: findex
#: R-intro.texi:396
#, no-wrap
msgid "help.search"
msgstr ""

#. type: Plain text
#: R-intro.texi:400
msgid ""
"The @code{help.search} command (alternatively @code{??})  allows searching "
"for help in various ways. For example,"
msgstr ""

#. type: example
#: R-intro.texi:403
#, no-wrap
msgid "> ??solve\n"
msgstr ""

#. type: findex
#: R-intro.texi:404
#, no-wrap
msgid "??"
msgstr ""

#. type: Plain text
#: R-intro.texi:407
msgid "Try @code{?help.search} for details and more examples."
msgstr ""

#. type: Plain text
#: R-intro.texi:409
msgid "The examples on a help topic can normally be run by"
msgstr ""

#. type: example
#: R-intro.texi:412
#, no-wrap
msgid "> example(@var{topic})\n"
msgstr ""

#. type: findex
#: R-intro.texi:413
#, no-wrap
msgid "example"
msgstr ""

#. type: Plain text
#: R-intro.texi:416
msgid "Windows versions of @R{} have other optional help systems: use"
msgstr ""

#. type: example
#: R-intro.texi:419
#, no-wrap
msgid "> ?help\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:423
msgid "for further details."
msgstr ""

#. type: section
#: R-intro.texi:425
#, no-wrap
msgid "R commands, case sensitivity, etc."
msgstr ""

#. type: Plain text
#: R-intro.texi:440
msgid ""
"Technically @R{} is an @emph{expression language} with a very simple "
"syntax.  It is @emph{case sensitive} as are most UNIX based packages, so "
"@code{A} and @code{a} are different symbols and would refer to different "
"variables.  The set of symbols which can be used in @R{} names depends on "
"the operating system and country within which @R{} is being run (technically "
"on the @emph{locale} in use).  Normally all alphanumeric symbols are "
"allowed@footnote{For portable @R{} code (including that to be used in @R{} "
"packages) only A--Za--z0--9 should be used.} (and in some countries this "
"includes accented letters) plus @samp{@code{.}} and @samp{@code{_}}, with "
"the restriction that a name must start with @samp{@code{.}} or a letter, and "
"if it starts with @samp{@code{.}} the second character must not be a digit.  "
"Names are effectively unlimited in length."
msgstr ""

#. type: Plain text
#: R-intro.texi:446
msgid ""
"Elementary commands consist of either @emph{expressions} or "
"@emph{assignments}.  If an expression is given as a command, it is "
"evaluated, printed (unless specifically made invisible), and the value is "
"lost.  An assignment also evaluates an expression and passes the value to a "
"variable but the result is not automatically printed."
msgstr ""

#. type: Plain text
#: R-intro.texi:454
msgid ""
"Commands are separated either by a semi-colon (@samp{@code{;}}), or by a "
"newline.  Elementary commands can be grouped together into one compound "
"expression by braces (@samp{@code{@{}} and @samp{@code{@}}}).  "
"@emph{Comments} can be put almost@footnote{@strong{not} inside strings, nor "
"within the argument list of a function definition} anywhere, starting with a "
"hashmark (@samp{@code{#}}), everything to the end of the line is a comment."
msgstr ""

#. type: Plain text
#: R-intro.texi:457
msgid ""
"If a command is not complete at the end of a line, @R{} will give a "
"different prompt, by default"
msgstr ""

#. type: example
#: R-intro.texi:460
#, no-wrap
msgid "+\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:467
msgid ""
"on second and subsequent lines and continue to read input until the command "
"is syntactically complete.  This prompt may be changed by the user.  We will "
"generally omit the continuation prompt and indicate continuation by simple "
"indenting."
msgstr ""

#. type: Plain text
#: R-intro.texi:472
msgid ""
"Command lines entered at the console are limited@footnote{some of the "
"consoles will not allow you to enter more, and amongst those which do some "
"will silently discard the excess and some will use it as the start of the "
"next line.} to about 4095 bytes (not characters)."
msgstr ""

#. type: Plain text
#: R-intro.texi:484
msgid ""
"Under many versions of UNIX and on Windows, @R{} provides a mechanism for "
"recalling and re-executing previous commands.  The vertical arrow keys on "
"the keyboard can be used to scroll forward and backward through a "
"@emph{command history}.  Once a command is located in this way, the cursor "
"can be moved within the command using the horizontal arrow keys, and "
"characters can be removed with the @key{DEL} key or added with the other "
"keys.  More details are provided later: @pxref{The command-line editor}."
msgstr ""

#. type: Plain text
#: R-intro.texi:488
msgid ""
"The recall and editing capabilities under UNIX are highly customizable.  You "
"can find out how to do this by reading the manual entry for the "
"@strong{readline} library."
msgstr ""

#. type: Plain text
#: R-intro.texi:493
msgid ""
"Alternatively, the Emacs text editor provides more general support "
"mechanisms (via @acronym{ESS}, @emph{Emacs Speaks Statistics}) for working "
"interactively with @R{}.  @xref{R and Emacs, , , R-FAQ, The R statistical "
"system FAQ}."
msgstr ""

#. type: cindex
#: R-intro.texi:496
#, no-wrap
msgid "Diverting input and output"
msgstr ""

#. type: Plain text
#: R-intro.texi:501
msgid ""
"If commands@footnote{of unlimited length.} are stored in an external file, "
"say @file{commands.R} in the working directory @file{work}, they may be "
"executed at any time in an @R{} session with the command"
msgstr ""

#. type: example
#: R-intro.texi:504
#, no-wrap
msgid "> source(\"commands.R\")\n"
msgstr ""

#. type: findex
#: R-intro.texi:505
#, no-wrap
msgid "source"
msgstr ""

#. type: Plain text
#: R-intro.texi:509
msgid ""
"For Windows @strong{Source} is also available on the @strong{File} menu.  "
"The function @code{sink},"
msgstr ""

#. type: example
#: R-intro.texi:512
#, no-wrap
msgid "> sink(\"record.lis\")\n"
msgstr ""

#. type: findex
#: R-intro.texi:513
#, no-wrap
msgid "sink"
msgstr ""

#. type: Plain text
#: R-intro.texi:518
msgid ""
"will divert all subsequent output from the console to an external file, "
"@file{record.lis}.  The command"
msgstr ""

#. type: example
#: R-intro.texi:521
#, no-wrap
msgid "> sink()\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:525
msgid "restores it to the console once again."
msgstr ""

#. type: Plain text
#: R-intro.texi:533
msgid ""
"The entities that @R{} creates and manipulates are known as @emph{objects}.  "
"These may be variables, arrays of numbers, character strings, functions, or "
"more general structures built from such components."
msgstr ""

#. type: Plain text
#: R-intro.texi:536
msgid ""
"During an @R{} session, objects are created and stored by name (we discuss "
"this process in the next session).  The @R{} command"
msgstr ""

#. type: example
#: R-intro.texi:539
#, no-wrap
msgid "> objects()\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:545
msgid ""
"(alternatively, @code{ls()}) can be used to display the names of (most of) "
"the objects which are currently stored within @R{}.  The collection of "
"objects currently stored is called the @emph{workspace}."
msgstr ""

#. type: cindex
#: R-intro.texi:545
#, no-wrap
msgid "Workspace"
msgstr ""

#. type: Plain text
#: R-intro.texi:548
msgid "To remove objects the function @code{rm} is available:"
msgstr ""

#. type: example
#: R-intro.texi:551
#, no-wrap
msgid "> rm(x, y, z, ink, junk, temp, foo, bar)\n"
msgstr ""

#. type: findex
#: R-intro.texi:552
#, no-wrap
msgid "rm"
msgstr ""

#. type: cindex
#: R-intro.texi:553
#, no-wrap
msgid "Removing objects"
msgstr ""

#. type: Plain text
#: R-intro.texi:564
msgid ""
"All objects created during an @R{} session can be stored permanently in a "
"file for use in future @R{} sessions.  At the end of each @R{} session you "
"are given the opportunity to save all the currently available objects.  If "
"you indicate that you want to do this, the objects are written to a file "
"called @file{.RData}@footnote{The leading ``dot'' in this file name makes it "
"@emph{invisible} in normal file listings in UNIX, and in default GUI file "
"listings on OS X and Windows.} in the current directory, and the command "
"lines used in the session are saved to a file called @file{.Rhistory}."
msgstr ""

#. type: Plain text
#: R-intro.texi:568
msgid ""
"When @R{} is started at later time from the same directory it reloads the "
"workspace from this file.  At the same time the associated commands history "
"is reloaded."
msgstr ""

#. type: Plain text
#: R-intro.texi:575
msgid ""
"It is recommended that you should use separate working directories for "
"analyses conducted with @R{}.  It is quite common for objects with names "
"@code{x} and @code{y} to be created during an analysis.  Names like this are "
"often meaningful in the context of a single analysis, but it can be quite "
"hard to decide what they might be when the several analyses have been "
"conducted in the same directory."
msgstr ""

#. type: chapter
#: R-intro.texi:577
#, no-wrap
msgid "Simple manipulations; numbers and vectors"
msgstr ""

#. type: cindex
#: R-intro.texi:578
#, no-wrap
msgid "Vectors"
msgstr ""

#. type: node
#: R-intro.texi:589 R-intro.texi:591 R-intro.texi:592 R-intro.texi:667
#, no-wrap
msgid "Vectors and assignment"
msgstr ""

#. type: node
#: R-intro.texi:589 R-intro.texi:591 R-intro.texi:667 R-intro.texi:668 R-intro.texi:778
#, no-wrap
msgid "Vector arithmetic"
msgstr ""

#. type: node
#: R-intro.texi:589 R-intro.texi:667 R-intro.texi:776 R-intro.texi:778 R-intro.texi:779 R-intro.texi:861
#, no-wrap
msgid "Generating regular sequences"
msgstr ""

#. type: node
#: R-intro.texi:589 R-intro.texi:778 R-intro.texi:861 R-intro.texi:862 R-intro.texi:910
#, no-wrap
msgid "Logical vectors"
msgstr ""

#. type: node
#: R-intro.texi:589 R-intro.texi:861 R-intro.texi:910 R-intro.texi:911 R-intro.texi:912 R-intro.texi:967
#, no-wrap
msgid "Missing values"
msgstr ""

#. type: node
#: R-intro.texi:589 R-intro.texi:910 R-intro.texi:967 R-intro.texi:968 R-intro.texi:969 R-intro.texi:1019
#, no-wrap
msgid "Character vectors"
msgstr ""

#. type: node
#: R-intro.texi:589 R-intro.texi:967 R-intro.texi:1019 R-intro.texi:1142
#, no-wrap
msgid "Index vectors"
msgstr ""

#. type: section
#: R-intro.texi:589 R-intro.texi:1019 R-intro.texi:1142 R-intro.texi:1143
#, no-wrap
msgid "Other types of objects"
msgstr ""

#. type: Plain text
#: R-intro.texi:599
msgid ""
"@R{} operates on named @emph{data structures}.  The simplest such structure "
"is the numeric @emph{vector}, which is a single entity consisting of an "
"ordered collection of numbers.  To set up a vector named @code{x}, say, "
"consisting of five numbers, namely 10.4, 5.6, 3.1, 6.4 and 21.7, use the "
"@R{} command"
msgstr ""

#. type: example
#: R-intro.texi:602
#, no-wrap
msgid "> x <- c(10.4, 5.6, 3.1, 6.4, 21.7)\n"
msgstr ""

#. type: findex
#: R-intro.texi:603 R-intro.texi:986 R-intro.texi:2317 R-intro.texi:2497
#, no-wrap
msgid "c"
msgstr ""

#. type: findex
#: R-intro.texi:604
#, no-wrap
msgid "vector"
msgstr ""

#. type: Plain text
#: R-intro.texi:612
msgid ""
"This is an @emph{assignment} statement using the @emph{function} @code{c()} "
"which in this context can take an arbitrary number of vector "
"@emph{arguments} and whose value is a vector got by concatenating its "
"arguments end to end.@footnote{With other than vector types of argument, "
"such as @code{list} mode arguments, the action of @code{c()} is rather "
"different.  See @ref{Concatenating lists}.}"
msgstr ""

#. type: Plain text
#: R-intro.texi:615
msgid ""
"A number occurring by itself in an expression is taken as a vector of length "
"one."
msgstr ""

#. type: Plain text
#: R-intro.texi:623
msgid ""
"Notice that the assignment operator (@samp{@code{<-}}), which consists of "
"the two characters @samp{@code{<}} (``less than'') and @samp{@code{-}} "
"(``minus'') occurring strictly side-by-side and it `points' to the object "
"receiving the value of the expression.  In most contexts the @samp{@code{=}} "
"operator can be used as an alternative."
msgstr ""

#. type: cindex
#: R-intro.texi:623
#, no-wrap
msgid "Assignment"
msgstr ""

#. type: Plain text
#: R-intro.texi:627
msgid ""
"Assignment can also be made using the function @code{assign()}.  An "
"equivalent way of making the same assignment as above is with:"
msgstr ""

#. type: example
#: R-intro.texi:630
#, no-wrap
msgid "> assign(\"x\", c(10.4, 5.6, 3.1, 6.4, 21.7))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:635
msgid ""
"The usual operator, @code{<-}, can be thought of as a syntactic short-cut to "
"this."
msgstr ""

#. type: Plain text
#: R-intro.texi:639
msgid ""
"Assignments can also be made in the other direction, using the obvious "
"change in the assignment operator.  So the same assignment could be made "
"using"
msgstr ""

#. type: example
#: R-intro.texi:642
#, no-wrap
msgid "> c(10.4, 5.6, 3.1, 6.4, 21.7) -> x\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:648
msgid ""
"If an expression is used as a complete command, the value is printed "
"@emph{and lost}@footnote{Actually, it is still available as "
"@code{.Last.value} before any other statements are executed.}.  So now if we "
"were to use the command"
msgstr ""

#. type: example
#: R-intro.texi:651
#, no-wrap
msgid "> 1/x\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:656
msgid ""
"the reciprocals of the five values would be printed at the terminal (and the "
"value of @code{x}, of course, unchanged)."
msgstr ""

#. type: Plain text
#: R-intro.texi:658
msgid "The further assignment"
msgstr ""

#. type: example
#: R-intro.texi:661
#, no-wrap
msgid "> y <- c(x, 0, x)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:666
msgid ""
"would create a vector @code{y} with 11 entries consisting of two copies of "
"@code{x} with a zero in the middle place."
msgstr ""

#. type: Plain text
#: R-intro.texi:679
msgid ""
"Vectors can be used in arithmetic expressions, in which case the operations "
"are performed element by element.  Vectors occurring in the same expression "
"need not all be of the same length.  If they are not, the value of the "
"expression is a vector with the same length as the longest vector which "
"occurs in the expression.  Shorter vectors in the expression are "
"@emph{recycled} as often as need be (perhaps fractionally) until they match "
"the length of the longest vector.  In particular a constant is simply "
"repeated.  So with the above assignments the command"
msgstr ""

#. type: cindex
#: R-intro.texi:679 R-intro.texi:1842
#, no-wrap
msgid "Recycling rule"
msgstr ""

#. type: example
#: R-intro.texi:683
#, no-wrap
msgid "> v <- 2*x + y + 1\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:689
msgid ""
"generates a new vector @code{v} of length 11 constructed by adding together, "
"element by element, @code{2*x} repeated 2.2 times, @code{y} repeated just "
"once, and @code{1} repeated 11 times."
msgstr ""

#. type: cindex
#: R-intro.texi:690
#, no-wrap
msgid "Arithmetic functions and operators"
msgstr ""

#. type: Plain text
#: R-intro.texi:693
msgid ""
"The elementary arithmetic operators are the usual @code{+}, @code{-}, "
"@code{*}, @code{/} and @code{^} for raising to a power."
msgstr ""

#. type: findex
#: R-intro.texi:693
#, no-wrap
msgid "+"
msgstr ""

#. type: findex
#: R-intro.texi:694
#, no-wrap
msgid "-"
msgstr ""

#. type: findex
#: R-intro.texi:695
#, no-wrap
msgid "*"
msgstr ""

#. type: findex
#: R-intro.texi:696
#, no-wrap
msgid "/"
msgstr ""

#. type: findex
#: R-intro.texi:697
#, no-wrap
msgid "^"
msgstr ""

#. type: Plain text
#: R-intro.texi:701
msgid ""
"In addition all of the common arithmetic functions are available.  "
"@code{log}, @code{exp}, @code{sin}, @code{cos}, @code{tan}, @code{sqrt}, and "
"so on, all have their usual meaning."
msgstr ""

#. type: findex
#: R-intro.texi:701
#, no-wrap
msgid "log"
msgstr ""

#. type: findex
#: R-intro.texi:702
#, no-wrap
msgid "exp"
msgstr ""

#. type: findex
#: R-intro.texi:703
#, no-wrap
msgid "sin"
msgstr ""

#. type: findex
#: R-intro.texi:704
#, no-wrap
msgid "cos"
msgstr ""

#. type: findex
#: R-intro.texi:705
#, no-wrap
msgid "tan"
msgstr ""

#. type: findex
#: R-intro.texi:706
#, no-wrap
msgid "sqrt"
msgstr ""

#. type: Plain text
#: R-intro.texi:709
msgid ""
"@code{max} and @code{min} select the largest and smallest elements of a "
"vector respectively."
msgstr ""

#. type: findex
#: R-intro.texi:709
#, no-wrap
msgid "max"
msgstr ""

#. type: findex
#: R-intro.texi:710
#, no-wrap
msgid "min"
msgstr ""

#. type: Plain text
#: R-intro.texi:713
msgid ""
"@code{range} is a function whose value is a vector of length two, namely "
"@code{c(min(x), max(x))}."
msgstr ""

#. type: findex
#: R-intro.texi:713
#, no-wrap
msgid "range"
msgstr ""

#. type: Plain text
#: R-intro.texi:715
msgid "@code{length(x)} is the number of elements in @code{x},"
msgstr ""

#. type: findex
#: R-intro.texi:715 R-intro.texi:1246
#, no-wrap
msgid "length"
msgstr ""

#. type: Plain text
#: R-intro.texi:717
msgid "@code{sum(x)} gives the total of the elements in @code{x},"
msgstr ""

#. type: findex
#: R-intro.texi:717
#, no-wrap
msgid "sum"
msgstr ""

#. type: Plain text
#: R-intro.texi:719
msgid "and @code{prod(x)} their product."
msgstr ""

#. type: findex
#: R-intro.texi:719
#, no-wrap
msgid "prod"
msgstr ""

#. type: Plain text
#: R-intro.texi:723
msgid ""
"Two statistical functions are @code{mean(x)} which calculates the sample "
"mean, which is the same as @code{sum(x)/length(x)},"
msgstr ""

#. type: findex
#: R-intro.texi:723
#, no-wrap
msgid "mean"
msgstr ""

#. type: Plain text
#: R-intro.texi:725
msgid "and @code{var(x)} which gives"
msgstr ""

#. type: example
#: R-intro.texi:728
#, no-wrap
msgid "sum((x-mean(x))^2)/(length(x)-1)\n"
msgstr ""

#. type: findex
#: R-intro.texi:729 R-intro.texi:1525
#, no-wrap
msgid "var"
msgstr ""

#. type: Plain text
#: R-intro.texi:736
msgid ""
"or sample variance.  If the argument to @code{var()} is an "
"@math{n}-by-@math{p} matrix the value is a @math{p}-by-@math{p} sample "
"covariance matrix got by regarding the rows as independent @math{p}-variate "
"sample vectors."
msgstr ""

#. type: Plain text
#: R-intro.texi:741
msgid ""
"@code{sort(x)} returns a vector of the same size as @code{x} with the "
"elements arranged in increasing order; however there are other more flexible "
"sorting facilities available (see @code{order()} or @code{sort.list()} which "
"produce a permutation to do the sorting)."
msgstr ""

#. type: findex
#: R-intro.texi:741
#, no-wrap
msgid "sort"
msgstr ""

#. type: findex
#: R-intro.texi:742
#, no-wrap
msgid "order"
msgstr ""

#. type: Plain text
#: R-intro.texi:750
msgid ""
"Note that @code{max} and @code{min} select the largest and smallest values "
"in their arguments, even if they are given several vectors.  The "
"@emph{parallel} maximum and minimum functions @code{pmax} and @code{pmin} "
"return a vector (of length equal to their longest argument)  that contains "
"in each element the largest (smallest) element in that position in any of "
"the input vectors."
msgstr ""

#. type: findex
#: R-intro.texi:750
#, no-wrap
msgid "pmax"
msgstr ""

#. type: findex
#: R-intro.texi:751
#, no-wrap
msgid "pmin"
msgstr ""

#. type: Plain text
#: R-intro.texi:757
msgid ""
"For most purposes the user will not be concerned if the ``numbers'' in a "
"numeric vector are integers, reals or even complex.  Internally calculations "
"are done as double precision real numbers, or double precision complex "
"numbers if the input data are complex."
msgstr ""

#. type: Plain text
#: R-intro.texi:759
msgid "To work with complex numbers, supply an explicit complex part.  Thus"
msgstr ""

#. type: example
#: R-intro.texi:762
#, no-wrap
msgid "sqrt(-17)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:766
msgid "will give @code{NaN} and a warning, but"
msgstr ""

#. type: example
#: R-intro.texi:769
#, no-wrap
msgid "sqrt(-17+0i)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:773
msgid "will do the computations as complex numbers."
msgstr ""

#. type: cindex
#: R-intro.texi:780
#, no-wrap
msgid "Regular sequences"
msgstr ""

#. type: Plain text
#: R-intro.texi:787
msgid ""
"@R{} has a number of facilities for generating commonly used sequences of "
"numbers.  For example @code{1:30} is the vector @code{c(1, 2, @dots{}, 29, "
"30)}."
msgstr ""

#. type: findex
#: R-intro.texi:788
#, no-wrap
msgid ":"
msgstr ""

#. type: Plain text
#: R-intro.texi:795
msgid ""
"The colon operator has high priority within an expression, so, for example "
"@code{2*1:15} is the vector @code{c(2, 4, @dots{}, 28, 30)}.  Put @code{n <- "
"10} and compare the sequences @code{1:n-1} and @code{1:(n-1)}."
msgstr ""

#. type: Plain text
#: R-intro.texi:798
msgid "The construction @code{30:1} may be used to generate a sequence backwards."
msgstr ""

#. type: findex
#: R-intro.texi:799
#, no-wrap
msgid "seq"
msgstr ""

#. type: Plain text
#: R-intro.texi:806
msgid ""
"The function @code{seq()} is a more general facility for generating "
"sequences.  It has five arguments, only some of which may be specified in "
"any one call.  The first two arguments, if given, specify the beginning and "
"end of the sequence, and if these are the only two arguments given the "
"result is the same as the colon operator.  That is @code{seq(2,10)} is the "
"same vector as @code{2:10}."
msgstr ""

#. type: Plain text
#: R-intro.texi:817
msgid ""
"Arguments to @code{seq()}, and to many other @R{} functions, can also be "
"given in named form, in which case the order in which they appear is "
"irrelevant.  The first two arguments may be named @code{from=@var{value}} "
"and @code{to=@var{value}}; thus @code{seq(1,30)}, @code{seq(from=1, to=30)} "
"and @code{seq(to=30, from=1)} are all the same as @code{1:30}.  The next two "
"arguments to @code{seq()} may be named @code{by=@var{value}} and "
"@code{length=@var{value}}, which specify a step size and a length for the "
"sequence respectively.  If neither of these is given, the default "
"@code{by=1} is assumed."
msgstr ""

#. type: Plain text
#: R-intro.texi:819 R-intro.texi:999 R-intro.texi:1123 R-intro.texi:4504
msgid "For example"
msgstr ""

#. type: example
#: R-intro.texi:822
#, no-wrap
msgid "> seq(-5, 5, by=.2) -> s3\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:827
msgid ""
"generates in @code{s3} the vector @code{c(-5.0, -4.8, -4.6, @dots{}, 4.6, "
"4.8, 5.0)}.  Similarly"
msgstr ""

#. type: example
#: R-intro.texi:830
#, no-wrap
msgid "> s4 <- seq(length=51, from=-5, by=.2)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:834
msgid "generates the same vector in @code{s4}."
msgstr ""

#. type: Plain text
#: R-intro.texi:839
msgid ""
"The fifth argument may be named @code{along=@var{vector}}, which is normally "
"used as the only argument to create the sequence @code{1, 2, @dots{}, "
"length(@var{vector})}, or the empty sequence if the vector is empty (as it "
"can be)."
msgstr ""

#. type: Plain text
#: R-intro.texi:841
msgid "A related function is @code{rep()}"
msgstr ""

#. type: findex
#: R-intro.texi:841
#, no-wrap
msgid "rep"
msgstr ""

#. type: Plain text
#: R-intro.texi:844
msgid ""
"which can be used for replicating an object in various complicated ways.  "
"The simplest form is"
msgstr ""

#. type: example
#: R-intro.texi:847
#, no-wrap
msgid "> s5 <- rep(x, times=5)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:852
msgid ""
"which will put five copies of @code{x} end-to-end in @code{s5}.  Another "
"useful version is"
msgstr ""

#. type: example
#: R-intro.texi:855
#, no-wrap
msgid "> s6 <- rep(x, each=5)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:860
msgid ""
"which repeats each element of @code{x} five times before moving on to the "
"next."
msgstr ""

#. type: Plain text
#: R-intro.texi:872
msgid ""
"As well as numerical vectors, @R{} allows manipulation of logical "
"quantities.  The elements of a logical vector can have the values "
"@code{TRUE}, @code{FALSE}, and @code{NA} (for ``not available'', see "
"below).  The first two are often abbreviated as @code{T} and @code{F}, "
"respectively.  Note however that @code{T} and @code{F} are just variables "
"which are set to @code{TRUE} and @code{FALSE} by default, but are not "
"reserved words and hence can be overwritten by the user.  Hence, you should "
"always use @code{TRUE} and @code{FALSE}."
msgstr ""

#. type: findex
#: R-intro.texi:872
#, no-wrap
msgid "FALSE"
msgstr ""

#. type: findex
#: R-intro.texi:873
#, no-wrap
msgid "TRUE"
msgstr ""

#. type: findex
#: R-intro.texi:874
#, no-wrap
msgid "F"
msgstr ""

#. type: findex
#: R-intro.texi:875
#, no-wrap
msgid "T"
msgstr ""

#. type: Plain text
#: R-intro.texi:878
msgid "Logical vectors are generated by @emph{conditions}.  For example"
msgstr ""

#. type: example
#: R-intro.texi:881
#, no-wrap
msgid "> temp <- x > 13\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:887
msgid ""
"sets @code{temp} as a vector of the same length as @code{x} with values "
"@code{FALSE} corresponding to elements of @code{x} where the condition is "
"@emph{not} met and @code{TRUE} where it is."
msgstr ""

#. type: Plain text
#: R-intro.texi:890
msgid ""
"The logical operators are @code{<}, @code{<=}, @code{>}, @code{>=}, "
"@code{==} for exact equality and @code{!=} for inequality."
msgstr ""

#. type: findex
#: R-intro.texi:890
#, no-wrap
msgid "<"
msgstr ""

#. type: findex
#: R-intro.texi:891
#, no-wrap
msgid "<="
msgstr ""

#. type: findex
#: R-intro.texi:892
#, no-wrap
msgid ">"
msgstr ""

#. type: findex
#: R-intro.texi:893
#, no-wrap
msgid ">="
msgstr ""

#. type: findex
#: R-intro.texi:894
#, no-wrap
msgid "=="
msgstr ""

#. type: findex
#: R-intro.texi:895
#, no-wrap
msgid "!="
msgstr ""

#. type: Plain text
#: R-intro.texi:900
msgid ""
"In addition if @code{c1} and @code{c2} are logical expressions, then "
"@w{@code{c1 & c2}} is their intersection (@emph{``and''}), @w{@code{c1 | "
"c2}} is their union (@emph{``or''}), and @code{!c1} is the negation of "
"@code{c1}."
msgstr ""

#. type: findex
#: R-intro.texi:900
#, no-wrap
msgid "!"
msgstr ""

#. type: findex
#: R-intro.texi:901
#, no-wrap
msgid "|"
msgstr ""

#. type: findex
#: R-intro.texi:902
#, no-wrap
msgid "&"
msgstr ""

#. type: Plain text
#: R-intro.texi:909
msgid ""
"Logical vectors may be used in ordinary arithmetic, in which case they are "
"@emph{coerced} into numeric vectors, @code{FALSE} becoming @code{0} and "
"@code{TRUE} becoming @code{1}.  However there are situations where logical "
"vectors and their coerced numeric counterparts are not equivalent, for "
"example see the next subsection."
msgstr ""

#. type: Plain text
#: R-intro.texi:918
msgid ""
"In some cases the components of a vector may not be completely known.  When "
"an element or value is ``not available'' or a ``missing value'' in the "
"statistical sense, a place within a vector may be reserved for it by "
"assigning it the special value @code{NA}."
msgstr ""

#. type: findex
#: R-intro.texi:918
#, no-wrap
msgid "NA"
msgstr ""

#. type: Plain text
#: R-intro.texi:923
msgid ""
"In general any operation on an @code{NA} becomes an @code{NA}.  The "
"motivation for this rule is simply that if the specification of an operation "
"is incomplete, the result cannot be known and hence is not available."
msgstr ""

#. type: findex
#: R-intro.texi:924
#, no-wrap
msgid "is.na"
msgstr ""

#. type: Plain text
#: R-intro.texi:928
msgid ""
"The function @code{is.na(x)} gives a logical vector of the same size as "
"@code{x} with value @code{TRUE} if and only if the corresponding element in "
"@code{x} is @code{NA}."
msgstr ""

#. type: example
#: R-intro.texi:931
#, no-wrap
msgid "> z <- c(1:3,NA);  ind <- is.na(z)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:938
msgid ""
"Notice that the logical expression @code{x == NA} is quite different from "
"@code{is.na(x)} since @code{NA} is not really a value but a marker for a "
"quantity that is not available.  Thus @code{x == NA} is a vector of the same "
"length as @code{x} @emph{all} of whose values are @code{NA} as the logical "
"expression itself is incomplete and hence undecidable."
msgstr ""

#. type: Plain text
#: R-intro.texi:942
msgid ""
"Note that there is a second kind of ``missing'' values which are produced by "
"numerical computation, the so-called @emph{Not a Number}, @code{NaN},"
msgstr ""

#. type: findex
#: R-intro.texi:942
#, no-wrap
msgid "NaN"
msgstr ""

#. type: Plain text
#: R-intro.texi:944
msgid "values.  Examples are"
msgstr ""

#. type: example
#: R-intro.texi:947
#, no-wrap
msgid "> 0/0\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:951
msgid "or"
msgstr ""

#. type: example
#: R-intro.texi:954
#, no-wrap
msgid "> Inf - Inf\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:958
msgid "which both give @code{NaN} since the result cannot be defined sensibly."
msgstr ""

#. type: Plain text
#: R-intro.texi:962
msgid ""
"In summary, @code{is.na(xx)} is @code{TRUE} @emph{both} for @code{NA} and "
"@code{NaN} values.  To differentiate these, @code{is.nan(xx)} is only "
"@code{TRUE} for @code{NaN}s."
msgstr ""

#. type: findex
#: R-intro.texi:962
#, no-wrap
msgid "is.nan"
msgstr ""

#. type: Plain text
#: R-intro.texi:966
msgid ""
"Missing values are sometimes printed as @code{<NA>} when character vectors "
"are printed without quotes."
msgstr ""

#. type: Plain text
#: R-intro.texi:975
msgid ""
"Character quantities and character vectors are used frequently in @R{}, for "
"example as plot labels.  Where needed they are denoted by a sequence of "
"characters delimited by the double quote character, e.g., "
"@code{\"x-values\"}, @code{\"New iteration results\"}."
msgstr ""

#. type: Plain text
#: R-intro.texi:983
msgid ""
"Character strings are entered using either matching double (@code{\"}) or "
"single (@code{'}) quotes, but are printed using double quotes (or sometimes "
"without quotes).  They use C-style escape sequences, using @code{\\} as the "
"escape character, so @code{\\\\} is entered and printed as @code{\\\\}, and "
"inside double quotes @code{\"} is entered as @code{\\\"}.  Other useful "
"escape sequences are @code{\\n}, newline, @code{\\t}, tab and @code{\\b}, "
"backspace---see @command{?Quotes} for a full list."
msgstr ""

#. type: Plain text
#: R-intro.texi:986
msgid ""
"Character vectors may be concatenated into a vector by the @code{c()} "
"function; examples of their use will emerge frequently."
msgstr ""

#. type: findex
#: R-intro.texi:988
#, no-wrap
msgid "paste"
msgstr ""

#. type: Plain text
#: R-intro.texi:997
msgid ""
"The @code{paste()} function takes an arbitrary number of arguments and "
"concatenates them one by one into character strings.  Any numbers given "
"among the arguments are coerced into character strings in the evident way, "
"that is, in the same way they would be if they were printed.  The arguments "
"are by default separated in the result by a single blank character, but this "
"can be changed by the named argument, @code{sep=@var{string}}, which changes "
"it to @code{@var{string}}, possibly empty."
msgstr ""

#. type: example
#: R-intro.texi:1002
#, no-wrap
msgid "> labs <- paste(c(\"X\",\"Y\"), 1:10, sep=\"\")\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1006
msgid "makes @code{labs} into the character vector"
msgstr ""

#. type: example
#: R-intro.texi:1009
#, no-wrap
msgid ""
"c(\"X1\", \"Y2\", \"X3\", \"Y4\", \"X5\", \"Y6\", \"X7\", \"Y8\", \"X9\", "
"\"Y10\")\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1018
msgid ""
"Note particularly that recycling of short lists takes place here too; thus "
"@code{c(\"X\", \"Y\")} is repeated 5 times to match the sequence "
"@code{1:10}.  @footnote{@code{paste(..., collapse=@var{ss})} joins the "
"arguments into a single character string putting @var{ss} in between, e.g., "
"@code{ss <- \"|\"}.  There are more tools for character manipulation, see "
"the help for @code{sub} and @code{substring}.}"
msgstr ""

#. type: section
#: R-intro.texi:1020
#, no-wrap
msgid "Index vectors; selecting and modifying subsets of a data set"
msgstr ""

#. type: cindex
#: R-intro.texi:1021
#, no-wrap
msgid "Indexing vectors"
msgstr ""

#. type: Plain text
#: R-intro.texi:1028
msgid ""
"Subsets of the elements of a vector may be selected by appending to the name "
"of the vector an @emph{index vector} in square brackets.  More generally any "
"expression that evaluates to a vector may have subsets of its elements "
"similarly selected by appending an index vector in square brackets "
"immediately after the expression."
msgstr ""

#. type: Plain text
#: R-intro.texi:1034
msgid "Such index vectors can be any of four distinct types."
msgstr ""

#. type: enumerate
#: R-intro.texi:1042
msgid ""
"@strong{A logical vector}.  In this case the index vector is recycled to the "
"same length as the vector from which elements are to be selected.  Values "
"corresponding to @code{TRUE} in the index vector are selected and those "
"corresponding to @code{FALSE} are omitted.  For example"
msgstr ""

#. type: example
#: R-intro.texi:1045
#, no-wrap
msgid "> y <- x[!is.na(x)]\n"
msgstr ""

#. type: enumerate
#: R-intro.texi:1052
msgid ""
"creates (or re-creates) an object @code{y} which will contain the "
"non-missing values of @code{x}, in the same order.  Note that if @code{x} "
"has missing values, @code{y} will be shorter than @code{x}.  Also"
msgstr ""

#. type: example
#: R-intro.texi:1055
#, no-wrap
msgid "> (x+1)[(!is.na(x)) & x>0] -> z\n"
msgstr ""

#. type: enumerate
#: R-intro.texi:1061
msgid ""
"creates an object @code{z} and places in it the values of the vector "
"@code{x+1} for which the corresponding value in @code{x} was both "
"non-missing and positive."
msgstr ""

#. type: enumerate
#: R-intro.texi:1070
msgid ""
"@strong{A vector of positive integral quantities}.  In this case the values "
"in the index vector must lie in the set @{1, 2, @dots{}, "
"@code{length(x)}@}.  The corresponding elements of the vector are selected "
"and concatenated, @emph{in that order}, in the result.  The index vector can "
"be of any length and the result is of the same length as the index vector.  "
"For example @code{x[6]} is the sixth component of @code{x} and"
msgstr ""

#. type: example
#: R-intro.texi:1073
#, no-wrap
msgid "> x[1:10]\n"
msgstr ""

#. type: enumerate
#: R-intro.texi:1078
msgid ""
"selects the first 10 elements of @code{x} (assuming @code{length(x)} is not "
"less than 10).  Also"
msgstr ""

#. type: example
#: R-intro.texi:1081
#, no-wrap
msgid "> c(\"x\",\"y\")[rep(c(1,2,2,1), times=4)]\n"
msgstr ""

#. type: enumerate
#: R-intro.texi:1086
msgid ""
"(an admittedly unlikely thing to do) produces a character vector of length "
"16 consisting of @code{\"x\", \"y\", \"y\", \"x\"} repeated four times."
msgstr ""

#. type: enumerate
#: R-intro.texi:1090
msgid ""
"@strong{A vector of negative integral quantities}.  Such an index vector "
"specifies the values to be @emph{excluded} rather than included.  Thus"
msgstr ""

#. type: example
#: R-intro.texi:1093
#, no-wrap
msgid "> y <- x[-(1:5)]\n"
msgstr ""

#. type: enumerate
#: R-intro.texi:1097
msgid "gives @code{y} all but the first five elements of @code{x}."
msgstr ""

#. type: enumerate
#: R-intro.texi:1103
msgid ""
"@strong{A vector of character strings}.  This possibility only applies where "
"an object has a @code{names} attribute to identify its components.  In this "
"case a sub-vector of the names vector may be used in the same way as the "
"positive integral labels in item 2 further above."
msgstr ""

#. type: example
#: R-intro.texi:1108
#, no-wrap
msgid ""
"> fruit <- c(5, 10, 1, 20)\n"
"> names(fruit) <- c(\"orange\", \"banana\", \"apple\", \"peach\")\n"
"> lunch <- fruit[c(\"apple\",\"orange\")]\n"
msgstr ""

#. type: enumerate
#: R-intro.texi:1113
msgid ""
"The advantage is that alphanumeric @emph{names} are often easier to remember "
"than @emph{numeric indices}.  This option is particularly useful in "
"connection with data frames, as we shall see later."
msgstr ""

#. type: Plain text
#: R-intro.texi:1121
msgid ""
"An indexed expression can also appear on the receiving end of an assignment, "
"in which case the assignment operation is performed @emph{only on those "
"elements of the vector}.  The expression must be of the form "
"@code{vector[@var{index_vector}]} as having an arbitrary expression in place "
"of the vector name does not make much sense here."
msgstr ""

#. type: example
#: R-intro.texi:1126
#, no-wrap
msgid "> x[is.na(x)] <- 0\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1130
msgid "replaces any missing values in @code{x} by zeros and"
msgstr ""

#. type: example
#: R-intro.texi:1133
#, no-wrap
msgid "> y[y < 0] <- -y[y < 0]\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1137
msgid "has the same effect as"
msgstr ""

#. type: example
#: R-intro.texi:1140
#, no-wrap
msgid "> y <- abs(y)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1147
msgid ""
"Vectors are the most important type of object in @R{}, but there are several "
"others which we will meet more formally in later sections."
msgstr ""

#. type: itemize
#: R-intro.texi:1154
msgid ""
"@emph{matrices} or more generally @emph{arrays} are multi-dimensional "
"generalizations of vectors.  In fact, they @emph{are} vectors that can be "
"indexed by two or more indices and will be printed in special ways.  "
"@xref{Arrays and matrices}."
msgstr ""

#. type: itemize
#: R-intro.texi:1158
msgid ""
"@emph{factors} provide compact ways to handle categorical data.  "
"@xref{Factors}."
msgstr ""

#. type: itemize
#: R-intro.texi:1164
msgid ""
"@emph{lists} are a general form of vector in which the various elements need "
"not be of the same type, and are often themselves vectors or lists.  Lists "
"provide a convenient way to return the results of a statistical "
"computation.  @xref{Lists}."
msgstr ""

#. type: itemize
#: R-intro.texi:1172
msgid ""
"@emph{data frames} are matrix-like structures, in which the columns can be "
"of different types.  Think of data frames as `data matrices' with one row "
"per observational unit but with (possibly) both numerical and categorical "
"variables.  Many experiments are best described by data frames: the "
"treatments are categorical but the response is numeric.  @xref{Data frames}."
msgstr ""

#. type: itemize
#: R-intro.texi:1177
msgid ""
"@emph{functions} are themselves objects in @R{} which can be stored in the "
"project's workspace.  This provides a simple and convenient way to extend "
"@R{}.  @xref{Writing your own functions}."
msgstr ""

#. type: chapter
#: R-intro.texi:1181
#, no-wrap
msgid "Objects, their modes and attributes"
msgstr ""

#. type: cindex
#: R-intro.texi:1183
#, no-wrap
msgid "Attributes"
msgstr ""

#. type: node
#: R-intro.texi:1196 R-intro.texi:1198 R-intro.texi:1286
#, no-wrap
msgid "The intrinsic attributes mode and length"
msgstr ""

#. type: node
#: R-intro.texi:1196 R-intro.texi:1198 R-intro.texi:1286 R-intro.texi:1287 R-intro.texi:1334
#, no-wrap
msgid "Changing the length of an object"
msgstr ""

#. type: node
#: R-intro.texi:1196 R-intro.texi:1286 R-intro.texi:1334 R-intro.texi:1335 R-intro.texi:1364
#, no-wrap
msgid "Getting and setting attributes"
msgstr ""

#. type: section
#: R-intro.texi:1196 R-intro.texi:1334 R-intro.texi:1364 R-intro.texi:1365
#, no-wrap
msgid "The class of an object"
msgstr ""

#. type: section
#: R-intro.texi:1199
#, no-wrap
msgid "Intrinsic attributes: mode and length"
msgstr ""

#. type: Plain text
#: R-intro.texi:1209
msgid ""
"The entities @R{} operates on are technically known as @emph{objects}.  "
"Examples are vectors of numeric (real) or complex values, vectors of logical "
"values and vectors of character strings.  These are known as ``atomic'' "
"structures since their components are all of the same type, or @emph{mode}, "
"namely @emph{numeric}@footnote{@emph{numeric} mode is actually an amalgam of "
"two distinct modes, namely @emph{integer} and @emph{double} precision, as "
"explained in the manual.}, @emph{complex}, @emph{logical}, @emph{character} "
"and @emph{raw}."
msgstr ""

#. type: Plain text
#: R-intro.texi:1218
msgid ""
"Vectors must have their values @emph{all of the same mode}.  Thus any given "
"vector must be unambiguously either @emph{logical}, @emph{numeric}, "
"@emph{complex}, @emph{character} or @emph{raw}.  (The only apparent "
"exception to this rule is the special ``value'' listed as @code{NA} for "
"quantities not available, but in fact there are several types of "
"@code{NA}).  Note that a vector can be empty and still have a mode.  For "
"example the empty character string vector is listed as @code{character(0)} "
"and the empty numeric vector as @code{numeric(0)}."
msgstr ""

#. type: Plain text
#: R-intro.texi:1224
msgid ""
"@R{} also operates on objects called @emph{lists}, which are of mode "
"@emph{list}.  These are ordered sequences of objects which individually can "
"be of any mode.  @emph{lists} are known as ``recursive'' rather than atomic "
"structures since their components can themselves be lists in their own "
"right."
msgstr ""

#. type: Plain text
#: R-intro.texi:1231
msgid ""
"The other recursive structures are those of mode @emph{function} and "
"@emph{expression}.  Functions are the objects that form part of the @R{} "
"system along with similar user written functions, which we discuss in some "
"detail later.  Expressions as objects form an advanced part of @R{} which "
"will not be discussed in this guide, except indirectly when we discuss "
"@emph{formulae} used with modeling in @R{}."
msgstr ""

#. type: Plain text
#: R-intro.texi:1240
msgid ""
"By the @emph{mode} of an object we mean the basic type of its fundamental "
"constituents.  This is a special case of a ``property'' of an object.  "
"Another property of every object is its @emph{length}.  The functions "
"@code{mode(@var{object})} and @code{length(@var{object})} can be used to "
"find out the mode and length of any defined structure @footnote{Note however "
"that @code{length(@var{object})} does not always contain intrinsic useful "
"information, e.g., when @code{@var{object}} is a function.}."
msgstr ""

#. type: Plain text
#: R-intro.texi:1245
msgid ""
"Further properties of an object are usually provided by "
"@code{attributes(@var{object})}, see @ref{Getting and setting attributes}.  "
"Because of this, @emph{mode} and @emph{length} are also called ``intrinsic "
"attributes'' of an object."
msgstr ""

#. type: findex
#: R-intro.texi:1245
#, no-wrap
msgid "mode"
msgstr ""

#. type: Plain text
#: R-intro.texi:1251
msgid ""
"For example, if @code{z} is a complex vector of length 100, then in an "
"expression @code{mode(z)} is the character string @code{\"complex\"} and "
"@code{length(z)} is @code{100}."
msgstr ""

#. type: Plain text
#: R-intro.texi:1254
msgid ""
"@R{} caters for changes of mode almost anywhere it could be considered "
"sensible to do so, (and a few where it might not be).  For example with"
msgstr ""

#. type: example
#: R-intro.texi:1257
#, no-wrap
msgid "> z <- 0:9\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1261
msgid "we could put"
msgstr ""

#. type: example
#: R-intro.texi:1264
#, no-wrap
msgid "> digits <- as.character(z)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1270
msgid ""
"after which @code{digits} is the character vector @code{c(\"0\", \"1\", "
"\"2\", @dots{}, \"9\")}.  A further @emph{coercion}, or change of mode, "
"reconstructs the numerical vector again:"
msgstr ""

#. type: example
#: R-intro.texi:1273
#, no-wrap
msgid "> d <- as.integer(digits)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1283
msgid ""
"Now @code{d} and @code{z} are the same.@footnote{In general, coercion from "
"numeric to character and back again will not be exactly reversible, because "
"of roundoff errors in the character representation.} There is a large "
"collection of functions of the form @code{as.@var{something}()} for either "
"coercion from one mode to another, or for investing an object with some "
"other attribute it may not already possess.  The reader should consult the "
"different help files to become familiar with them."
msgstr ""

#. type: Plain text
#: R-intro.texi:1290
msgid "An ``empty'' object may still have a mode.  For example"
msgstr ""

#. type: example
#: R-intro.texi:1293
#, no-wrap
msgid "> e <- numeric()\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1300
msgid ""
"makes @code{e} an empty vector structure of mode numeric.  Similarly "
"@code{character()} is a empty character vector, and so on.  Once an object "
"of any size has been created, new components may be added to it simply by "
"giving it an index value outside its previous range.  Thus"
msgstr ""

#. type: example
#: R-intro.texi:1303
#, no-wrap
msgid "> e[3] <- 17\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1310
msgid ""
"now makes @code{e} a vector of length 3, (the first two components of which "
"are at this point both @code{NA}).  This applies to any structure at all, "
"provided the mode of the additional component(s) agrees with the mode of the "
"object in the first place."
msgstr ""

#. type: Plain text
#: R-intro.texi:1314
msgid ""
"This automatic adjustment of lengths of an object is used often, for example "
"in the @code{scan()} function for input.  (@pxref{The scan()  function}.)"
msgstr ""

#. type: Plain text
#: R-intro.texi:1317
msgid ""
"Conversely to truncate the size of an object requires only an assignment to "
"do so.  Hence if @code{alpha} is an object of length 10, then"
msgstr ""

#. type: example
#: R-intro.texi:1320
#, no-wrap
msgid "> alpha <- alpha[2 * 1:5]\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1326
msgid ""
"makes it an object of length 5 consisting of just the former components with "
"even index.  (The old indices are not retained, of course.)  We can then "
"retain just the first three values by"
msgstr ""

#. type: example
#: R-intro.texi:1329
#, no-wrap
msgid "> length(alpha) <- 3\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1333
msgid "and vectors can be extended (by missing values) in the same way."
msgstr ""

#. type: findex
#: R-intro.texi:1336 R-intro.texi:1343
#, no-wrap
msgid "attr"
msgstr ""

#. type: findex
#: R-intro.texi:1337 R-intro.texi:1340
#, no-wrap
msgid "attributes"
msgstr ""

#. type: Plain text
#: R-intro.texi:1340
msgid "The function @code{attributes(@var{object})}"
msgstr ""

#. type: Plain text
#: R-intro.texi:1343
msgid ""
"returns a list of all the non-intrinsic attributes currently defined for "
"that object.  The function @code{attr(@var{object}, @var{name})}"
msgstr ""

#. type: Plain text
#: R-intro.texi:1349
msgid ""
"can be used to select a specific attribute.  These functions are rarely "
"used, except in rather special circumstances when some new attribute is "
"being created for some particular purpose, for example to associate a "
"creation date or an operator with an @R{} object.  The concept, however, is "
"very important."
msgstr ""

#. type: Plain text
#: R-intro.texi:1352
msgid ""
"Some care should be exercised when assigning or deleting attributes since "
"they are an integral part of the object system used in @R{}."
msgstr ""

#. type: Plain text
#: R-intro.texi:1356
msgid ""
"When it is used on the left hand side of an assignment it can be used either "
"to associate a new attribute with @code{@var{object}} or to change an "
"existing one.  For example"
msgstr ""

#. type: example
#: R-intro.texi:1359
#, no-wrap
msgid "> attr(z, \"dim\") <- c(10,10)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1363
msgid "allows @R{} to treat @code{z} as if it were a 10-by-10 matrix."
msgstr ""

#. type: cindex
#: R-intro.texi:1366 R-intro.texi:4093
#, no-wrap
msgid "Classes"
msgstr ""

#. type: Plain text
#: R-intro.texi:1373
msgid ""
"All objects in @R{} have a @emph{class}, reported by the function "
"@code{class}.  For simple vectors this is just the mode, for example "
"@code{\"numeric\"}, @code{\"logical\"}, @code{\"character\"} or "
"@code{\"list\"}, but @code{\"matrix\"}, @code{\"array\"}, @code{\"factor\"} "
"and @code{\"data.frame\"} are other possible values."
msgstr ""

#. type: Plain text
#: R-intro.texi:1382
msgid ""
"A special attribute known as the @emph{class} of the object is used to allow "
"for an object-oriented style@footnote{A different style using `formal' or "
"`S4' classes is provided in package @code{methods}.} of programming in "
"@R{}.  For example if an object has class @code{\"data.frame\"}, it will be "
"printed in a certain way, the @code{plot()} function will display it "
"graphically in a certain way, and other so-called generic functions such as "
"@code{summary()} will react to it as an argument in a way sensitive to its "
"class."
msgstr ""

#. type: Plain text
#: R-intro.texi:1385
msgid ""
"To remove temporarily the effects of class, use the function "
"@code{unclass()}."
msgstr ""

#. type: findex
#: R-intro.texi:1385
#, no-wrap
msgid "unclass"
msgstr ""

#. type: Plain text
#: R-intro.texi:1387
msgid "For example if @code{winter} has the class @code{\"data.frame\"} then"
msgstr ""

#. type: example
#: R-intro.texi:1390
#, no-wrap
msgid "> winter\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1394
msgid "will print it in data frame form, which is rather like a matrix, whereas"
msgstr ""

#. type: example
#: R-intro.texi:1397
#, no-wrap
msgid "> unclass(winter)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1403
msgid ""
"will print it as an ordinary list.  Only in rather special situations do you "
"need to use this facility, but one is when you are learning to come to terms "
"with the idea of class and generic functions."
msgstr ""

#. type: Plain text
#: R-intro.texi:1406
msgid ""
"Generic functions and classes will be discussed further in @ref{Object "
"orientation}, but only briefly."
msgstr ""

#. type: chapter
#: R-intro.texi:1408
#, no-wrap
msgid "Ordered and unordered factors"
msgstr ""

#. type: cindex
#: R-intro.texi:1410 R-intro.texi:1467 R-intro.texi:1469 R-intro.texi:1565 R-intro.texi:1566 R-intro.texi:4441
#, no-wrap
msgid "Ordered factors"
msgstr ""

#. type: Plain text
#: R-intro.texi:1417
msgid ""
"A @emph{factor} is a vector object used to specify a discrete classification "
"(grouping) of the components of other vectors of the same length.  @R{} "
"provides both @emph{ordered} and @emph{unordered} factors.  While the "
"``real'' application of factors is with model formulae (@pxref{Contrasts}), "
"we here look at a specific example."
msgstr ""

#. type: section
#: R-intro.texi:1418
#, no-wrap
msgid "A specific example"
msgstr ""

#. type: Plain text
#: R-intro.texi:1427
msgid ""
"Suppose, for example, we have a sample of 30 tax accountants from all the "
"states and territories of Australia@footnote{Readers should note that there "
"are eight states and territories in Australia, namely the Australian Capital "
"Territory, New South Wales, the Northern Territory, Queensland, South "
"Australia, Tasmania, Victoria and Western Australia.} and their individual "
"state of origin is specified by a character vector of state mnemonics as"
msgstr ""

#. type: example
#: R-intro.texi:1433
#, no-wrap
msgid ""
"> state <- c(\"tas\", \"sa\",  \"qld\", \"nsw\", \"nsw\", \"nt\",  \"wa\",  "
"\"wa\",\n"
"             \"qld\", \"vic\", \"nsw\", \"vic\", \"qld\", \"qld\", \"sa\",  "
"\"tas\",\n"
"             \"sa\",  \"nt\",  \"wa\",  \"vic\", \"qld\", \"nsw\", \"nsw\", "
"\"wa\",\n"
"             \"sa\",  \"act\", \"nsw\", \"vic\", \"vic\", \"act\")\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1437
msgid ""
"Notice that in the case of a character vector, ``sorted'' means sorted in "
"alphabetical order."
msgstr ""

#. type: Plain text
#: R-intro.texi:1439
msgid "A @emph{factor} is similarly created using the @code{factor()} function:"
msgstr ""

#. type: findex
#: R-intro.texi:1439
#, no-wrap
msgid "factor"
msgstr ""

#. type: example
#: R-intro.texi:1443
#, no-wrap
msgid "> statef <- factor(state)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1447
msgid ""
"The @code{print()} function handles factors slightly differently from other "
"objects:"
msgstr ""

#. type: example
#: R-intro.texi:1453
#, no-wrap
msgid ""
"> statef\n"
" [1] tas sa  qld nsw nsw nt  wa  wa  qld vic nsw vic qld qld sa\n"
"[16] tas sa  nt  wa  vic qld nsw nsw wa  sa  act nsw vic vic act\n"
"Levels:  act nsw nt qld sa tas vic wa\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1457
msgid "To find out the levels of a factor the function @code{levels()} can be used."
msgstr ""

#. type: findex
#: R-intro.texi:1457
#, no-wrap
msgid "levels"
msgstr ""

#. type: example
#: R-intro.texi:1462
#, no-wrap
msgid ""
"> levels(statef)\n"
"[1] \"act\" \"nsw\" \"nt\"  \"qld\" \"sa\"  \"tas\" \"vic\" \"wa\"\n"
msgstr ""

#. type: node
#: R-intro.texi:1467 R-intro.texi:1469 R-intro.texi:1565
#, no-wrap
msgid "The function tapply() and ragged arrays"
msgstr ""

#. type: section
#: R-intro.texi:1470
#, no-wrap
msgid "The function @code{tapply()} and ragged arrays"
msgstr ""

#. type: findex
#: R-intro.texi:1471
#, no-wrap
msgid "tapply"
msgstr ""

#. type: Plain text
#: R-intro.texi:1476
msgid ""
"To continue the previous example, suppose we have the incomes of the same "
"tax accountants in another vector (in suitably large units of money)"
msgstr ""

#. type: example
#: R-intro.texi:1481
#, no-wrap
msgid ""
"> incomes <- c(60, 49, 40, 61, 64, 60, 59, 54, 62, 69, 70, 42, 56,\n"
"               61, 61, 61, 58, 51, 48, 65, 49, 49, 41, 48, 52, 46,\n"
"               59, 46, 58, 43)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1485
msgid ""
"To calculate the sample mean income for each state we can now use the "
"special function @code{tapply()}:"
msgstr ""

#. type: example
#: R-intro.texi:1488
#, no-wrap
msgid "> incmeans <- tapply(incomes, statef, mean)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1492
msgid "giving a means vector with the components labelled by the levels"
msgstr ""

#. type: example
#: R-intro.texi:1496
#, no-wrap
msgid ""
"   act    nsw     nt    qld     sa    tas    vic     wa\n"
"44.500 57.333 55.500 53.600 55.000 60.500 56.000 52.250\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1509
msgid ""
"The function @code{tapply()} is used to apply a function, here "
"@code{mean()}, to each group of components of the first argument, here "
"@code{incomes}, defined by the levels of the second component, here "
"@code{statef}@footnote{Note that @code{tapply()} also works in this case "
"when its second argument is not a factor, e.g., @samp{@code{tapply(incomes, "
"state)}}, and this is true for quite a few other functions, since arguments "
"are @emph{coerced} to factors when necessary (using @code{as.factor()}).}, "
"as if they were separate vector structures.  The result is a structure of "
"the same length as the levels attribute of the factor containing the "
"results.  The reader should consult the help document for more details."
msgstr ""

#. type: Plain text
#: R-intro.texi:1515
msgid ""
"Suppose further we needed to calculate the standard errors of the state "
"income means.  To do this we need to write an @R{} function to calculate the "
"standard error for any given vector.  Since there is an builtin function "
"@code{var()} to calculate the sample variance, such a function is a very "
"simple one liner, specified by the assignment:"
msgstr ""

#. type: example
#: R-intro.texi:1518
#, no-wrap
msgid "> stderr <- function(x) sqrt(var(x)/length(x))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1524
msgid ""
"(Writing functions will be considered later in @ref{Writing your own "
"functions}, and in this case was unnecessary as @R{} also has a builtin "
"function @code{sd()}.)"
msgstr ""

#. type: findex
#: R-intro.texi:1524
#, no-wrap
msgid "sd"
msgstr ""

#. type: Plain text
#: R-intro.texi:1527
msgid "After this assignment, the standard errors are calculated by"
msgstr ""

#. type: example
#: R-intro.texi:1530
#, no-wrap
msgid "> incster <- tapply(incomes, statef, stderr)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1534
msgid "and the values calculated are then"
msgstr ""

#. type: example
#: R-intro.texi:1539
#, no-wrap
msgid ""
"> incster\n"
"act    nsw  nt    qld     sa tas   vic     wa\n"
"1.5 4.3102 4.5 4.1061 2.7386 0.5 5.244 2.6575\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1547
msgid ""
"As an exercise you may care to find the usual 95% confidence limits for the "
"state mean incomes.  To do this you could use @code{tapply()} once more with "
"the @code{length()} function to find the sample sizes, and the @code{qt()} "
"function to find the percentage points of the appropriate "
"@math{t}-distributions.  (You could also investigate @R{}'s facilities for "
"@math{t}-tests.)"
msgstr ""

#. type: Plain text
#: R-intro.texi:1557
msgid ""
"The function @code{tapply()} can also be used to handle more complicated "
"indexing of a vector by multiple categories.  For example, we might wish to "
"split the tax accountants by both state and sex.  However in this simple "
"instance (just one factor) what happens can be thought of as follows.  The "
"values in the vector are collected into groups corresponding to the distinct "
"entries in the factor.  The function is then applied to each of these groups "
"individually.  The value is a vector of function results, labelled by the "
"@code{levels} attribute of the factor."
msgstr ""

#. type: Plain text
#: R-intro.texi:1563
msgid ""
"The combination of a vector and a labelling factor is an example of what is "
"sometimes called a @emph{ragged array}, since the subclass sizes are "
"possibly irregular.  When the subclass sizes are all the same the indexing "
"may be done implicitly and much more efficiently, as we see in the next "
"section."
msgstr ""

#. type: findex
#: R-intro.texi:1567 R-intro.texi:1574
#, no-wrap
msgid "ordered"
msgstr ""

#. type: Plain text
#: R-intro.texi:1571
msgid ""
"The levels of factors are stored in alphabetical order, or in the order they "
"were specified to @code{factor} if they were specified explicitly."
msgstr ""

#. type: Plain text
#: R-intro.texi:1574
msgid ""
"Sometimes the levels will have a natural ordering that we want to record and "
"want our statistical analysis to make use of.  The @code{ordered()}"
msgstr ""

#. type: Plain text
#: R-intro.texi:1580
msgid ""
"function creates such ordered factors but is otherwise identical to "
"@code{factor}.  For most purposes the only difference between ordered and "
"unordered factors is that the former are printed showing the ordering of the "
"levels, but the contrasts generated for them in fitting linear models are "
"different."
msgstr ""

#. type: node
#: R-intro.texi:1596 R-intro.texi:1598 R-intro.texi:1599 R-intro.texi:1600 R-intro.texi:1643
#, no-wrap
msgid "Arrays"
msgstr ""

#. type: node
#: R-intro.texi:1596 R-intro.texi:1598 R-intro.texi:1643 R-intro.texi:1683
#, no-wrap
msgid "Array indexing"
msgstr ""

#. type: node
#: R-intro.texi:1596 R-intro.texi:1643 R-intro.texi:1683 R-intro.texi:1684 R-intro.texi:1775
#, no-wrap
msgid "Index matrices"
msgstr ""

#. type: node
#: R-intro.texi:1596 R-intro.texi:1681 R-intro.texi:1683 R-intro.texi:1775 R-intro.texi:1840 R-intro.texi:1840 R-intro.texi:1866
#, no-wrap
msgid "The array() function"
msgstr ""

#. type: node
#: R-intro.texi:1596 R-intro.texi:1775 R-intro.texi:1866 R-intro.texi:1867 R-intro.texi:1939
#, no-wrap
msgid "The outer product of two arrays"
msgstr ""

#. type: node
#: R-intro.texi:1596 R-intro.texi:1866 R-intro.texi:1939 R-intro.texi:1940 R-intro.texi:1941 R-intro.texi:1964
#, no-wrap
msgid "Generalized transpose of an array"
msgstr ""

#. type: node
#: R-intro.texi:1596 R-intro.texi:1939 R-intro.texi:1964 R-intro.texi:1965 R-intro.texi:2006 R-intro.texi:2006 R-intro.texi:2066 R-intro.texi:2111 R-intro.texi:2153 R-intro.texi:2199 R-intro.texi:2249
#, no-wrap
msgid "Matrix facilities"
msgstr ""

#. type: node
#: R-intro.texi:1596 R-intro.texi:1964 R-intro.texi:2249 R-intro.texi:2294
#, no-wrap
msgid "Forming partitioned matrices"
msgstr ""

#. type: node
#: R-intro.texi:1596 R-intro.texi:2249 R-intro.texi:2294 R-intro.texi:2323
#, no-wrap
msgid "The concatenation function c() with arrays"
msgstr ""

#. type: section
#: R-intro.texi:1596 R-intro.texi:2294 R-intro.texi:2323 R-intro.texi:2324
#, no-wrap
msgid "Frequency tables from factors"
msgstr ""

#. type: cindex
#: R-intro.texi:1601
#, no-wrap
msgid "Matrices"
msgstr ""

#. type: Plain text
#: R-intro.texi:1607
msgid ""
"An array can be considered as a multiply subscripted collection of data "
"entries, for example numeric.  @R{} allows simple facilities for creating "
"and handling arrays, and in particular the special case of matrices."
msgstr ""

#. type: Plain text
#: R-intro.texi:1612
msgid ""
"A dimension vector is a vector of non-negative integers.  If its length is "
"@math{k} then the array is @math{k}-dimensional, e.g.@ a matrix is a "
"@math{2}-dimensional array.  The dimensions are indexed from one up to the "
"values given in the dimension vector."
msgstr ""

#. type: Plain text
#: R-intro.texi:1616
msgid ""
"A vector can be used by @R{} as an array only if it has a dimension vector "
"as its @emph{dim} attribute.  Suppose, for example, @code{z} is a vector of "
"1500 elements.  The assignment"
msgstr ""

#. type: example
#: R-intro.texi:1619
#, no-wrap
msgid "> dim(z) <- c(3,5,100)\n"
msgstr ""

#. type: findex
#: R-intro.texi:1620
#, no-wrap
msgid "dim"
msgstr ""

#. type: Plain text
#: R-intro.texi:1625
msgid ""
"gives it the @emph{dim} attribute that allows it to be treated as a @math{3} "
"by @math{5} by @math{100} array."
msgstr ""

#. type: Plain text
#: R-intro.texi:1629
msgid ""
"Other functions such as @code{matrix()} and @code{array()} are available for "
"simpler and more natural looking assignments, as we shall see in @ref{The "
"array() function}."
msgstr ""

#. type: Plain text
#: R-intro.texi:1633
msgid ""
"The values in the data vector give the values in the array in the same order "
"as they would occur in FORTRAN, that is ``column major order,'' with the "
"first subscript moving fastest and the last subscript slowest."
msgstr ""

#. type: Plain text
#: R-intro.texi:1638
msgid ""
"For example if the dimension vector for an array, say @code{a}, is "
"@code{c(3,4,2)} then there are @eqn{3 \\times 4 \\times 2 = 24, 3 * 4 * 2 = "
"24} entries in @code{a} and the data vector holds them in the order "
"@code{a[1,1,1], a[2,1,1], @dots{}, a[2,4,2], a[3,4,2]}."
msgstr ""

#. type: Plain text
#: R-intro.texi:1642
msgid ""
"Arrays can be one-dimensional: such arrays are usually treated in the same "
"way as vectors (including when printing), but the exceptions can cause "
"confusion."
msgstr ""

#. type: section
#: R-intro.texi:1644
#, no-wrap
msgid "Array indexing.  Subsections of an array"
msgstr ""

#. type: cindex
#: R-intro.texi:1645
#, no-wrap
msgid "Indexing of and by arrays"
msgstr ""

#. type: Plain text
#: R-intro.texi:1650
msgid ""
"Individual elements of an array may be referenced by giving the name of the "
"array followed by the subscripts in square brackets, separated by commas."
msgstr ""

#. type: Plain text
#: R-intro.texi:1655
msgid ""
"More generally, subsections of an array may be specified by giving a "
"sequence of @emph{index vectors} in place of subscripts; however @emph{if "
"any index position is given an empty index vector, then the full range of "
"that subscript is taken}."
msgstr ""

#. type: Plain text
#: R-intro.texi:1659
msgid ""
"Continuing the previous example, @code{a[2,,]} is a @eqn{4 \\times 2, 4 * 2} "
"array with dimension vector @code{c(4,2)} and data vector containing the "
"values"
msgstr ""

#. type: example
#: R-intro.texi:1663
#, no-wrap
msgid ""
"c(a[2,1,1], a[2,2,1], a[2,3,1], a[2,4,1],\n"
"  a[2,1,2], a[2,2,2], a[2,3,2], a[2,4,2])\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1668
msgid ""
"in that order.  @code{a[,,]} stands for the entire array, which is the same "
"as omitting the subscripts entirely and using @code{a} alone."
msgstr ""

#. type: Plain text
#: R-intro.texi:1671
msgid ""
"For any array, say @code{Z}, the dimension vector may be referenced "
"explicitly as @code{dim(Z)} (on either side of an assignment)."
msgstr ""

#. type: Plain text
#: R-intro.texi:1677
msgid ""
"Also, if an array name is given with just @emph{one subscript or index "
"vector}, then the corresponding values of the data vector only are used; in "
"this case the dimension vector is ignored.  This is not the case, however, "
"if the single index is not a vector but itself an array, as we next discuss."
msgstr ""

#. type: menuentry
#: R-intro.texi:1681
msgid "Index matrices::"
msgstr ""

#. type: Plain text
#: R-intro.texi:1690
msgid ""
"As well as an index vector in any subscript position, a matrix may be used "
"with a single @emph{index matrix} in order either to assign a vector of "
"quantities to an irregular collection of elements in the array, or to "
"extract an irregular collection as a vector."
msgstr ""

#. type: Plain text
#: R-intro.texi:1697
msgid ""
"A matrix example makes the process clear.  In the case of a doubly indexed "
"array, an index matrix may be given consisting of two columns and as many "
"rows as desired.  The entries in the index matrix are the row and column "
"indices for the doubly indexed array.  Suppose for example we have a "
"@math{4} by @math{5} array @code{X} and we wish to do the following:"
msgstr ""

#. type: itemize
#: R-intro.texi:1702
msgid ""
"Extract elements @code{X[1,3]}, @code{X[2,2]} and @code{X[3,1]} as a vector "
"structure, and"
msgstr ""

#. type: itemize
#: R-intro.texi:1704
msgid "Replace these entries in the array @code{X} by zeroes."
msgstr ""

#. type: Plain text
#: R-intro.texi:1707
msgid ""
"In this case we need a @math{3} by @math{2} subscript array, as in the "
"following example."
msgstr ""

#. type: example
#: R-intro.texi:1732
#, no-wrap
msgid ""
"> x <- array(1:20, dim=c(4,5))   # @r{Generate a 4 by 5 array.}\n"
"> x\n"
"     [,1] [,2] [,3] [,4] [,5]\n"
"[1,]    1    5    9   13   17\n"
"[2,]    2    6   10   14   18\n"
"[3,]    3    7   11   15   19\n"
"[4,]    4    8   12   16   20\n"
"> i <- array(c(1:3,3:1), dim=c(3,2))\n"
"> i                             # @r{@code{i} is a 3 by 2 index array.}\n"
"     [,1] [,2]\n"
"[1,]    1    3\n"
"[2,]    2    2\n"
"[3,]    3    1\n"
"> x[i]                          # @r{Extract those elements}\n"
"[1] 9 6 3\n"
"> x[i] <- 0                     # @r{Replace those elements by zeros.}\n"
"> x\n"
"     [,1] [,2] [,3] [,4] [,5]\n"
"[1,]    1    5    0   13   17\n"
"[2,]    2    0   10   14   18\n"
"[3,]    0    7   11   15   19\n"
"[4,]    4    8   12   16   20\n"
">\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1738
msgid ""
"Negative indices are not allowed in index matrices.  @code{NA} and zero "
"values are allowed: rows in the index matrix containing a zero are ignored, "
"and rows containing an @code{NA} produce an @code{NA} in the result."
msgstr ""

#. type: Plain text
#: R-intro.texi:1745
msgid ""
"As a less trivial example, suppose we wish to generate an (unreduced)  "
"design matrix for a block design defined by factors @code{blocks} (@code{b} "
"levels) and @code{varieties} (@code{v} levels).  Further suppose there are "
"@code{n} plots in the experiment.  We could proceed as follows:"
msgstr ""

#. type: example
#: R-intro.texi:1754
#, no-wrap
msgid ""
"> Xb <- matrix(0, n, b)\n"
"> Xv <- matrix(0, n, v)\n"
"> ib <- cbind(1:n, blocks)\n"
"> iv <- cbind(1:n, varieties)\n"
"> Xb[ib] <- 1\n"
"> Xv[iv] <- 1\n"
"> X <- cbind(Xb, Xv)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1757
msgid "To construct the incidence matrix, @code{N} say, we could use"
msgstr ""

#. type: example
#: R-intro.texi:1760
#, no-wrap
msgid "> N <- crossprod(Xb, Xv)\n"
msgstr ""

#. type: findex
#: R-intro.texi:1761 R-intro.texi:2050
#, no-wrap
msgid "crossprod"
msgstr ""

#. type: Plain text
#: R-intro.texi:1765
msgid ""
"However a simpler direct way of producing this matrix is to use "
"@code{table()}:"
msgstr ""

#. type: findex
#: R-intro.texi:1765 R-intro.texi:2329
#, no-wrap
msgid "table"
msgstr ""

#. type: example
#: R-intro.texi:1769
#, no-wrap
msgid "> N <- table(blocks, varieties)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1774
msgid ""
"Index matrices must be numerical: any other form of matrix (e.g.@ a logical "
"or character matrix) supplied as a matrix is treated as an indexing vector."
msgstr ""

#. type: section
#: R-intro.texi:1776
#, no-wrap
msgid "The @code{array()} function"
msgstr ""

#. type: findex
#: R-intro.texi:1777
#, no-wrap
msgid "array"
msgstr ""

#. type: Plain text
#: R-intro.texi:1782
msgid ""
"As well as giving a vector structure a @code{dim} attribute, arrays can be "
"constructed from vectors by the @code{array} function, which has the form"
msgstr ""

#. type: example
#: R-intro.texi:1785
#, no-wrap
msgid "> Z <- array(@var{data_vector}, @var{dim_vector})\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1789
msgid ""
"For example, if the vector @code{h} contains 24 or fewer, numbers then the "
"command"
msgstr ""

#. type: example
#: R-intro.texi:1792
#, no-wrap
msgid "> Z <- array(h, dim=c(3,4,2))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1797
msgid ""
"would use @code{h} to set up @math{3} by @math{4} by @math{2} array in "
"@code{Z}.  If the size of @code{h} is exactly 24 the result is the same as"
msgstr ""

#. type: example
#: R-intro.texi:1800
#, no-wrap
msgid "> Z <- h ; dim(Z) <- c(3,4,2)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1807
msgid ""
"However if @code{h} is shorter than 24, its values are recycled from the "
"beginning again to make it up to size 24 (@pxref{The recycling rule})  but "
"@code{dim(h) <- c(3,4,2)} would signal an error about mismatching length.  "
"As an extreme but common example"
msgstr ""

#. type: example
#: R-intro.texi:1810
#, no-wrap
msgid "> Z <- array(0, c(3,4,2))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1814
msgid "makes @code{Z} an array of all zeros."
msgstr ""

#. type: Plain text
#: R-intro.texi:1819
msgid ""
"At this point @code{dim(Z)} stands for the dimension vector @code{c(3,4,2)}, "
"and @code{Z[1:24]} stands for the data vector as it was in @code{h}, and "
"@code{Z[]} with an empty subscript or @code{Z} with no subscript stands for "
"the entire array as an array."
msgstr ""

#. type: Plain text
#: R-intro.texi:1825
msgid ""
"Arrays may be used in arithmetic expressions and the result is an array "
"formed by element-by-element operations on the data vector.  The @code{dim} "
"attributes of operands generally need to be the same, and this becomes the "
"dimension vector of the result.  So if @code{A}, @code{B} and @code{C} are "
"all similar arrays, then"
msgstr ""

#. type: example
#: R-intro.texi:1828
#, no-wrap
msgid "> D <- 2*A*B + C + 1\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1835
msgid ""
"makes @code{D} a similar array with its data vector being the result of the "
"given element-by-element operations.  However the precise rule concerning "
"mixed array and vector calculations has to be considered a little more "
"carefully."
msgstr ""

#. type: node
#: R-intro.texi:1838 R-intro.texi:1840
#, no-wrap
msgid "The recycling rule"
msgstr ""

#. type: subsection
#: R-intro.texi:1841
#, no-wrap
msgid "Mixed vector and array arithmetic.  The recycling rule"
msgstr ""

#. type: Plain text
#: R-intro.texi:1848
msgid ""
"The precise rule affecting element by element mixed calculations with "
"vectors and arrays is somewhat quirky and hard to find in the references.  "
"From experience we have found the following to be a reliable guide."
msgstr ""

#. type: itemize
#: R-intro.texi:1852
msgid "The expression is scanned from left to right."
msgstr ""

#. type: itemize
#: R-intro.texi:1855
msgid ""
"Any short vector operands are extended by recycling their values until they "
"match the size of any other operands."
msgstr ""

#. type: itemize
#: R-intro.texi:1858
msgid ""
"As long as short vectors and arrays @emph{only} are encountered, the arrays "
"must all have the same @code{dim} attribute or an error results."
msgstr ""

#. type: itemize
#: R-intro.texi:1860
msgid "Any vector operand longer than a matrix or array operand generates an error."
msgstr ""

#. type: itemize
#: R-intro.texi:1864
msgid ""
"If array structures are present and no error or coercion to vector has been "
"precipitated, the result is an array structure with the common @code{dim} "
"attribute of its array operands."
msgstr ""

#. type: cindex
#: R-intro.texi:1868
#, no-wrap
msgid "Outer products of arrays"
msgstr ""

#. type: Plain text
#: R-intro.texi:1877
msgid ""
"An important operation on arrays is the @emph{outer product}.  If @code{a} "
"and @code{b} are two numeric arrays, their outer product is an array whose "
"dimension vector is obtained by concatenating their two dimension vectors "
"(order is important), and whose data vector is got by forming all possible "
"products of elements of the data vector of @code{a} with those of @code{b}.  "
"The outer product is formed by the special operator @code{%o%}:"
msgstr ""

#. type: findex
#: R-intro.texi:1877
#, no-wrap
msgid "%o%"
msgstr ""

#. type: example
#: R-intro.texi:1881
#, no-wrap
msgid "> ab <- a %o% b\n"
msgstr ""

#. type: example
#: R-intro.texi:1887
#, no-wrap
msgid "> ab <- outer(a, b, \"*\")\n"
msgstr ""

#. type: findex
#: R-intro.texi:1888
#, no-wrap
msgid "outer"
msgstr ""

#. type: Plain text
#: R-intro.texi:1896
msgid ""
"The multiplication function can be replaced by an arbitrary function of two "
"variables.  For example if we wished to evaluate the function @eqn{f(x; y) = "
"\\cos(y)/(1 + x^2), f(x; y) = cos(y)/(1 + x^2)} over a regular grid of "
"values with @math{x}- and @math{y}-coordinates defined by the @R{} vectors "
"@code{x} and @code{y} respectively, we could proceed as follows:"
msgstr ""

#. type: example
#: R-intro.texi:1900
#, no-wrap
msgid ""
"> f <- function(x, y) cos(y)/(1 + x^2)\n"
"> z <- outer(x, y, f)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1907
msgid ""
"In particular the outer product of two ordinary vectors is a doubly "
"subscripted array (that is a matrix, of rank at most 1).  Notice that the "
"outer product operator is of course non-commutative.  Defining your own @R{} "
"functions will be considered further in @ref{Writing your own functions}."
msgstr ""

#. type: subsubheading
#: R-intro.texi:1908
#, no-wrap
msgid "An example: Determinants of 2 by 2 single-digit matrices"
msgstr ""

#. type: Plain text
#: R-intro.texi:1914
msgid ""
"As an artificial but cute example, consider the determinants of @math{2} by "
"@math{2} matrices @math{[a, b; c, d]} where each entry is a non-negative "
"integer in the range @math{0, 1, @dots{}, 9}, that is a digit."
msgstr ""

#. type: Plain text
#: R-intro.texi:1920
msgid ""
"The problem is to find the determinants, @math{ad - bc}, of all possible "
"matrices of this form and represent the frequency with which each value "
"occurs as a @emph{high density} plot.  This amounts to finding the "
"probability distribution of the determinant if each digit is chosen "
"independently and uniformly at random."
msgstr ""

#. type: Plain text
#: R-intro.texi:1922
msgid "A neat way of doing this uses the @code{outer()} function twice:"
msgstr ""

#. type: example
#: R-intro.texi:1928
#, no-wrap
msgid ""
"> d <- outer(0:9, 0:9)\n"
"> fr <- table(outer(d, d, \"-\"))\n"
"> plot(as.numeric(names(fr)), fr, type=\"h\",\n"
"       xlab=\"Determinant\", ylab=\"Frequency\")\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1935
msgid ""
"Notice the coercion of the @code{names} attribute of the frequency table to "
"numeric in order to recover the range of the determinant values.  The "
"``obvious'' way of doing this problem with @code{for} loops, to be discussed "
"in @ref{Loops and conditional execution}, is so inefficient as to be "
"impractical."
msgstr ""

#. type: Plain text
#: R-intro.texi:1938
msgid "It is also perhaps surprising that about 1 in 20 such matrices is singular."
msgstr ""

#. type: Plain text
#: R-intro.texi:1944
msgid "The function @code{aperm(a, perm)}"
msgstr ""

#. type: findex
#: R-intro.texi:1944
#, no-wrap
msgid "aperm"
msgstr ""

#. type: Plain text
#: R-intro.texi:1953
msgid ""
"may be used to permute an array, @code{a}.  The argument @code{perm} must be "
"a permutation of the integers @math{@{1, @dots{}, k@}}, where @math{k} is "
"the number of subscripts in @code{a}.  The result of the function is an "
"array of the same size as @code{a} but with old dimension given by "
"@code{perm[j]} becoming the new @code{j}-th dimension.  The easiest way to "
"think of this operation is as a generalization of transposition for "
"matrices.  Indeed if @code{A} is a matrix, (that is, a doubly subscripted "
"array) then @code{B} given by"
msgstr ""

#. type: example
#: R-intro.texi:1956
#, no-wrap
msgid "> B <- aperm(A, c(2,1))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:1961
msgid ""
"is just the transpose of @code{A}.  For this special case a simpler function "
"@code{t()}"
msgstr ""

#. type: findex
#: R-intro.texi:1961
#, no-wrap
msgid "t"
msgstr ""

#. type: Plain text
#: R-intro.texi:1963
msgid "is available, so we could have used @code{B <- t(A)}."
msgstr ""

#. type: tex
#: R-intro.texi:1971
#, no-wrap
msgid "$@strong{x}^T @strong{x}$%\n"
msgstr ""

#. type: tex
#: R-intro.texi:1976
#, no-wrap
msgid "$@strong{x}@strong{x}^T$%\n"
msgstr ""

#. type: macro
#: R-intro.texi:1983
msgid "x'x"
msgstr ""

#. type: macro
#: R-intro.texi:1986
msgid "x x'"
msgstr ""

#. type: Plain text
#: R-intro.texi:1995
msgid ""
"As noted above, a matrix is just an array with two subscripts.  However it "
"is such an important special case it needs a separate discussion.  @R{} "
"contains many operators and functions that are available only for matrices.  "
"For example @code{t(X)} is the matrix transpose function, as noted above.  "
"The functions @code{nrow(A)} and @code{ncol(A)} give the number of rows and "
"columns in the matrix @code{A} respectively."
msgstr ""

#. type: findex
#: R-intro.texi:1995
#, no-wrap
msgid "nrow"
msgstr ""

#. type: findex
#: R-intro.texi:1996
#, no-wrap
msgid "ncol"
msgstr ""

#. type: node
#: R-intro.texi:2004 R-intro.texi:2006 R-intro.texi:2066
#, no-wrap
msgid "Multiplication"
msgstr ""

#. type: node
#: R-intro.texi:2004 R-intro.texi:2006 R-intro.texi:2066 R-intro.texi:2067 R-intro.texi:2111
#, no-wrap
msgid "Linear equations and inversion"
msgstr ""

#. type: node
#: R-intro.texi:2004 R-intro.texi:2066 R-intro.texi:2111 R-intro.texi:2112 R-intro.texi:2113 R-intro.texi:2153
#, no-wrap
msgid "Eigenvalues and eigenvectors"
msgstr ""

#. type: node
#: R-intro.texi:2004 R-intro.texi:2111 R-intro.texi:2153 R-intro.texi:2154 R-intro.texi:2199
#, no-wrap
msgid "Singular value decomposition and determinants"
msgstr ""

#. type: subsection
#: R-intro.texi:2004 R-intro.texi:2153 R-intro.texi:2199 R-intro.texi:2200
#, no-wrap
msgid "Least squares fitting and the QR decomposition"
msgstr ""

#. type: cindex
#: R-intro.texi:2007 R-intro.texi:2009
#, no-wrap
msgid "Matrix multiplication"
msgstr ""

#. type: Plain text
#: R-intro.texi:2011
msgid "The operator @code{%*%} is used for matrix multiplication."
msgstr ""

#. type: findex
#: R-intro.texi:2011
#, no-wrap
msgid "%*%"
msgstr ""

#. type: Plain text
#: R-intro.texi:2018
msgid ""
"An @math{n} by @math{1} or @math{1} by @math{n} matrix may of course be used "
"as an @math{n}-vector if in the context such is appropriate.  Conversely, "
"vectors which occur in matrix multiplication expressions are automatically "
"promoted either to row or column vectors, whichever is multiplicatively "
"coherent, if possible, (although this is not always unambiguously possible, "
"as we see later)."
msgstr ""

#. type: Plain text
#: R-intro.texi:2021
msgid ""
"If, for example, @code{A} and @code{B} are square matrices of the same size, "
"then"
msgstr ""

#. type: example
#: R-intro.texi:2024
#, no-wrap
msgid "> A * B\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2028
msgid "is the matrix of element by element products and"
msgstr ""

#. type: example
#: R-intro.texi:2031
#, no-wrap
msgid "> A %*% B\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2035
msgid "is the matrix product.  If @code{x} is a vector, then"
msgstr ""

#. type: example
#: R-intro.texi:2038
#, no-wrap
msgid "> x %*% A %*% x\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2049
msgid ""
"is a quadratic form.@footnote{Note that @code{x %*% x} is ambiguous, as it "
"could mean either @xTx{} or @xxT{}, where @eqn{@strong{x},x} is the column "
"form.  In such cases the smaller matrix seems implicitly to be the "
"interpretation adopted, so the scalar @xTx{} is in this case the result.  "
"The matrix @xxT{} may be calculated either by @code{cbind(x)  %*% x} or "
"@code{x %*% rbind(x)} since the result of @code{rbind()} or @code{cbind()} "
"is always a matrix.  However, the best way to compute @xTx{} or @xxT{} is "
"@code{crossprod(x)} or @code{x %o% x} respectively.}"
msgstr ""

#. type: Plain text
#: R-intro.texi:2055
msgid ""
"The function @code{crossprod()} forms ``crossproducts'', meaning that "
"@code{crossprod(X, y)} is the same as @code{t(X) %*% y} but the operation is "
"more efficient.  If the second argument to @code{crossprod()} is omitted it "
"is taken to be the same as the first."
msgstr ""

#. type: findex
#: R-intro.texi:2056
#, no-wrap
msgid "diag"
msgstr ""

#. type: Plain text
#: R-intro.texi:2065
msgid ""
"The meaning of @code{diag()} depends on its argument.  @code{diag(v)}, where "
"@code{v} is a vector, gives a diagonal matrix with elements of the vector as "
"the diagonal entries.  On the other hand @code{diag(M)}, where @code{M} is a "
"matrix, gives the vector of main diagonal entries of @code{M}.  This is the "
"same convention as that used for @code{diag()} in @sc{Matlab}.  Also, "
"somewhat confusingly, if @code{k} is a single numeric value then "
"@code{diag(k)} is the @code{k} by @code{k} identity matrix!"
msgstr ""

#. type: cindex
#: R-intro.texi:2069
#, no-wrap
msgid "Linear equations"
msgstr ""

#. type: findex
#: R-intro.texi:2070
#, no-wrap
msgid "solve"
msgstr ""

#. type: Plain text
#: R-intro.texi:2073
msgid ""
"Solving linear equations is the inverse of matrix multiplication.  When "
"after"
msgstr ""

#. type: example
#: R-intro.texi:2076
#, no-wrap
msgid "> b <- A %*% x\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2081
msgid ""
"only @code{A} and @code{b} are given, the vector @code{x} is the solution of "
"that linear equation system.  In @R{},"
msgstr ""

#. type: example
#: R-intro.texi:2084
#, no-wrap
msgid "> solve(A,b)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2093
msgid ""
"solves the system, returning @code{x} (up to some accuracy loss).  Note that "
"in linear algebra, formally @eqn{@strong{x} = @strong{A}^{-1} @strong{b}, "
"@code{x = A^@{-1@} %*% b}} where @eqn{@strong{A}^{-1}, @code{A^@{-1@}}} "
"denotes the @emph{inverse} of @eqn{@strong{A},@code{A}}, which can be "
"computed by"
msgstr ""

#. type: example
#: R-intro.texi:2096
#, no-wrap
msgid "solve(A)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2102
msgid ""
"but rarely is needed.  Numerically, it is both inefficient and potentially "
"unstable to compute @code{x <- solve(A) %*% b} instead of @code{solve(A,b)}."
msgstr ""

#. type: Plain text
#: R-intro.texi:2110
msgid ""
"The quadratic form @eqn{@strong{x^T A^{-1} x},@ @code{x %*% A^@{-1@} %*% x} "
"@ } which is used in multivariate computations, should be computed by "
"something like@footnote{Even better would be to form a matrix square root "
"@eqn{B, B} with @eqn{A = BB^T, A = BB'} and find the squared length of the "
"solution of @eqn{By = x, By = x} , perhaps using the Cholesky or eigen "
"decomposition of @eqn{A, A}.  } @code{x %*% solve(A,x)}, rather than "
"computing the inverse of @code{A}."
msgstr ""

#. type: findex
#: R-intro.texi:2115
#, no-wrap
msgid "eigen"
msgstr ""

#. type: Plain text
#: R-intro.texi:2120
msgid ""
"The function @code{eigen(Sm)} calculates the eigenvalues and eigenvectors of "
"a symmetric matrix @code{Sm}.  The result of this function is a list of two "
"components named @code{values} and @code{vectors}.  The assignment"
msgstr ""

#. type: example
#: R-intro.texi:2123
#, no-wrap
msgid "> ev <- eigen(Sm)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2130
msgid ""
"will assign this list to @code{ev}.  Then @code{ev$val} is the vector of "
"eigenvalues of @code{Sm} and @code{ev$vec} is the matrix of corresponding "
"eigenvectors.  Had we only needed the eigenvalues we could have used the "
"assignment:"
msgstr ""

#. type: example
#: R-intro.texi:2133
#, no-wrap
msgid "> evals <- eigen(Sm)$values\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2138
msgid ""
"@code{evals} now holds the vector of eigenvalues and the second component is "
"discarded.  If the expression"
msgstr ""

#. type: example
#: R-intro.texi:2141
#, no-wrap
msgid "> eigen(Sm)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2147
msgid ""
"is used by itself as a command the two components are printed, with their "
"names.  For large matrices it is better to avoid computing the eigenvectors "
"if they are not needed by using the expression"
msgstr ""

#. type: example
#: R-intro.texi:2150
#, no-wrap
msgid "> evals <- eigen(Sm, only.values = TRUE)$values\n"
msgstr ""

#. type: cindex
#: R-intro.texi:2155
#, no-wrap
msgid "Singular value decomposition"
msgstr ""

#. type: findex
#: R-intro.texi:2157
#, no-wrap
msgid "svd"
msgstr ""

#. type: Plain text
#: R-intro.texi:2167
msgid ""
"The function @code{svd(M)} takes an arbitrary matrix argument, @code{M}, and "
"calculates the singular value decomposition of @code{M}.  This consists of a "
"matrix of orthonormal columns @code{U} with the same column space as "
"@code{M}, a second matrix of orthonormal columns @code{V} whose column space "
"is the row space of @code{M} and a diagonal matrix of positive entries "
"@code{D} such that @code{M = U %*% D %*% t(V)}.  @code{D} is actually "
"returned as a vector of the diagonal elements.  The result of @code{svd(M)} "
"is actually a list of three components named @code{d}, @code{u} and "
"@code{v}, with evident meanings."
msgstr ""

#. type: Plain text
#: R-intro.texi:2169
msgid "If @code{M} is in fact square, then, it is not hard to see that"
msgstr ""

#. type: example
#: R-intro.texi:2172
#, no-wrap
msgid "> absdetM <- prod(svd(M)$d)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2178
msgid ""
"calculates the absolute value of the determinant of @code{M}.  If this "
"calculation were needed often with a variety of matrices it could be defined "
"as an @R{} function"
msgstr ""

#. type: example
#: R-intro.texi:2181
#, no-wrap
msgid "> absdet <- function(M) prod(svd(M)$d)\n"
msgstr ""

#. type: cindex
#: R-intro.texi:2183
#, no-wrap
msgid "Determinants"
msgstr ""

#. type: Plain text
#: R-intro.texi:2190
msgid ""
"after which we could use @code{absdet()} as just another @R{} function.  As "
"a further trivial but potentially useful example, you might like to consider "
"writing a function, say @code{tr()}, to calculate the trace of a square "
"matrix.  [Hint: You will not need to use an explicit loop.  Look again at "
"the @code{diag()} function.]"
msgstr ""

#. type: findex
#: R-intro.texi:2191
#, no-wrap
msgid "det"
msgstr ""

#. type: findex
#: R-intro.texi:2192
#, no-wrap
msgid "determinant"
msgstr ""

#. type: Plain text
#: R-intro.texi:2196
msgid ""
"@R{} has a builtin function @code{det} to calculate a determinant, including "
"the sign, and another, @code{determinant}, to give the sign and modulus "
"(optionally on log scale),"
msgstr ""

#. type: cindex
#: R-intro.texi:2201
#, no-wrap
msgid "Least squares fitting"
msgstr ""

#. type: cindex
#: R-intro.texi:2202
#, no-wrap
msgid "QR decomposition"
msgstr ""

#. type: Plain text
#: R-intro.texi:2206
msgid ""
"The function @code{lsfit()} returns a list giving results of a least squares "
"fitting procedure.  An assignment such as"
msgstr ""

#. type: example
#: R-intro.texi:2209
#, no-wrap
msgid "> ans <- lsfit(X, y)\n"
msgstr ""

#. type: findex
#: R-intro.texi:2210
#, no-wrap
msgid "lsfit"
msgstr ""

#. type: Plain text
#: R-intro.texi:2221
msgid ""
"gives the results of a least squares fit where @code{y} is the vector of "
"observations and @code{X} is the design matrix.  See the help facility for "
"more details, and also for the follow-up function @code{ls.diag()} for, "
"among other things, regression diagnostics.  Note that a grand mean term is "
"automatically included and need not be included explicitly as a column of "
"@code{X}.  Further note that you almost always will prefer using "
"@code{lm(.)} (@pxref{Linear models}) to @code{lsfit()} for regression "
"modelling."
msgstr ""

#. type: findex
#: R-intro.texi:2222
#, no-wrap
msgid "qr"
msgstr ""

#. type: Plain text
#: R-intro.texi:2225
msgid ""
"Another closely related function is @code{qr()} and its allies.  Consider "
"the following assignments"
msgstr ""

#. type: example
#: R-intro.texi:2231
#, no-wrap
msgid ""
"> Xplus <- qr(X)\n"
"> b <- qr.coef(Xplus, y)\n"
"> fit <- qr.fitted(Xplus, y)\n"
"> res <- qr.resid(Xplus, y)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2239
msgid ""
"These compute the orthogonal projection of @code{y} onto the range of "
"@code{X} in @code{fit}, the projection onto the orthogonal complement in "
"@code{res} and the coefficient vector for the projection in @code{b}, that "
"is, @code{b} is essentially the result of the @sc{Matlab} `backslash' "
"operator."
msgstr ""

#. type: Plain text
#: R-intro.texi:2242
msgid ""
"It is not assumed that @code{X} has full column rank.  Redundancies will be "
"discovered and removed as they are found."
msgstr ""

#. type: Plain text
#: R-intro.texi:2247
msgid ""
"This alternative is the older, low-level way to perform least squares "
"calculations.  Although still useful in some contexts, it would now "
"generally be replaced by the statistical models features, as will be "
"discussed in @ref{Statistical models in R}."
msgstr ""

#. type: section
#: R-intro.texi:2250
#, no-wrap
msgid "Forming partitioned matrices, @code{cbind()} and @code{rbind()}"
msgstr ""

#. type: findex
#: R-intro.texi:2251
#, no-wrap
msgid "cbind"
msgstr ""

#. type: findex
#: R-intro.texi:2252
#, no-wrap
msgid "rbind"
msgstr ""

#. type: Plain text
#: R-intro.texi:2259
msgid ""
"As we have already seen informally, matrices can be built up from other "
"vectors and matrices by the functions @code{cbind()} and @code{rbind()}.  "
"Roughly @code{cbind()} forms matrices by binding together matrices "
"horizontally, or column-wise, and @code{rbind()} vertically, or row-wise."
msgstr ""

#. type: Plain text
#: R-intro.texi:2261
msgid "In the assignment"
msgstr ""

#. type: example
#: R-intro.texi:2264
#, no-wrap
msgid "> X <- cbind(@var{arg_1}, @var{arg_2}, @var{arg_3}, @dots{})\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2271
msgid ""
"the arguments to @code{cbind()} must be either vectors of any length, or "
"matrices with the same column size, that is the same number of rows.  The "
"result is a matrix with the concatenated arguments @var{arg_1}, @var{arg_2}, "
"@dots{} forming the columns."
msgstr ""

#. type: Plain text
#: R-intro.texi:2276
msgid ""
"If some of the arguments to @code{cbind()} are vectors they may be shorter "
"than the column size of any matrices present, in which case they are "
"cyclically extended to match the matrix column size (or the length of the "
"longest vector if no matrices are given)."
msgstr ""

#. type: Plain text
#: R-intro.texi:2280
msgid ""
"The function @code{rbind()} does the corresponding operation for rows.  In "
"this case any vector argument, possibly cyclically extended, are of course "
"taken as row vectors."
msgstr ""

#. type: Plain text
#: R-intro.texi:2284
msgid ""
"Suppose @code{X1} and @code{X2} have the same number of rows.  To combine "
"these by columns into a matrix @code{X}, together with an initial column of "
"@code{1}s we can use"
msgstr ""

#. type: example
#: R-intro.texi:2287
#, no-wrap
msgid "> X <- cbind(1, X1, X2)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2293
msgid ""
"The result of @code{rbind()} or @code{cbind()} always has matrix status.  "
"Hence @code{cbind(x)} and @code{rbind(x)} are possibly the simplest ways "
"explicitly to allow the vector @code{x} to be treated as a column or row "
"matrix respectively."
msgstr ""

#. type: section
#: R-intro.texi:2295
#, no-wrap
msgid "The concatenation function, @code{c()}, with arrays"
msgstr ""

#. type: Plain text
#: R-intro.texi:2302
msgid ""
"It should be noted that whereas @code{cbind()} and @code{rbind()} are "
"concatenation functions that respect @code{dim} attributes, the basic "
"@code{c()} function does not, but rather clears numeric objects of all "
"@code{dim} and @code{dimnames} attributes.  This is occasionally useful in "
"its own right."
msgstr ""

#. type: Plain text
#: R-intro.texi:2305
msgid ""
"The official way to coerce an array back to a simple vector object is to use "
"@code{as.vector()}"
msgstr ""

#. type: example
#: R-intro.texi:2308
#, no-wrap
msgid "> vec <- as.vector(X)\n"
msgstr ""

#. type: findex
#: R-intro.texi:2309
#, no-wrap
msgid "as.vector"
msgstr ""

#. type: Plain text
#: R-intro.texi:2313
msgid ""
"However a similar result can be achieved by using @code{c()} with just one "
"argument, simply for this side-effect:"
msgstr ""

#. type: example
#: R-intro.texi:2316
#, no-wrap
msgid "> vec <- c(X)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2322
msgid ""
"There are slight differences between the two, but ultimately the choice "
"between them is largely a matter of style (with the former being "
"preferable)."
msgstr ""

#. type: cindex
#: R-intro.texi:2325
#, no-wrap
msgid "Tabulation"
msgstr ""

#. type: Plain text
#: R-intro.texi:2329
msgid ""
"Recall that a factor defines a partition into groups.  Similarly a pair of "
"factors defines a two way cross classification, and so on."
msgstr ""

#. type: Plain text
#: R-intro.texi:2333
msgid ""
"The function @code{table()} allows frequency tables to be calculated from "
"equal length factors.  If there are @math{k} factor arguments, the result is "
"a @math{k}-way array of frequencies."
msgstr ""

#. type: Plain text
#: R-intro.texi:2336
msgid ""
"Suppose, for example, that @code{statef} is a factor giving the state code "
"for each entry in a data vector.  The assignment"
msgstr ""

#. type: example
#: R-intro.texi:2339
#, no-wrap
msgid "> statefr <- table(statef)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2346
msgid ""
"gives in @code{statefr} a table of frequencies of each state in the sample.  "
"The frequencies are ordered and labelled by the @code{levels} attribute of "
"the factor.  This simple case is equivalent to, but more convenient than,"
msgstr ""

#. type: example
#: R-intro.texi:2349
#, no-wrap
msgid "> statefr <- tapply(statef, statef, length)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2354
msgid ""
"Further suppose that @code{incomef} is a factor giving a suitably defined "
"``income class'' for each entry in the data vector, for example with the "
"@code{cut()} function:"
msgstr ""

#. type: example
#: R-intro.texi:2357
#, no-wrap
msgid "> factor(cut(incomes, breaks = 35+10*(0:7))) -> incomef\n"
msgstr ""

#. type: findex
#: R-intro.texi:2358
#, no-wrap
msgid "cut"
msgstr ""

#. type: Plain text
#: R-intro.texi:2361
msgid "Then to calculate a two-way table of frequencies:"
msgstr ""

#. type: example
#: R-intro.texi:2370
#, no-wrap
msgid ""
"> table(incomef,statef)\n"
"         statef\n"
"incomef   act nsw nt qld sa tas vic wa\n"
"  (35,45]   1   1  0   1  0   0   1  0\n"
"  (45,55]   1   1  1   1  2   0   1  3\n"
"  (55,65]   0   3  1   3  2   2   2  1\n"
"  (65,75]   0   1  0   0  0   0   1  0\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2373
msgid "Extension to higher-way frequency tables is immediate."
msgstr ""

#. type: node
#: R-intro.texi:2381 R-intro.texi:2383 R-intro.texi:2384 R-intro.texi:2385 R-intro.texi:2464
#, no-wrap
msgid "Lists"
msgstr ""

#. type: node
#: R-intro.texi:2381 R-intro.texi:2383 R-intro.texi:2464 R-intro.texi:2465 R-intro.texi:2493 R-intro.texi:2493 R-intro.texi:2512
#, no-wrap
msgid "Constructing and modifying lists"
msgstr ""

#. type: node
#: R-intro.texi:2381 R-intro.texi:2464 R-intro.texi:2512 R-intro.texi:2513 R-intro.texi:2514 R-intro.texi:2551 R-intro.texi:2551 R-intro.texi:2573 R-intro.texi:2638 R-intro.texi:2665 R-intro.texi:2680
#, no-wrap
msgid "Data frames"
msgstr ""

#. type: Plain text
#: R-intro.texi:2389
msgid ""
"An @R{} @emph{list} is an object consisting of an ordered collection of "
"objects known as its @emph{components}."
msgstr ""

#. type: Plain text
#: R-intro.texi:2394
msgid ""
"There is no particular need for the components to be of the same mode or "
"type, and, for example, a list could consist of a numeric vector, a logical "
"value, a matrix, a complex vector, a character array, a function, and so "
"on.  Here is a simple example of how to make a list:"
msgstr ""

#. type: example
#: R-intro.texi:2398
#, no-wrap
msgid ""
"> Lst <- list(name=\"Fred\", wife=\"Mary\", no.children=3,\n"
"              child.ages=c(4,7,9))\n"
msgstr ""

#. type: findex
#: R-intro.texi:2399
#, no-wrap
msgid "list"
msgstr ""

#. type: Plain text
#: R-intro.texi:2407
msgid ""
"Components are always @emph{numbered} and may always be referred to as "
"such.  Thus if @code{Lst} is the name of a list with four components, these "
"may be individually referred to as @code{Lst[[1]]}, @code{Lst[[2]]}, "
"@code{Lst[[3]]} and @code{Lst[[4]]}.  If, further, @code{Lst[[4]]} is a "
"vector subscripted array then @code{Lst[[4]][1]} is its first entry."
msgstr ""

#. type: Plain text
#: R-intro.texi:2410
msgid ""
"If @code{Lst} is a list, then the function @code{length(Lst)} gives the "
"number of (top level) components it has."
msgstr ""

#. type: Plain text
#: R-intro.texi:2415
msgid ""
"Components of lists may also be @emph{named}, and in this case the component "
"may be referred to either by giving the component name as a character string "
"in place of the number in double square brackets, or, more conveniently, by "
"giving an expression of the form"
msgstr ""

#. type: example
#: R-intro.texi:2418
#, no-wrap
msgid "> @var{name}$@var{component_name}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2422
msgid "for the same thing."
msgstr ""

#. type: Plain text
#: R-intro.texi:2425
msgid ""
"This is a very useful convention as it makes it easier to get the right "
"component if you forget the number."
msgstr ""

#. type: Plain text
#: R-intro.texi:2427
msgid "So in the simple example given above:"
msgstr ""

#. type: Plain text
#: R-intro.texi:2430
msgid ""
"@code{Lst$name} is the same as @code{Lst[[1]]} and is the string "
"@code{\"Fred\"},"
msgstr ""

#. type: Plain text
#: R-intro.texi:2433
msgid ""
"@code{Lst$wife} is the same as @code{Lst[[2]]} and is the string "
"@code{\"Mary\"},"
msgstr ""

#. type: Plain text
#: R-intro.texi:2436
msgid ""
"@code{Lst$child.ages[1]} is the same as @code{Lst[[4]][1]} and is the number "
"@code{4}."
msgstr ""

#. type: Plain text
#: R-intro.texi:2441
msgid ""
"Additionally, one can also use the names of the list components in double "
"square brackets, i.e., @code{Lst[[\"name\"]]} is the same as "
"@code{Lst$name}.  This is especially useful, when the name of the component "
"to be extracted is stored in another variable as in"
msgstr ""

#. type: example
#: R-intro.texi:2444
#, no-wrap
msgid "> x <- \"name\"; Lst[[x]]\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2454
msgid ""
"It is very important to distinguish @code{Lst[[1]]} from @code{Lst[1]}.  "
"@samp{@code{[[@var{@dots{}}]]}} is the operator used to select a single "
"element, whereas @samp{@code{[@var{@dots{}}]}} is a general subscripting "
"operator.  Thus the former is the @emph{first object in the list} "
"@code{Lst}, and if it is a named list the name is @emph{not} included.  The "
"latter is a @emph{sublist of the list @code{Lst} consisting of the first "
"entry only.  If it is a named list, the names are transferred to the "
"sublist.}"
msgstr ""

#. type: Plain text
#: R-intro.texi:2459
msgid ""
"The names of components may be abbreviated down to the minimum number of "
"letters needed to identify them uniquely.  Thus @code{Lst$coefficients} may "
"be minimally specified as @code{Lst$coe} and @code{Lst$covariance} as "
"@code{Lst$cov}."
msgstr ""

#. type: Plain text
#: R-intro.texi:2463
msgid ""
"The vector of names is in fact simply an attribute of the list like any "
"other and may be handled as such.  Other structures besides lists may, of "
"course, similarly be given a @emph{names} attribute also."
msgstr ""

#. type: Plain text
#: R-intro.texi:2469
msgid ""
"New lists may be formed from existing objects by the function "
"@code{list()}.  An assignment of the form"
msgstr ""

#. type: example
#: R-intro.texi:2472
#, no-wrap
msgid ""
"> Lst <- list(@var{name_1}=@var{object_1}, @var{@dots{}}, "
"@var{name_m}=@var{object_m})\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2481
msgid ""
"sets up a list @code{Lst} of @math{m} components using @var{object_1}, "
"@dots{}, @var{object_m} for the components and giving them names as "
"specified by the argument names, (which can be freely chosen).  If these "
"names are omitted, the components are numbered only.  The components used to "
"form the list are @emph{copied} when forming the new list and the originals "
"are not affected."
msgstr ""

#. type: Plain text
#: R-intro.texi:2484
msgid ""
"Lists, like any subscripted object, can be extended by specifying additional "
"components.  For example"
msgstr ""

#. type: example
#: R-intro.texi:2487
#, no-wrap
msgid "> Lst[5] <- list(matrix=Mat)\n"
msgstr ""

#. type: cindex
#: R-intro.texi:2491 R-intro.texi:2493 R-intro.texi:2494 R-intro.texi:2495
#, no-wrap
msgid "Concatenating lists"
msgstr ""

#. type: Plain text
#: R-intro.texi:2501
msgid ""
"When the concatenation function @code{c()} is given list arguments, the "
"result is an object of mode list also, whose components are those of the "
"argument lists joined together in sequence."
msgstr ""

#. type: example
#: R-intro.texi:2504
#, no-wrap
msgid "> list.ABC <- c(list.A, list.B, list.C)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2510
msgid ""
"Recall that with vector objects as arguments the concatenation function "
"similarly joined together all arguments into a single vector structure.  In "
"this case all other attributes, such as @code{dim} attributes, are "
"discarded."
msgstr ""

#. type: Plain text
#: R-intro.texi:2518
msgid ""
"A @emph{data frame} is a list with class @code{\"data.frame\"}.  There are "
"restrictions on lists that may be made into data frames, namely"
msgstr ""

#. type: itemize
#: R-intro.texi:2523
msgid ""
"The components must be vectors (numeric, character, or logical), factors, "
"numeric matrices, lists, or other data frames."
msgstr ""

#. type: itemize
#: R-intro.texi:2526
msgid ""
"Matrices, lists, and data frames provide as many variables to the new data "
"frame as they have columns, elements, or variables, respectively."
msgstr ""

#. type: itemize
#: R-intro.texi:2532
msgid ""
"Numeric vectors, logicals and factors are included as is, and by "
"default@footnote{Conversion of character columns to factors is overridden "
"using the @code{stringsAsFactors} argument to the @code{data.frame()} "
"function.} character vectors are coerced to be factors, whose levels are the "
"unique values appearing in the vector."
msgstr ""

#. type: itemize
#: R-intro.texi:2536
msgid ""
"Vector structures appearing as variables of the data frame must all have the "
"@emph{same length}, and matrix structures must all have the same @emph{row "
"size}."
msgstr ""

#. type: Plain text
#: R-intro.texi:2542
msgid ""
"A data frame may for many purposes be regarded as a matrix with columns "
"possibly of differing modes and attributes.  It may be displayed in matrix "
"form, and its rows and columns extracted using matrix indexing conventions."
msgstr ""

#. type: node
#: R-intro.texi:2549 R-intro.texi:2551 R-intro.texi:2552 R-intro.texi:2573
#, no-wrap
msgid "Making data frames"
msgstr ""

#. type: node
#: R-intro.texi:2549 R-intro.texi:2551 R-intro.texi:2573 R-intro.texi:2638
#, no-wrap
msgid "attach() and detach()"
msgstr ""

#. type: node
#: R-intro.texi:2549 R-intro.texi:2573 R-intro.texi:2638 R-intro.texi:2639 R-intro.texi:2665
#, no-wrap
msgid "Working with data frames"
msgstr ""

#. type: node
#: R-intro.texi:2549 R-intro.texi:2638 R-intro.texi:2665 R-intro.texi:2666 R-intro.texi:2680
#, no-wrap
msgid "Attaching arbitrary lists"
msgstr ""

#. type: subsection
#: R-intro.texi:2549 R-intro.texi:2665 R-intro.texi:2680 R-intro.texi:2681
#, no-wrap
msgid "Managing the search path"
msgstr ""

#. type: Plain text
#: R-intro.texi:2557
msgid ""
"Objects satisfying the restrictions placed on the columns (components)  of a "
"data frame may be used to form one using the function @code{data.frame}:"
msgstr ""

#. type: findex
#: R-intro.texi:2557
#, no-wrap
msgid "data.frame"
msgstr ""

#. type: example
#: R-intro.texi:2561
#, no-wrap
msgid "> accountants <- data.frame(home=statef, loot=incomes, shot=incomef)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2566
msgid ""
"A list whose components conform to the restrictions of a data frame may be "
"@emph{coerced} into a data frame using the function @code{as.data.frame()}"
msgstr ""

#. type: findex
#: R-intro.texi:2566
#, no-wrap
msgid "as.data.frame"
msgstr ""

#. type: Plain text
#: R-intro.texi:2572
msgid ""
"The simplest way to construct a data frame from scratch is to use the "
"@code{read.table()} function to read an entire data frame from an external "
"file.  This is discussed further in @ref{Reading data from files}."
msgstr ""

#. type: subsection
#: R-intro.texi:2574
#, no-wrap
msgid "@code{attach()} and @code{detach()}"
msgstr ""

#. type: findex
#: R-intro.texi:2575
#, no-wrap
msgid "attach"
msgstr ""

#. type: findex
#: R-intro.texi:2576
#, no-wrap
msgid "detach"
msgstr ""

#. type: Plain text
#: R-intro.texi:2583
msgid ""
"The @code{$} notation, such as @code{accountants$home}, for list components "
"is not always very convenient.  A useful facility would be somehow to make "
"the components of a list or data frame temporarily visible as variables "
"under their component name, without the need to quote the list name "
"explicitly each time."
msgstr ""

#. type: Plain text
#: R-intro.texi:2588
msgid ""
"The @code{attach()} function takes a `database' such as a list or data frame "
"as its argument.  Thus suppose @code{lentils} is a data frame with three "
"variables @code{lentils$u}, @code{lentils$v}, @code{lentils$w}.  The attach"
msgstr ""

#. type: example
#: R-intro.texi:2591
#, no-wrap
msgid "> attach(lentils)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2598
msgid ""
"places the data frame in the search path at @w{position 2}, and provided "
"there are no variables @code{u}, @code{v} or @code{w} in @w{position 1}, "
"@code{u}, @code{v} and @code{w} are available as variables from the data "
"frame in their own right.  At this point an assignment such as"
msgstr ""

#. type: example
#: R-intro.texi:2601
#, no-wrap
msgid "> u <- v+w\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2609
msgid ""
"does not replace the component @code{u} of the data frame, but rather masks "
"it with another variable @code{u} in the working directory at @w{position 1} "
"on the search path.  To make a permanent change to the data frame itself, "
"the simplest way is to resort once again to the @code{$} notation:"
msgstr ""

#. type: example
#: R-intro.texi:2612
#, no-wrap
msgid "> lentils$u <- v+w\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2616
msgid ""
"However the new value of component @code{u} is not visible until the data "
"frame is detached and attached again."
msgstr ""

#. type: Plain text
#: R-intro.texi:2618
msgid "To detach a data frame, use the function"
msgstr ""

#. type: example
#: R-intro.texi:2621
#, no-wrap
msgid "> detach()\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2630
msgid ""
"More precisely, this statement detaches from the search path the entity "
"currently at @w{position 2}.  Thus in the present context the variables "
"@code{u}, @code{v} and @code{w} would be no longer visible, except under the "
"list notation as @code{lentils$u} and so on.  Entities at positions greater "
"than 2 on the search path can be detached by giving their number to "
"@code{detach}, but it is much safer to always use a name, for example by "
"@code{detach(lentils)} or @code{detach(\"lentils\")}"
msgstr ""

#. type: quotation
#: R-intro.texi:2631
#, no-wrap
msgid "Note"
msgstr ""

#. type: quotation
#: R-intro.texi:2636
msgid ""
"In @R{} lists and data frames can only be attached at position 2 or above, "
"and what is attached is a @emph{copy} of the original object.  You can alter "
"the attached values @emph{via} @code{assign}, but the original list or data "
"frame is unchanged."
msgstr ""

#. type: Plain text
#: R-intro.texi:2643
msgid ""
"A useful convention that allows you to work with many different problems "
"comfortably together in the same working directory is"
msgstr ""

#. type: itemize
#: R-intro.texi:2648
msgid ""
"gather together all variables for any well defined and separate problem in a "
"data frame under a suitably informative name;"
msgstr ""

#. type: itemize
#: R-intro.texi:2652
msgid ""
"when working with a problem attach the appropriate data frame at @w{position "
"2}, and use the working directory at @w{level 1} for operational quantities "
"and temporary variables;"
msgstr ""

#. type: itemize
#: R-intro.texi:2656
msgid ""
"before leaving a problem, add any variables you wish to keep for future "
"reference to the data frame using the @code{$} form of assignment, and then "
"@code{detach()};"
msgstr ""

#. type: itemize
#: R-intro.texi:2659
msgid ""
"finally remove all unwanted variables from the working directory and keep it "
"as clean of left-over temporary variables as possible."
msgstr ""

#. type: Plain text
#: R-intro.texi:2664
msgid ""
"In this way it is quite simple to work with many problems in the same "
"directory, all of which have variables named @code{x}, @code{y} and "
"@code{z}, for example."
msgstr ""

#. type: Plain text
#: R-intro.texi:2672
msgid ""
"@code{attach()} is a generic function that allows not only directories and "
"data frames to be attached to the search path, but other classes of object "
"as well.  In particular any object of mode @code{\"list\"} may be attached "
"in the same way:"
msgstr ""

#. type: example
#: R-intro.texi:2675
#, no-wrap
msgid "> attach(any.old.list)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2679
msgid ""
"Anything that has been attached can be detached by @code{detach}, by "
"position number or, preferably, by name."
msgstr ""

#. type: findex
#: R-intro.texi:2682
#, no-wrap
msgid "search"
msgstr ""

#. type: cindex
#: R-intro.texi:2683
#, no-wrap
msgid "Search path"
msgstr ""

#. type: Plain text
#: R-intro.texi:2688
msgid ""
"The function @code{search} shows the current search path and so is a very "
"useful way to keep track of which data frames and lists (and packages) have "
"been attached and detached.  Initially it gives"
msgstr ""

#. type: example
#: R-intro.texi:2692
#, no-wrap
msgid ""
"> search()\n"
"[1] \".GlobalEnv\"   \"Autoloads\"    \"package:base\"\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2696
msgid ""
"where @code{.GlobalEnv} is the workspace.@footnote{See the on-line help for "
"@code{autoload} for the meaning of the second term.}"
msgstr ""

#. type: Plain text
#: R-intro.texi:2698
msgid "After @code{lentils} is attached we have"
msgstr ""

#. type: example
#: R-intro.texi:2704
#, no-wrap
msgid ""
"> search()\n"
"[1] \".GlobalEnv\"   \"lentils\"      \"Autoloads\"    \"package:base\"\n"
"> ls(2)\n"
"[1] \"u\" \"v\" \"w\"\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2709
msgid ""
"and as we see @code{ls} (or @code{objects}) can be used to examine the "
"contents of any position on the search path."
msgstr ""

#. type: Plain text
#: R-intro.texi:2712
msgid ""
"Finally, we detach the data frame and confirm it has been removed from the "
"search path."
msgstr ""

#. type: example
#: R-intro.texi:2717
#, no-wrap
msgid ""
"> detach(\"lentils\")\n"
"> search()\n"
"[1] \".GlobalEnv\"   \"Autoloads\"    \"package:base\"\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2731
msgid ""
"Large data objects will usually be read as values from external files rather "
"than entered during an @R{} session at the keyboard.  @R{} input facilities "
"are simple and their requirements are fairly strict and even rather "
"inflexible.  There is a clear presumption by the designers of @R{} that you "
"will be able to modify your input files using other tools, such as file "
"editors or Perl@footnote{Under UNIX, the utilities @command{sed} "
"or@command{awk} can be used.} to fit in with the requirements of @R{}.  "
"Generally this is very simple."
msgstr ""

#. type: Plain text
#: R-intro.texi:2736
msgid ""
"If variables are to be held mainly in data frames, as we strongly suggest "
"they should be, an entire data frame can be read directly with the "
"@code{read.table()} function.  There is also a more primitive input "
"function, @code{scan()}, that can be called directly."
msgstr ""

#. type: Plain text
#: R-intro.texi:2739
msgid ""
"For more details on importing data into @R{} and also exporting data, see "
"the @emph{R Data Import/Export} manual."
msgstr ""

#. type: node
#: R-intro.texi:2745 R-intro.texi:2747 R-intro.texi:2830
#, no-wrap
msgid "The read.table() function"
msgstr ""

#. type: node
#: R-intro.texi:2745 R-intro.texi:2747 R-intro.texi:2828 R-intro.texi:2830 R-intro.texi:2882
#, no-wrap
msgid "The scan() function"
msgstr ""

#. type: node
#: R-intro.texi:2745 R-intro.texi:2830 R-intro.texi:2882 R-intro.texi:2883 R-intro.texi:2884 R-intro.texi:2926
#, no-wrap
msgid "Accessing builtin datasets"
msgstr ""

#. type: section
#: R-intro.texi:2745 R-intro.texi:2882 R-intro.texi:2926 R-intro.texi:2927
#, no-wrap
msgid "Editing data"
msgstr ""

#. type: section
#: R-intro.texi:2748
#, no-wrap
msgid "The @code{read.table()} function"
msgstr ""

#. type: findex
#: R-intro.texi:2749
#, no-wrap
msgid "read.table"
msgstr ""

#. type: Plain text
#: R-intro.texi:2753
msgid ""
"To read an entire data frame directly, the external file will normally have "
"a special form."
msgstr ""

#. type: itemize
#: R-intro.texi:2758
msgid ""
"The first line of the file should have a @emph{name} for each variable in "
"the data frame."
msgstr ""

#. type: itemize
#: R-intro.texi:2762
msgid ""
"Each additional line of the file has as its first item a @emph{row label} "
"and the values for each variable."
msgstr ""

#. type: Plain text
#: R-intro.texi:2767
msgid ""
"If the file has one fewer item in its first line than in its second, this "
"arrangement is presumed to be in force.  So the first few lines of a file to "
"be read as a data frame might look as follows."
msgstr ""

#. type: example
#: R-intro.texi:2772
#, no-wrap
msgid ""
"@r{Input file form with names and row labels:}\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:2780
#, no-wrap
msgid ""
"     Price    Floor     Area   Rooms     Age  Cent.heat\n"
"01   52.00    111.0      830     5       6.2      no\n"
"02   54.75    128.0      710     5       7.5      no\n"
"03   57.50    101.0     1000     5       4.2      no\n"
"04   57.50    131.0      690     6       8.8      no\n"
"05   59.75     93.0      900     5       1.9     yes\n"
"...\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2787
msgid ""
"By default numeric items (except row labels) are read as numeric variables "
"and non-numeric variables, such as @code{Cent.heat} in the example, as "
"factors.  This can be changed if necessary."
msgstr ""

#. type: Plain text
#: R-intro.texi:2790
msgid ""
"The function @code{read.table()} can then be used to read the data frame "
"directly"
msgstr ""

#. type: example
#: R-intro.texi:2793
#, no-wrap
msgid "> HousePrice <- read.table(\"houses.data\")\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2798
msgid ""
"Often you will want to omit including the row labels directly and use the "
"default labels.  In this case the file may omit the row label column as in "
"the following."
msgstr ""

#. type: example
#: R-intro.texi:2803
#, no-wrap
msgid ""
"@r{Input file form without row labels:}\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:2811
#, no-wrap
msgid ""
"Price    Floor     Area   Rooms     Age  Cent.heat\n"
"52.00    111.0      830     5       6.2      no\n"
"54.75    128.0      710     5       7.5      no\n"
"57.50    101.0     1000     5       4.2      no\n"
"57.50    131.0      690     6       8.8      no\n"
"59.75     93.0      900     5       1.9     yes\n"
"...\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2816
msgid "The data frame may then be read as"
msgstr ""

#. type: example
#: R-intro.texi:2819
#, no-wrap
msgid "> HousePrice <- read.table(\"houses.data\", header=TRUE)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2825
msgid ""
"where the @code{header=TRUE} option specifies that the first line is a line "
"of headings, and hence, by implication from the form of the file, that no "
"explicit row labels are given."
msgstr ""

#. type: section
#: R-intro.texi:2831
#, no-wrap
msgid "The @code{scan()} function"
msgstr ""

#. type: findex
#: R-intro.texi:2832
#, no-wrap
msgid "scan"
msgstr ""

#. type: Plain text
#: R-intro.texi:2839
msgid ""
"Suppose the data vectors are of equal length and are to be read in "
"parallel.  Further suppose that there are three vectors, the first of mode "
"character and the remaining two of mode numeric, and the file is "
"@file{input.dat}.  The first step is to use @code{scan()} to read in the "
"three vectors as a list, as follows"
msgstr ""

#. type: example
#: R-intro.texi:2842
#, no-wrap
msgid "> inp <- scan(\"input.dat\", list(\"\",0,0))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2848
msgid ""
"The second argument is a dummy list structure that establishes the mode of "
"the three vectors to be read.  The result, held in @code{inp}, is a list "
"whose components are the three vectors read in.  To separate the data items "
"into three separate vectors, use assignments like"
msgstr ""

#. type: example
#: R-intro.texi:2851
#, no-wrap
msgid "> label <- inp[[1]]; x <- inp[[2]]; y <- inp[[3]]\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2855
msgid ""
"More conveniently, the dummy list can have named components, in which case "
"the names can be used to access the vectors read in.  For example"
msgstr ""

#. type: example
#: R-intro.texi:2858
#, no-wrap
msgid "> inp <- scan(\"input.dat\", list(id=\"\", x=0, y=0))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2862
msgid ""
"If you wish to access the variables separately they may either be "
"re-assigned to variables in the working frame:"
msgstr ""

#. type: example
#: R-intro.texi:2865
#, no-wrap
msgid "> label <- inp$id; x <- inp$x; y <- inp$y\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2870
msgid ""
"or the list may be attached at @w{position 2} of the search path "
"(@pxref{Attaching arbitrary lists})."
msgstr ""

#. type: Plain text
#: R-intro.texi:2874
msgid ""
"If the second argument is a single value and not a list, a single vector is "
"read in, all components of which must be of the same mode as the dummy "
"value."
msgstr ""

#. type: example
#: R-intro.texi:2877
#, no-wrap
msgid "> X <- matrix(scan(\"light.dat\", 0), ncol=5, byrow=TRUE)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2881
msgid ""
"There are more elaborate input facilities available and these are detailed "
"in the manuals."
msgstr ""

#. type: findex
#: R-intro.texi:2885
#, no-wrap
msgid "data"
msgstr ""

#. type: Plain text
#: R-intro.texi:2891
msgid ""
"Around 100 datasets are supplied with @R{} (in package @pkg{datasets}), and "
"others are available in packages (including the recommended packages "
"supplied with @R{}).  To see the list of datasets currently available use"
msgstr ""

#. type: example
#: R-intro.texi:2894
#, no-wrap
msgid "data()\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2900
msgid ""
"All the datasets supplied with @R{} are available directly by name.  "
"However, many packages still use the obsolete convention in which "
"@code{data} was also used to load datasets into @R{}, for example"
msgstr ""

#. type: example
#: R-intro.texi:2903
#, no-wrap
msgid "data(infert)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2910
msgid ""
"and this can still be used with the standard packages (as in this example).  "
"In most cases this will load an @R{} object of the same name.  However, in a "
"few cases it loads several objects, so see the on-line help for the object "
"to see what to expect."
msgstr ""

#. type: subsection
#: R-intro.texi:2911
#, no-wrap
msgid "Loading data from other R packages"
msgstr ""

#. type: Plain text
#: R-intro.texi:2915
msgid ""
"To access data from a particular package, use the @code{package} argument, "
"for example"
msgstr ""

#. type: example
#: R-intro.texi:2919
#, no-wrap
msgid ""
"data(package=\"rpart\")\n"
"data(Puromycin, package=\"datasets\")\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2923
msgid ""
"If a package has been attached by @code{library}, its datasets are "
"automatically included in the search."
msgstr ""

#. type: Plain text
#: R-intro.texi:2925
msgid "User-contributed packages can be a rich source of datasets."
msgstr ""

#. type: findex
#: R-intro.texi:2929
#, no-wrap
msgid "edit"
msgstr ""

#. type: Plain text
#: R-intro.texi:2933
msgid ""
"When invoked on a data frame or matrix, @code{edit} brings up a separate "
"spreadsheet-like environment for editing.  This is useful for making small "
"changes once a data set has been read.  The command"
msgstr ""

#. type: example
#: R-intro.texi:2936
#, no-wrap
msgid "> xnew <- edit(xold)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2943
msgid ""
"will allow you to edit your data set @code{xold}, and on completion the "
"changed object is assigned to @code{xnew}.  If you want to alter the "
"original dataset @code{xold}, the simplest way is to use @code{fix(xold)}, "
"which is equivalent to @code{xold <- edit(xold)}."
msgstr ""

#. type: Plain text
#: R-intro.texi:2945 R-intro.texi:7287
msgid "Use"
msgstr ""

#. type: example
#: R-intro.texi:2948
#, no-wrap
msgid "> xnew <- edit(data.frame())\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:2952
msgid "to enter new data via the spreadsheet interface."
msgstr ""

#. type: node
#: R-intro.texi:2962 R-intro.texi:2964 R-intro.texi:2965 R-intro.texi:3041
#, no-wrap
msgid "R as a set of statistical tables"
msgstr ""

#. type: node
#: R-intro.texi:2962 R-intro.texi:2964 R-intro.texi:3041 R-intro.texi:3042 R-intro.texi:3201
#, no-wrap
msgid "Examining the distribution of a set of data"
msgstr ""

#. type: cindex
#: R-intro.texi:2962 R-intro.texi:3041 R-intro.texi:3201 R-intro.texi:3202 R-intro.texi:3203
#, no-wrap
msgid "One- and two-sample tests"
msgstr ""

#. type: Plain text
#: R-intro.texi:2973
msgid ""
"One convenient use of @R{} is to provide a comprehensive set of statistical "
"tables.  Functions are provided to evaluate the cumulative distribution "
"function @eqn{P(X \\le x), P(X <= x)}, the probability density function and "
"the quantile function (given @math{q}, the smallest @math{x} such that "
"@eqn{P(X \\le x) > q, P(X <= x) > q}), and to simulate from the "
"distribution."
msgstr ""

#. type: multitable
#: R-intro.texi:2977
msgid "@headitem Distribution"
msgstr ""

#. type: multitable
#: R-intro.texi:2977
msgid "@R{} name"
msgstr ""

#. type: multitable
#: R-intro.texi:2977
msgid "additional arguments"
msgstr ""

#. type: item
#: R-intro.texi:2977
#, no-wrap
msgid "beta @tab @code{beta} @tab @code{shape1, shape2, ncp}"
msgstr ""

#. type: item
#: R-intro.texi:2978
#, no-wrap
msgid "binomial @tab  @code{binom} @tab @code{size, prob}"
msgstr ""

#. type: item
#: R-intro.texi:2979
#, no-wrap
msgid "Cauchy @tab @code{cauchy} @tab @code{location, scale}"
msgstr ""

#. type: item
#: R-intro.texi:2980
#, no-wrap
msgid "chi-squared @tab @code{chisq} @tab @code{df, ncp}"
msgstr ""

#. type: item
#: R-intro.texi:2981
#, no-wrap
msgid "exponential @tab @code{exp} @tab @code{rate}"
msgstr ""

#. type: item
#: R-intro.texi:2982
#, no-wrap
msgid "F @tab @code{f} @tab @code{df1, df2, ncp}"
msgstr ""

#. type: item
#: R-intro.texi:2983
#, no-wrap
msgid "gamma @tab @code{gamma} @tab @code{shape, scale}"
msgstr ""

#. type: item
#: R-intro.texi:2984
#, no-wrap
msgid "geometric @tab @code{geom} @tab @code{prob}"
msgstr ""

#. type: item
#: R-intro.texi:2985
#, no-wrap
msgid "hypergeometric @tab @code{hyper} @tab @code{m, n, k}"
msgstr ""

#. type: item
#: R-intro.texi:2986
#, no-wrap
msgid "log-normal @tab @code{lnorm} @tab @code{meanlog, sdlog}"
msgstr ""

#. type: item
#: R-intro.texi:2987
#, no-wrap
msgid "logistic @tab @code{logis} @tab @code{location, scale}"
msgstr ""

#. type: item
#: R-intro.texi:2988
#, no-wrap
msgid "negative binomial @tab @code{nbinom} @tab @code{size, prob}"
msgstr ""

#. type: item
#: R-intro.texi:2989
#, no-wrap
msgid "normal @tab @code{norm} @tab @code{mean, sd}"
msgstr ""

#. type: item
#: R-intro.texi:2990
#, no-wrap
msgid "Poisson @tab @code{pois} @tab @code{lambda}"
msgstr ""

#. type: item
#: R-intro.texi:2991
#, no-wrap
msgid "signed rank @tab @code{signrank} @tab @code{n}"
msgstr ""

#. type: item
#: R-intro.texi:2992
#, no-wrap
msgid "Student's t @tab @code{t} @tab @code{df, ncp}"
msgstr ""

#. type: item
#: R-intro.texi:2993
#, no-wrap
msgid "uniform @tab @code{unif} @tab @code{min, max}"
msgstr ""

#. type: item
#: R-intro.texi:2994
#, no-wrap
msgid "Weibull @tab @code{weibull} @tab @code{shape, scale}"
msgstr ""

#. type: item
#: R-intro.texi:2995
#, no-wrap
msgid "Wilcoxon @tab @code{wilcox} @tab @code{m, n}"
msgstr ""

#. type: Plain text
#: R-intro.texi:3008
msgid ""
"Prefix the name given here by @samp{d} for the density, @samp{p} for the "
"CDF, @samp{q} for the quantile function and @samp{r} for simulation "
"(@emph{r}andom deviates).  The first argument is @code{x} for "
"@code{d@var{xxx}}, @code{q} for @code{p@var{xxx}}, @code{p} for "
"@code{q@var{xxx}} and @code{n} for @code{r@var{xxx}} (except for "
"@code{rhyper}, @code{rsignrank} and @code{rwilcox}, for which it is "
"@code{nn}).  In not quite all cases is the non-centrality parameter "
"@code{ncp} currently available: see the on-line help for details."
msgstr ""

#. type: Plain text
#: R-intro.texi:3014
msgid ""
"The @code{p@var{xxx}} and @code{q@var{xxx}} functions all have logical "
"arguments @code{lower.tail} and @code{log.p} and the @code{d@var{xxx}} ones "
"have @code{log}.  This allows, e.g., getting the cumulative (or "
"``integrated'') @emph{hazard} function, @eqn{H(t) = - \\log(1 - F(t)), H(t) "
"= - log(1 - F(t))}, by"
msgstr ""

#. type: example
#: R-intro.texi:3017
#, no-wrap
msgid " - p@var{xxx}(t, ..., lower.tail = FALSE, log.p = TRUE)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3022
msgid ""
"or more accurate log-likelihoods (by @code{d@var{xxx}(..., log = TRUE)}), "
"directly."
msgstr ""

#. type: Plain text
#: R-intro.texi:3028
msgid ""
"In addition there are functions @code{ptukey} and @code{qtukey} for the "
"distribution of the studentized range of samples from a normal distribution, "
"and @code{dmultinom} and @code{rmultinom} for the multinomial "
"distribution. Further distributions are available in contributed packages, "
"notably @CRANpkg{SuppDists}."
msgstr ""

#. type: Plain text
#: R-intro.texi:3030
msgid "Here are some examples"
msgstr ""

#. type: example
#: R-intro.texi:3036
#, no-wrap
msgid ""
"> ## @r{2-tailed p-value for t distribution}\n"
"> 2*pt(-2.43, df = 13)\n"
"> ## @r{upper 1% point for an F(2, 7) distribution}\n"
"> qf(0.01, 2, 7, lower.tail = FALSE)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3040
msgid ""
"See the on-line help on @code{RNG} for how random-number generation is done "
"in @R{}."
msgstr ""

#. type: Plain text
#: R-intro.texi:3048
msgid ""
"Given a (univariate) set of data we can examine its distribution in a large "
"number of ways.  The simplest is to examine the numbers.  Two slightly "
"different summaries are given by @code{summary} and @code{fivenum}"
msgstr ""

#. type: findex
#: R-intro.texi:3048 R-intro.texi:4595
#, no-wrap
msgid "summary"
msgstr ""

#. type: findex
#: R-intro.texi:3049
#, no-wrap
msgid "fivenum"
msgstr ""

#. type: Plain text
#: R-intro.texi:3051
msgid "and a display of the numbers by @code{stem} (a ``stem and leaf'' plot)."
msgstr ""

#. type: findex
#: R-intro.texi:3051
#, no-wrap
msgid "stem"
msgstr ""

#. type: example
#: R-intro.texi:3061
#, no-wrap
msgid ""
"> attach(faithful)\n"
"> summary(eruptions)\n"
"   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.\n"
"  1.600   2.163   4.000   3.488   4.454   5.100\n"
"> fivenum(eruptions)\n"
"[1] 1.6000 2.1585 4.0000 4.4585 5.1000\n"
"> stem(eruptions)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3063
#, no-wrap
msgid ""
"  The decimal point is 1 digit(s) to the left of the |\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3082
#, no-wrap
msgid ""
"  16 | 070355555588\n"
"  18 | 000022233333335577777777888822335777888\n"
"  20 | 00002223378800035778\n"
"  22 | 0002335578023578\n"
"  24 | 00228\n"
"  26 | 23\n"
"  28 | 080\n"
"  30 | 7\n"
"  32 | 2337\n"
"  34 | 250077\n"
"  36 | 0000823577\n"
"  38 | 2333335582225577\n"
"  40 | 0000003357788888002233555577778\n"
"  42 | 03335555778800233333555577778\n"
"  44 | 02222335557780000000023333357778888\n"
"  46 | 0000233357700000023578\n"
"  48 | 00000022335800333\n"
"  50 | 0370\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3086
msgid ""
"A stem-and-leaf plot is like a histogram, and @R{} has a function "
"@code{hist} to plot histograms."
msgstr ""

#. type: findex
#: R-intro.texi:3086 R-intro.texi:5535
#, no-wrap
msgid "hist"
msgstr ""

#. type: example
#: R-intro.texi:3094
#, no-wrap
msgid ""
"> hist(eruptions)\n"
"## @r{make the bins smaller, make a plot of density}\n"
"> hist(eruptions, seq(1.6, 5.2, 0.2), prob=TRUE)\n"
"> lines(density(eruptions, bw=0.1))\n"
"> rug(eruptions) # @r{show the actual data points}\n"
msgstr ""

#. type: findex
#: R-intro.texi:3096
#, no-wrap
msgid "density"
msgstr ""

#. type: cindex
#: R-intro.texi:3097
#, no-wrap
msgid "Density estimation"
msgstr ""

#. type: Plain text
#: R-intro.texi:3104
msgid ""
"More elegant density plots can be made by @code{density}, and we added a "
"line produced by @code{density} in this example.  The bandwidth @code{bw} "
"was chosen by trial-and-error as the default gives too much smoothing (it "
"usually does for ``interesting'' densities).  (Better automated methods of "
"bandwidth choice are available, and in this example @code{bw = \"SJ\"} gives "
"a good result.)"
msgstr ""

#. type: ifnotinfo
#: R-intro.texi:3107
msgid "@image{images/hist,9cm}"
msgstr ""

#. type: Plain text
#: R-intro.texi:3111
msgid ""
"We can plot the empirical cumulative distribution function by using the "
"function @code{ecdf}."
msgstr ""

#. type: findex
#: R-intro.texi:3111
#, no-wrap
msgid "ecdf"
msgstr ""

#. type: cindex
#: R-intro.texi:3112
#, no-wrap
msgid "Empirical CDFs"
msgstr ""

#. type: example
#: R-intro.texi:3116
#, no-wrap
msgid "> plot(ecdf(eruptions), do.points=FALSE, verticals=TRUE)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3121
msgid ""
"This distribution is obviously far from any standard distribution.  How "
"about the right-hand mode, say eruptions of longer than 3 minutes? Let us "
"fit a normal distribution and overlay the fitted CDF."
msgstr ""

#. type: example
#: R-intro.texi:3127
#, no-wrap
msgid ""
"> long <- eruptions[eruptions > 3]\n"
"> plot(ecdf(long), do.points=FALSE, verticals=TRUE)\n"
"> x <- seq(3, 5.4, 0.01)\n"
"> lines(x, pnorm(x, mean=mean(long), sd=sqrt(var(long))), lty=3)\n"
msgstr ""

#. type: ifnotinfo
#: R-intro.texi:3131
msgid "@image{images/ecdf,9cm}"
msgstr ""

#. type: Plain text
#: R-intro.texi:3134
msgid "Quantile-quantile (Q-Q) plots can help us examine this more carefully."
msgstr ""

#. type: cindex
#: R-intro.texi:3134
#, no-wrap
msgid "Quantile-quantile plots"
msgstr ""

#. type: findex
#: R-intro.texi:3135 R-intro.texi:5522
#, no-wrap
msgid "qqnorm"
msgstr ""

#. type: findex
#: R-intro.texi:3136 R-intro.texi:5523
#, no-wrap
msgid "qqline"
msgstr ""

#. type: example
#: R-intro.texi:3141
#, no-wrap
msgid ""
"par(pty=\"s\")       # arrange for a square figure region\n"
"qqnorm(long); qqline(long)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3147
msgid ""
"which shows a reasonable fit but a shorter right tail than one would expect "
"from a normal distribution.  Let us compare this with some simulated data "
"from a @math{t} distribution"
msgstr ""

#. type: ifnotinfo
#: R-intro.texi:3150
msgid "@image{images/QQ,7cm}"
msgstr ""

#. type: example
#: R-intro.texi:3155
#, no-wrap
msgid ""
"x <- rt(250, df = 5)\n"
"qqnorm(x); qqline(x)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3161
msgid ""
"which will usually (if it is a random sample) show longer tails than "
"expected for a normal.  We can make a Q-Q plot against the generating "
"distribution by"
msgstr ""

#. type: example
#: R-intro.texi:3165
#, no-wrap
msgid ""
"qqplot(qt(ppoints(250), df = 5), x, xlab = \"Q-Q plot for t dsn\")\n"
"qqline(x)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3169
msgid ""
"Finally, we might want a more formal test of agreement with normality (or "
"not).  @R{} provides the Shapiro-Wilk test"
msgstr ""

#. type: cindex
#: R-intro.texi:3169
#, no-wrap
msgid "Shapiro-Wilk test"
msgstr ""

#. type: findex
#: R-intro.texi:3170
#, no-wrap
msgid "shapiro.test"
msgstr ""

#. type: example
#: R-intro.texi:3174
#, no-wrap
msgid ""
"> shapiro.test(long)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3176
#, no-wrap
msgid ""
"         Shapiro-Wilk normality test\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3179
#, no-wrap
msgid ""
"data:  long\n"
"W = 0.9793, p-value = 0.01052\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3183
msgid "and the Kolmogorov-Smirnov test"
msgstr ""

#. type: cindex
#: R-intro.texi:3183
#, no-wrap
msgid "Kolmogorov-Smirnov test"
msgstr ""

#. type: findex
#: R-intro.texi:3184
#, no-wrap
msgid "ks.test"
msgstr ""

#. type: example
#: R-intro.texi:3188
#, no-wrap
msgid ""
"> ks.test(long, \"pnorm\", mean = mean(long), sd = sqrt(var(long)))\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3190
#, no-wrap
msgid ""
"         One-sample Kolmogorov-Smirnov test\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3194
#, no-wrap
msgid ""
"data:  long\n"
"D = 0.0661, p-value = 0.4284\n"
"alternative hypothesis: two.sided\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3200
msgid ""
"(Note that the distribution theory is not valid here as we have estimated "
"the parameters of the normal distribution from the same sample.)"
msgstr ""

#. type: Plain text
#: R-intro.texi:3209
msgid ""
"So far we have compared a single sample to a normal distribution.  A much "
"more common operation is to compare aspects of two samples.  Note that in "
"@R{}, all ``classical'' tests including the ones used below are in package "
"@pkg{stats} which is normally loaded."
msgstr ""

#. type: Plain text
#: R-intro.texi:3212
msgid ""
"Consider the following sets of data on the latent heat of the fusion of ice "
"(@emph{cal/gm}) from Rice (1995, p.490)"
msgstr ""

#. type: example
#: R-intro.texi:3217
#, no-wrap
msgid ""
"Method A: 79.98 80.04 80.02 80.04 80.03 80.03 80.04 79.97\n"
"          80.05 80.03 80.02 80.00 80.02\n"
"Method B: 80.02 79.94 79.98 79.97 79.97 80.03 79.95 79.97\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3221
msgid "Boxplots provide a simple graphical comparison of the two samples."
msgstr ""

#. type: example
#: R-intro.texi:3228
#, no-wrap
msgid ""
"A <- scan()\n"
"79.98 80.04 80.02 80.04 80.03 80.03 80.04 79.97\n"
"80.05 80.03 80.02 80.00 80.02\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3231
#, no-wrap
msgid ""
"B <- scan()\n"
"80.02 79.94 79.98 79.97 79.97 80.03 79.95 79.97\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3233
#, no-wrap
msgid "boxplot(A, B)\n"
msgstr ""

#. type: findex
#: R-intro.texi:3234
#, no-wrap
msgid "boxplot"
msgstr ""

#. type: cindex
#: R-intro.texi:3235
#, no-wrap
msgid "Box plots"
msgstr ""

#. type: Plain text
#: R-intro.texi:3240
msgid ""
"which indicates that the first group tends to give higher results than the "
"second."
msgstr ""

#. type: ifnotinfo
#: R-intro.texi:3243
msgid "@image{images/ice,7cm}"
msgstr ""

#. type: Plain text
#: R-intro.texi:3247
msgid ""
"To test for the equality of the means of the two examples, we can use an "
"@emph{unpaired} @math{t}-test by"
msgstr ""

#. type: cindex
#: R-intro.texi:3247
#, no-wrap
msgid "Student's @math{t} test"
msgstr ""

#. type: findex
#: R-intro.texi:3248
#, no-wrap
msgid "t.test"
msgstr ""

#. type: example
#: R-intro.texi:3252
#, no-wrap
msgid ""
"> t.test(A, B)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3254
#, no-wrap
msgid ""
"         Welch Two Sample t-test\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3263
#, no-wrap
msgid ""
"data:  A and B\n"
"t = 3.2499, df = 12.027, p-value = 0.00694\n"
"alternative hypothesis: true difference in means is not equal to 0\n"
"95 percent confidence interval:\n"
" 0.01385526 0.07018320\n"
"sample estimates:\n"
"mean of x mean of y\n"
" 80.02077  79.97875\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3271
msgid ""
"which does indicate a significant difference, assuming normality.  By "
"default the @R{} function does not assume equality of variances in the two "
"samples (in contrast to the similar @SPLUS{} @code{t.test} function).  We "
"can use the F test to test for equality in the variances, provided that the "
"two samples are from normal populations."
msgstr ""

#. type: example
#: R-intro.texi:3274
#, no-wrap
msgid ""
"> var.test(A, B)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3276
#, no-wrap
msgid ""
"         F test to compare two variances\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3285
#, no-wrap
msgid ""
"data:  A and B\n"
"F = 0.5837, num df = 12, denom df =  7, p-value = 0.3938\n"
"alternative hypothesis: true ratio of variances is not equal to 1\n"
"95 percent confidence interval:\n"
" 0.1251097 2.1052687\n"
"sample estimates:\n"
"ratio of variances\n"
"         0.5837405\n"
msgstr ""

#. type: findex
#: R-intro.texi:3286
#, no-wrap
msgid "var.test"
msgstr ""

#. type: Plain text
#: R-intro.texi:3291
msgid ""
"which shows no evidence of a significant difference, and so we can use the "
"classical @math{t}-test that assumes equality of the variances."
msgstr ""

#. type: example
#: R-intro.texi:3294
#, no-wrap
msgid ""
"> t.test(A, B, var.equal=TRUE)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3296
#, no-wrap
msgid ""
"         Two Sample t-test\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3305
#, no-wrap
msgid ""
"data:  A and B\n"
"t = 3.4722, df = 19, p-value = 0.002551\n"
"alternative hypothesis: true difference in means is not equal to 0\n"
"95 percent confidence interval:\n"
" 0.01669058 0.06734788\n"
"sample estimates:\n"
"mean of x mean of y\n"
" 80.02077  79.97875\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3310
msgid ""
"All these tests assume normality of the two samples.  The two-sample "
"Wilcoxon (or Mann-Whitney) test only assumes a common continuous "
"distribution under the null hypothesis."
msgstr ""

#. type: cindex
#: R-intro.texi:3311
#, no-wrap
msgid "Wilcoxon test"
msgstr ""

#. type: findex
#: R-intro.texi:3312
#, no-wrap
msgid "wilcox.test"
msgstr ""

#. type: example
#: R-intro.texi:3315
#, no-wrap
msgid ""
"> wilcox.test(A, B)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3317
#, no-wrap
msgid ""
"         Wilcoxon rank sum test with continuity correction\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3321
#, no-wrap
msgid ""
"data:  A and B\n"
"W = 89, p-value = 0.007497\n"
"alternative hypothesis: true location shift is not equal to 0\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3324
#, no-wrap
msgid ""
"Warning message:\n"
"Cannot compute exact p-value with ties in: wilcox.test(A, B)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3330
msgid ""
"Note the warning: there are several ties in each sample, which suggests "
"strongly that these data are from a discrete distribution (probably due to "
"rounding)."
msgstr ""

#. type: Plain text
#: R-intro.texi:3333
msgid ""
"There are several ways to compare graphically the two samples.  We have "
"already seen a pair of boxplots.  The following"
msgstr ""

#. type: example
#: R-intro.texi:3337
#, no-wrap
msgid ""
"> plot(ecdf(A), do.points=FALSE, verticals=TRUE, xlim=range(A, B))\n"
"> plot(ecdf(B), do.points=FALSE, verticals=TRUE, add=TRUE)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3344
msgid ""
"will show the two empirical CDFs, and @code{qqplot} will perform a Q-Q plot "
"of the two samples.  The Kolmogorov-Smirnov test is of the maximal vertical "
"distance between the two ecdf's, assuming a common continuous distribution:"
msgstr ""

#. type: example
#: R-intro.texi:3347
#, no-wrap
msgid ""
"> ks.test(A, B)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3349
#, no-wrap
msgid ""
"         Two-sample Kolmogorov-Smirnov test\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3353
#, no-wrap
msgid ""
"data:  A and B\n"
"D = 0.5962, p-value = 0.05919\n"
"alternative hypothesis: two-sided\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:3356
#, no-wrap
msgid ""
"Warning message:\n"
"cannot compute correct p-values with ties in: ks.test(A, B)\n"
msgstr ""

#. type: chapter
#: R-intro.texi:3359
#, no-wrap
msgid "Grouping, loops and conditional execution"
msgstr ""

#. type: node
#: R-intro.texi:3365 R-intro.texi:3367 R-intro.texi:3368 R-intro.texi:3369 R-intro.texi:3383
#, no-wrap
msgid "Grouped expressions"
msgstr ""

#. type: node
#: R-intro.texi:3365 R-intro.texi:3367 R-intro.texi:3383 R-intro.texi:3384 R-intro.texi:3385 R-intro.texi:3392 R-intro.texi:3392 R-intro.texi:3424
#, no-wrap
msgid "Control statements"
msgstr ""

#. type: Plain text
#: R-intro.texi:3376
msgid ""
"@R{} is an expression language in the sense that its only command type is a "
"function or expression which returns a result.  Even an assignment is an "
"expression whose result is the value assigned, and it may be used wherever "
"any expression may be used; in particular multiple assignments are possible."
msgstr ""

#. type: Plain text
#: R-intro.texi:3382
msgid ""
"Commands may be grouped together in braces, @code{@{@var{expr_1}; "
"@var{@dots{}}; @var{expr_m}@}}, in which case the value of the group is the "
"result of the last expression in the group evaluated.  Since such a group is "
"also an expression it may, for example, be itself included in parentheses "
"and used a part of an even larger expression, and so on."
msgstr ""

#. type: node
#: R-intro.texi:3390 R-intro.texi:3392 R-intro.texi:3424
#, no-wrap
msgid "Conditional execution"
msgstr ""

#. type: node
#: R-intro.texi:3390 R-intro.texi:3392 R-intro.texi:3424
#, no-wrap
msgid "Repetitive execution"
msgstr ""

#. type: subsection
#: R-intro.texi:3393
#, no-wrap
msgid "Conditional execution: @code{if} statements"
msgstr ""

#. type: findex
#: R-intro.texi:3394 R-intro.texi:3401
#, no-wrap
msgid "if"
msgstr ""

#. type: Plain text
#: R-intro.texi:3397
msgid "The language has available a conditional construction of the form"
msgstr ""

#. type: example
#: R-intro.texi:3400
#, no-wrap
msgid "> if (@var{expr_1}) @var{expr_2} else @var{expr_3}\n"
msgstr ""

#. type: findex
#: R-intro.texi:3402
#, no-wrap
msgid "else"
msgstr ""

#. type: Plain text
#: R-intro.texi:3407
msgid ""
"where @var{expr_1} must evaluate to a single logical value and the result of "
"the entire expression is then evident."
msgstr ""

#. type: findex
#: R-intro.texi:3408
#, no-wrap
msgid "&&"
msgstr ""

#. type: findex
#: R-intro.texi:3409
#, no-wrap
msgid "||"
msgstr ""

#. type: Plain text
#: R-intro.texi:3415
msgid ""
"The ``short-circuit'' operators @code{&&} and @code{||} are often used as "
"part of the condition in an @code{if} statement.  Whereas @code{&} and "
"@code{|} apply element-wise to vectors, @code{&&} and @code{||} apply to "
"vectors of length one, and only evaluate their second argument if necessary."
msgstr ""

#. type: findex
#: R-intro.texi:3416
#, no-wrap
msgid "ifelse"
msgstr ""

#. type: Plain text
#: R-intro.texi:3422
msgid ""
"There is a vectorized version of the @code{if}/@code{else} construct, the "
"@code{ifelse} function.  This has the form @code{ifelse(condition, a, b)} "
"and returns a vector of the length of its longest argument, with elements "
"@code{a[i]} if @code{condition[i]} is true, otherwise @code{b[i]}."
msgstr ""

#. type: subsection
#: R-intro.texi:3425
#, no-wrap
msgid "Repetitive execution: @code{for} loops, @code{repeat} and @code{while}"
msgstr ""

#. type: findex
#: R-intro.texi:3426
#, no-wrap
msgid "for"
msgstr ""

#. type: Plain text
#: R-intro.texi:3429
msgid "There is also a @code{for} loop construction which has the form"
msgstr ""

#. type: example
#: R-intro.texi:3432
#, no-wrap
msgid "> for (@code{@var{name}} in @var{expr_1}) @var{expr_2}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3441
msgid ""
"where @code{@var{name}} is the loop variable.  @var{expr_1} is a vector "
"expression, (often a sequence like @code{1:20}), and @var{expr_2} is often a "
"grouped expression with its sub-expressions written in terms of the dummy "
"@emph{name}.  @var{expr_2} is repeatedly evaluated as @var{name} ranges "
"through the values in the vector result of @var{expr_1}."
msgstr ""

#. type: Plain text
#: R-intro.texi:3449
msgid ""
"As an example, suppose @code{ind} is a vector of class indicators and we "
"wish to produce separate plots of @code{y} versus @code{x} within classes.  "
"One possibility here is to use @code{coplot()},@footnote{to be discussed "
"later, or use @code{xyplot} from package @CRANpkg{lattice}.} which will "
"produce an array of plots corresponding to each level of the factor.  "
"Another way to do this, now putting all plots on the one display, is as "
"follows:"
msgstr ""

#. type: example
#: R-intro.texi:3457
#, no-wrap
msgid ""
"> xc <- split(x, ind)\n"
"> yc <- split(y, ind)\n"
"> for (i in 1:length(yc)) @{\n"
"    plot(xc[[i]], yc[[i]])\n"
"    abline(lsfit(xc[[i]], yc[[i]]))\n"
"  @}\n"
msgstr ""

#. type: findex
#: R-intro.texi:3459
#, no-wrap
msgid "split"
msgstr ""

#. type: Plain text
#: R-intro.texi:3465
msgid ""
"(Note the function @code{split()} which produces a list of vectors obtained "
"by splitting a larger vector according to the classes specified by a "
"factor.  This is a useful function, mostly used in connection with "
"boxplots.  See the @code{help} facility for further details.)"
msgstr ""

#. type: quotation
#: R-intro.texi:3470
msgid ""
"@strong{Warning}: @code{for()} loops are used in @R{} code much less often "
"than in compiled languages.  Code that takes a `whole object' view is likely "
"to be both clearer and faster in @R{}."
msgstr ""

#. type: Plain text
#: R-intro.texi:3473
msgid "Other looping facilities include the"
msgstr ""

#. type: example
#: R-intro.texi:3476
#, no-wrap
msgid "> repeat @var{expr}\n"
msgstr ""

#. type: findex
#: R-intro.texi:3477
#, no-wrap
msgid "repeat"
msgstr ""

#. type: Plain text
#: R-intro.texi:3481
msgid "statement and the"
msgstr ""

#. type: example
#: R-intro.texi:3484
#, no-wrap
msgid "> while (@var{condition}) @var{expr}\n"
msgstr ""

#. type: findex
#: R-intro.texi:3485
#, no-wrap
msgid "while"
msgstr ""

#. type: Plain text
#: R-intro.texi:3489
msgid "statement."
msgstr ""

#. type: Plain text
#: R-intro.texi:3492
msgid ""
"The @code{break} statement can be used to terminate any loop, possibly "
"abnormally.  This is the only way to terminate @code{repeat} loops."
msgstr ""

#. type: findex
#: R-intro.texi:3492
#, no-wrap
msgid "break"
msgstr ""

#. type: Plain text
#: R-intro.texi:3496
msgid ""
"The @code{next} statement can be used to discontinue one particular cycle "
"and skip to the ``next''."
msgstr ""

#. type: findex
#: R-intro.texi:3496
#, no-wrap
msgid "next"
msgstr ""

#. type: Plain text
#: R-intro.texi:3501
msgid ""
"Control statements are most often used in connection with @emph{functions} "
"which are discussed in @ref{Writing your own functions}, and where more "
"examples will emerge."
msgstr ""

#. type: cindex
#: R-intro.texi:3505
#, no-wrap
msgid "Writing functions"
msgstr ""

#. type: Plain text
#: R-intro.texi:3514
msgid ""
"As we have seen informally along the way, the @R{} language allows the user "
"to create objects of mode @emph{function}.  These are true @R{} functions "
"that are stored in a special internal form and may be used in further "
"expressions and so on.  In the process, the language gains enormously in "
"power, convenience and elegance, and learning to write useful functions is "
"one of the main ways to make your use of @R{} comfortable and productive."
msgstr ""

#. type: Plain text
#: R-intro.texi:3519
msgid ""
"It should be emphasized that most of the functions supplied as part of the "
"@R{} system, such as @code{mean()}, @code{var()}, @code{postscript()} and so "
"on, are themselves written in @R{} and thus do not differ materially from "
"user written functions."
msgstr ""

#. type: Plain text
#: R-intro.texi:3521
msgid "A function is defined by an assignment of the form"
msgstr ""

#. type: example
#: R-intro.texi:3524
#, no-wrap
msgid ""
"> @var{name} <- function(@var{arg_1}, @var{arg_2}, @dots{}) "
"@var{expression}\n"
msgstr ""

#. type: findex
#: R-intro.texi:3525
#, no-wrap
msgid "function"
msgstr ""

#. type: Plain text
#: R-intro.texi:3531
msgid ""
"The @var{expression} is an @R{} expression, (usually a grouped expression), "
"that uses the arguments, @var{arg_i}, to calculate a value.  The value of "
"the expression is the value returned for the function."
msgstr ""

#. type: Plain text
#: R-intro.texi:3535
msgid ""
"A call to the function then usually takes the form "
"@code{@var{name}(@var{expr_1}, @var{expr_2}, @dots{})} and may occur "
"anywhere a function call is legitimate."
msgstr ""

#. type: node
#: R-intro.texi:3546 R-intro.texi:3548 R-intro.texi:3549 R-intro.texi:3620
#, no-wrap
msgid "Simple examples"
msgstr ""

#. type: node
#: R-intro.texi:3546 R-intro.texi:3548 R-intro.texi:3620 R-intro.texi:3621 R-intro.texi:3649
#, no-wrap
msgid "Defining new binary operators"
msgstr ""

#. type: node
#: R-intro.texi:3546 R-intro.texi:3620 R-intro.texi:3649 R-intro.texi:3650 R-intro.texi:3710
#, no-wrap
msgid "Named arguments and defaults"
msgstr ""

#. type: node
#: R-intro.texi:3546 R-intro.texi:3649 R-intro.texi:3710 R-intro.texi:3740
#, no-wrap
msgid "The three dots argument"
msgstr ""

#. type: node
#: R-intro.texi:3546 R-intro.texi:3710 R-intro.texi:3740 R-intro.texi:3759
#, no-wrap
msgid "Assignment within functions"
msgstr ""

#. type: node
#: R-intro.texi:3546 R-intro.texi:3740 R-intro.texi:3759 R-intro.texi:3760 R-intro.texi:3768 R-intro.texi:3768 R-intro.texi:3815 R-intro.texi:3858 R-intro.texi:3907
#, no-wrap
msgid "More advanced examples"
msgstr ""

#. type: node
#: R-intro.texi:3546 R-intro.texi:3759 R-intro.texi:3907 R-intro.texi:3908 R-intro.texi:3909 R-intro.texi:4032
#, no-wrap
msgid "Scope"
msgstr ""

#. type: node
#: R-intro.texi:3546 R-intro.texi:3907 R-intro.texi:4032 R-intro.texi:4033 R-intro.texi:4034 R-intro.texi:4091
#, no-wrap
msgid "Customizing the environment"
msgstr ""

#. type: cindex
#: R-intro.texi:3546 R-intro.texi:3905 R-intro.texi:4032 R-intro.texi:4091 R-intro.texi:4095
#, no-wrap
msgid "Object orientation"
msgstr ""

#. type: Plain text
#: R-intro.texi:3555
msgid ""
"As a first example, consider a function to calculate the two sample "
"@math{t}-statistic, showing ``all the steps''.  This is an artificial "
"example, of course, since there are other, simpler ways of achieving the "
"same end."
msgstr ""

#. type: Plain text
#: R-intro.texi:3557
msgid "The function is defined as follows:"
msgstr ""

#. type: example
#: R-intro.texi:3567
#, no-wrap
msgid ""
"> twosam <- function(y1, y2) @{\n"
"    n1  <- length(y1); n2  <- length(y2)\n"
"    yb1 <- mean(y1);   yb2 <- mean(y2)\n"
"    s1  <- var(y1);    s2  <- var(y2)\n"
"    s <- ((n1-1)*s1 + (n2-1)*s2)/(n1+n2-2)\n"
"    tst <- (yb1 - yb2)/sqrt(s*(1/n1 + 1/n2))\n"
"    tst\n"
"  @}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3571
msgid ""
"With this function defined, you could perform two sample @math{t}-tests "
"using a call such as"
msgstr ""

#. type: example
#: R-intro.texi:3574
#, no-wrap
msgid "> tstat <- twosam(data$male, data$female); tstat\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3584
msgid ""
"As a second example, consider a function to emulate directly the @sc{Matlab} "
"backslash command, which returns the coefficients of the orthogonal "
"projection of the vector @math{y} onto the column space of the matrix, "
"@math{X}.  (This is ordinarily called the least squares estimate of the "
"regression coefficients.)  This would ordinarily be done with the "
"@code{qr()} function; however this is sometimes a bit tricky to use directly "
"and it pays to have a simple function such as the following to use it "
"safely."
msgstr ""

#. type: Plain text
#: R-intro.texi:3587
msgid ""
"Thus given a @math{n} by @math{1} vector @math{y} and an @math{n} by "
"@math{p} matrix @math{X} then @math{X \\ y} is defined as"
msgstr ""

#. type: ifnottex
#: R-intro.texi:3589
msgid "(X'X)^@{-@}X'y, where (X'X)^@{-@}"
msgstr ""

#. type: tex
#: R-intro.texi:3592
#, no-wrap
msgid "$(X^T X)^{-}X^T y$, where $(X^T X)^{-}$\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3594
msgid "is a generalized inverse of @math{X'X}."
msgstr ""

#. type: example
#: R-intro.texi:3600
#, no-wrap
msgid ""
"> bslash <- function(X, y) @{\n"
"  X <- qr(X)\n"
"  qr.coef(X, y)\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3603
msgid "After this object is created it may be used in statements such as"
msgstr ""

#. type: example
#: R-intro.texi:3606
#, no-wrap
msgid "> regcoeff <- bslash(Xmat, yvar)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3610
msgid "and so on."
msgstr ""

#. type: Plain text
#: R-intro.texi:3619
msgid ""
"The classical @R{} function @code{lsfit()} does this job quite well, and "
"more@footnote{See also the methods described in @ref{Statistical models in "
"R}}.  It in turn uses the functions @code{qr()} and @code{qr.coef()} in the "
"slightly counterintuitive way above to do this part of the calculation.  "
"Hence there is probably some value in having just this part isolated in a "
"simple to use function if it is going to be in frequent use.  If so, we may "
"wish to make it a matrix binary operator for even more convenient use."
msgstr ""

#. type: cindex
#: R-intro.texi:3622
#, no-wrap
msgid "Binary operators"
msgstr ""

#. type: Plain text
#: R-intro.texi:3626
msgid ""
"Had we given the @code{bslash()} function a different name, namely one of "
"the form"
msgstr ""

#. type: example
#: R-intro.texi:3629
#, no-wrap
msgid "%@var{anything}%\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3635
msgid ""
"it could have been used as a @emph{binary operator} in expressions rather "
"than in function form.  Suppose, for example, we choose @code{!} for the "
"internal character.  The function definition would then start as"
msgstr ""

#. type: example
#: R-intro.texi:3638
#, no-wrap
msgid "> \"%!%\" <- function(X, y) @{ @dots{} @}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3644
msgid ""
"(Note the use of quote marks.)  The function could then be used as @code{X "
"%!% y}.  (The backslash symbol itself is not a convenient choice as it "
"presents special problems in this context.)"
msgstr ""

#. type: Plain text
#: R-intro.texi:3648
msgid ""
"The matrix multiplication operator, @code{%*%}, and the outer product matrix "
"operator @code{%o%} are other examples of binary operators defined in this "
"way."
msgstr ""

#. type: cindex
#: R-intro.texi:3651
#, no-wrap
msgid "Named arguments"
msgstr ""

#. type: cindex
#: R-intro.texi:3652
#, no-wrap
msgid "Default values"
msgstr ""

#. type: Plain text
#: R-intro.texi:3659
msgid ""
"As first noted in @ref{Generating regular sequences}, if arguments to called "
"functions are given in the ``@code{@var{name}=@var{object}}'' form, they may "
"be given in any order.  Furthermore the argument sequence may begin in the "
"unnamed, positional form, and specify named arguments after the positional "
"arguments."
msgstr ""

#. type: Plain text
#: R-intro.texi:3661
msgid "Thus if there is a function @code{fun1} defined by"
msgstr ""

#. type: example
#: R-intro.texi:3666
#, no-wrap
msgid ""
"> fun1 <- function(data, data.frame, graph, limit) @{\n"
"    @r{[function body omitted]}\n"
"  @}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3670
msgid "then the function may be invoked in several ways, for example"
msgstr ""

#. type: example
#: R-intro.texi:3675
#, no-wrap
msgid ""
"> ans <- fun1(d, df, TRUE, 20)\n"
"> ans <- fun1(d, df, graph=TRUE, limit=20)\n"
"> ans <- fun1(data=d, limit=20, graph=TRUE, data.frame=df)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3679
msgid "are all equivalent."
msgstr ""

#. type: Plain text
#: R-intro.texi:3684
msgid ""
"In many cases arguments can be given commonly appropriate default values, in "
"which case they may be omitted altogether from the call when the defaults "
"are appropriate.  For example, if @code{fun1} were defined as"
msgstr ""

#. type: example
#: R-intro.texi:3687
#, no-wrap
msgid "> fun1 <- function(data, data.frame, graph=TRUE, limit=20) @{ @dots{} @}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3691
msgid "it could be called as"
msgstr ""

#. type: example
#: R-intro.texi:3694
#, no-wrap
msgid "> ans <- fun1(d, df)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3698
msgid "which is now equivalent to the three cases above, or as"
msgstr ""

#. type: example
#: R-intro.texi:3701
#, no-wrap
msgid "> ans <- fun1(d, df, limit=10)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3705
msgid "which changes one of the defaults."
msgstr ""

#. type: Plain text
#: R-intro.texi:3709
msgid ""
"It is important to note that defaults may be arbitrary expressions, even "
"involving other arguments to the same function; they are not restricted to "
"be constants as in our simple example here."
msgstr ""

#. type: section
#: R-intro.texi:3711
#, no-wrap
msgid "The @samp{@dots{}} argument"
msgstr ""

#. type: Plain text
#: R-intro.texi:3724
msgid ""
"Another frequent requirement is to allow one function to pass on argument "
"settings to another.  For example many graphics functions use the function "
"@code{par()} and functions like @code{plot()} allow the user to pass on "
"graphical parameters to @code{par()} to control the graphical output.  "
"(@xref{The par() function}, for more details on the @code{par()} function.)  "
"This can be done by including an extra argument, literally @samp{@dots{}}, "
"of the function, which may then be passed on.  An outline example is given "
"below."
msgstr ""

#. type: example
#: R-intro.texi:3732
#, no-wrap
msgid ""
"fun1 <- function(data, data.frame, graph=TRUE, limit=20, ...) @{\n"
"  @r{[omitted statements]}\n"
"  if (graph)\n"
"    par(pch=\"*\", ...)\n"
"  @r{[more omissions]}\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3739
msgid ""
"Less frequently, a function will need to refer to components of "
"@samp{@dots{}}.  The expression @code{list(...)} evaluates all such "
"arguments and returns them in a named list, while @code{..1}, @code{..2}, "
"etc. evaluate them one at a time, with @samp{..n} returning the n'th "
"unmatched argument."
msgstr ""

#. type: section
#: R-intro.texi:3741
#, no-wrap
msgid "Assignments within functions"
msgstr ""

#. type: Plain text
#: R-intro.texi:3747
msgid ""
"Note that @emph{any ordinary assignments done within the function are local "
"and temporary and are lost after exit from the function}.  Thus the "
"assignment @code{X <- qr(X)} does not affect the value of the argument in "
"the calling program."
msgstr ""

#. type: Plain text
#: R-intro.texi:3752
msgid ""
"To understand completely the rules governing the scope of @R{} assignments "
"the reader needs to be familiar with the notion of an evaluation "
"@emph{frame}.  This is a somewhat advanced, though hardly difficult, topic "
"and is not covered further here."
msgstr ""

#. type: Plain text
#: R-intro.texi:3758
msgid ""
"If global and permanent assignments are intended within a function, then "
"either the ``superassignment'' operator, @code{<<-} or the function "
"@code{assign()} can be used.  See the @code{help} document for details.  "
"@SPLUS{} users should be aware that @code{<<-} has different semantics in "
"@R{}.  These are discussed further in @ref{Scope}."
msgstr ""

#. type: node
#: R-intro.texi:3766 R-intro.texi:3768 R-intro.texi:3769 R-intro.texi:3815
#, no-wrap
msgid "Efficiency factors in block designs"
msgstr ""

#. type: node
#: R-intro.texi:3766 R-intro.texi:3768 R-intro.texi:3815 R-intro.texi:3816 R-intro.texi:3858
#, no-wrap
msgid "Dropping all names in a printed array"
msgstr ""

#. type: subsection
#: R-intro.texi:3766 R-intro.texi:3815 R-intro.texi:3858 R-intro.texi:3859
#, no-wrap
msgid "Recursive numerical integration"
msgstr ""

#. type: Plain text
#: R-intro.texi:3775
msgid ""
"As a more complete, if a little pedestrian, example of a function, consider "
"finding the efficiency factors for a block design.  (Some aspects of this "
"problem have already been discussed in @ref{Index matrices}.)"
msgstr ""

#. type: Plain text
#: R-intro.texi:3782
msgid ""
"A block design is defined by two factors, say @code{blocks} (@code{b} "
"levels) and @code{varieties} (@code{v} levels).  If @math{R} and @math{K} "
"are the @math{v} by @math{v} and @math{b} by @math{b} @emph{replications} "
"and @emph{block size} matrices, respectively, and @math{N} is the @math{b} "
"by @math{v} incidence matrix, then the efficiency factors are defined as the "
"eigenvalues of the matrix"
msgstr ""

#. type: ifnottex
#: R-intro.texi:3785
msgid ""
"E = I_v - R^@{-1/2@}N'K^@{-1@}NR^@{-1/2@} = I_v - A'A, where A = "
"K^@{-1/2@}NR^@{-1/2@}."
msgstr ""

#. type: tex
#: R-intro.texi:3789
#, no-wrap
msgid ""
"$$E = I_v - R^{-1/2}N^T K^{-1}NR^{-1/2} = I_v - A^T A,$$\n"
"where $A = K^{-1/2}NR^{-1/2}$.\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3791
msgid "One way to write the function is given below."
msgstr ""

#. type: example
#: R-intro.texi:3805
#, no-wrap
msgid ""
"> bdeff <- function(blocks, varieties) @{\n"
"    blocks <- as.factor(blocks)             # @r{minor safety move}\n"
"    b <- length(levels(blocks))\n"
"    varieties <- as.factor(varieties)       # @r{minor safety move}\n"
"    v <- length(levels(varieties))\n"
"    K <- as.vector(table(blocks))           # @r{remove dim attr}\n"
"    R <- as.vector(table(varieties))        # @r{remove dim attr}\n"
"    N <- table(blocks, varieties)\n"
"    A <- 1/sqrt(K) * N * rep(1/sqrt(R), rep(b, v))\n"
"    sv <- svd(A)\n"
"    list(eff=1 - sv$d^2, blockcv=sv$u, varietycv=sv$v)\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3809
msgid ""
"It is numerically slightly better to work with the singular value "
"decomposition on this occasion rather than the eigenvalue routines."
msgstr ""

#. type: Plain text
#: R-intro.texi:3814
msgid ""
"The result of the function is a list giving not only the efficiency factors "
"as the first component, but also the block and variety canonical contrasts, "
"since sometimes these give additional useful qualitative information."
msgstr ""

#. type: Plain text
#: R-intro.texi:3823
msgid ""
"For printing purposes with large matrices or arrays, it is often useful to "
"print them in close block form without the array names or numbers.  Removing "
"the @code{dimnames} attribute will not achieve this effect, but rather the "
"array must be given a @code{dimnames} attribute consisting of empty "
"strings.  For example to print a matrix, @code{X}"
msgstr ""

#. type: example
#: R-intro.texi:3828
#, no-wrap
msgid ""
"> temp <- X\n"
"> dimnames(temp) <- list(rep(\"\", nrow(X)), rep(\"\", ncol(X)))\n"
"> temp; rm(temp)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3834
msgid ""
"This can be much more conveniently done using a function, "
"@code{no.dimnames()}, shown below, as a ``wrap around'' to achieve the same "
"result.  It also illustrates how some effective and useful user functions "
"can be quite short."
msgstr ""

#. type: example
#: R-intro.texi:3846
#, no-wrap
msgid ""
"no.dimnames <- function(a) @{\n"
"  ## @r{Remove all dimension names from an array for compact printing.}\n"
"  d <- list()\n"
"  l <- 0\n"
"  for(i in dim(a)) @{\n"
"    d[[l <- l + 1]] <- rep(\"\", i)\n"
"  @}\n"
"  dimnames(a) <- d\n"
"  a\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3850
msgid "With this function defined, an array may be printed in close format using"
msgstr ""

#. type: example
#: R-intro.texi:3853
#, no-wrap
msgid "> no.dimnames(X)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3857
msgid ""
"This is particularly useful for large integer arrays, where patterns are the "
"real interest rather than the values."
msgstr ""

#. type: Plain text
#: R-intro.texi:3865
msgid ""
"Functions may be recursive, and may themselves define functions within "
"themselves.  Note, however, that such functions, or indeed variables, are "
"not inherited by called functions in higher evaluation frames as they would "
"be if they were on the search path."
msgstr ""

#. type: Plain text
#: R-intro.texi:3876
msgid ""
"The example below shows a naive way of performing one-dimensional numerical "
"integration.  The integrand is evaluated at the end points of the range and "
"in the middle.  If the one-panel trapezium rule answer is close enough to "
"the two panel, then the latter is returned as the value.  Otherwise the same "
"process is recursively applied to each panel.  The result is an adaptive "
"integration process that concentrates function evaluations in regions where "
"the integrand is farthest from linear.  There is, however, a heavy overhead, "
"and the function is only competitive with other algorithms when the "
"integrand is both smooth and very difficult to evaluate."
msgstr ""

#. type: Plain text
#: R-intro.texi:3878
msgid "The example is also given partly as a little puzzle in @R{} programming."
msgstr ""

#. type: example
#: R-intro.texi:3900
#, no-wrap
msgid ""
"area <- function(f, a, b, eps = 1.0e-06, lim = 10) @{\n"
"  fun1 <- function(f, a, b, fa, fb, a0, eps, lim, fun) @{\n"
"    ## @r{function `fun1' is only visible inside `area'}\n"
"    d <- (a + b)/2\n"
"    h <- (b - a)/4\n"
"    fd <- f(d)\n"
"    a1 <- h * (fa + fd)\n"
"    a2 <- h * (fd + fb)\n"
"    if(abs(a0 - a1 - a2) < eps || lim == 0)\n"
"      return(a1 + a2)\n"
"    else @{\n"
"      return(fun(f, a, d, fa, fd, a1, eps, lim - 1, fun) +\n"
"             fun(f, d, b, fd, fb, a2, eps, lim - 1, fun))\n"
"    @}\n"
"  @}\n"
"  fa <- f(a)\n"
"  fb <- f(b)\n"
"  a0 <- ((fa + fb) * (b - a))/2\n"
"  fun1(f, a, b, fa, fb, a0, eps, lim, fun1)\n"
"@}\n"
msgstr ""

#. type: menuentry
#: R-intro.texi:3905
msgid "Scope::"
msgstr ""

#. type: Plain text
#: R-intro.texi:3914
msgid ""
"The discussion in this section is somewhat more technical than in other "
"parts of this document.  However, it details one of the major differences "
"between @SPLUS{} and @R{}."
msgstr ""

#. type: Plain text
#: R-intro.texi:3925
msgid ""
"The symbols which occur in the body of a function can be divided into three "
"classes; formal parameters, local variables and free variables.  The formal "
"parameters of a function are those occurring in the argument list of the "
"function.  Their values are determined by the process of @emph{binding} the "
"actual function arguments to the formal parameters.  Local variables are "
"those whose values are determined by the evaluation of expressions in the "
"body of the functions.  Variables which are not formal parameters or local "
"variables are called free variables.  Free variables become local variables "
"if they are assigned to.  Consider the following function definition."
msgstr ""

#. type: example
#: R-intro.texi:3933
#, no-wrap
msgid ""
"f <- function(x) @{\n"
"  y <- 2*x\n"
"  print(x)\n"
"  print(y)\n"
"  print(z)\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3937
msgid ""
"In this function, @code{x} is a formal parameter, @code{y} is a local "
"variable and @code{z} is a free variable."
msgstr ""

#. type: Plain text
#: R-intro.texi:3941
msgid ""
"In @R{} the free variable bindings are resolved by first looking in the "
"environment in which the function was created.  This is called @emph{lexical "
"scope}.  First we define a function called @code{cube}."
msgstr ""

#. type: example
#: R-intro.texi:3947
#, no-wrap
msgid ""
"cube <- function(n) @{\n"
"  sq <- function() n*n\n"
"  n*sq()\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3959
msgid ""
"The variable @code{n} in the function @code{sq} is not an argument to that "
"function.  Therefore it is a free variable and the scoping rules must be "
"used to ascertain the value that is to be associated with it.  Under static "
"scope (@SPLUS{}) the value is that associated with a global variable named "
"@code{n}.  Under lexical scope (@R{}) it is the parameter to the function "
"@code{cube} since that is the active binding for the variable @code{n} at "
"the time the function @code{sq} was defined.  The difference between "
"evaluation in @R{} and evaluation in @SPLUS{} is that @SPLUS{} looks for a "
"global variable called @code{n} while @R{} first looks for a variable called "
"@code{n} in the environment created when @code{cube} was invoked."
msgstr ""

#. type: example
#: R-intro.texi:3971
#, no-wrap
msgid ""
"## @r{first evaluation in S}\n"
"S> cube(2)\n"
"Error in sq(): Object \"n\" not found\n"
"Dumped\n"
"S> n <- 3\n"
"S> cube(2)\n"
"[1] 18\n"
"## @r{then the same function evaluated in R}\n"
"R> cube(2)\n"
"[1] 8\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:3983
msgid ""
"Lexical scope can also be used to give functions @emph{mutable state}.  In "
"the following example we show how @R{} can be used to mimic a bank account.  "
"A functioning bank account needs to have a balance or total, a function for "
"making withdrawals, a function for making deposits and a function for "
"stating the current balance.  We achieve this by creating the three "
"functions within @code{account} and then returning a list containing them.  "
"When @code{account} is invoked it takes a numerical argument @code{total} "
"and returns a list containing the three functions.  Because these functions "
"are defined in an environment which contains @code{total}, they will have "
"access to its value."
msgstr ""

#. type: Plain text
#: R-intro.texi:3985
msgid "The special assignment operator, @code{<<-},"
msgstr ""

#. type: findex
#: R-intro.texi:3985
#, no-wrap
msgid "<<-"
msgstr ""

#. type: Plain text
#: R-intro.texi:3998
msgid ""
"is used to change the value associated with @code{total}.  This operator "
"looks back in enclosing environments for an environment that contains the "
"symbol @code{total} and when it finds such an environment it replaces the "
"value, in that environment, with the value of right hand side.  If the "
"global or top-level environment is reached without finding the symbol "
"@code{total} then that variable is created and assigned to there.  For most "
"users @code{<<-} creates a global variable and assigns the value of the "
"right hand side to it@footnote{In some sense this mimics the behavior in "
"@SPLUS{} since in @SPLUS{} this operator always creates or assigns to a "
"global variable.}.  Only when @code{<<-} has been used in a function that "
"was returned as the value of another function will the special behavior "
"described here occur."
msgstr ""

#. type: example
#: R-intro.texi:4019
#, no-wrap
msgid ""
"open.account <- function(total) @{\n"
"  list(\n"
"    deposit = function(amount) @{\n"
"      if(amount <= 0)\n"
"        stop(\"Deposits must be positive!\\n\")\n"
"      total <<- total + amount\n"
"      cat(amount, \"deposited.  Your balance is\", total, \"\\n\\n\")\n"
"    @},\n"
"    withdraw = function(amount) @{\n"
"      if(amount > total)\n"
"        stop(\"You don't have that much money!\\n\")\n"
"      total <<- total - amount\n"
"      cat(amount, \"withdrawn.  Your balance is\", total, \"\\n\\n\")\n"
"    @},\n"
"    balance = function() @{\n"
"      cat(\"Your balance is\", total, \"\\n\\n\")\n"
"    @}\n"
"  )\n"
"@}\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:4022
#, no-wrap
msgid ""
"ross <- open.account(100)\n"
"robert <- open.account(200)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:4026
#, no-wrap
msgid ""
"ross$withdraw(30)\n"
"ross$balance()\n"
"robert$balance()\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:4030
#, no-wrap
msgid ""
"ross$deposit(50)\n"
"ross$balance()\n"
"ross$withdraw(500)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4040
msgid ""
"Users can customize their environment in several different ways.  There is a "
"site initialization file and every directory can have its own special "
"initialization file.  Finally, the special functions @code{.First} and "
"@code{.Last} can be used."
msgstr ""

#. type: Plain text
#: R-intro.texi:4055
msgid ""
"The location of the site initialization file is taken from the value of the "
"@env{R_PROFILE} environment variable.  If that variable is unset, the file "
"@file{Rprofile.site} in the @R{} home subdirectory @file{etc} is used.  This "
"file should contain the commands that you want to execute every time @R{} is "
"started under your system.  A second, personal, profile file named "
"@file{.Rprofile}@footnote{So it is hidden under UNIX.} can be placed in any "
"directory.  If @R{} is invoked in that directory then that file will be "
"sourced.  This file gives individual users control over their workspace and "
"allows for different startup procedures in different working directories.  "
"If no @file{.Rprofile} file is found in the startup directory, then @R{} "
"looks for a @file{.Rprofile} file in the user's home directory and uses that "
"(if it exists).  If the environment variable @env{R_PROFILE_USER} is set, "
"the file it points to is used instead of the @file{.Rprofile} files."
msgstr ""

#. type: Plain text
#: R-intro.texi:4062
msgid ""
"Any function named @code{.First()} in either of the two profile files or in "
"the @file{.RData} image has a special status.  It is automatically performed "
"at the beginning of an @R{} session and may be used to initialize the "
"environment.  For example, the definition in the example below alters the "
"prompt to @code{$} and sets up various other useful things that can then be "
"taken for granted in the rest of the session."
msgstr ""

#. type: Plain text
#: R-intro.texi:4066
msgid ""
"Thus, the sequence in which files are executed is, @file{Rprofile.site}, the "
"user profile, @file{.RData} and then @code{.First()}.  A definition in later "
"files will mask definitions in earlier files."
msgstr ""

#. type: example
#: R-intro.texi:4077
#, no-wrap
msgid ""
"> .First <- function() @{\n"
"  options(prompt=\"$ \", continue=\"+\\t\")  # @r{@code{$} is the prompt}\n"
"  options(digits=5, length=999)         # @r{custom numbers and printout}\n"
"  x11()                                 # @r{for graphics}\n"
"  par(pch = \"+\")                        # @r{plotting character}\n"
"  source(file.path(Sys.getenv(\"HOME\"), \"R\", \"mystuff.R\"))\n"
"                                        # @r{my personal functions}\n"
"  library(MASS)                         # @r{attach a package}\n"
"@}\n"
msgstr ""

#. type: findex
#: R-intro.texi:4078
#, no-wrap
msgid ".First"
msgstr ""

#. type: Plain text
#: R-intro.texi:4082
msgid ""
"Similarly a function @code{.Last()}, if defined, is (normally) executed at "
"the very end of the session.  An example is given below."
msgstr ""

#. type: example
#: R-intro.texi:4088
#, no-wrap
msgid ""
"> .Last <- function() @{\n"
"  graphics.off()                        # @r{a small safety measure.}\n"
"  cat(paste(date(),\"\\nAdios\\n\"))        # @r{Is it time for lunch?}\n"
"@}\n"
msgstr ""

#. type: findex
#: R-intro.texi:4089
#, no-wrap
msgid ".Last"
msgstr ""

#. type: section
#: R-intro.texi:4092
#, no-wrap
msgid "Classes, generic functions and object orientation"
msgstr ""

#. type: cindex
#: R-intro.texi:4094
#, no-wrap
msgid "Generic functions"
msgstr ""

#. type: Plain text
#: R-intro.texi:4103
msgid ""
"The class of an object determines how it will be treated by what are known "
"as @emph{generic} functions.  Put the other way round, a generic function "
"performs a task or action on its arguments @emph{specific to the class of "
"the argument itself}.  If the argument lacks any @code{class} attribute, or "
"has a class not catered for specifically by the generic function in "
"question, there is always a @emph{default action} provided."
msgstr ""

#. type: Plain text
#: R-intro.texi:4110
msgid ""
"An example makes things clearer.  The class mechanism offers the user the "
"facility of designing and writing generic functions for special purposes.  "
"Among the other generic functions are @code{plot()} for displaying objects "
"graphically, @code{summary()} for summarizing analyses of various types, and "
"@code{anova()} for comparing statistical models."
msgstr ""

#. type: Plain text
#: R-intro.texi:4114
msgid ""
"The number of generic functions that can treat a class in a specific way can "
"be quite large.  For example, the functions that can accommodate in some "
"fashion objects of class @code{\"data.frame\"} include"
msgstr ""

#. type: example
#: R-intro.texi:4118
#, no-wrap
msgid ""
"[     [[<-    any    as.matrix\n"
"[<-   mean    plot   summary\n"
msgstr ""

#. type: findex
#: R-intro.texi:4120
#, no-wrap
msgid "methods"
msgstr ""

#. type: Plain text
#: R-intro.texi:4123
msgid "A currently complete list can be got by using the @code{methods()} function:"
msgstr ""

#. type: example
#: R-intro.texi:4126
#, no-wrap
msgid "> methods(class=\"data.frame\")\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4133
msgid ""
"Conversely the number of classes a generic function can handle can also be "
"quite large.  For example the @code{plot()} function has a default method "
"and variants for objects of classes @code{\"data.frame\"}, "
"@code{\"density\"}, @code{\"factor\"}, and more.  A complete list can be got "
"again by using the @code{methods()} function:"
msgstr ""

#. type: example
#: R-intro.texi:4136
#, no-wrap
msgid "> methods(plot)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4139
msgid "For many generic functions the function body is quite short, for example"
msgstr ""

#. type: example
#: R-intro.texi:4144
#, no-wrap
msgid ""
"> coef\n"
"function (object, ...)\n"
"UseMethod(\"coef\")\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4149
msgid ""
"The presence of @code{UseMethod} indicates this is a generic function.  To "
"see what methods are available we can use @code{methods()}"
msgstr ""

#. type: example
#: R-intro.texi:4154
#, no-wrap
msgid ""
"> methods(coef)\n"
"[1] coef.aov*         coef.Arima*       coef.default*     coef.listof*\n"
"[5] coef.nls*         coef.summary.nls*\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:4156
#, no-wrap
msgid "   Non-visible functions are asterisked\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4161
msgid ""
"In this example there are six methods, none of which can be seen by typing "
"its name.  We can read these by either of"
msgstr ""

#. type: findex
#: R-intro.texi:4162
#, no-wrap
msgid "getAnywhere"
msgstr ""

#. type: findex
#: R-intro.texi:4163
#, no-wrap
msgid "getS3method"
msgstr ""

#. type: example
#: R-intro.texi:4171
#, no-wrap
msgid ""
"> getAnywhere(\"coef.aov\")\n"
"A single object matching 'coef.aov' was found\n"
"It was found in the following places\n"
"  registered S3 method for coef from namespace stats\n"
"  namespace:stats\n"
"with value\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:4177
#, no-wrap
msgid ""
"function (object, ...)\n"
"@{\n"
"    z <- object$coef\n"
"    z[!is.na(z)]\n"
"@}\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:4184
#, no-wrap
msgid ""
"> getS3method(\"coef\", \"aov\")\n"
"function (object, ...)\n"
"@{\n"
"    z <- object$coef\n"
"    z[!is.na(z)]\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4189
msgid ""
"A function named @code{@var{gen}.@var{cl}} will be invoked by the generic "
"@code{@var{gen}} for class @code{@var{cl}}, so do not name functions in this "
"style unless they are intended to be methods."
msgstr ""

#. type: Plain text
#: R-intro.texi:4192
msgid ""
"The reader is referred to the @emph{R Language Definition} for a more "
"complete discussion of this mechanism."
msgstr ""

#. type: cindex
#: R-intro.texi:4196
#, no-wrap
msgid "Statistical models"
msgstr ""

#. type: Plain text
#: R-intro.texi:4203
msgid ""
"This section presumes the reader has some familiarity with statistical "
"methodology, in particular with regression analysis and the analysis of "
"variance.  Later we make some rather more ambitious presumptions, namely "
"that something is known about generalized linear models and nonlinear "
"regression."
msgstr ""

#. type: Plain text
#: R-intro.texi:4207
msgid ""
"The requirements for fitting statistical models are sufficiently well "
"defined to make it possible to construct general tools that apply in a broad "
"spectrum of problems."
msgstr ""

#. type: Plain text
#: R-intro.texi:4212
msgid ""
"@R{} provides an interlocking suite of facilities that make fitting "
"statistical models very simple.  As we mention in the introduction, the "
"basic output is minimal, and one needs to ask for the details by calling "
"extractor functions."
msgstr ""

#. type: node
#: R-intro.texi:4222 R-intro.texi:4224 R-intro.texi:4431 R-intro.texi:4431 R-intro.texi:4491
#, no-wrap
msgid "Formulae for statistical models"
msgstr ""

#. type: node
#: R-intro.texi:4222 R-intro.texi:4224 R-intro.texi:4491 R-intro.texi:4492 R-intro.texi:4493 R-intro.texi:4519
#, no-wrap
msgid "Linear models"
msgstr ""

#. type: node
#: R-intro.texi:4222 R-intro.texi:4491 R-intro.texi:4519 R-intro.texi:4520 R-intro.texi:4605
#, no-wrap
msgid "Generic functions for extracting model information"
msgstr ""

#. type: node
#: R-intro.texi:4222 R-intro.texi:4519 R-intro.texi:4605 R-intro.texi:4606 R-intro.texi:4648 R-intro.texi:4648 R-intro.texi:4677
#, no-wrap
msgid "Analysis of variance and model comparison"
msgstr ""

#. type: node
#: R-intro.texi:4222 R-intro.texi:4605 R-intro.texi:4677 R-intro.texi:4678 R-intro.texi:4679 R-intro.texi:4731
#, no-wrap
msgid "Updating fitted models"
msgstr ""

#. type: node
#: R-intro.texi:4222 R-intro.texi:4677 R-intro.texi:4731 R-intro.texi:4732 R-intro.texi:4733 R-intro.texi:4823 R-intro.texi:4823 R-intro.texi:4856 R-intro.texi:5091
#, no-wrap
msgid "Generalized linear models"
msgstr ""

#. type: node
#: R-intro.texi:4222 R-intro.texi:4731 R-intro.texi:5091 R-intro.texi:5092 R-intro.texi:5117 R-intro.texi:5117 R-intro.texi:5207 R-intro.texi:5253
#, no-wrap
msgid "Nonlinear least squares and maximum likelihood models"
msgstr ""

#. type: section
#: R-intro.texi:4222 R-intro.texi:5091 R-intro.texi:5253 R-intro.texi:5254
#, no-wrap
msgid "Some non-standard models"
msgstr ""

#. type: section
#: R-intro.texi:4225
#, no-wrap
msgid "Defining statistical models; formulae"
msgstr ""

#. type: cindex
#: R-intro.texi:4226
#, no-wrap
msgid "Formulae"
msgstr ""

#. type: Plain text
#: R-intro.texi:4230
msgid ""
"The template for a statistical model is a linear regression model with "
"independent, homoscedastic errors"
msgstr ""

#. type: display
#: R-intro.texi:4234
#, no-wrap
msgid "y_i = sum_@{j=0@}^p beta_j x_@{ij@} + e_i, @ @ @ @ i = 1, @dots{}, n,\n"
msgstr ""

#. type: ifnottex
#: R-intro.texi:4237
msgid "where the e_i are NID(0, sigma^2)."
msgstr ""

#. type: tex
#: R-intro.texi:4243
#, no-wrap
msgid ""
"$$ y_i = \\sum_{j=0}^p \\beta_j x_{ij} + e_i,\n"
"   \\qquad e_i \\sim {\\rm NID}(0,\\sigma^2),\n"
"   \\qquad i = 1, @dots{}, n\n"
"$$\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4245
msgid "In matrix terms this would be written"
msgstr ""

#. type: display
#: R-intro.texi:4249
#, no-wrap
msgid "y = X @ beta + e\n"
msgstr ""

#. type: tex
#: R-intro.texi:4253
#, no-wrap
msgid "$$ y = X \\beta + e $$\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4261
msgid ""
"where the @math{y} is the response vector, @math{X} is the @emph{model "
"matrix} or @emph{design matrix} and has columns @math{x_0, x_1, @dots{}, "
"x_p}, the determining variables.  Very often @math{x_0} will be a column of "
"ones defining an @emph{intercept} term."
msgstr ""

#. type: subsubheading
#: R-intro.texi:4262
#, no-wrap
msgid "Examples"
msgstr ""

#. type: Plain text
#: R-intro.texi:4266
msgid ""
"Before giving a formal specification, a few examples may usefully set the "
"picture."
msgstr ""

#. type: Plain text
#: R-intro.texi:4271
msgid ""
"Suppose @code{y}, @code{x}, @code{x0}, @code{x1}, @code{x2}, @dots{} are "
"numeric variables, @code{X} is a matrix and @code{A}, @code{B}, @code{C}, "
"@dots{} are factors.  The following formulae on the left side below specify "
"statistical models as described on the right."
msgstr ""

#. type: item
#: R-intro.texi:4273
#, no-wrap
msgid "y ~ x"
msgstr ""

#. type: itemx
#: R-intro.texi:4274
#, no-wrap
msgid "y ~ 1 + x"
msgstr ""

#. type: table
#: R-intro.texi:4278
msgid ""
"Both imply the same simple linear regression model of @math{y} on @math{x}.  "
"The first has an implicit intercept term, and the second an explicit one."
msgstr ""

#. type: item
#: R-intro.texi:4279
#, no-wrap
msgid "y ~ 0 + x"
msgstr ""

#. type: itemx
#: R-intro.texi:4280
#, no-wrap
msgid "y ~ -1 + x"
msgstr ""

#. type: itemx
#: R-intro.texi:4281
#, no-wrap
msgid "y ~ x - 1"
msgstr ""

#. type: table
#: R-intro.texi:4284
msgid ""
"Simple linear regression of @math{y} on @math{x} through the origin (that "
"is, without an intercept term)."
msgstr ""

#. type: item
#: R-intro.texi:4285
#, no-wrap
msgid "log(y) ~ x1 + x2"
msgstr ""

#. type: table
#: R-intro.texi:4287
msgid "Multiple regression of the transformed variable,"
msgstr ""

#. type: ifnottex
#: R-intro.texi:4289
msgid "log(y),"
msgstr ""

#. type: tex
#: R-intro.texi:4292
#, no-wrap
msgid "$\\log(y)$,\n"
msgstr ""

#. type: table
#: R-intro.texi:4294
msgid "on @math{x1} and @math{x2} (with an implicit intercept term)."
msgstr ""

#. type: item
#: R-intro.texi:4295
#, no-wrap
msgid "y ~ poly(x,2)"
msgstr ""

#. type: itemx
#: R-intro.texi:4296
#, no-wrap
msgid "y ~ 1 + x + I(x^2)"
msgstr ""

#. type: table
#: R-intro.texi:4300
msgid ""
"Polynomial regression of @math{y} on @math{x} of degree 2.  The first form "
"uses orthogonal polynomials, and the second uses explicit powers, as basis."
msgstr ""

#. type: item
#: R-intro.texi:4301
#, no-wrap
msgid "y ~ X + poly(x,2)"
msgstr ""

#. type: table
#: R-intro.texi:4304
msgid ""
"Multiple regression @math{y} with model matrix consisting of the matrix "
"@math{X} as well as polynomial terms in @math{x} to degree 2."
msgstr ""

#. type: item
#: R-intro.texi:4305
#, no-wrap
msgid "y ~ A"
msgstr ""

#. type: table
#: R-intro.texi:4308
msgid ""
"Single classification analysis of variance model of @math{y}, with classes "
"determined by @math{A}."
msgstr ""

#. type: item
#: R-intro.texi:4309
#, no-wrap
msgid "y ~ A + x"
msgstr ""

#. type: table
#: R-intro.texi:4312
msgid ""
"Single classification analysis of covariance model of @math{y}, with classes "
"determined by @math{A}, and with covariate @math{x}."
msgstr ""

#. type: item
#: R-intro.texi:4313
#, no-wrap
msgid "y ~ A*B"
msgstr ""

#. type: itemx
#: R-intro.texi:4314
#, no-wrap
msgid "y ~ A + B + A:B"
msgstr ""

#. type: itemx
#: R-intro.texi:4315
#, no-wrap
msgid "y ~ B %in% A"
msgstr ""

#. type: itemx
#: R-intro.texi:4316
#, no-wrap
msgid "y ~ A/B"
msgstr ""

#. type: table
#: R-intro.texi:4321
msgid ""
"Two factor non-additive model of @math{y} on @math{A} and @math{B}.  The "
"first two specify the same crossed classification and the second two specify "
"the same nested classification.  In abstract terms all four specify the same "
"model subspace."
msgstr ""

#. type: item
#: R-intro.texi:4322
#, no-wrap
msgid "y ~ (A + B + C)^2"
msgstr ""

#. type: itemx
#: R-intro.texi:4323
#, no-wrap
msgid "y ~ A*B*C - A:B:C"
msgstr ""

#. type: table
#: R-intro.texi:4326
msgid ""
"Three factor experiment but with a model containing main effects and two "
"factor interactions only.  Both formulae specify the same model."
msgstr ""

#. type: item
#: R-intro.texi:4327
#, no-wrap
msgid "y ~ A * x"
msgstr ""

#. type: itemx
#: R-intro.texi:4328
#, no-wrap
msgid "y ~ A/x"
msgstr ""

#. type: itemx
#: R-intro.texi:4329
#, no-wrap
msgid "y ~ A/(1 + x) - 1"
msgstr ""

#. type: table
#: R-intro.texi:4334
msgid ""
"Separate simple linear regression models of @math{y} on @math{x} within the "
"levels of @math{A}, with different codings.  The last form produces explicit "
"estimates of as many different intercepts and slopes as there are levels in "
"@math{A}."
msgstr ""

#. type: item
#: R-intro.texi:4335
#, no-wrap
msgid "y ~ A*B + Error(C)"
msgstr ""

#. type: table
#: R-intro.texi:4340
msgid ""
"An experiment with two treatment factors, @math{A} and @math{B}, and error "
"strata determined by factor @math{C}.  For example a split plot experiment, "
"with whole plots (and hence also subplots), determined by factor @math{C}."
msgstr ""

#. type: findex
#: R-intro.texi:4342
#, no-wrap
msgid "~"
msgstr ""

#. type: Plain text
#: R-intro.texi:4345
msgid ""
"The operator @code{~} is used to define a @emph{model formula} in @R{}.  The "
"form, for an ordinary linear model, is"
msgstr ""

#. type: example
#: R-intro.texi:4348
#, no-wrap
msgid ""
"@var{response} ~ @var{op_1} @var{term_1} @var{op_2} @var{term_2} @var{op_3} "
"@var{term_3} @var{@dots{}}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4352 R-intro.texi:5071
msgid "where"
msgstr ""

#. type: item
#: R-intro.texi:4354
#, no-wrap
msgid "response"
msgstr ""

#. type: table
#: R-intro.texi:4357
msgid ""
"is a vector or matrix, (or expression evaluating to a vector or matrix)  "
"defining the response variable(s)."
msgstr ""

#. type: item
#: R-intro.texi:4357
#, no-wrap
msgid "op_i"
msgstr ""

#. type: table
#: R-intro.texi:4360
msgid ""
"is an operator, either @code{+} or @code{-}, implying the inclusion or "
"exclusion of a term in the model, (the first is optional)."
msgstr ""

#. type: item
#: R-intro.texi:4360
#, no-wrap
msgid "term_i"
msgstr ""

#. type: table
#: R-intro.texi:4362
msgid "is either"
msgstr ""

#. type: itemize
#: R-intro.texi:4365
msgid "a vector or matrix expression, or @code{1},"
msgstr ""

#. type: itemize
#: R-intro.texi:4367
msgid "a factor, or"
msgstr ""

#. type: itemize
#: R-intro.texi:4370
msgid ""
"a @emph{formula expression} consisting of factors, vectors or matrices "
"connected by @emph{formula operators}."
msgstr ""

#. type: table
#: R-intro.texi:4375
msgid ""
"In all cases each term defines a collection of columns either to be added to "
"or removed from the model matrix.  A @code{1} stands for an intercept column "
"and is by default included in the model matrix unless explicitly removed."
msgstr ""

#. type: Plain text
#: R-intro.texi:4382
msgid ""
"The @emph{formula operators} are similar in effect to the Wilkinson and "
"Rogers notation used by such programs as Glim and Genstat.  One inevitable "
"change is that the operator @samp{@code{.}} becomes @samp{@code{:}} since "
"the period is a valid name character in @R{}."
msgstr ""

#. type: Plain text
#: R-intro.texi:4385
msgid "The notation is summarized below (based on Chambers & Hastie, 1992, p.29):"
msgstr ""

#. type: item
#: R-intro.texi:4387
#, no-wrap
msgid "@var{Y} ~ @var{M}"
msgstr ""

#. type: table
#: R-intro.texi:4389
msgid "@var{Y} is modeled as @var{M}."
msgstr ""

#. type: item
#: R-intro.texi:4390
#, no-wrap
msgid "@var{M_1} + @var{M_2}"
msgstr ""

#. type: table
#: R-intro.texi:4392
msgid "Include @var{M_1} and @var{M_2}."
msgstr ""

#. type: item
#: R-intro.texi:4393
#, no-wrap
msgid "@var{M_1} - @var{M_2}"
msgstr ""

#. type: table
#: R-intro.texi:4395
msgid "Include @var{M_1} leaving out terms of @var{M_2}."
msgstr ""

#. type: item
#: R-intro.texi:4396
#, no-wrap
msgid "@var{M_1} : @var{M_2}"
msgstr ""

#. type: table
#: R-intro.texi:4399
msgid ""
"The tensor product of @var{M_1} and @var{M_2}.  If both terms are factors, "
"then the ``subclasses'' factor."
msgstr ""

#. type: item
#: R-intro.texi:4400
#, no-wrap
msgid "@var{M_1} %in% @var{M_2}"
msgstr ""

#. type: table
#: R-intro.texi:4402
msgid "Similar to @code{@var{M_1}:@var{M_2}}, but with a different coding."
msgstr ""

#. type: item
#: R-intro.texi:4403
#, no-wrap
msgid "@var{M_1} * @var{M_2}"
msgstr ""

#. type: table
#: R-intro.texi:4405
msgid "@code{@var{M_1} + @var{M_2} + @var{M_1}:@var{M_2}}."
msgstr ""

#. type: item
#: R-intro.texi:4406
#, no-wrap
msgid "@var{M_1} / @var{M_2}"
msgstr ""

#. type: table
#: R-intro.texi:4408
msgid "@code{@var{M_1} + @var{M_2} %in% @var{M_1}}."
msgstr ""

#. type: item
#: R-intro.texi:4409
#, no-wrap
msgid "@var{M}^@var{n}"
msgstr ""

#. type: table
#: R-intro.texi:4411
msgid "All terms in @var{M} together with ``interactions'' up to order @var{n}"
msgstr ""

#. type: item
#: R-intro.texi:4412
#, no-wrap
msgid "I(@var{M})"
msgstr ""

#. type: table
#: R-intro.texi:4415
msgid ""
"Insulate @var{M}.  Inside @var{M} all operators have their normal arithmetic "
"meaning, and that term appears in the model matrix."
msgstr ""

#. type: Plain text
#: R-intro.texi:4421
msgid ""
"Note that inside the parentheses that usually enclose function arguments all "
"operators have their normal arithmetic meaning.  The function @code{I()} is "
"an identity function used to allow terms in model formulae to be defined "
"using arithmetic operators."
msgstr ""

#. type: Plain text
#: R-intro.texi:4426
msgid ""
"Note particularly that the model formulae specify the @emph{columns of the "
"model matrix}, the specification of the parameters being implicit.  This is "
"not the case in other contexts, for example in specifying nonlinear models."
msgstr ""

#. type: cindex
#: R-intro.texi:4429 R-intro.texi:4431 R-intro.texi:4432 R-intro.texi:4433
#, no-wrap
msgid "Contrasts"
msgstr ""

#. type: Plain text
#: R-intro.texi:4439
msgid ""
"We need at least some idea how the model formulae specify the columns of the "
"model matrix.  This is easy if we have continuous variables, as each "
"provides one column of the model matrix (and the intercept will provide a "
"column of ones if included in the model)."
msgstr ""

#. type: Plain text
#: R-intro.texi:4449
msgid ""
"What about a @math{k}-level factor @code{A}? The answer differs for "
"unordered and ordered factors.  For @emph{unordered} factors @math{k - 1} "
"columns are generated for the indicators of the second, @dots{}, @math{k}th "
"levels of the factor. (Thus the implicit parameterization is to contrast the "
"response at each level with that at the first.)  For @emph{ordered} factors "
"the @math{k - 1} columns are the orthogonal polynomials on @math{1, @dots{}, "
"k}, omitting the constant term."
msgstr ""

#. type: Plain text
#: R-intro.texi:4456
msgid ""
"Although the answer is already complicated, it is not the whole story.  "
"First, if the intercept is omitted in a model that contains a factor term, "
"the first such term is encoded into @math{k} columns giving the indicators "
"for all the levels.  Second, the whole behavior can be changed by the "
"@code{options} setting for @code{contrasts}.  The default setting in @R{} is"
msgstr ""

#. type: example
#: R-intro.texi:4459
#, no-wrap
msgid "options(contrasts = c(\"contr.treatment\", \"contr.poly\"))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4466
msgid ""
"The main reason for mentioning this is that @R{} and @Sl{} have different "
"defaults for unordered factors, @Sl{} using Helmert contrasts.  So if you "
"need to compare your results to those of a textbook or paper which used "
"@SPLUS{}, you will need to set"
msgstr ""

#. type: example
#: R-intro.texi:4469
#, no-wrap
msgid "options(contrasts = c(\"contr.helmert\", \"contr.poly\"))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4474
msgid ""
"This is a deliberate difference, as treatment contrasts (@R{}'s default)  "
"are thought easier for newcomers to interpret."
msgstr ""

#. type: Plain text
#: R-intro.texi:4478
msgid ""
"We have still not finished, as the contrast scheme to be used can be set for "
"each term in the model using the functions @code{contrasts} and @code{C}."
msgstr ""

#. type: findex
#: R-intro.texi:4478
#, no-wrap
msgid "contrasts"
msgstr ""

#. type: findex
#: R-intro.texi:4479
#, no-wrap
msgid "C"
msgstr ""

#. type: Plain text
#: R-intro.texi:4483
msgid ""
"We have not yet considered interaction terms: these generate the products of "
"the columns introduced for their component terms."
msgstr ""

#. type: Plain text
#: R-intro.texi:4489
msgid ""
"Although the details are complicated, model formulae in @R{} will normally "
"generate the models that an expert statistician would expect, provided that "
"marginality is preserved.  Fitting, for example, a model with an interaction "
"but not the corresponding main effects will in general lead to surprising "
"results, and is for experts only."
msgstr ""

#. type: Plain text
#: R-intro.texi:4497
msgid ""
"The basic function for fitting ordinary multiple models is @code{lm()}, and "
"a streamlined version of the call is as follows:"
msgstr ""

#. type: findex
#: R-intro.texi:4497
#, no-wrap
msgid "lm"
msgstr ""

#. type: example
#: R-intro.texi:4501
#, no-wrap
msgid "> @var{fitted.model} <- lm(@var{formula}, data = @var{data.frame})\n"
msgstr ""

#. type: example
#: R-intro.texi:4507
#, no-wrap
msgid "> fm2 <- lm(y ~ x1 + x2, data = production)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4512
msgid ""
"would fit a multiple regression model of @math{y} on @math{x1} and @math{x2} "
"(with implicit intercept term)."
msgstr ""

#. type: Plain text
#: R-intro.texi:4518
msgid ""
"The important (but technically optional) parameter @code{data = production} "
"specifies that any variables needed to construct the model should come first "
"from the @code{production} @emph{data frame}.  @emph{This is the case "
"regardless of whether data frame @code{production} has been attached on the "
"search path or not}."
msgstr ""

#. type: Plain text
#: R-intro.texi:4527
msgid ""
"The value of @code{lm()} is a fitted model object; technically a list of "
"results of class @code{\"lm\"}.  Information about the fitted model can then "
"be displayed, extracted, plotted and so on by using generic functions that "
"orient themselves to objects of class @code{\"lm\"}.  These include"
msgstr ""

#. type: example
#: R-intro.texi:4533
#, no-wrap
msgid ""
"add1    deviance   formula      predict  step\n"
"alias   drop1      kappa        print    summary\n"
"anova   effects    labels       proj     vcov\n"
"coef    family     plot         residuals\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4536
msgid "A brief description of the most commonly used ones is given below."
msgstr ""

#. type: findex
#: R-intro.texi:4538 R-intro.texi:4665
#, no-wrap
msgid "anova"
msgstr ""

#. type: item
#: R-intro.texi:4539
#, no-wrap
msgid "anova(@var{object_1}, @var{object_2})"
msgstr ""

#. type: table
#: R-intro.texi:4542
msgid ""
"Compare a submodel with an outer model and produce an analysis of variance "
"table."
msgstr ""

#. type: findex
#: R-intro.texi:4543
#, no-wrap
msgid "coefficients"
msgstr ""

#. type: findex
#: R-intro.texi:4544
#, no-wrap
msgid "coef"
msgstr ""

#. type: item
#: R-intro.texi:4545
#, no-wrap
msgid "coef(@var{object})"
msgstr ""

#. type: table
#: R-intro.texi:4547
msgid "Extract the regression coefficient (matrix)."
msgstr ""

#. type: table
#: R-intro.texi:4549
msgid "Long form: @code{coefficients(@var{object})}."
msgstr ""

#. type: findex
#: R-intro.texi:4550
#, no-wrap
msgid "deviance"
msgstr ""

#. type: item
#: R-intro.texi:4551
#, no-wrap
msgid "deviance(@var{object})"
msgstr ""

#. type: table
#: R-intro.texi:4553
msgid "Residual sum of squares, weighted if appropriate."
msgstr ""

#. type: findex
#: R-intro.texi:4554
#, no-wrap
msgid "formula"
msgstr ""

#. type: item
#: R-intro.texi:4555
#, no-wrap
msgid "formula(@var{object})"
msgstr ""

#. type: table
#: R-intro.texi:4557
msgid "Extract the model formula."
msgstr ""

#. type: findex
#: R-intro.texi:4558 R-intro.texi:5410
#, no-wrap
msgid "plot"
msgstr ""

#. type: item
#: R-intro.texi:4559
#, no-wrap
msgid "plot(@var{object})"
msgstr ""

#. type: table
#: R-intro.texi:4562
msgid "Produce four plots, showing residuals, fitted values and some diagnostics."
msgstr ""

#. type: findex
#: R-intro.texi:4563
#, no-wrap
msgid "predict"
msgstr ""

#. type: item
#: R-intro.texi:4564
#, no-wrap
msgid "predict(@var{object}, newdata=@var{data.frame})"
msgstr ""

#. type: table
#: R-intro.texi:4569
msgid ""
"The data frame supplied must have variables specified with the same labels "
"as the original.  The value is a vector or matrix of predicted values "
"corresponding to the determining variable values in @var{data.frame}."
msgstr ""

#. type: findex
#: R-intro.texi:4578
#, no-wrap
msgid "print"
msgstr ""

#. type: item
#: R-intro.texi:4579
#, no-wrap
msgid "print(@var{object})"
msgstr ""

#. type: table
#: R-intro.texi:4581
msgid "Print a concise version of the object.  Most often used implicitly."
msgstr ""

#. type: findex
#: R-intro.texi:4582
#, no-wrap
msgid "residuals"
msgstr ""

#. type: findex
#: R-intro.texi:4583
#, no-wrap
msgid "resid"
msgstr ""

#. type: item
#: R-intro.texi:4584
#, no-wrap
msgid "residuals(@var{object})"
msgstr ""

#. type: table
#: R-intro.texi:4586
msgid "Extract the (matrix of) residuals, weighted as appropriate."
msgstr ""

#. type: table
#: R-intro.texi:4588
msgid "Short form: @code{resid(@var{object})}."
msgstr ""

#. type: findex
#: R-intro.texi:4589 R-intro.texi:4727
#, no-wrap
msgid "step"
msgstr ""

#. type: item
#: R-intro.texi:4590
#, no-wrap
msgid "step(@var{object})"
msgstr ""

#. type: table
#: R-intro.texi:4594
msgid ""
"Select a suitable model by adding or dropping terms and preserving "
"hierarchies.  The model with the smallest value of AIC (Akaike's An "
"Information Criterion) discovered in the stepwise search is returned."
msgstr ""

#. type: item
#: R-intro.texi:4596
#, no-wrap
msgid "summary(@var{object})"
msgstr ""

#. type: table
#: R-intro.texi:4598
msgid "Print a comprehensive summary of the results of the regression analysis."
msgstr ""

#. type: findex
#: R-intro.texi:4599
#, no-wrap
msgid "vcov"
msgstr ""

#. type: item
#: R-intro.texi:4600
#, no-wrap
msgid "vcov(@var{object})"
msgstr ""

#. type: table
#: R-intro.texi:4603
msgid ""
"Returns the variance-covariance matrix of the main parameters of a fitted "
"model object."
msgstr ""

#. type: cindex
#: R-intro.texi:4607
#, no-wrap
msgid "Analysis of variance"
msgstr ""

#. type: Plain text
#: R-intro.texi:4611
msgid "The model fitting function @code{aov(@var{formula}, data=@var{data.frame})}"
msgstr ""

#. type: findex
#: R-intro.texi:4611
#, no-wrap
msgid "aov"
msgstr ""

#. type: Plain text
#: R-intro.texi:4615
msgid ""
"operates at the simplest level in a very similar way to the function "
"@code{lm()}, and most of the generic functions listed in the table in "
"@ref{Generic functions for extracting model information} apply."
msgstr ""

#. type: Plain text
#: R-intro.texi:4620
msgid ""
"It should be noted that in addition @code{aov()} allows an analysis of "
"models with multiple error strata such as split plot experiments, or "
"balanced incomplete block designs with recovery of inter-block information.  "
"The model formula"
msgstr ""

#. type: example
#: R-intro.texi:4623
#, no-wrap
msgid "@var{response} ~ @var{mean.formula} + Error(@var{strata.formula})\n"
msgstr ""

#. type: findex
#: R-intro.texi:4624
#, no-wrap
msgid "Error"
msgstr ""

#. type: Plain text
#: R-intro.texi:4631
msgid ""
"specifies a multi-stratum experiment with error strata defined by the "
"@var{strata.formula}.  In the simplest case, @var{strata.formula} is simply "
"a factor, when it defines a two strata experiment, namely between and within "
"the levels of the factor."
msgstr ""

#. type: Plain text
#: R-intro.texi:4634
msgid ""
"For example, with all determining variables factors, a model formula such as "
"that in:"
msgstr ""

#. type: example
#: R-intro.texi:4637
#, no-wrap
msgid "> fm <- aov(yield ~ v + n*p*k + Error(farms/blocks), data=farm.data)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4643
msgid ""
"would typically be used to describe an experiment with mean model @code{v + "
"n*p*k} and three error strata, namely ``between farms'', ``within farms, "
"between blocks'' and ``within blocks''."
msgstr ""

#. type: subsection
#: R-intro.texi:4646 R-intro.texi:4648 R-intro.texi:4649
#, no-wrap
msgid "ANOVA tables"
msgstr ""

#. type: Plain text
#: R-intro.texi:4657
msgid ""
"Note also that the analysis of variance table (or tables) are for a sequence "
"of fitted models.  The sums of squares shown are the decrease in the "
"residual sums of squares resulting from an inclusion of @emph{that term} in "
"the model at @emph{that place} in the sequence.  Hence only for orthogonal "
"experiments will the order of inclusion be inconsequential."
msgstr ""

#. type: Plain text
#: R-intro.texi:4662
msgid ""
"For multistratum experiments the procedure is first to project the response "
"onto the error strata, again in sequence, and to fit the mean model to each "
"projection.  For further details, see Chambers & Hastie (1992)."
msgstr ""

#. type: Plain text
#: R-intro.texi:4665
msgid ""
"A more flexible alternative to the default full ANOVA table is to compare "
"two or more models directly using the @code{anova()} function."
msgstr ""

#. type: example
#: R-intro.texi:4669
#, no-wrap
msgid "> anova(@var{fitted.model.1}, @var{fitted.model.2}, @dots{})\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4676
msgid ""
"The display is then an ANOVA table showing the differences between the "
"fitted models when fitted in sequence.  The fitted models being compared "
"would usually be an hierarchical sequence, of course.  This does not give "
"different information to the default, but rather makes it easier to "
"comprehend and control."
msgstr ""

#. type: Plain text
#: R-intro.texi:4684
msgid ""
"The @code{update()} function is largely a convenience function that allows a "
"model to be fitted that differs from one previously fitted usually by just a "
"few additional or removed terms.  Its form is"
msgstr ""

#. type: findex
#: R-intro.texi:4684
#, no-wrap
msgid "update"
msgstr ""

#. type: example
#: R-intro.texi:4688
#, no-wrap
msgid "> @var{new.model} <- update(@var{old.model}, @var{new.formula})\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4692
msgid ""
"In the @var{new.formula} the special name consisting of a period, "
"@samp{@code{.}},"
msgstr ""

#. type: findex
#: R-intro.texi:4692
#, no-wrap
msgid "."
msgstr ""

#. type: Plain text
#: R-intro.texi:4695
msgid ""
"only, can be used to stand for ``the corresponding part of the old model "
"formula''.  For example,"
msgstr ""

#. type: example
#: R-intro.texi:4700
#, no-wrap
msgid ""
"> fm05 <- lm(y ~ x1 + x2 + x3 + x4 + x5, data = production)\n"
"> fm6  <- update(fm05, . ~ . + x6)\n"
"> smf6 <- update(fm6, sqrt(.) ~ .)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4707
msgid ""
"would fit a five variate multiple regression with variables (presumably)  "
"from the data frame @code{production}, fit an additional model including a "
"sixth regressor variable, and fit a variant on the model where the response "
"had a square root transform applied."
msgstr ""

#. type: Plain text
#: R-intro.texi:4711
msgid ""
"Note especially that if the @code{data=} argument is specified on the "
"original call to the model fitting function, this information is passed on "
"through the fitted model object to @code{update()} and its allies."
msgstr ""

#. type: Plain text
#: R-intro.texi:4714
msgid ""
"The name @samp{.} can also be used in other contexts, but with slightly "
"different meaning.  For example"
msgstr ""

#. type: example
#: R-intro.texi:4717
#, no-wrap
msgid "> fmfull <- lm(y ~ . , data = production)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4722
msgid ""
"would fit a model with response @code{y} and regressor variables @emph{all "
"other variables in the data frame @code{production}}."
msgstr ""

#. type: Plain text
#: R-intro.texi:4725
msgid ""
"Other functions for exploring incremental sequences of models are "
"@code{add1()}, @code{drop1()} and @code{step()}."
msgstr ""

#. type: findex
#: R-intro.texi:4725
#, no-wrap
msgid "add1"
msgstr ""

#. type: findex
#: R-intro.texi:4726
#, no-wrap
msgid "drop1"
msgstr ""

#. type: Plain text
#: R-intro.texi:4730
msgid ""
"The names of these give a good clue to their purpose, but for full details "
"see the on-line help."
msgstr ""

#. type: Plain text
#: R-intro.texi:4740
msgid ""
"Generalized linear modeling is a development of linear models to accommodate "
"both non-normal response distributions and transformations to linearity in a "
"clean and straightforward way.  A generalized linear model may be described "
"in terms of the following sequence of assumptions:"
msgstr ""

#. type: itemize
#: R-intro.texi:4744
msgid "There is a response, @math{y}, of interest and stimulus variables"
msgstr ""

#. type: ifnottex
#: R-intro.texi:4746
msgid "x_1, x_2, @dots{},"
msgstr ""

#. type: tex
#: R-intro.texi:4749
#, no-wrap
msgid "$x_1$, $x_2$, @dots{},\n"
msgstr ""

#. type: itemize
#: R-intro.texi:4751
msgid "whose values influence the distribution of the response."
msgstr ""

#. type: itemize
#: R-intro.texi:4756
msgid ""
"The stimulus variables influence the distribution of @math{y} through "
"@emph{a single linear function, only}.  This linear function is called the "
"@emph{linear predictor}, and is usually written"
msgstr ""

#. type: display
#: R-intro.texi:4759
#, no-wrap
msgid "eta = beta_1 x_1 + beta_2 x_2 + @dots{} + beta_p x_p,\n"
msgstr ""

#. type: ifnottex
#: R-intro.texi:4762
msgid ""
"hence x_i has no influence on the distribution of @math{y} if and only if "
"beta_i is zero."
msgstr ""

#. type: tex
#: R-intro.texi:4767
#, no-wrap
msgid ""
"$$ \\eta = \\beta_1 x_1 + \\beta_2 x_2 + \\cdots + \\beta_p x_p, $$\n"
"hence $x_i$ has no influence on the distribution of @math{y} if and only\n"
"if $\\beta_i=0$.\n"
msgstr ""

#. type: itemize
#: R-intro.texi:4771
msgid "The distribution of @math{y} is of the form"
msgstr ""

#. type: display
#: R-intro.texi:4775
#, no-wrap
msgid ""
"f_Y(y; mu, phi)\n"
"  = exp((A/phi) * (y lambda(mu) - gamma(lambda(mu))) + tau(y, phi))\n"
msgstr ""

#. type: ifnottex
#: R-intro.texi:4780
msgid ""
"where phi is a @emph{scale parameter} (possibly known), and is constant for "
"all observations, @math{A} represents a prior weight, assumed known but "
"possibly varying with the observations, and $\\mu$ is the mean of @math{y}."
msgstr ""

#. type: tex
#: R-intro.texi:4791
#, no-wrap
msgid ""
"$$\n"
"f_Y(y;\\mu,\\varphi)\n"
"= \\exp\\left[{A \\over \\varphi}\\left\\{y\\lambda(\\mu) -\n"
"\\gamma\\left(\\lambda(\\mu)\\right)\\right\\} + \\tau(y,\\varphi)\\right]\n"
"$$\n"
"where $\\varphi$ is a @emph{scale parameter} (possibly known), and is\n"
"constant for all observations, $A$ represents a prior weight, assumed\n"
"known but possibly varying with the observations, and $\\mu$ is the mean\n"
"of $y$.\n"
msgstr ""

#. type: itemize
#: R-intro.texi:4794
msgid ""
"So it is assumed that the distribution of @math{y} is determined by its mean "
"and possibly a scale parameter as well."
msgstr ""

#. type: ifnottex
#: R-intro.texi:4798
msgid "The mean, mu, is a smooth invertible function of the linear predictor:"
msgstr ""

#. type: display
#: R-intro.texi:4800
#, no-wrap
msgid "mu = m(eta),    eta = m^@{-1@}(mu) = ell(mu)\n"
msgstr ""

#. type: ifnottex
#: R-intro.texi:4802
msgid "and this inverse function, ell(), is called the @emph{link function}."
msgstr ""

#. type: tex
#: R-intro.texi:4807
#, no-wrap
msgid ""
"The mean, $\\mu$, is a smooth invertible function of the linear predictor:\n"
"$$ \\mu = m(\\eta),\\qquad \\eta = m^{-1}(\\mu) = \\ell(\\mu) $$\n"
"and this inverse function, $\\ell()$, is called the @emph{link function}.\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4817
msgid ""
"These assumptions are loose enough to encompass a wide class of models "
"useful in statistical practice, but tight enough to allow the development of "
"a unified methodology of estimation and inference, at least approximately.  "
"The reader is referred to any of the current reference works on the subject "
"for full details, such as McCullagh & Nelder (1989) or Dobson (1990)."
msgstr ""

#. type: node
#: R-intro.texi:4821 R-intro.texi:4823 R-intro.texi:4824 R-intro.texi:4825 R-intro.texi:4856
#, no-wrap
msgid "Families"
msgstr ""

#. type: node
#: R-intro.texi:4821 R-intro.texi:4823 R-intro.texi:4856
#, no-wrap
msgid "The glm() function"
msgstr ""

#. type: Plain text
#: R-intro.texi:4834
msgid ""
"The class of generalized linear models handled by facilities supplied in "
"@R{} includes @emph{gaussian}, @emph{binomial}, @emph{poisson}, "
"@emph{inverse gaussian} and @emph{gamma} response distributions and also "
"@emph{quasi-likelihood} models where the response distribution is not "
"explicitly specified.  In the latter case the @emph{variance function} must "
"be specified as a function of the mean, but in other cases this function is "
"implied by the response distribution."
msgstr ""

#. type: Plain text
#: R-intro.texi:4838
msgid ""
"Each response distribution admits a variety of link functions to connect the "
"mean with the linear predictor.  Those automatically available are shown in "
"the following table:"
msgstr ""

#. type: multitable
#: R-intro.texi:4842
msgid "@headitem Family name"
msgstr ""

#. type: multitable
#: R-intro.texi:4842
msgid "Link functions"
msgstr ""

#. type: item
#: R-intro.texi:4842
#, no-wrap
msgid "@code{binomial} @tab @code{logit}, @code{probit}, @code{log}, @code{cloglog}"
msgstr ""

#. type: item
#: R-intro.texi:4843
#, no-wrap
msgid "@code{gaussian} @tab @code{identity}, @code{log}, @code{inverse}"
msgstr ""

#. type: item
#: R-intro.texi:4844
#, no-wrap
msgid "@code{Gamma} @tab @code{identity}, @code{inverse}, @code{log}"
msgstr ""

#. type: item
#: R-intro.texi:4845
#, no-wrap
msgid ""
"@code{inverse.gaussian} @tab @code{1/mu^2}, @code{identity}, @code{inverse}, "
"@code{log}"
msgstr ""

#. type: item
#: R-intro.texi:4846
#, no-wrap
msgid "@code{poisson} @tab @code{identity}, @code{log}, @code{sqrt}"
msgstr ""

#. type: item
#: R-intro.texi:4847
#, no-wrap
msgid "@code{quasi} @tab @code{logit}, @code{probit}, @code{cloglog},"
msgstr ""

#. type: multitable
#: R-intro.texi:4849
msgid "@code{identity}, @code{inverse}, @code{log}, @code{1/mu^2}, @code{sqrt}"
msgstr ""

#. type: Plain text
#: R-intro.texi:4855
msgid ""
"The combination of a response distribution, a link function and various "
"other pieces of information that are needed to carry out the modeling "
"exercise is called the @emph{family} of the generalized linear model."
msgstr ""

#. type: subsection
#: R-intro.texi:4857
#, no-wrap
msgid "The @code{glm()} function"
msgstr ""

#. type: findex
#: R-intro.texi:4858
#, no-wrap
msgid "glm"
msgstr ""

#. type: Plain text
#: R-intro.texi:4864
msgid ""
"Since the distribution of the response depends on the stimulus variables "
"through a single linear function @emph{only}, the same mechanism as was used "
"for linear models can still be used to specify the linear part of a "
"generalized model.  The family has to be specified in a different way."
msgstr ""

#. type: Plain text
#: R-intro.texi:4867
msgid ""
"The @R{} function to fit a generalized linear model is @code{glm()} which "
"uses the form"
msgstr ""

#. type: example
#: R-intro.texi:4870
#, no-wrap
msgid ""
"> @var{fitted.model} <- glm(@var{formula}, family=@var{family.generator}, "
"data=@var{data.frame})\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4878
msgid ""
"The only new feature is the @var{family.generator}, which is the instrument "
"by which the family is described.  It is the name of a function that "
"generates a list of functions and expressions that together define and "
"control the model and estimation process.  Although this may seem a little "
"complicated at first sight, its use is quite simple."
msgstr ""

#. type: Plain text
#: R-intro.texi:4884
msgid ""
"The names of the standard, supplied family generators are given under "
"``Family Name'' in the table in @ref{Families}.  Where there is a choice of "
"links, the name of the link may also be supplied with the family name, in "
"parentheses as a parameter.  In the case of the @code{quasi} family, the "
"variance function may also be specified in this way."
msgstr ""

#. type: Plain text
#: R-intro.texi:4886
msgid "Some examples make the process clear."
msgstr ""

#. type: subsubheading
#: R-intro.texi:4887
#, no-wrap
msgid "The @code{gaussian} family"
msgstr ""

#. type: Plain text
#: R-intro.texi:4890
msgid "A call such as"
msgstr ""

#. type: example
#: R-intro.texi:4893
#, no-wrap
msgid "> fm <- glm(y ~ x1 + x2, family = gaussian, data = sales)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4897
msgid "achieves the same result as"
msgstr ""

#. type: example
#: R-intro.texi:4900
#, no-wrap
msgid "> fm <- lm(y ~ x1+x2, data=sales)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4908
msgid ""
"but much less efficiently.  Note how the gaussian family is not "
"automatically provided with a choice of links, so no parameter is allowed.  "
"If a problem requires a gaussian family with a nonstandard link, this can "
"usually be achieved through the @code{quasi} family, as we shall see later."
msgstr ""

#. type: subsubheading
#: R-intro.texi:4909
#, no-wrap
msgid "The @code{binomial} family"
msgstr ""

#. type: Plain text
#: R-intro.texi:4912
msgid "Consider a small, artificial example, from Silvey (1970)."
msgstr ""

#. type: Plain text
#: R-intro.texi:4917
msgid ""
"On the Aegean island of Kalythos the male inhabitants suffer from a "
"congenital eye disease, the effects of which become more marked with "
"increasing age.  Samples of islander males of various ages were tested for "
"blindness and the results recorded.  The data is shown below:"
msgstr ""

#. type: item
#: R-intro.texi:4921 R-intro.texi:4929
#, no-wrap
msgid "Age:          @tab  20 @tab  35 @tab  45 @tab  55 @tab  70"
msgstr ""

#. type: item
#: R-intro.texi:4922 R-intro.texi:4930
#, no-wrap
msgid "No.@: tested: @tab  50 @tab  50 @tab  50 @tab  50 @tab  50"
msgstr ""

#. type: item
#: R-intro.texi:4923 R-intro.texi:4931
#, no-wrap
msgid "No.@: blind:  @tab  @w{ 6} @tab  17 @tab  26 @tab  37 @tab  44"
msgstr ""

#. type: Plain text
#: R-intro.texi:4938
msgid ""
"The problem we consider is to fit both logistic and probit models to this "
"data, and to estimate for each model the LD50, that is the age at which the "
"chance of blindness for a male inhabitant is 50%."
msgstr ""

#. type: Plain text
#: R-intro.texi:4941
msgid ""
"If @math{y} is the number of blind at age @math{x} and @math{n} the number "
"tested, both models have the form"
msgstr ""

#. type: ifnottex
#: R-intro.texi:4943
msgid "y ~ B(n, F(beta_0 + beta_1 x))"
msgstr ""

#. type: tex
#: R-intro.texi:4946
#, no-wrap
msgid "$$ y \\sim {\\rm B}(n, F(\\beta_0 + \\beta_1 x)) $$\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4953
msgid ""
"where for the probit case, @eqn{F(z) = \\Phi(z), F(z) = Phi(z)} is the "
"standard normal distribution function, and in the logit case (the default), "
"@eqn{F(z) = e^z/(1+e^z),F(z) = e^z/(1+e^z)}.  In both cases the LD50 is"
msgstr ""

#. type: ifnottex
#: R-intro.texi:4955
msgid "LD50 = - beta_0/beta_1"
msgstr ""

#. type: tex
#: R-intro.texi:4958
#, no-wrap
msgid "$$ \\hbox{LD50} = -\\beta_0/\\beta_1 $$\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4961
msgid ""
"that is, the point at which the argument of the distribution function is "
"zero."
msgstr ""

#. type: Plain text
#: R-intro.texi:4963
msgid "The first step is to set the data up as a data frame"
msgstr ""

#. type: example
#: R-intro.texi:4967
#, no-wrap
msgid ""
"> kalythos <- data.frame(x = c(20,35,45,55,70), n = rep(50,5),\n"
"                         y = c(6,17,26,37,44))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4971
msgid ""
"To fit a binomial model using @code{glm()} there are three possibilities for "
"the response:"
msgstr ""

#. type: itemize
#: R-intro.texi:4976
msgid ""
"If the response is a @emph{vector} it is assumed to hold @emph{binary} data, "
"and so must be a @math{0/1} vector."
msgstr ""

#. type: itemize
#: R-intro.texi:4981
msgid ""
"If the response is a @emph{two-column matrix} it is assumed that the first "
"column holds the number of successes for the trial and the second holds the "
"number of failures."
msgstr ""

#. type: itemize
#: R-intro.texi:4985
msgid ""
"If the response is a @emph{factor}, its first level is taken as failure (0) "
"and all other levels as `success' (1)."
msgstr ""

#. type: Plain text
#: R-intro.texi:4989
msgid ""
"Here we need the second of these conventions, so we add a matrix to our data "
"frame:"
msgstr ""

#. type: example
#: R-intro.texi:4992
#, no-wrap
msgid "> kalythos$Ymat <- cbind(kalythos$y, kalythos$n - kalythos$y)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:4995
msgid "To fit the models we use"
msgstr ""

#. type: example
#: R-intro.texi:4999
#, no-wrap
msgid ""
"> fmp <- glm(Ymat ~ x, family = binomial(link=probit), data = kalythos)\n"
"> fml <- glm(Ymat ~ x, family = binomial, data = kalythos)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5003
msgid ""
"Since the logit link is the default the parameter may be omitted on the "
"second call.  To see the results of each fit we could use"
msgstr ""

#. type: example
#: R-intro.texi:5007
#, no-wrap
msgid ""
"> summary(fmp)\n"
"> summary(fml)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5011
msgid ""
"Both models fit (all too) well.  To find the LD50 estimate we can use a "
"simple function:"
msgstr ""

#. type: example
#: R-intro.texi:5015
#, no-wrap
msgid ""
"> ld50 <- function(b) -b[1]/b[2]\n"
"> ldp <- ld50(coef(fmp)); ldl <- ld50(coef(fml)); c(ldp, ldl)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5019
msgid ""
"The actual estimates from this data are 43.663 years and 43.601 years "
"respectively."
msgstr ""

#. type: subsubheading
#: R-intro.texi:5020
#, no-wrap
msgid "Poisson models"
msgstr ""

#. type: Plain text
#: R-intro.texi:5028
msgid ""
"With the Poisson family the default link is the @code{log}, and in practice "
"the major use of this family is to fit surrogate Poisson log-linear models "
"to frequency data, whose actual distribution is often multinomial.  This is "
"a large and important subject we will not discuss further here.  It even "
"forms a major part of the use of non-gaussian generalized models overall."
msgstr ""

#. type: Plain text
#: R-intro.texi:5034
msgid ""
"Occasionally genuinely Poisson data arises in practice and in the past it "
"was often analyzed as gaussian data after either a log or a square-root "
"transformation.  As a graceful alternative to the latter, a Poisson "
"generalized linear model may be fitted as in the following example:"
msgstr ""

#. type: example
#: R-intro.texi:5038
#, no-wrap
msgid ""
"> fmod <- glm(y ~ A + B + x, family = poisson(link=sqrt),\n"
"              data = worm.counts)\n"
msgstr ""

#. type: subsubheading
#: R-intro.texi:5040
#, no-wrap
msgid "Quasi-likelihood models"
msgstr ""

#. type: Plain text
#: R-intro.texi:5047
msgid ""
"For all families the variance of the response will depend on the mean and "
"will have the scale parameter as a multiplier.  The form of dependence of "
"the variance on the mean is a characteristic of the response distribution; "
"for example for the poisson distribution @eqn{\\hbox{Var}[y] = \\mu,Var(y) = "
"mu}."
msgstr ""

#. type: Plain text
#: R-intro.texi:5055
msgid ""
"For quasi-likelihood estimation and inference the precise response "
"distribution is not specified, but rather only a link function and the form "
"of the variance function as it depends on the mean.  Since quasi-likelihood "
"estimation uses formally identical techniques to those for the gaussian "
"distribution, this family provides a way of fitting gaussian models with "
"non-standard link functions or variance functions, incidentally."
msgstr ""

#. type: Plain text
#: R-intro.texi:5057
msgid "For example, consider fitting the non-linear regression"
msgstr ""

#. type: ifnottex
#: R-intro.texi:5059
msgid "y = theta_1 z_1 / (z_2 - theta_2) + e"
msgstr ""

#. type: tex
#: R-intro.texi:5062
#, no-wrap
msgid "$$ y = {\\theta_1z_1 \\over z_2 - \\theta_2} + e $$\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5064
msgid "which may be written alternatively as"
msgstr ""

#. type: ifnottex
#: R-intro.texi:5066
msgid "y = 1 / (beta_1 x_1 + beta_2 x_2) + e"
msgstr ""

#. type: tex
#: R-intro.texi:5069
#, no-wrap
msgid "$$ y = {1 \\over \\beta_1x_1 + \\beta_2x_2} + e $$\n"
msgstr ""

#. type: ifnottex
#: R-intro.texi:5074
msgid ""
"x_1 = z_2/z_1, x_2 = -1/z_1, beta_1 = 1/theta_1, and beta_2 = "
"theta_2/theta_1."
msgstr ""

#. type: tex
#: R-intro.texi:5078
#, no-wrap
msgid ""
"$x_1 = z_2/z_1$, $x_2=-1/z_1$, $\\beta_1=1/\\theta_1$ and\n"
"$\\beta_2=\\theta_2/\\theta_1$.\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5081
msgid ""
"Supposing a suitable data frame to be set up we could fit this non-linear "
"regression as"
msgstr ""

#. type: example
#: R-intro.texi:5086
#, no-wrap
msgid ""
"> nlfit <- glm(y ~ x1 + x2 - 1,\n"
"               family = quasi(link=inverse, variance=constant),\n"
"               data = biochem)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5090
msgid ""
"The reader is referred to the manual and the help document for further "
"information, as needed."
msgstr ""

#. type: cindex
#: R-intro.texi:5093
#, no-wrap
msgid "Nonlinear least squares"
msgstr ""

#. type: Plain text
#: R-intro.texi:5100
msgid ""
"Certain forms of nonlinear model can be fitted by Generalized Linear Models "
"(@code{glm()}).  But in the majority of cases we have to approach the "
"nonlinear curve fitting problem as one of nonlinear optimization.  @R{}'s "
"nonlinear optimization routines are @code{optim()}, @code{nlm()} and "
"@code{nlminb()},"
msgstr ""

#. type: findex
#: R-intro.texi:5100 R-intro.texi:5155 R-intro.texi:5239
#, no-wrap
msgid "nlm"
msgstr ""

#. type: findex
#: R-intro.texi:5101
#, no-wrap
msgid "optim"
msgstr ""

#. type: findex
#: R-intro.texi:5102
#, no-wrap
msgid "nlminb"
msgstr ""

#. type: Plain text
#: R-intro.texi:5111
msgid ""
"which provide the functionality (and more) of @SPLUS{}'s @code{ms()} and "
"@code{nlminb()}.  We seek the parameter values that minimize some index of "
"lack-of-fit, and they do this by trying out various parameter values "
"iteratively.  Unlike linear regression for example, there is no guarantee "
"that the procedure will converge on satisfactory estimates.  All the methods "
"require initial guesses about what parameter values to try, and convergence "
"may depend critically upon the quality of the starting values."
msgstr ""

#. type: node
#: R-intro.texi:5115 R-intro.texi:5117 R-intro.texi:5118 R-intro.texi:5207
#, no-wrap
msgid "Least squares"
msgstr ""

#. type: cindex
#: R-intro.texi:5115 R-intro.texi:5117 R-intro.texi:5207 R-intro.texi:5208 R-intro.texi:5209
#, no-wrap
msgid "Maximum likelihood"
msgstr ""

#. type: Plain text
#: R-intro.texi:5123
msgid ""
"One way to fit a nonlinear model is by minimizing the sum of the squared "
"errors (SSE) or residuals.  This method makes sense if the observed errors "
"could have plausibly arisen from a normal distribution."
msgstr ""

#. type: Plain text
#: R-intro.texi:5125
msgid "Here is an example from Bates & Watts (1988), page 51.  The data are:"
msgstr ""

#. type: example
#: R-intro.texi:5130
#, no-wrap
msgid ""
"> x <- c(0.02, 0.02, 0.06, 0.06, 0.11, 0.11, 0.22, 0.22, 0.56, 0.56,\n"
"         1.10, 1.10)\n"
"> y <- c(76, 47, 97, 107, 123, 139, 159, 152, 191, 201, 207, 200)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5133
msgid "The fit criterion to be minimized is:"
msgstr ""

#. type: example
#: R-intro.texi:5136
#, no-wrap
msgid "> fn <- function(p) sum((y - (p[1] * x)/(p[2] + x))^2)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5141
msgid ""
"In order to do the fit we need initial estimates of the parameters.  One way "
"to find sensible starting values is to plot the data, guess some parameter "
"values, and superimpose the model curve using those values."
msgstr ""

#. type: example
#: R-intro.texi:5147
#, no-wrap
msgid ""
"> plot(x, y)\n"
"> xfit <- seq(.02, 1.1, .05)\n"
"> yfit <- 200 * xfit/(0.1 + xfit)\n"
"> lines(spline(xfit, yfit))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5151
msgid ""
"We could do better, but these starting values of 200 and 0.1 seem adequate.  "
"Now do the fit:"
msgstr ""

#. type: example
#: R-intro.texi:5154
#, no-wrap
msgid "> out <- nlm(fn, p = c(200, 0.1), hessian = TRUE)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5160
msgid ""
"After the fitting, @code{out$minimum} is the SSE, and @code{out$estimate} "
"are the least squares estimates of the parameters.  To obtain the "
"approximate standard errors (SE) of the estimates we do:"
msgstr ""

#. type: example
#: R-intro.texi:5163
#, no-wrap
msgid "> sqrt(diag(2*out$minimum/(length(y) - 2) * solve(out$hessian)))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5169
msgid ""
"The @code{2} which is subtracted in the line above represents the number of "
"parameters.  A 95% confidence interval would be the parameter estimate "
"@eqn{\\pm, +/-} 1.96 SE.  We can superimpose the least squares fit on a new "
"plot:"
msgstr ""

#. type: example
#: R-intro.texi:5175
#, no-wrap
msgid ""
"> plot(x, y)\n"
"> xfit <- seq(.02, 1.1, .05)\n"
"> yfit <- 212.68384222 * xfit/(0.06412146 + xfit)\n"
"> lines(spline(xfit, yfit))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5180
msgid ""
"The standard package @pkg{stats} provides much more extensive facilities for "
"fitting non-linear models by least squares.  The model we have just fitted "
"is the Michaelis-Menten model, so we can use"
msgstr ""

#. type: example
#: R-intro.texi:5192
#, no-wrap
msgid ""
"> df <- data.frame(x=x, y=y)\n"
"> fit <- nls(y ~ SSmicmen(x, Vm, K), df)\n"
"> fit\n"
"Nonlinear regression model\n"
"  model:  y ~ SSmicmen(x, Vm, K)\n"
"   data:  df\n"
"          Vm            K\n"
"212.68370711   0.06412123\n"
" residual sum-of-squares:  1195.449\n"
"> summary(fit)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:5194
#, no-wrap
msgid ""
"Formula: y ~ SSmicmen(x, Vm, K)\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:5199
#, no-wrap
msgid ""
"Parameters:\n"
"    Estimate Std. Error t value Pr(>|t|)\n"
"Vm 2.127e+02  6.947e+00  30.615 3.24e-11\n"
"K  6.412e-02  8.281e-03   7.743 1.57e-05\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:5201
#, no-wrap
msgid ""
"Residual standard error: 10.93 on 10 degrees of freedom\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:5205
#, no-wrap
msgid ""
"Correlation of Parameter Estimates:\n"
"      Vm\n"
"K 0.7651\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5217
msgid ""
"Maximum likelihood is a method of nonlinear model fitting that applies even "
"if the errors are not normal.  The method finds the parameter values which "
"maximize the log likelihood, or equivalently which minimize the negative "
"log-likelihood.  Here is an example from Dobson (1990), pp.@: 108--111.  "
"This example fits a logistic model to dose-response data, which clearly "
"could also be fit by @code{glm()}.  The data are:"
msgstr ""

#. type: example
#: R-intro.texi:5223
#, no-wrap
msgid ""
"> x <- c(1.6907, 1.7242, 1.7552, 1.7842, 1.8113,\n"
"         1.8369, 1.8610, 1.8839)\n"
"> y <- c( 6, 13, 18, 28, 52, 53, 61, 60)\n"
"> n <- c(59, 60, 62, 56, 63, 59, 62, 60)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5226
msgid "The negative log-likelihood to minimize is:"
msgstr ""

#. type: example
#: R-intro.texi:5231
#, no-wrap
msgid ""
"> fn <- function(p)\n"
"   sum( - (y*(p[1]+p[2]*x) - n*log(1+exp(p[1]+p[2]*x))\n"
"           + log(choose(n, y)) ))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5235
msgid "We pick sensible starting values and do the fit:"
msgstr ""

#. type: example
#: R-intro.texi:5238
#, no-wrap
msgid "> out <- nlm(fn, p = c(-50,20), hessian = TRUE)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5245
msgid ""
"After the fitting, @code{out$minimum} is the negative log-likelihood, and "
"@code{out$estimate} are the maximum likelihood estimates of the parameters.  "
"To obtain the approximate SEs of the estimates we do:"
msgstr ""

#. type: example
#: R-intro.texi:5248
#, no-wrap
msgid "> sqrt(diag(solve(out$hessian)))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5252
msgid ""
"A 95% confidence interval would be the parameter estimate @eqn{\\pm, +/-} "
"1.96 SE."
msgstr ""

#. type: Plain text
#: R-intro.texi:5259
msgid ""
"We conclude this chapter with just a brief mention of some of the other "
"facilities available in @R{} for special regression and data analysis "
"problems."
msgstr ""

#. type: cindex
#: R-intro.texi:5262
#, no-wrap
msgid "Mixed models"
msgstr ""

#. type: itemize
#: R-intro.texi:5265
msgid ""
"@strong{Mixed models.} The recommended @CRANpkg{nlme} package provides "
"functions @code{lme()} and @code{nlme()}"
msgstr ""

#. type: findex
#: R-intro.texi:5265
#, no-wrap
msgid "lme"
msgstr ""

#. type: findex
#: R-intro.texi:5266
#, no-wrap
msgid "nlme"
msgstr ""

#. type: itemize
#: R-intro.texi:5271
msgid ""
"for linear and non-linear mixed-effects models, that is linear and "
"non-linear regressions in which some of the coefficients correspond to "
"random effects.  These functions make heavy use of formulae to specify the "
"models."
msgstr ""

#. type: cindex
#: R-intro.texi:5273
#, no-wrap
msgid "Local approximating regressions"
msgstr ""

#. type: itemize
#: R-intro.texi:5275
msgid "@strong{Local approximating regressions.} The @code{loess()}"
msgstr ""

#. type: findex
#: R-intro.texi:5275 R-intro.texi:5283
#, no-wrap
msgid "loess"
msgstr ""

#. type: itemize
#: R-intro.texi:5280
msgid ""
"function fits a nonparametric regression by using a locally weighted "
"regression.  Such regressions are useful for highlighting a trend in messy "
"data or for data reduction to give some insight into a large data set."
msgstr ""

#. type: itemize
#: R-intro.texi:5283
msgid ""
"Function @code{loess} is in the standard package @pkg{stats}, together with "
"code for projection pursuit regression."
msgstr ""

#. type: cindex
#: R-intro.texi:5286
#, no-wrap
msgid "Robust regression"
msgstr ""

#. type: itemize
#: R-intro.texi:5290
msgid ""
"@strong{Robust regression.} There are several functions available for "
"fitting regression models in a way resistant to the influence of extreme "
"outliers in the data.  Function @code{lqs}"
msgstr ""

#. type: findex
#: R-intro.texi:5290
#, no-wrap
msgid "lqs"
msgstr ""

#. type: itemize
#: R-intro.texi:5295
msgid ""
"in the recommended package @CRANpkg{MASS} provides state-of-art algorithms "
"for highly-resistant fits.  Less resistant but statistically more efficient "
"methods are available in packages, for example function @code{rlm}"
msgstr ""

#. type: findex
#: R-intro.texi:5295
#, no-wrap
msgid "rlm"
msgstr ""

#. type: itemize
#: R-intro.texi:5297
msgid "in package @CRANpkg{MASS}."
msgstr ""

#. type: cindex
#: R-intro.texi:5299
#, no-wrap
msgid "Additive models"
msgstr ""

#. type: itemize
#: R-intro.texi:5304
msgid ""
"@strong{Additive models.} This technique aims to construct a regression "
"function from smooth additive functions of the determining variables, "
"usually one for each determining variable.  Functions @code{avas} and "
"@code{ace}"
msgstr ""

#. type: findex
#: R-intro.texi:5304
#, no-wrap
msgid "avas"
msgstr ""

#. type: findex
#: R-intro.texi:5305
#, no-wrap
msgid "ace"
msgstr ""

#. type: itemize
#: R-intro.texi:5307
msgid "in package @CRANpkg{acepack} and functions @code{bruto} and @code{mars}"
msgstr ""

#. type: findex
#: R-intro.texi:5307
#, no-wrap
msgid "bruto"
msgstr ""

#. type: findex
#: R-intro.texi:5308
#, no-wrap
msgid "mars"
msgstr ""

#. type: itemize
#: R-intro.texi:5313
msgid ""
"in package @CRANpkg{mda} provide some examples of these techniques in "
"user-contributed packages to @R{}.  An extension is @strong{Generalized "
"Additive Models}, implemented in user-contributed packages @CRANpkg{gam} and "
"@CRANpkg{mgcv}."
msgstr ""

#. type: cindex
#: R-intro.texi:5315
#, no-wrap
msgid "Tree-based models"
msgstr ""

#. type: itemize
#: R-intro.texi:5323
msgid ""
"@strong{Tree-based models.} Rather than seek an explicit global linear model "
"for prediction or interpretation, tree-based models seek to bifurcate the "
"data, recursively, at critical points of the determining variables in order "
"to partition the data ultimately into groups that are as homogeneous as "
"possible within, and as heterogeneous as possible between.  The results "
"often lead to insights that other data analysis methods tend not to yield."
msgstr ""

#. type: itemize
#: R-intro.texi:5326
msgid ""
"Models are again specified in the ordinary linear model form.  The model "
"fitting function is @code{tree()},"
msgstr ""

#. type: findex
#: R-intro.texi:5326
#, no-wrap
msgid "tree"
msgstr ""

#. type: itemize
#: R-intro.texi:5330
msgid ""
"but many other generic functions such as @code{plot()} and @code{text()} are "
"well adapted to displaying the results of a tree-based model fit in a "
"graphical way."
msgstr ""

#. type: itemize
#: R-intro.texi:5333
msgid ""
"Tree models are available in @R{} @emph{via} the user-contributed packages "
"@CRANpkg{rpart} and @CRANpkg{tree}."
msgstr ""

#. type: chapter
#: R-intro.texi:5337
#, no-wrap
msgid "Graphical procedures"
msgstr ""

#. type: Plain text
#: R-intro.texi:5343
msgid ""
"Graphical facilities are an important and extremely versatile component of "
"the @R{} environment.  It is possible to use the facilities to display a "
"wide variety of statistical graphs and also to build entirely new types of "
"graph."
msgstr ""

#. type: Plain text
#: R-intro.texi:5353
msgid ""
"The graphics facilities can be used in both interactive and batch modes, but "
"in most cases, interactive use is more productive.  Interactive use is also "
"easy because at startup time @R{} initiates a graphics @emph{device driver} "
"which opens a special @emph{graphics window} for the display of interactive "
"graphics.  Although this is done automatically, it may useful to know that "
"the command used is @code{X11()} under UNIX, @code{windows()} under Windows "
"and @code{quartz()} under OS X.  A new device can always be opened by "
"@code{dev.new()}."
msgstr ""

#. type: Plain text
#: R-intro.texi:5357
msgid ""
"Once the device driver is running, @R{} plotting commands can be used to "
"produce a variety of graphical displays and to create entirely new kinds of "
"display."
msgstr ""

#. type: Plain text
#: R-intro.texi:5359
msgid "Plotting commands are divided into three basic groups:"
msgstr ""

#. type: itemize
#: R-intro.texi:5364
msgid ""
"@strong{High-level} plotting functions create a new plot on the graphics "
"device, possibly with axes, labels, titles and so on."
msgstr ""

#. type: itemize
#: R-intro.texi:5367
msgid ""
"@strong{Low-level} plotting functions add more information to an existing "
"plot, such as extra points, lines and labels."
msgstr ""

#. type: itemize
#: R-intro.texi:5371
msgid ""
"@strong{Interactive} graphics functions allow you interactively add "
"information to, or extract information from, an existing plot, using a "
"pointing device such as a mouse."
msgstr ""

#. type: Plain text
#: R-intro.texi:5375
msgid ""
"In addition, @R{} maintains a list of @emph{graphical parameters} which can "
"be manipulated to customize your plots."
msgstr ""

#. type: Plain text
#: R-intro.texi:5381
msgid ""
"This manual only describes what are known as `base' graphics.  A separate "
"graphics sub-system in package @pkg{grid} coexists with base -- it is more "
"powerful but harder to use.  There is a recommended package "
"@CRANpkg{lattice} which builds on @pkg{grid} and provides ways to produce "
"multi-panel plots akin to those in the @emph{Trellis} system in @Sl{}."
msgstr ""

#. type: node
#: R-intro.texi:5390 R-intro.texi:5392 R-intro.texi:5393 R-intro.texi:5408 R-intro.texi:5408 R-intro.texi:5449 R-intro.texi:5505 R-intro.texi:5562 R-intro.texi:5622
#, no-wrap
msgid "High-level plotting commands"
msgstr ""

#. type: node
#: R-intro.texi:5390 R-intro.texi:5392 R-intro.texi:5622 R-intro.texi:5623 R-intro.texi:5731 R-intro.texi:5731 R-intro.texi:5753 R-intro.texi:5782
#, no-wrap
msgid "Low-level plotting commands"
msgstr ""

#. type: node
#: R-intro.texi:5390 R-intro.texi:5622 R-intro.texi:5782 R-intro.texi:5783 R-intro.texi:5849
#, no-wrap
msgid "Interacting with graphics"
msgstr ""

#. type: node
#: R-intro.texi:5390 R-intro.texi:5782 R-intro.texi:5849 R-intro.texi:5850 R-intro.texi:5872 R-intro.texi:5872 R-intro.texi:5927 R-intro.texi:5948
#, no-wrap
msgid "Using graphics parameters"
msgstr ""

#. type: node
#: R-intro.texi:5390 R-intro.texi:5849 R-intro.texi:5875 R-intro.texi:5948 R-intro.texi:5976 R-intro.texi:5976 R-intro.texi:6070 R-intro.texi:6124 R-intro.texi:6161 R-intro.texi:6227
#, no-wrap
msgid "Graphics parameters"
msgstr ""

#. type: node
#: R-intro.texi:5390 R-intro.texi:5948 R-intro.texi:6227 R-intro.texi:6228 R-intro.texi:6293 R-intro.texi:6293 R-intro.texi:6329 R-intro.texi:6398
#, no-wrap
msgid "Device drivers"
msgstr ""

#. type: cindex
#: R-intro.texi:5390 R-intro.texi:6227 R-intro.texi:6398 R-intro.texi:6399 R-intro.texi:6400
#, no-wrap
msgid "Dynamic graphics"
msgstr ""

#. type: Plain text
#: R-intro.texi:5400
msgid ""
"High-level plotting functions are designed to generate a complete plot of "
"the data passed as arguments to the function.  Where appropriate, axes, "
"labels and titles are automatically generated (unless you request "
"otherwise.) High-level plotting commands always start a new plot, erasing "
"the current plot if necessary."
msgstr ""

#. type: node
#: R-intro.texi:5406 R-intro.texi:5408 R-intro.texi:5449
#, no-wrap
msgid "The plot() function"
msgstr ""

#. type: node
#: R-intro.texi:5406 R-intro.texi:5408 R-intro.texi:5449 R-intro.texi:5450 R-intro.texi:5505
#, no-wrap
msgid "Displaying multivariate data"
msgstr ""

#. type: node
#: R-intro.texi:5406 R-intro.texi:5449 R-intro.texi:5505 R-intro.texi:5506 R-intro.texi:5562
#, no-wrap
msgid "Display graphics"
msgstr ""

#. type: subsection
#: R-intro.texi:5406 R-intro.texi:5505 R-intro.texi:5562 R-intro.texi:5563
#, no-wrap
msgid "Arguments to high-level plotting functions"
msgstr ""

#. type: subsection
#: R-intro.texi:5409
#, no-wrap
msgid "The @code{plot()} function"
msgstr ""

#. type: Plain text
#: R-intro.texi:5416
msgid ""
"One of the most frequently used plotting functions in @R{} is the "
"@code{plot()} function.  This is a @emph{generic} function: the type of plot "
"produced is dependent on the type or @emph{class} of the first argument."
msgstr ""

#. type: item
#: R-intro.texi:5419
#, no-wrap
msgid "plot(@var{x}, @var{y})"
msgstr ""

#. type: itemx
#: R-intro.texi:5420
#, no-wrap
msgid "plot(@var{xy})"
msgstr ""

#. type: table
#: R-intro.texi:5425
msgid ""
"If @var{x} and @var{y} are vectors, @code{plot(@var{x}, @var{y})} produces a "
"scatterplot of @var{y} against @var{x}.  The same effect can be produced by "
"supplying one argument (second form) as either a list containing two "
"elements @var{x} and @var{y} or a two-column matrix."
msgstr ""

#. type: item
#: R-intro.texi:5426
#, no-wrap
msgid "plot(@var{x})"
msgstr ""

#. type: table
#: R-intro.texi:5432
msgid ""
"If @var{x} is a time series, this produces a time-series plot. If @var{x} is "
"a numeric vector, it produces a plot of the values in the vector against "
"their index in the vector.  If @var{x} is a complex vector, it produces a "
"plot of imaginary versus real parts of the vector elements."
msgstr ""

#. type: item
#: R-intro.texi:5433
#, no-wrap
msgid "plot(@var{f})"
msgstr ""

#. type: itemx
#: R-intro.texi:5434
#, no-wrap
msgid "plot(@var{f}, @var{y})"
msgstr ""

#. type: table
#: R-intro.texi:5438
msgid ""
"@var{f} is a factor object, @var{y} is a numeric vector.  The first form "
"generates a bar plot of @var{f}; the second form produces boxplots of "
"@var{y} for each level of @var{f}."
msgstr ""

#. type: item
#: R-intro.texi:5439
#, no-wrap
msgid "plot(@var{df})"
msgstr ""

#. type: itemx
#: R-intro.texi:5440
#, no-wrap
msgid "plot(~ @var{expr})"
msgstr ""

#. type: itemx
#: R-intro.texi:5441
#, no-wrap
msgid "plot(@var{y} ~ @var{expr})"
msgstr ""

#. type: table
#: R-intro.texi:5447
msgid ""
"@var{df} is a data frame, @var{y} is any object, @var{expr} is a list of "
"object names separated by `@code{+}' (e.g., @code{a + b + c}).  The first "
"two forms produce distributional plots of the variables in a data frame "
"(first form) or of a number of named objects (second form).  The third form "
"plots @var{y} against every object named in @var{expr}."
msgstr ""

#. type: Plain text
#: R-intro.texi:5454
msgid ""
"@R{} provides two very useful functions for representing multivariate data.  "
"If @code{X} is a numeric matrix or data frame, the command"
msgstr ""

#. type: example
#: R-intro.texi:5457
#, no-wrap
msgid "> pairs(X)\n"
msgstr ""

#. type: findex
#: R-intro.texi:5458
#, no-wrap
msgid "pairs"
msgstr ""

#. type: Plain text
#: R-intro.texi:5466
msgid ""
"produces a pairwise scatterplot matrix of the variables defined by the "
"columns of @code{X}, that is, every column of @code{X} is plotted against "
"every other column of @code{X} and the resulting @math{n(n-1)} plots are "
"arranged in a matrix with plot scales constant over the rows and columns of "
"the matrix."
msgstr ""

#. type: Plain text
#: R-intro.texi:5471
msgid ""
"When three or four variables are involved a @emph{coplot} may be more "
"enlightening.  If @code{a} and @code{b} are numeric vectors and @code{c} is "
"a numeric vector or factor object (all of the same length), then the command"
msgstr ""

#. type: example
#: R-intro.texi:5474
#, no-wrap
msgid "> coplot(a ~ b | c)\n"
msgstr ""

#. type: findex
#: R-intro.texi:5475
#, no-wrap
msgid "coplot"
msgstr ""

#. type: Plain text
#: R-intro.texi:5488
msgid ""
"produces a number of scatterplots of @code{a} against @code{b} for given "
"values of @code{c}.  If @code{c} is a factor, this simply means that "
"@code{a} is plotted against @code{b} for every level of @code{c}.  When "
"@code{c} is numeric, it is divided into a number of @emph{conditioning "
"intervals} and for each interval @code{a} is plotted against @code{b} for "
"values of @code{c} within the interval.  The number and position of "
"intervals can be controlled with @code{given.values=} argument to "
"@code{coplot()}---the function @code{co.intervals()} is useful for selecting "
"intervals.  You can also use two @emph{given} variables with a command like"
msgstr ""

#. type: example
#: R-intro.texi:5491
#, no-wrap
msgid "> coplot(a ~ b | c + d)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5496
msgid ""
"which produces scatterplots of @code{a} against @code{b} for every joint "
"conditioning interval of @code{c} and @code{d}."
msgstr ""

#. type: Plain text
#: R-intro.texi:5504
msgid ""
"The @code{coplot()} and @code{pairs()} function both take an argument "
"@code{panel=} which can be used to customize the type of plot which appears "
"in each panel.  The default is @code{points()} to produce a scatterplot but "
"by supplying some other low-level graphics function of two vectors @code{x} "
"and @code{y} as the value of @code{panel=} you can produce any type of plot "
"you wish.  An example panel function useful for coplots is "
"@code{panel.smooth()}."
msgstr ""

#. type: Plain text
#: R-intro.texi:5510
msgid ""
"Other high-level graphics functions produce different types of plots.  Some "
"examples are:"
msgstr ""

#. type: item
#: R-intro.texi:5519
#, no-wrap
msgid "qqnorm(x)"
msgstr ""

#. type: itemx
#: R-intro.texi:5520
#, no-wrap
msgid "qqline(x)"
msgstr ""

#. type: itemx
#: R-intro.texi:5521
#, no-wrap
msgid "qqplot(x, y)"
msgstr ""

#. type: findex
#: R-intro.texi:5524
#, no-wrap
msgid "qqplot"
msgstr ""

#. type: table
#: R-intro.texi:5531
msgid ""
"Distribution-comparison plots.  The first form plots the numeric vector "
"@code{x} against the expected Normal order scores (a normal scores plot)  "
"and the second adds a straight line to such a plot by drawing a line through "
"the distribution and data quartiles.  The third form plots the quantiles of "
"@code{x} against those of @code{y} to compare their respective "
"distributions."
msgstr ""

#. type: item
#: R-intro.texi:5532
#, no-wrap
msgid "hist(x)"
msgstr ""

#. type: itemx
#: R-intro.texi:5533
#, no-wrap
msgid "hist(x, nclass=@var{n})"
msgstr ""

#. type: itemx
#: R-intro.texi:5534
#, no-wrap
msgid "hist(x, breaks=@var{b}, @dots{})"
msgstr ""

#. type: table
#: R-intro.texi:5542
msgid ""
"Produces a histogram of the numeric vector @code{x}.  A sensible number of "
"classes is usually chosen, but a recommendation can be given with the "
"@code{nclass=} argument.  Alternatively, the breakpoints can be specified "
"exactly with the @code{breaks=} argument.  If the @code{probability=TRUE} "
"argument is given, the bars represent relative frequencies divided by bin "
"width instead of counts."
msgstr ""

#. type: item
#: R-intro.texi:5543
#, no-wrap
msgid "dotchart(x, @dots{})"
msgstr ""

#. type: findex
#: R-intro.texi:5544
#, no-wrap
msgid "dotchart"
msgstr ""

#. type: table
#: R-intro.texi:5549
msgid ""
"Constructs a dotchart of the data in @code{x}.  In a dotchart the "
"@math{y}-axis gives a labelling of the data in @code{x} and the "
"@math{x}-axis gives its value.  For example it allows easy visual selection "
"of all data entries with values lying in specified ranges."
msgstr ""

#. type: item
#: R-intro.texi:5550
#, no-wrap
msgid "image(x, y, z, @dots{})"
msgstr ""

#. type: itemx
#: R-intro.texi:5551
#, no-wrap
msgid "contour(x, y, z, @dots{})"
msgstr ""

#. type: itemx
#: R-intro.texi:5552
#, no-wrap
msgid "persp(x, y, z, @dots{})"
msgstr ""

#. type: findex
#: R-intro.texi:5553
#, no-wrap
msgid "image"
msgstr ""

#. type: findex
#: R-intro.texi:5554
#, no-wrap
msgid "contour"
msgstr ""

#. type: findex
#: R-intro.texi:5555
#, no-wrap
msgid "persp"
msgstr ""

#. type: table
#: R-intro.texi:5560
msgid ""
"Plots of three variables.  The @code{image} plot draws a grid of rectangles "
"using different colours to represent the value of @code{z}, the "
"@code{contour} plot draws contour lines to represent the value of @code{z}, "
"and the @code{persp} plot draws a 3D surface."
msgstr ""

#. type: Plain text
#: R-intro.texi:5567
msgid ""
"There are a number of arguments which may be passed to high-level graphics "
"functions, as follows:"
msgstr ""

#. type: item
#: R-intro.texi:5569
#, no-wrap
msgid "add=TRUE"
msgstr ""

#. type: table
#: R-intro.texi:5572
msgid ""
"Forces the function to act as a low-level graphics function, superimposing "
"the plot on the current plot (some functions only)."
msgstr ""

#. type: item
#: R-intro.texi:5573
#, no-wrap
msgid "axes=FALSE"
msgstr ""

#. type: table
#: R-intro.texi:5577
msgid ""
"Suppresses generation of axes---useful for adding your own custom axes with "
"the @code{axis()} function.  The default, @code{axes=TRUE}, means include "
"axes."
msgstr ""

#. type: item
#: R-intro.texi:5578
#, no-wrap
msgid "log=\"x\""
msgstr ""

#. type: itemx
#: R-intro.texi:5579
#, no-wrap
msgid "log=\"y\""
msgstr ""

#. type: itemx
#: R-intro.texi:5580
#, no-wrap
msgid "log=\"xy\""
msgstr ""

#. type: table
#: R-intro.texi:5583
msgid ""
"Causes the @math{x}, @math{y} or both axes to be logarithmic.  This will "
"work for many, but not all, types of plot."
msgstr ""

#. type: item
#: R-intro.texi:5584
#, no-wrap
msgid "type="
msgstr ""

#. type: table
#: R-intro.texi:5587
msgid "The @code{type=} argument controls the type of plot produced, as follows:"
msgstr ""

#. type: item
#: R-intro.texi:5589
#, no-wrap
msgid "type=\"p\""
msgstr ""

#. type: table
#: R-intro.texi:5591
msgid "Plot individual points (the default)"
msgstr ""

#. type: item
#: R-intro.texi:5591
#, no-wrap
msgid "type=\"l\""
msgstr ""

#. type: table
#: R-intro.texi:5593
msgid "Plot lines"
msgstr ""

#. type: item
#: R-intro.texi:5593
#, no-wrap
msgid "type=\"b\""
msgstr ""

#. type: table
#: R-intro.texi:5595
msgid "Plot points connected by lines (@emph{both})"
msgstr ""

#. type: item
#: R-intro.texi:5595
#, no-wrap
msgid "type=\"o\""
msgstr ""

#. type: table
#: R-intro.texi:5597
msgid "Plot points overlaid by lines"
msgstr ""

#. type: item
#: R-intro.texi:5597
#, no-wrap
msgid "type=\"h\""
msgstr ""

#. type: table
#: R-intro.texi:5599
msgid "Plot vertical lines from points to the zero axis (@emph{high-density})"
msgstr ""

#. type: item
#: R-intro.texi:5599
#, no-wrap
msgid "type=\"s\""
msgstr ""

#. type: itemx
#: R-intro.texi:5600
#, no-wrap
msgid "type=\"S\""
msgstr ""

#. type: table
#: R-intro.texi:5603
msgid ""
"Step-function plots.  In the first form, the top of the vertical defines the "
"point; in the second, the bottom."
msgstr ""

#. type: item
#: R-intro.texi:5603
#, no-wrap
msgid "type=\"n\""
msgstr ""

#. type: table
#: R-intro.texi:5607
msgid ""
"No plotting at all.  However axes are still drawn (by default) and the "
"coordinate system is set up according to the data.  Ideal for creating plots "
"with subsequent low-level graphics functions."
msgstr ""

#. type: item
#: R-intro.texi:5609
#, no-wrap
msgid "xlab=@var{string}"
msgstr ""

#. type: itemx
#: R-intro.texi:5610
#, no-wrap
msgid "ylab=@var{string}"
msgstr ""

#. type: table
#: R-intro.texi:5614
msgid ""
"Axis labels for the @math{x} and @math{y} axes.  Use these arguments to "
"change the default labels, usually the names of the objects used in the call "
"to the high-level plotting function."
msgstr ""

#. type: item
#: R-intro.texi:5615
#, no-wrap
msgid "main=@var{string}"
msgstr ""

#. type: table
#: R-intro.texi:5617
msgid "Figure title, placed at the top of the plot in a large font."
msgstr ""

#. type: item
#: R-intro.texi:5618
#, no-wrap
msgid "sub=@var{string}"
msgstr ""

#. type: table
#: R-intro.texi:5620
msgid "Sub-title, placed just below the @math{x}-axis in a smaller font."
msgstr ""

#. type: Plain text
#: R-intro.texi:5629
msgid ""
"Sometimes the high-level plotting functions don't produce exactly the kind "
"of plot you desire.  In this case, low-level plotting commands can be used "
"to add extra information (such as points, lines or text) to the current "
"plot."
msgstr ""

#. type: Plain text
#: R-intro.texi:5631
msgid "Some of the more useful low-level plotting functions are:"
msgstr ""

#. type: item
#: R-intro.texi:5633
#, no-wrap
msgid "points(x, y)"
msgstr ""

#. type: itemx
#: R-intro.texi:5634
#, no-wrap
msgid "lines(x, y)"
msgstr ""

#. type: findex
#: R-intro.texi:5635
#, no-wrap
msgid "points"
msgstr ""

#. type: findex
#: R-intro.texi:5636
#, no-wrap
msgid "lines"
msgstr ""

#. type: table
#: R-intro.texi:5641
msgid ""
"Adds points or connected lines to the current plot.  @code{plot()}'s "
"@code{type=} argument can also be passed to these functions (and defaults to "
"@code{\"p\"} for @code{points()} and @code{\"l\"} for @code{lines()}.)"
msgstr ""

#. type: item
#: R-intro.texi:5642
#, no-wrap
msgid "text(x, y, labels, @dots{})"
msgstr ""

#. type: var{#1}
#: R-intro.texi:5643 R-intro.texi:7615
#, no-wrap
msgid "text"
msgstr ""

#. type: table
#: R-intro.texi:5648
msgid ""
"Add text to a plot at points given by @code{x, y}.  Normally @code{labels} "
"is an integer or character vector in which case @code{labels[i]} is plotted "
"at point @code{(x[i], y[i])}.  The default is @code{1:length(x)}."
msgstr ""

#. type: table
#: R-intro.texi:5650
msgid "@strong{Note}: This function is often used in the sequence"
msgstr ""

#. type: example
#: R-intro.texi:5653
#, no-wrap
msgid "> plot(x, y, type=\"n\"); text(x, y, names)\n"
msgstr ""

#. type: table
#: R-intro.texi:5659
msgid ""
"The graphics parameter @code{type=\"n\"} suppresses the points but sets up "
"the axes, and the @code{text()} function supplies special characters, as "
"specified by the character vector @code{names} for the points."
msgstr ""

#. type: item
#: R-intro.texi:5660
#, no-wrap
msgid "abline(a, b)"
msgstr ""

#. type: itemx
#: R-intro.texi:5661
#, no-wrap
msgid "abline(h=@var{y})"
msgstr ""

#. type: itemx
#: R-intro.texi:5662
#, no-wrap
msgid "abline(v=@var{x})"
msgstr ""

#. type: itemx
#: R-intro.texi:5663
#, no-wrap
msgid "abline(@var{lm.obj})"
msgstr ""

#. type: findex
#: R-intro.texi:5664
#, no-wrap
msgid "abline"
msgstr ""

#. type: table
#: R-intro.texi:5672
msgid ""
"Adds a line of slope @code{b} and intercept @code{a} to the current plot.  "
"@code{h=@var{y}} may be used to specify @math{y}-coordinates for the heights "
"of horizontal lines to go across a plot, and @code{v=@var{x}} similarly for "
"the @math{x}-coordinates for vertical lines.  Also @var{lm.obj} may be list "
"with a @code{coefficients} component of length 2 (such as the result of "
"model-fitting functions,)  which are taken as an intercept and slope, in "
"that order."
msgstr ""

#. type: item
#: R-intro.texi:5673
#, no-wrap
msgid "polygon(x, y, @dots{})"
msgstr ""

#. type: findex
#: R-intro.texi:5674
#, no-wrap
msgid "polygon"
msgstr ""

#. type: table
#: R-intro.texi:5678
msgid ""
"Draws a polygon defined by the ordered vertices in (@code{x}, @code{y})  and "
"(optionally) shade it in with hatch lines, or fill it if the graphics device "
"allows the filling of figures."
msgstr ""

#. type: item
#: R-intro.texi:5679
#, no-wrap
msgid "legend(x, y, legend, @dots{})"
msgstr ""

#. type: findex
#: R-intro.texi:5680
#, no-wrap
msgid "legend"
msgstr ""

#. type: table
#: R-intro.texi:5686
msgid ""
"Adds a legend to the current plot at the specified position.  Plotting "
"characters, line styles, colors etc., are identified with the labels in the "
"character vector @code{legend}.  At least one other argument @var{v} (a "
"vector the same length as @code{legend}) with the corresponding values of "
"the plotting unit must also be given, as follows:"
msgstr ""

#. type: item
#: R-intro.texi:5688
#, no-wrap
msgid "legend( , fill=@var{v})"
msgstr ""

#. type: table
#: R-intro.texi:5690
msgid "Colors for filled boxes"
msgstr ""

#. type: item
#: R-intro.texi:5690
#, no-wrap
msgid "legend( , col=@var{v})"
msgstr ""

#. type: table
#: R-intro.texi:5692
msgid "Colors in which points or lines will be drawn"
msgstr ""

#. type: item
#: R-intro.texi:5692
#, no-wrap
msgid "legend( , lty=@var{v})"
msgstr ""

#. type: table
#: R-intro.texi:5694
msgid "Line styles"
msgstr ""

#. type: item
#: R-intro.texi:5694
#, no-wrap
msgid "legend( , lwd=@var{v})"
msgstr ""

#. type: table
#: R-intro.texi:5696
msgid "Line widths"
msgstr ""

#. type: item
#: R-intro.texi:5696
#, no-wrap
msgid "legend( , pch=@var{v})"
msgstr ""

#. type: table
#: R-intro.texi:5698
msgid "Plotting characters (character vector)"
msgstr ""

#. type: item
#: R-intro.texi:5700
#, no-wrap
msgid "title(main, sub)"
msgstr ""

#. type: findex
#: R-intro.texi:5701
#, no-wrap
msgid "title"
msgstr ""

#. type: table
#: R-intro.texi:5704
msgid ""
"Adds a title @code{main} to the top of the current plot in a large font and "
"(optionally) a sub-title @code{sub} at the bottom in a smaller font."
msgstr ""

#. type: item
#: R-intro.texi:5705
#, no-wrap
msgid "axis(side, @dots{})"
msgstr ""

#. type: findex
#: R-intro.texi:5706
#, no-wrap
msgid "axis"
msgstr ""

#. type: table
#: R-intro.texi:5712
msgid ""
"Adds an axis to the current plot on the side given by the first argument (1 "
"to 4, counting clockwise from the bottom.)  Other arguments control the "
"positioning of the axis within or beside the plot, and tick positions and "
"labels.  Useful for adding custom axes after calling @code{plot()} with the "
"@code{axes=FALSE} argument."
msgstr ""

#. type: Plain text
#: R-intro.texi:5719
msgid ""
"Low-level plotting functions usually require some positioning information "
"(e.g., @math{x} and @math{y} coordinates) to determine where to place the "
"new plot elements.  Coordinates are given in terms of @emph{user "
"coordinates} which are defined by the previous high-level graphics command "
"and are chosen based on the supplied data."
msgstr ""

#. type: Plain text
#: R-intro.texi:5725
msgid ""
"Where @code{x} and @code{y} arguments are required, it is also sufficient to "
"supply a single argument being a list with elements named @code{x} and "
"@code{y}.  Similarly a matrix with two columns is also valid input.  In this "
"way functions such as @code{locator()} (see below)  may be used to specify "
"positions on a plot interactively."
msgstr ""

#. type: node
#: R-intro.texi:5729 R-intro.texi:5731 R-intro.texi:5732 R-intro.texi:5753
#, no-wrap
msgid "Mathematical annotation"
msgstr ""

#. type: subsection
#: R-intro.texi:5729 R-intro.texi:5731 R-intro.texi:5753 R-intro.texi:5754
#, no-wrap
msgid "Hershey vector fonts"
msgstr ""

#. type: Plain text
#: R-intro.texi:5739
msgid ""
"In some cases, it is useful to add mathematical symbols and formulae to a "
"plot.  This can be achieved in @R{} by specifying an @emph{expression} "
"rather than a character string in any one of @code{text}, @code{mtext}, "
"@code{axis}, or @code{title}.  For example, the following code draws the "
"formula for the Binomial probability function:"
msgstr ""

#. type: example
#: R-intro.texi:5742
#, no-wrap
msgid ""
"> text(x, y, expression(paste(bgroup(\"(\", atop(n, x), \")\"), p^x, "
"q^@{n-x@})))\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5746
msgid ""
"More information, including a full listing of the features available can "
"obtained from within @R{} using the commands:"
msgstr ""

#. type: example
#: R-intro.texi:5751
#, no-wrap
msgid ""
"> help(plotmath)\n"
"> example(plotmath)\n"
"> demo(plotmath)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5759
msgid ""
"It is possible to specify Hershey vector fonts for rendering text when using "
"the @code{text} and @code{contour} functions.  There are three reasons for "
"using the Hershey fonts:"
msgstr ""

#. type: itemize
#: R-intro.texi:5763
msgid ""
"Hershey fonts can produce better output, especially on a computer screen, "
"for rotated and/or small text."
msgstr ""

#. type: itemize
#: R-intro.texi:5768
msgid ""
"Hershey fonts provide certain symbols that may not be available in the "
"standard fonts.  In particular, there are zodiac signs, cartographic symbols "
"and astronomical symbols."
msgstr ""

#. type: itemize
#: R-intro.texi:5770
msgid "Hershey fonts provide cyrillic and japanese (Kana and Kanji) characters."
msgstr ""

#. type: Plain text
#: R-intro.texi:5774
msgid ""
"More information, including tables of Hershey characters can be obtained "
"from within @R{} using the commands:"
msgstr ""

#. type: example
#: R-intro.texi:5780
#, no-wrap
msgid ""
"> help(Hershey)\n"
"> demo(Hershey)\n"
"> help(Japanese)\n"
"> demo(Japanese)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5788
msgid ""
"@R{} also provides functions which allow users to extract or add information "
"to a plot using a mouse.  The simplest of these is the @code{locator()} "
"function:"
msgstr ""

#. type: item
#: R-intro.texi:5790
#, no-wrap
msgid "locator(n, type)"
msgstr ""

#. type: findex
#: R-intro.texi:5791
#, no-wrap
msgid "locator"
msgstr ""

#. type: table
#: R-intro.texi:5799
msgid ""
"Waits for the user to select locations on the current plot using the left "
"mouse button.  This continues until @code{n} (default 512) points have been "
"selected, or another mouse button is pressed.  The @code{type} argument "
"allows for plotting at the selected points and has the same effect as for "
"high-level graphics commands; the default is no plotting.  @code{locator()} "
"returns the locations of the points selected as a list with two components "
"@code{x} and @code{y}."
msgstr ""

#. type: Plain text
#: R-intro.texi:5806
msgid ""
"@code{locator()} is usually called with no arguments.  It is particularly "
"useful for interactively selecting positions for graphic elements such as "
"legends or labels when it is difficult to calculate in advance where the "
"graphic should be placed.  For example, to place some informative text near "
"an outlying point, the command"
msgstr ""

#. type: example
#: R-intro.texi:5809
#, no-wrap
msgid "> text(locator(1), \"Outlier\", adj=0)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5814
msgid ""
"may be useful.  (@code{locator()} will be ignored if the current device, "
"such as @code{postscript} does not support interactive pointing.)"
msgstr ""

#. type: item
#: R-intro.texi:5816
#, no-wrap
msgid "identify(x, y, labels)"
msgstr ""

#. type: findex
#: R-intro.texi:5817
#, no-wrap
msgid "identify"
msgstr ""

#. type: table
#: R-intro.texi:5823
msgid ""
"Allow the user to highlight any of the points defined by @code{x} and "
"@code{y} (using the left mouse button) by plotting the corresponding "
"component of @code{labels} nearby (or the index number of the point if "
"@code{labels} is absent).  Returns the indices of the selected points when "
"another button is pressed."
msgstr ""

#. type: Plain text
#: R-intro.texi:5831
msgid ""
"Sometimes we want to identify particular @emph{points} on a plot, rather "
"than their positions.  For example, we may wish the user to select some "
"observation of interest from a graphical display and then manipulate that "
"observation in some way.  Given a number of @math{(x, y)} coordinates in two "
"numeric vectors @code{x} and @code{y}, we could use the @code{identify()} "
"function as follows:"
msgstr ""

#. type: example
#: R-intro.texi:5835
#, no-wrap
msgid ""
"> plot(x, y)\n"
"> identify(x, y)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5848
msgid ""
"The @code{identify()} functions performs no plotting itself, but simply "
"allows the user to move the mouse pointer and click the left mouse button "
"near a point.  If there is a point near the mouse pointer it will be marked "
"with its index number (that is, its position in the @code{x}/@code{y} "
"vectors) plotted nearby.  Alternatively, you could use some informative "
"string (such as a case name) as a highlight by using the @code{labels} "
"argument to @code{identify()}, or disable marking altogether with the "
"@code{plot = FALSE} argument.  When the process is terminated (see above), "
"@code{identify()} returns the indices of the selected points; you can use "
"these indices to extract the selected points from the original vectors "
"@code{x} and @code{y}."
msgstr ""

#. type: Plain text
#: R-intro.texi:5860
msgid ""
"When creating graphics, particularly for presentation or publication "
"purposes, @R{}'s defaults do not always produce exactly that which is "
"required.  You can, however, customize almost every aspect of the display "
"using @emph{graphics parameters}.  @R{} maintains a list of a large number "
"of graphics parameters which control things such as line style, colors, "
"figure arrangement and text justification among many others.  Every graphics "
"parameter has a name (such as `@code{col}', which controls colors,) and a "
"value (a color number, for example.)"
msgstr ""

#. type: Plain text
#: R-intro.texi:5866
msgid ""
"A separate list of graphics parameters is maintained for each active device, "
"and each device has a default set of parameters when initialized.  Graphics "
"parameters can be set in two ways: either permanently, affecting all "
"graphics functions which access the current device; or temporarily, "
"affecting only a single graphics function call."
msgstr ""

#. type: node
#: R-intro.texi:5870 R-intro.texi:5872 R-intro.texi:5927
#, no-wrap
msgid "The par() function"
msgstr ""

#. type: node
#: R-intro.texi:5870 R-intro.texi:5872 R-intro.texi:5927
#, no-wrap
msgid "Arguments to graphics functions"
msgstr ""

#. type: subsection
#: R-intro.texi:5873
#, no-wrap
msgid "Permanent changes: The @code{par()} function"
msgstr ""

#. type: findex
#: R-intro.texi:5874
#, no-wrap
msgid "par"
msgstr ""

#. type: Plain text
#: R-intro.texi:5879
msgid ""
"The @code{par()} function is used to access and modify the list of graphics "
"parameters for the current graphics device."
msgstr ""

#. type: item
#: R-intro.texi:5881
#, no-wrap
msgid "par()"
msgstr ""

#. type: table
#: R-intro.texi:5884
msgid ""
"Without arguments, returns a list of all graphics parameters and their "
"values for the current device."
msgstr ""

#. type: item
#: R-intro.texi:5884
#, no-wrap
msgid "par(c(\"col\", \"lty\"))"
msgstr ""

#. type: table
#: R-intro.texi:5887
msgid ""
"With a character vector argument, returns only the named graphics parameters "
"(again, as a list.)"
msgstr ""

#. type: item
#: R-intro.texi:5887
#, no-wrap
msgid "par(col=4, lty=2)"
msgstr ""

#. type: table
#: R-intro.texi:5891
msgid ""
"With named arguments (or a single list argument), sets the values of the "
"named graphics parameters, and returns the original values of the parameters "
"as a list."
msgstr ""

#. type: Plain text
#: R-intro.texi:5899
msgid ""
"Setting graphics parameters with the @code{par()} function changes the value "
"of the parameters @emph{permanently}, in the sense that all future calls to "
"graphics functions (on the current device) will be affected by the new "
"value.  You can think of setting graphics parameters in this way as setting "
"``default'' values for the parameters, which will be used by all graphics "
"functions unless an alternative value is given."
msgstr ""

#. type: Plain text
#: R-intro.texi:5908
msgid ""
"Note that calls to @code{par()} @emph{always} affect the global values of "
"graphics parameters, even when @code{par()} is called from within a "
"function.  This is often undesirable behavior---usually we want to set some "
"graphics parameters, do some plotting, and then restore the original values "
"so as not to affect the user's @R{} session.  You can restore the initial "
"values by saving the result of @code{par()} when making changes, and "
"restoring the initial values when plotting is complete."
msgstr ""

#. type: example
#: R-intro.texi:5913
#, no-wrap
msgid ""
"> oldpar <- par(col=4, lty=2)\n"
"  @r{@dots{} plotting commands @dots{}}\n"
"> par(oldpar)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5919
msgid ""
"To save and restore @emph{all} settable@footnote{Some graphics parameters "
"such as the size of the current device are for information only.} graphical "
"parameters use"
msgstr ""

#. type: example
#: R-intro.texi:5924
#, no-wrap
msgid ""
"> oldpar <- par(no.readonly=TRUE)\n"
"  @r{@dots{} plotting commands @dots{}}\n"
"> par(oldpar)\n"
msgstr ""

#. type: subsection
#: R-intro.texi:5928
#, no-wrap
msgid "Temporary changes: Arguments to graphics functions"
msgstr ""

#. type: Plain text
#: R-intro.texi:5934
msgid ""
"Graphics parameters may also be passed to (almost) any graphics function as "
"named arguments.  This has the same effect as passing the arguments to the "
"@code{par()} function, except that the changes only last for the duration of "
"the function call.  For example:"
msgstr ""

#. type: example
#: R-intro.texi:5937
#, no-wrap
msgid "> plot(x, y, pch=\"+\")\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:5942
msgid ""
"produces a scatterplot using a plus sign as the plotting character, without "
"changing the default plotting character for future plots."
msgstr ""

#. type: Plain text
#: R-intro.texi:5946
msgid ""
"Unfortunately, this is not implemented entirely consistently and it is "
"sometimes necessary to set and reset graphics parameters using @code{par()}."
msgstr ""

#. type: section
#: R-intro.texi:5949
#, no-wrap
msgid "Graphics parameters list"
msgstr ""

#. type: Plain text
#: R-intro.texi:5955
msgid ""
"The following sections detail many of the commonly-used graphical "
"parameters.  The @R{} help documentation for the @code{par()} function "
"provides a more concise summary; this is provided as a somewhat more "
"detailed alternative."
msgstr ""

#. type: Plain text
#: R-intro.texi:5957
msgid "Graphics parameters will be presented in the following form:"
msgstr ""

#. type: item
#: R-intro.texi:5959
#, no-wrap
msgid "@var{name}=@var{value}"
msgstr ""

#. type: table
#: R-intro.texi:5964
msgid ""
"A description of the parameter's effect.  @var{name} is the name of the "
"parameter, that is, the argument name to use in calls to @code{par()} or a "
"graphics function.  @var{value} is a typical value you might use when "
"setting the parameter."
msgstr ""

#. type: Plain text
#: R-intro.texi:5968
msgid ""
"Note that @code{axes} is @strong{not} a graphics parameter but an argument "
"to a few @code{plot} methods: see @code{xaxt} and @code{yaxt}."
msgstr ""

#. type: node
#: R-intro.texi:5974 R-intro.texi:5976 R-intro.texi:5977 R-intro.texi:6070
#, no-wrap
msgid "Graphical elements"
msgstr ""

#. type: node
#: R-intro.texi:5974 R-intro.texi:5976 R-intro.texi:6070 R-intro.texi:6071 R-intro.texi:6124
#, no-wrap
msgid "Axes and tick marks"
msgstr ""

#. type: node
#: R-intro.texi:5974 R-intro.texi:6070 R-intro.texi:6124 R-intro.texi:6125 R-intro.texi:6161
#, no-wrap
msgid "Figure margins"
msgstr ""

#. type: subsection
#: R-intro.texi:5974 R-intro.texi:6124 R-intro.texi:6161 R-intro.texi:6162
#, no-wrap
msgid "Multiple figure environment"
msgstr ""

#. type: Plain text
#: R-intro.texi:5982
msgid ""
"@R{} plots are made up of points, lines, text and polygons (filled regions.) "
"Graphical parameters exist which control how these @emph{graphical elements} "
"are drawn, as follows:"
msgstr ""

#. type: item
#: R-intro.texi:5984
#, no-wrap
msgid "pch=\"+\""
msgstr ""

#. type: table
#: R-intro.texi:5987
msgid ""
"Character to be used for plotting points.  The default varies with graphics "
"drivers, but it is usually"
msgstr ""

#. type: ifnottex
#: R-intro.texi:5989
msgid "a circle."
msgstr ""

#. type: tex
#: R-intro.texi:5992
#, no-wrap
msgid "`$\\circ$'.\n"
msgstr ""

#. type: table
#: R-intro.texi:5996
msgid ""
"Plotted points tend to appear slightly above or below the appropriate "
"position unless you use @code{\".\"} as the plotting character, which "
"produces centered points."
msgstr ""

#. type: item
#: R-intro.texi:5997
#, no-wrap
msgid "pch=4"
msgstr ""

#. type: table
#: R-intro.texi:6001
msgid ""
"When @code{pch} is given as an integer between 0 and 25 inclusive, a "
"specialized plotting symbol is produced.  To see what the symbols are, use "
"the command"
msgstr ""

#. type: example
#: R-intro.texi:6004
#, no-wrap
msgid "> legend(locator(1), as.character(0:25), pch = 0:25)\n"
msgstr ""

#. type: table
#: R-intro.texi:6010
msgid ""
"Those from 21 to 25 may appear to duplicate earlier symbols, but can be "
"coloured in different ways: see the help on @code{points} and its examples."
msgstr ""

#. type: table
#: R-intro.texi:6013
msgid ""
"In addition, @code{pch} can be a character or a number in the range "
"@code{32:255} representing a character in the current font."
msgstr ""

#. type: item
#: R-intro.texi:6014
#, no-wrap
msgid "lty=2"
msgstr ""

#. type: table
#: R-intro.texi:6019
msgid ""
"Line types.  Alternative line styles are not supported on all graphics "
"devices (and vary on those that do) but line type 1 is always a solid line, "
"line type 0 is always invisible, and line types 2 and onwards are dotted or "
"dashed lines, or some combination of both."
msgstr ""

#. type: item
#: R-intro.texi:6020
#, no-wrap
msgid "lwd=2"
msgstr ""

#. type: table
#: R-intro.texi:6025
msgid ""
"Line widths.  Desired width of lines, in multiples of the ``standard'' line "
"width.  Affects axis lines as well as lines drawn with @code{lines()}, etc.  "
"Not all devices support this, and some have restrictions on the widths that "
"can be used."
msgstr ""

#. type: item
#: R-intro.texi:6026
#, no-wrap
msgid "col=2"
msgstr ""

#. type: table
#: R-intro.texi:6029
msgid ""
"Colors to be used for points, lines, text, filled regions and images.  A "
"number from the current palette (see @code{?palette}) or a named colour."
msgstr ""

#. type: item
#: R-intro.texi:6030
#, no-wrap
msgid "col.axis"
msgstr ""

#. type: itemx
#: R-intro.texi:6031
#, no-wrap
msgid "col.lab"
msgstr ""

#. type: itemx
#: R-intro.texi:6032
#, no-wrap
msgid "col.main"
msgstr ""

#. type: itemx
#: R-intro.texi:6033
#, no-wrap
msgid "col.sub"
msgstr ""

#. type: table
#: R-intro.texi:6036
msgid ""
"The color to be used for axis annotation, @math{x} and @math{y} labels, main "
"and sub-titles, respectively."
msgstr ""

#. type: item
#: R-intro.texi:6037
#, no-wrap
msgid "font=2"
msgstr ""

#. type: table
#: R-intro.texi:6042
msgid ""
"An integer which specifies which font to use for text.  If possible, device "
"drivers arrange so that @code{1} corresponds to plain text, @code{2} to bold "
"face, @code{3} to italic, @code{4} to bold italic and @code{5} to a symbol "
"font (which include Greek letters)."
msgstr ""

#. type: item
#: R-intro.texi:6043
#, no-wrap
msgid "font.axis"
msgstr ""

#. type: itemx
#: R-intro.texi:6044
#, no-wrap
msgid "font.lab"
msgstr ""

#. type: itemx
#: R-intro.texi:6045
#, no-wrap
msgid "font.main"
msgstr ""

#. type: itemx
#: R-intro.texi:6046
#, no-wrap
msgid "font.sub"
msgstr ""

#. type: table
#: R-intro.texi:6049
msgid ""
"The font to be used for axis annotation, @math{x} and @math{y} labels, main "
"and sub-titles, respectively."
msgstr ""

#. type: item
#: R-intro.texi:6050
#, no-wrap
msgid "adj=-0.1"
msgstr ""

#. type: table
#: R-intro.texi:6057
msgid ""
"Justification of text relative to the plotting position.  @code{0} means "
"left justify, @code{1} means right justify and @code{0.5} means to center "
"horizontally about the plotting position.  The actual value is the "
"proportion of text that appears to the left of the plotting position, so a "
"value of @code{-0.1} leaves a gap of 10% of the text width between the text "
"and the plotting position."
msgstr ""

#. type: item
#: R-intro.texi:6058
#, no-wrap
msgid "cex=1.5"
msgstr ""

#. type: table
#: R-intro.texi:6061
msgid ""
"Character expansion.  The value is the desired size of text characters "
"(including plotting characters) relative to the default text size."
msgstr ""

#. type: item
#: R-intro.texi:6062
#, no-wrap
msgid "cex.axis"
msgstr ""

#. type: itemx
#: R-intro.texi:6063
#, no-wrap
msgid "cex.lab"
msgstr ""

#. type: itemx
#: R-intro.texi:6064
#, no-wrap
msgid "cex.main"
msgstr ""

#. type: itemx
#: R-intro.texi:6065
#, no-wrap
msgid "cex.sub"
msgstr ""

#. type: table
#: R-intro.texi:6068
msgid ""
"The character expansion to be used for axis annotation, @math{x} and "
"@math{y} labels, main and sub-titles, respectively."
msgstr ""

#. type: Plain text
#: R-intro.texi:6080
msgid ""
"Many of @R{}'s high-level plots have axes, and you can construct axes "
"yourself with the low-level @code{axis()} graphics function.  Axes have "
"three main components: the @emph{axis line} (line style controlled by the "
"@code{lty} graphics parameter), the @emph{tick marks} (which mark off unit "
"divisions along the axis line) and the @emph{tick labels} (which mark the "
"units.) These components can be customized with the following graphics "
"parameters."
msgstr ""

#. type: item
#: R-intro.texi:6082
#, no-wrap
msgid "lab=c(5, 7, 12)"
msgstr ""

#. type: table
#: R-intro.texi:6088
msgid ""
"The first two numbers are the desired number of tick intervals on the "
"@math{x} and @math{y} axes respectively.  The third number is the desired "
"length of axis labels, in characters (including the decimal point.)  "
"Choosing a too-small value for this parameter may result in all tick labels "
"being rounded to the same number!"
msgstr ""

#. type: item
#: R-intro.texi:6089
#, no-wrap
msgid "las=1"
msgstr ""

#. type: table
#: R-intro.texi:6093
msgid ""
"Orientation of axis labels.  @code{0} means always parallel to axis, "
"@code{1} means always horizontal, and @code{2} means always perpendicular to "
"the axis."
msgstr ""

#. type: item
#: R-intro.texi:6094
#, no-wrap
msgid "mgp=c(3, 1, 0)"
msgstr ""

#. type: table
#: R-intro.texi:6101
msgid ""
"Positions of axis components.  The first component is the distance from the "
"axis label to the axis position, in text lines.  The second component is the "
"distance to the tick labels, and the final component is the distance from "
"the axis position to the axis line (usually zero).  Positive numbers measure "
"outside the plot region, negative numbers inside."
msgstr ""

#. type: item
#: R-intro.texi:6102
#, no-wrap
msgid "tck=0.01"
msgstr ""

#. type: table
#: R-intro.texi:6109
msgid ""
"Length of tick marks, as a fraction of the size of the plotting region.  "
"When @code{tck} is small (less than 0.5) the tick marks on the @math{x} and "
"@math{y} axes are forced to be the same size.  A value of 1 gives grid "
"lines.  Negative values give tick marks outside the plotting region.  Use "
"@code{tck=0.01} and @code{mgp=c(1,-1.5,0)} for internal tick marks."
msgstr ""

#. type: item
#: R-intro.texi:6110
#, no-wrap
msgid "xaxs=\"r\""
msgstr ""

#. type: itemx
#: R-intro.texi:6111
#, no-wrap
msgid "yaxs=\"i\""
msgstr ""

#. type: table
#: R-intro.texi:6117
msgid ""
"Axis styles for the @math{x} and @math{y} axes, respectively.  With styles "
"@code{\"i\"} (internal) and @code{\"r\"} (the default) tick marks always "
"fall within the range of the data, however style @code{\"r\"} leaves a small "
"amount of space at the edges.  (@Sl{} has other styles not implemented in "
"@R{}.)"
msgstr ""

#. type: Plain text
#: R-intro.texi:6131
msgid ""
"A single plot in @R{} is known as a @code{figure} and comprises a @emph{plot "
"region} surrounded by margins (possibly containing axis labels, titles, "
"etc.) and (usually) bounded by the axes themselves."
msgstr ""

#. type: ifnotinfo
#: R-intro.texi:6134
msgid "A typical figure is"
msgstr ""

#. type: ifnotinfo
#: R-intro.texi:6136
msgid "@image{images/fig11,7cm}"
msgstr ""

#. type: Plain text
#: R-intro.texi:6139
msgid "Graphics parameters controlling figure layout include:"
msgstr ""

#. type: item
#: R-intro.texi:6141
#, no-wrap
msgid "mai=c(1, 0.5, 0.5, 0)"
msgstr ""

#. type: table
#: R-intro.texi:6144
msgid ""
"Widths of the bottom, left, top and right margins, respectively, measured in "
"inches."
msgstr ""

#. type: item
#: R-intro.texi:6145
#, no-wrap
msgid "mar=c(4, 2, 2, 1)"
msgstr ""

#. type: table
#: R-intro.texi:6147
msgid "Similar to @code{mai}, except the measurement unit is text lines."
msgstr ""

#. type: Plain text
#: R-intro.texi:6160
msgid ""
"@code{mar} and @code{mai} are equivalent in the sense that setting one "
"changes the value of the other.  The default values chosen for this "
"parameter are often too large; the right-hand margin is rarely needed, and "
"neither is the top margin if no title is being used.  The bottom and left "
"margins must be large enough to accommodate the axis and tick labels.  "
"Furthermore, the default is chosen without regard to the size of the device "
"surface: for example, using the @code{postscript()} driver with the "
"@code{height=4} argument will result in a plot which is about 50% margin "
"unless @code{mar} or @code{mai} are set explicitly.  When multiple figures "
"are in use (see below) the margins are reduced, however this may not be "
"enough when many figures share the same page."
msgstr ""

#. type: Plain text
#: R-intro.texi:6168
msgid ""
"@R{} allows you to create an @math{n} by @math{m} array of figures on a "
"single page.  Each figure has its own margins, and the array of figures is "
"optionally surrounded by an @emph{outer margin}, as shown in the following "
"figure."
msgstr ""

#. type: ifnotinfo
#: R-intro.texi:6171
msgid "@image{images/fig12,6cm}"
msgstr ""

#. type: Plain text
#: R-intro.texi:6174
msgid "The graphical parameters relating to multiple figures are as follows:"
msgstr ""

#. type: item
#: R-intro.texi:6176
#, no-wrap
msgid "mfcol=c(3, 2)"
msgstr ""

#. type: itemx
#: R-intro.texi:6177
#, no-wrap
msgid "mfrow=c(2, 4)"
msgstr ""

#. type: table
#: R-intro.texi:6182
msgid ""
"Set the size of a multiple figure array.  The first value is the number of "
"rows; the second is the number of columns.  The only difference between "
"these two parameters is that setting @code{mfcol} causes figures to be "
"filled by column; @code{mfrow} fills by rows."
msgstr ""

#. type: table
#: R-intro.texi:6186
msgid ""
"The layout in the Figure could have been created by setting "
"@code{mfrow=c(3,2)}; the figure shows the page after four plots have been "
"drawn."
msgstr ""

#. type: table
#: R-intro.texi:6192
msgid ""
"Setting either of these can reduce the base size of symbols and text "
"(controlled by @code{par(\"cex\")} and the pointsize of the device).  In a "
"layout with exactly two rows and columns the base size is reduced by a "
"factor of 0.83: if there are three or more of either rows or columns, the "
"reduction factor is 0.66."
msgstr ""

#. type: item
#: R-intro.texi:6193
#, no-wrap
msgid "mfg=c(2, 2, 3, 2)"
msgstr ""

#. type: table
#: R-intro.texi:6200
msgid ""
"Position of the current figure in a multiple figure environment.  The first "
"two numbers are the row and column of the current figure; the last two are "
"the number of rows and columns in the multiple figure array.  Set this "
"parameter to jump between figures in the array.  You can even use different "
"values for the last two numbers than the @emph{true} values for "
"unequally-sized figures on the same page."
msgstr ""

#. type: item
#: R-intro.texi:6201
#, no-wrap
msgid "fig=c(4, 9, 1, 4)/10"
msgstr ""

#. type: table
#: R-intro.texi:6208
msgid ""
"Position of the current figure on the page.  Values are the positions of the "
"left, right, bottom and top edges respectively, as a percentage of the page "
"measured from the bottom left corner.  The example value would be for a "
"figure in the bottom right of the page.  Set this parameter for arbitrary "
"positioning of figures within a page.  If you want to add a figure to a "
"current page, use @code{new=TRUE} as well (unlike S)."
msgstr ""

#. type: item
#: R-intro.texi:6209
#, no-wrap
msgid "oma=c(2, 0, 3, 0)"
msgstr ""

#. type: itemx
#: R-intro.texi:6210
#, no-wrap
msgid "omi=c(0, 0, 0.8, 0)"
msgstr ""

#. type: table
#: R-intro.texi:6214
msgid ""
"Size of outer margins.  Like @code{mar} and @code{mai}, the first measures "
"in text lines and the second in inches, starting with the bottom margin and "
"working clockwise."
msgstr ""

#. type: Plain text
#: R-intro.texi:6222
msgid ""
"Outer margins are particularly useful for page-wise titles, etc.  Text can "
"be added to the outer margins with the @code{mtext()} function with argument "
"@code{outer=TRUE}.  There are no outer margins by default, however, so you "
"must create them explicitly using @code{oma} or @code{omi}."
msgstr ""

#. type: Plain text
#: R-intro.texi:6226
msgid ""
"More complicated arrangements of multiple figures can be produced by the "
"@code{split.screen()} and @code{layout()} functions, as well as by the "
"@pkg{grid} and @CRANpkg{lattice} packages."
msgstr ""

#. type: cindex
#: R-intro.texi:6229
#, no-wrap
msgid "Graphics device drivers"
msgstr ""

#. type: Plain text
#: R-intro.texi:6237
msgid ""
"@R{} can generate graphics (of varying levels of quality) on almost any type "
"of display or printing device.  Before this can begin, however, @R{} needs "
"to be informed what type of device it is dealing with.  This is done by "
"starting a @emph{device driver}.  The purpose of a device driver is to "
"convert graphical instructions from @R{} (``draw a line,'' for example) into "
"a form that the particular device can understand."
msgstr ""

#. type: Plain text
#: R-intro.texi:6241
msgid ""
"Device drivers are started by calling a device driver function.  There is "
"one such function for every device driver: type @code{help(Devices)} for a "
"list of them all.  For example, issuing the command"
msgstr ""

#. type: example
#: R-intro.texi:6244
#, no-wrap
msgid "> postscript()\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:6249
msgid ""
"causes all future graphics output to be sent to the printer in PostScript "
"format.  Some commonly-used device drivers are:"
msgstr ""

#. type: item
#: R-intro.texi:6251 R-intro.texi:6342
#, no-wrap
msgid "X11()"
msgstr ""

#. type: findex
#: R-intro.texi:6252
#, no-wrap
msgid "X11"
msgstr ""

#. type: table
#: R-intro.texi:6254
msgid "For use with the X11 window system on Unix-alikes"
msgstr ""

#. type: item
#: R-intro.texi:6254 R-intro.texi:6344
#, no-wrap
msgid "windows()"
msgstr ""

#. type: findex
#: R-intro.texi:6255
#, no-wrap
msgid "windows"
msgstr ""

#. type: table
#: R-intro.texi:6257
msgid "For use on Windows"
msgstr ""

#. type: item
#: R-intro.texi:6257 R-intro.texi:6348
#, no-wrap
msgid "quartz()"
msgstr ""

#. type: findex
#: R-intro.texi:6258
#, no-wrap
msgid "quartz"
msgstr ""

#. type: table
#: R-intro.texi:6260
msgid "For use on OS X"
msgstr ""

#. type: item
#: R-intro.texi:6260 R-intro.texi:6350
#, no-wrap
msgid "postscript()"
msgstr ""

#. type: findex
#: R-intro.texi:6261
#, no-wrap
msgid "postscript"
msgstr ""

#. type: table
#: R-intro.texi:6264
msgid "For printing on PostScript printers, or creating PostScript graphics files."
msgstr ""

#. type: itemx
#: R-intro.texi:6264 R-intro.texi:6351
#, no-wrap
msgid "pdf()"
msgstr ""

#. type: findex
#: R-intro.texi:6265
#, no-wrap
msgid "pdf"
msgstr ""

#. type: table
#: R-intro.texi:6267
msgid "Produces a PDF file, which can also be included into PDF files."
msgstr ""

#. type: item
#: R-intro.texi:6267 R-intro.texi:6352
#, no-wrap
msgid "png()"
msgstr ""

#. type: findex
#: R-intro.texi:6268
#, no-wrap
msgid "png"
msgstr ""

#. type: table
#: R-intro.texi:6270
msgid "Produces a bitmap PNG file. (Not always available: see its help page.)"
msgstr ""

#. type: item
#: R-intro.texi:6270 R-intro.texi:6353
#, no-wrap
msgid "jpeg()"
msgstr ""

#. type: findex
#: R-intro.texi:6271
#, no-wrap
msgid "jpeg"
msgstr ""

#. type: table
#: R-intro.texi:6274
msgid ""
"Produces a bitmap JPEG file, best used for @code{image} plots.  (Not always "
"available: see its help page.)"
msgstr ""

#. type: Plain text
#: R-intro.texi:6278
msgid ""
"When you have finished with a device, be sure to terminate the device driver "
"by issuing the command"
msgstr ""

#. type: example
#: R-intro.texi:6281
#, no-wrap
msgid "> dev.off()\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:6287
msgid ""
"This ensures that the device finishes cleanly; for example in the case of "
"hardcopy devices this ensures that every page is completed and has been sent "
"to the printer.  (This will happen automatically at the normal end of a "
"session.)"
msgstr ""

#. type: node
#: R-intro.texi:6291 R-intro.texi:6293 R-intro.texi:6294 R-intro.texi:6329
#, no-wrap
msgid "PostScript diagrams for typeset documents"
msgstr ""

#. type: subsection
#: R-intro.texi:6291 R-intro.texi:6293 R-intro.texi:6329 R-intro.texi:6330
#, no-wrap
msgid "Multiple graphics devices"
msgstr ""

#. type: Plain text
#: R-intro.texi:6303
msgid ""
"By passing the @code{file} argument to the @code{postscript()} device driver "
"function, you may store the graphics in PostScript format in a file of your "
"choice.  The plot will be in landscape orientation unless the "
"@code{horizontal=FALSE} argument is given, and you can control the size of "
"the graphic with the @code{width} and @code{height} arguments (the plot will "
"be scaled as appropriate to fit these dimensions.) For example, the command"
msgstr ""

#. type: example
#: R-intro.texi:6306
#, no-wrap
msgid "> postscript(\"file.ps\", horizontal=FALSE, height=5, pointsize=10)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:6314
msgid ""
"will produce a file containing PostScript code for a figure five inches "
"high, perhaps for inclusion in a document.  It is important to note that if "
"the file named in the command already exists, it will be overwritten.  This "
"is the case even if the file was only created earlier in the same @R{} "
"session."
msgstr ""

#. type: Plain text
#: R-intro.texi:6322
msgid ""
"Many usages of PostScript output will be to incorporate the figure in "
"another document.  This works best when @emph{encapsulated} PostScript is "
"produced: @R{} always produces conformant output, but only marks the output "
"as such when the @code{onefile=FALSE} argument is supplied.  This unusual "
"notation stems from @Sl{}-compatibility: it really means that the output "
"will be a single page (which is part of the EPSF specification).  Thus to "
"produce a plot for inclusion use something like"
msgstr ""

#. type: example
#: R-intro.texi:6326
#, no-wrap
msgid ""
"> postscript(\"plot1.eps\", horizontal=FALSE, onefile=FALSE,\n"
"             height=8, width=6, pointsize=10)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:6337
msgid ""
"In advanced use of @R{} it is often useful to have several graphics devices "
"in use at the same time.  Of course only one graphics device can accept "
"graphics commands at any one time, and this is known as the @emph{current "
"device}.  When multiple devices are open, they form a numbered sequence with "
"names giving the kind of device at any position."
msgstr ""

#. type: Plain text
#: R-intro.texi:6340
msgid ""
"The main commands used for operating with multiple devices, and their "
"meanings are as follows:"
msgstr ""

#. type: table
#: R-intro.texi:6344
msgid "[UNIX]"
msgstr ""

#. type: itemx
#: R-intro.texi:6345
#, no-wrap
msgid "win.printer()"
msgstr ""

#. type: itemx
#: R-intro.texi:6346
#, no-wrap
msgid "win.metafile()"
msgstr ""

#. type: table
#: R-intro.texi:6348
msgid "[Windows]"
msgstr ""

#. type: table
#: R-intro.texi:6350
msgid "[OS X]"
msgstr ""

#. type: item
#: R-intro.texi:6354
#, no-wrap
msgid "tiff()"
msgstr ""

#. type: item
#: R-intro.texi:6355
#, no-wrap
msgid "bitmap()"
msgstr ""

#. type: itemx
#: R-intro.texi:6356
#, no-wrap
msgid "@dots{}"
msgstr ""

#. type: table
#: R-intro.texi:6360
msgid ""
"Each new call to a device driver function opens a new graphics device, thus "
"extending by one the device list.  This device becomes the current device, "
"to which graphics output will be sent."
msgstr ""

#. type: item
#: R-intro.texi:6361
#, no-wrap
msgid "dev.list()"
msgstr ""

#. type: findex
#: R-intro.texi:6362
#, no-wrap
msgid "dev.list"
msgstr ""

#. type: table
#: R-intro.texi:6366
msgid ""
"Returns the number and name of all active devices.  The device at position 1 "
"on the list is always the @emph{null device} which does not accept graphics "
"commands at all."
msgstr ""

#. type: item
#: R-intro.texi:6367
#, no-wrap
msgid "dev.next()"
msgstr ""

#. type: itemx
#: R-intro.texi:6368
#, no-wrap
msgid "dev.prev()"
msgstr ""

#. type: findex
#: R-intro.texi:6369
#, no-wrap
msgid "dev.next"
msgstr ""

#. type: findex
#: R-intro.texi:6370
#, no-wrap
msgid "dev.prev"
msgstr ""

#. type: table
#: R-intro.texi:6373
msgid ""
"Returns the number and name of the graphics device next to, or previous to "
"the current device, respectively."
msgstr ""

#. type: item
#: R-intro.texi:6374
#, no-wrap
msgid "dev.set(which=@var{k})"
msgstr ""

#. type: findex
#: R-intro.texi:6375
#, no-wrap
msgid "dev.set"
msgstr ""

#. type: table
#: R-intro.texi:6378
msgid ""
"Can be used to change the current graphics device to the one at position "
"@var{k} of the device list.  Returns the number and label of the device."
msgstr ""

#. type: item
#: R-intro.texi:6379
#, no-wrap
msgid "dev.off(@var{k})"
msgstr ""

#. type: findex
#: R-intro.texi:6380
#, no-wrap
msgid "dev.off"
msgstr ""

#. type: table
#: R-intro.texi:6385
msgid ""
"Terminate the graphics device at point @var{k} of the device list.  For some "
"devices, such as @code{postscript} devices, this will either print the file "
"immediately or correctly complete the file for later printing, depending on "
"how the device was initiated."
msgstr ""

#. type: item
#: R-intro.texi:6386
#, no-wrap
msgid "dev.copy(device, @dots{}, which=@var{k})"
msgstr ""

#. type: itemx
#: R-intro.texi:6387
#, no-wrap
msgid "dev.print(device, @dots{}, which=@var{k})"
msgstr ""

#. type: table
#: R-intro.texi:6393
msgid ""
"Make a copy of the device @var{k}.  Here @code{device} is a device function, "
"such as @code{postscript}, with extra arguments, if needed, specified by "
"@samp{@dots{}}.  @code{dev.print} is similar, but the copied device is "
"immediately closed, so that end actions, such as printing hardcopies, are "
"immediately performed."
msgstr ""

#. type: item
#: R-intro.texi:6394
#, no-wrap
msgid "graphics.off()"
msgstr ""

#. type: table
#: R-intro.texi:6396
msgid "Terminate all graphics devices on the list, except the null device."
msgstr ""

#. type: Plain text
#: R-intro.texi:6407
msgid ""
"@R{} does not have builtin capabilities for dynamic or interactive graphics, "
"e.g.@ rotating point clouds or to ``brushing'' (interactively highlighting) "
"points. However, extensive dynamic graphics facilities are available in the "
"system GGobi by Swayne, Cook and Buja available from"
msgstr ""

#. type: quotation
#: R-intro.texi:6410
msgid "@uref{http://www.ggobi.org/}"
msgstr ""

#. type: Plain text
#: R-intro.texi:6415
msgid ""
"and these can be accessed from @R{} via the package @CRANpkg{rggobi}, "
"described at @uref{http://www.ggobi.org/rggobi}."
msgstr ""

#. type: Plain text
#: R-intro.texi:6418
msgid ""
"Also, package @CRANpkg{rgl} provides ways to interact with 3D plots, for "
"example of surfaces."
msgstr ""

#. type: Plain text
#: R-intro.texi:6431
msgid ""
"All @R{} functions and datasets are stored in @emph{packages}.  Only when a "
"package is loaded are its contents available.  This is done both for "
"efficiency (the full list would take more memory and would take longer to "
"search than a subset), and to aid package developers, who are protected from "
"name clashes with other code.  The process of developing packages is "
"described in @ref{Creating R packages, , Creating R packages, R-exts, "
"Writing R Extensions}.  Here, we will describe them from a user's point of "
"view."
msgstr ""

#. type: Plain text
#: R-intro.texi:6433
msgid "To see which packages are installed at your site, issue the command"
msgstr ""

#. type: example
#: R-intro.texi:6436
#, no-wrap
msgid "> library()\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:6442
msgid ""
"with no arguments.  To load a particular package (e.g., the @CRANpkg{boot} "
"package containing functions from Davison & Hinkley (1997)), use a command "
"like"
msgstr ""

#. type: example
#: R-intro.texi:6445
#, no-wrap
msgid "> library(boot)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:6452
msgid ""
"Users connected to the Internet can use the @code{install.packages()} and "
"@code{update.packages()} functions (available through the @code{Packages} "
"menu in the Windows and OS X GUIs, @pxref{Installing packages, , , R-admin, "
"R Installation and Administration}) to install and update packages."
msgstr ""

#. type: Plain text
#: R-intro.texi:6454
msgid "To see which packages are currently loaded, use"
msgstr ""

#. type: example
#: R-intro.texi:6457
#, no-wrap
msgid "> search()\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:6463
msgid ""
"to display the search list.  Some packages may be loaded but not available "
"on the search list (@pxref{Namespaces}): these will be included in the list "
"given by"
msgstr ""

#. type: example
#: R-intro.texi:6466
#, no-wrap
msgid "> loadedNamespaces()\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:6471
msgid "To see a list of all available help topics in an installed package, use"
msgstr ""

#. type: Plain text
#: R-intro.texi:6479
msgid ""
"to start the @HTML{} help system, and then navigate to the package listing "
"in the @code{Reference} section."
msgstr ""

#. type: node
#: R-intro.texi:6484 R-intro.texi:6486 R-intro.texi:6487 R-intro.texi:6496
#, no-wrap
msgid "Standard packages"
msgstr ""

#. type: node
#: R-intro.texi:6484 R-intro.texi:6486 R-intro.texi:6496 R-intro.texi:6512
#, no-wrap
msgid "Contributed packages and CRAN"
msgstr ""

#. type: section
#: R-intro.texi:6484 R-intro.texi:6496 R-intro.texi:6512 R-intro.texi:6513
#, no-wrap
msgid "Namespaces"
msgstr ""

#. type: Plain text
#: R-intro.texi:6495
msgid ""
"The standard (or @emph{base}) packages are considered part of the @R{} "
"source code.  They contain the basic functions that allow @R{} to work, and "
"the datasets and standard statistical and graphical functions that are "
"described in this manual.  They should be automatically available in any "
"@R{} installation.  @xref{Which add-on packages exist for R?, , R packages, "
"R-FAQ, R FAQ}, for a complete list."
msgstr ""

#. type: section
#: R-intro.texi:6497
#, no-wrap
msgid "Contributed packages and @acronym{CRAN}"
msgstr ""

#. type: cindex
#: R-intro.texi:6498
#, no-wrap
msgid "CRAN"
msgstr ""

#. type: Plain text
#: R-intro.texi:6511
msgid ""
"There are thousands of contributed packages for @R{}, written by many "
"different authors.  Some of these packages implement specialized statistical "
"methods, others give access to data or hardware, and others are designed to "
"complement textbooks.  Some (the @emph{recommended} packages) are "
"distributed with every binary distribution of @R{}.  Most are available for "
"download from @acronym{CRAN} (@uref{https://CRAN.R-project.org/} and its "
"mirrors) and other repositories such as Bioconductor "
"(@uref{https://www.bioconductor.org/})  and Omegahat "
"(@uref{http://www.omegahat.org/}).  The @emph{R FAQ} contains a list of CRAN "
"packages current at the time of release, but the collection of available "
"packages changes very frequently."
msgstr ""

#. type: cindex
#: R-intro.texi:6514
#, no-wrap
msgid "Namespace"
msgstr ""

#. type: findex
#: R-intro.texi:6515
#, no-wrap
msgid "::"
msgstr ""

#. type: findex
#: R-intro.texi:6516
#, no-wrap
msgid ":::"
msgstr ""

#. type: Plain text
#: R-intro.texi:6524
msgid ""
"All packages have @emph{namespaces}, and have since @R{} 2.14.0.  Namespaces "
"do three things: they allow the package writer to hide functions and data "
"that are meant only for internal use, they prevent functions from breaking "
"when a user (or other package writer) picks a name that clashes with one in "
"the package, and they provide a way to refer to an object within a "
"particular package."
msgstr ""

#. type: Plain text
#: R-intro.texi:6529
msgid ""
"For example, @code{t()} is the transpose function in @R{}, but users might "
"define their own function named @code{t}.  Namespaces prevent the user's "
"definition from taking precedence, and breaking every function that tries to "
"transpose a matrix."
msgstr ""

#. type: Plain text
#: R-intro.texi:6536
msgid ""
"There are two operators that work with namespaces.  The double-colon "
"operator @code{::} selects definitions from a particular namespace.  In the "
"example above, the transpose function will always be available as "
"@code{base::t}, because it is defined in the @code{base} package.  Only "
"functions that are exported from the package can be retrieved in this way."
msgstr ""

#. type: Plain text
#: R-intro.texi:6541
msgid ""
"The triple-colon operator @code{:::} may be seen in a few places in R code: "
"it acts like the double-colon operator but also allows access to hidden "
"objects.  Users are more likely to use the @code{getAnywhere()} function, "
"which searches multiple packages."
msgstr ""

#. type: Plain text
#: R-intro.texi:6547
msgid ""
"Packages are often inter-dependent, and loading one may cause others to be "
"automatically loaded.  The colon operators described above will also cause "
"automatic loading of the associated package.  When packages with namespaces "
"are loaded automatically they are not added to the search list."
msgstr ""

#. type: Plain text
#: R-intro.texi:6554
msgid ""
"@R{} has quite extensive facilities to access the OS under which it is "
"running: this allows it to be used as a scripting language and that ability "
"is much used by @R{} itself, for example to install packages."
msgstr ""

#. type: Plain text
#: R-intro.texi:6558
msgid ""
"Because @R{}'s own scripts need to work across all platforms, considerable "
"effort has gone into make the scripting facilities as platform-independent "
"as is feasible."
msgstr ""

#. type: node
#: R-intro.texi:6564 R-intro.texi:6566 R-intro.texi:6567 R-intro.texi:6611
#, no-wrap
msgid "Files and directories"
msgstr ""

#. type: node
#: R-intro.texi:6564 R-intro.texi:6566 R-intro.texi:6611 R-intro.texi:6612 R-intro.texi:6686
#, no-wrap
msgid "Filepaths"
msgstr ""

#. type: node
#: R-intro.texi:6564 R-intro.texi:6611 R-intro.texi:6686 R-intro.texi:6687 R-intro.texi:6706
#, no-wrap
msgid "System commands"
msgstr ""

#. type: section
#: R-intro.texi:6564 R-intro.texi:6686 R-intro.texi:6706 R-intro.texi:6707
#, no-wrap
msgid "Compression and Archives"
msgstr ""

#. type: Plain text
#: R-intro.texi:6571
msgid ""
"There are many functions to manipulate files and directories. Here are "
"pointers to some of the more commonly used ones."
msgstr ""

#. type: Plain text
#: R-intro.texi:6576
msgid ""
"To create an (empty) file or directory, use @code{file.create} or "
"@code{create.dir}.  (These are the analogues of the POSIX utilities "
"@command{touch} and @command{mkdir}.)  For temporary files and directories "
"in the @R{} session directory see @code{tempfile}."
msgstr ""

#. type: Plain text
#: R-intro.texi:6579
msgid ""
"Files can be removed by either @code{file.remove} or @code{unlink}: the "
"latter can remove directory trees."
msgstr ""

#. type: Plain text
#: R-intro.texi:6583
msgid ""
"For directory listings use @code{list.files} (also available as @code{dir}) "
"or @code{list.dirs}. These can select files using a regular expression: to "
"select by wildcards use @code{Sys.glob}."
msgstr ""

#. type: Plain text
#: R-intro.texi:6586
msgid ""
"Many types of information on a filepath (including for example if it is a "
"file or directory) can be found by @code{file.info}."
msgstr ""

#. type: Plain text
#: R-intro.texi:6593
msgid ""
"There are several ways to find out if a file `exists' (and file can exist on "
"the filesystem and not be visible to the current user).  There are functions "
"@code{file.exists}, @code{file.access} and @code{file_test} with various "
"versions of this test: @code{file_test} is a version of the POSIX "
"@command{test} command for those familiar with shell scripting."
msgstr ""

#. type: Plain text
#: R-intro.texi:6596
msgid ""
"Function @code{file.copy} is the @R{} analogue of the POSIX command "
"@command{cp}."
msgstr ""

#. type: Plain text
#: R-intro.texi:6601
msgid ""
"Choosing files can be done interactively by @code{file.choose}: the Windows "
"port has the more versatile functions @code{choose.files} and "
"@code{choose.dir} and there are similar functions in the @pkg{tcltk} "
"package: @code{tk_choose.files} and @code{tk_choose.dir}."
msgstr ""

#. type: Plain text
#: R-intro.texi:6606
msgid ""
"Functions @code{file.show} and @code{file.edit} will display and edit one or "
"more files in a way appropriate to the @R{} port, using the facilities of a "
"console (such as RGui on Windows or R.app on OS X) if one is in use."
msgstr ""

#. type: Plain text
#: R-intro.texi:6609
msgid ""
"There is some support for @emph{links} in the filesystem: see functions "
"@code{file.link} and @code{Sys.readlink}."
msgstr ""

#. type: Plain text
#: R-intro.texi:6620
msgid ""
"With a few exceptions, @R{} relies on the underlying OS functions to "
"manipulate filepaths.  Some aspects of this are allowed to depend on the OS, "
"and do, even down to the version of the OS.  There are POSIX standards for "
"how OSes should interpret filepaths and many @R{} users assume POSIX "
"compliance: but Windows does not claim to be compliant and other OSes may be "
"less than completely compliant."
msgstr ""

#. type: Plain text
#: R-intro.texi:6622
msgid "The following are some issues which have been encountered with filepaths."
msgstr ""

#. type: itemize
#: R-intro.texi:6630
msgid ""
"POSIX filesystems are case-sensitive, so @file{foo.png} and @file{Foo.PNG} "
"are different files.  However, the defaults on Windows and OS X are to be "
"case-insensitive, and FAT filesystems (commonly used on removable storage) "
"are not normally case-sensitive (and all filepaths may be mapped to lower "
"case)."
msgstr ""

#. type: itemize
#: R-intro.texi:6635
msgid ""
"Almost all the Windows' OS services support the use of slash or backslash as "
"the filepath separator, and @R{} converts the known exceptions to the form "
"required by Windows."
msgstr ""

#. type: itemize
#: R-intro.texi:6641
msgid ""
"The behaviour of filepaths with a trailing slash is OS-dependent.  Such "
"paths are not valid on Windows and should not be expected to work.  "
"POSIX-2008 requires such paths to match only directories, but earlier "
"versions allowed them to also match files.  So they are best avoided."
msgstr ""

#. type: itemize
#: R-intro.texi:6647
msgid ""
"Multiple slashes in filepaths such as @file{/abc//def} are valid on POSIX "
"filesystems and treated as if there was only one slash.  They are "
"@emph{usually} accepted by Windows' OS functions.  However, leading double "
"slashes may have a different meaning."
msgstr ""

#. type: itemize
#: R-intro.texi:6653
msgid ""
"Windows' UNC filepaths (such as @file{\\\\server\\dir1\\dir2\\file} and "
"@file{\\\\?\\UNC\\server\\dir1\\dir2\\file}) are not supported, but they may "
"work in some @R{} functions.  POSIX filesystems are allowed to treat a "
"leading double slash specially."
msgstr ""

#. type: itemize
#: R-intro.texi:6660
msgid ""
"Windows allows filepaths containing drives and relative to the current "
"directory on a drive, e.g.@: @file{d:foo/bar} refers to "
"@file{d:/a/b/c/foo/bar} if the current directory @emph{on drive @file{d:}} "
"is @file{/a/b/c}.  It is intended that these work, but the use of absolute "
"paths is safer."
msgstr ""

#. type: Plain text
#: R-intro.texi:6667
msgid ""
"Functions @code{basename} and @code{dirname} select parts of a file path: "
"the recommended way to assemble a file path from components is "
"@code{file.path}.  Function @code{pathexpand} does `tilde expansion', "
"substituting values for home directories (the current user's, and perhaps "
"those of other users)."
msgstr ""

#. type: Plain text
#: R-intro.texi:6671
msgid ""
"On filesystems with links, a single file can be referred to by many "
"filepaths.  Function @code{normalizePath} will find a canonical filepath."
msgstr ""

#. type: Plain text
#: R-intro.texi:6677
msgid ""
"Windows has the concepts of short (`8.3') and long file names: "
"@code{normalizePath} will return an absolute path using long file names and "
"@code{shortPathName} will return a version using short names.  The latter "
"does not contain spaces and uses backslash as the separator, so is sometimes "
"useful for exporting names from @R{}."
msgstr ""

#. type: Plain text
#: R-intro.texi:6685
msgid ""
"File @emph{permissions} are a related topic.  @R{} has support for the POSIX "
"concepts of read/write/execute permission for owner/group/all but this may "
"be only partially supported on the filesystem (so for example on Windows "
"only read-only files (for the account running the @R{} session) are "
"recognized.  Access Control Lists (ACLs) are employed on several "
"filesystems, but do not have an agreed standard and @R{} has no facilities "
"to control them.  Use @code{Sys.chmod} to change permissions."
msgstr ""

#. type: Plain text
#: R-intro.texi:6693
msgid ""
"Functions @code{system} and @code{system2} are used to invoke a system "
"command and optionally collect its output.  @code{system2} is a little more "
"general but its main advantage is that it is easier to write cross-platform "
"code using it."
msgstr ""

#. type: Plain text
#: R-intro.texi:6698
msgid ""
"@code{system} behaves differently on Windows from other OSes (because the "
"API C call of that name does).  Elsewhere it invokes a shell to run the "
"command: the Windows port of @R{} has a function @code{shell} to do that."
msgstr ""

#. type: Plain text
#: R-intro.texi:6702
msgid ""
"To find out if the OS includes a command, use @code{Sys.which}, which "
"attempts to do this in a cross-platform way (unfortunately it is not a "
"standard OS service)."
msgstr ""

#. type: Plain text
#: R-intro.texi:6705
msgid ""
"Function @code{shQuote} will quote filepaths as needed for commands in the "
"current OS."
msgstr ""

#. type: Plain text
#: R-intro.texi:6715
msgid ""
"Recent versions of @R{} have extensive facilities to read and write "
"compressed files, often transparently.  Reading of files in @R{} is to a vey "
"large extent done by @emph{connections}, and the @code{file} function which "
"is used to open a connection to a file (or a URL) and is able to identify "
"the compression used from the `magic' header of the file."
msgstr ""

#. type: Plain text
#: R-intro.texi:6724
msgid ""
"The type of compression which has been supported for longest is "
"@command{gzip} compression, and that remains a good general compromise.  "
"Files compressed by the earlier Unix @command{compress} utility can also be "
"read, but these are becoming rare.  Two other forms of compression, those of "
"the @command{bzip2} and @command{xz} utilities are also available.  These "
"generally achieve higher rates of compression (depending on the file, much "
"higher) at the expense of slower decompression and much slower compression."
msgstr ""

#. type: Plain text
#: R-intro.texi:6729
msgid ""
"There is some confusion between @command{xz} and @command{lzma} compression "
"(see @uref{https://en.wikipedia.org/wiki/Xz} and "
"@uref{https://en.wikipedia.org/wiki/LZMA}): @R{} can read files compressed "
"by most versions of either."
msgstr ""

#. type: Plain text
#: R-intro.texi:6735
msgid ""
"File archives are single files which contain a collection of files, the most "
"common ones being `tarballs' and zip files as used to distribute @R{} "
"packages.  @R{} can list and unpack both (see functions @code{untar} and "
"@code{unzip}) and create both (for @command{zip} with the help of an "
"external program)."
msgstr ""

#. type: Plain text
#: R-intro.texi:6745
msgid ""
"The following session is intended to introduce to you some features of the "
"@R{} environment by using them.  Many features of the system will be "
"unfamiliar and puzzling at first, but this puzzlement will soon disappear."
msgstr ""

#. type: item
#: R-intro.texi:6747
#, no-wrap
msgid "Start @R{} appropriately for your platform (@pxref{Invoking R})."
msgstr ""

#. type: table
#: R-intro.texi:6750
msgid "The @R{} program begins, with a banner."
msgstr ""

#. type: table
#: R-intro.texi:6753
msgid ""
"(Within @R{} code, the prompt on the left hand side will not be shown to "
"avoid confusion.)"
msgstr ""

#. type: item
#: R-intro.texi:6754
#, no-wrap
msgid "help.start()"
msgstr ""

#. type: table
#: R-intro.texi:6758
msgid ""
"Start the @HTML{} interface to on-line help (using a web browser available "
"at your machine).  You should briefly explore the features of this facility "
"with the mouse."
msgstr ""

#. type: table
#: R-intro.texi:6760
msgid "Iconify the help window and move on to the next part."
msgstr ""

#. type: item
#: R-intro.texi:6761
#, no-wrap
msgid "x <- rnorm(50)"
msgstr ""

#. type: itemx
#: R-intro.texi:6762
#, no-wrap
msgid "y <- rnorm(x)"
msgstr ""

#. type: table
#: R-intro.texi:6765
msgid ""
"Generate two pseudo-random normal vectors of @math{x}- and "
"@math{y}-coordinates."
msgstr ""

#. type: item
#: R-intro.texi:6766 R-intro.texi:6802
#, no-wrap
msgid "plot(x, y)"
msgstr ""

#. type: table
#: R-intro.texi:6768
msgid "Plot the points in the plane.  A graphics window will appear automatically."
msgstr ""

#. type: item
#: R-intro.texi:6769
#, no-wrap
msgid "ls()"
msgstr ""

#. type: table
#: R-intro.texi:6771
msgid "See which @R{} objects are now in the @R{} workspace."
msgstr ""

#. type: item
#: R-intro.texi:6772
#, no-wrap
msgid "rm(x, y)"
msgstr ""

#. type: table
#: R-intro.texi:6774
msgid "Remove objects no longer needed. (Clean up)."
msgstr ""

#. type: item
#: R-intro.texi:6775
#, no-wrap
msgid "x <- 1:20"
msgstr ""

#. type: table
#: R-intro.texi:6777
msgid "Make @math{x = (1, 2, @dots{}, 20)}."
msgstr ""

#. type: item
#: R-intro.texi:6778
#, no-wrap
msgid "w <- 1 + sqrt(x)/2"
msgstr ""

#. type: table
#: R-intro.texi:6780
msgid "A `weight' vector of standard deviations."
msgstr ""

#. type: item
#: R-intro.texi:6781
#, no-wrap
msgid "dummy <- data.frame(x=x, y= x + rnorm(x)*w)"
msgstr ""

#. type: itemx
#: R-intro.texi:6782
#, no-wrap
msgid "dummy"
msgstr ""

#. type: table
#: R-intro.texi:6785
msgid ""
"Make a @emph{data frame} of two columns, @math{x} and @math{y}, and look at "
"it."
msgstr ""

#. type: item
#: R-intro.texi:6786
#, no-wrap
msgid "fm <- lm(y ~ x, data=dummy)"
msgstr ""

#. type: itemx
#: R-intro.texi:6787 R-intro.texi:6866
#, no-wrap
msgid "summary(fm)"
msgstr ""

#. type: table
#: R-intro.texi:6791
msgid ""
"Fit a simple linear regression and look at the analysis.  With @code{y} to "
"the left of the tilde, we are modelling @math{y} dependent on @math{x}."
msgstr ""

#. type: item
#: R-intro.texi:6792
#, no-wrap
msgid "fm1 <- lm(y ~ x, data=dummy, weight=1/w^2)"
msgstr ""

#. type: itemx
#: R-intro.texi:6793
#, no-wrap
msgid "summary(fm1)"
msgstr ""

#. type: table
#: R-intro.texi:6795
msgid "Since we know the standard deviations, we can do a weighted regression."
msgstr ""

#. type: item
#: R-intro.texi:6796
#, no-wrap
msgid "attach(dummy)"
msgstr ""

#. type: table
#: R-intro.texi:6798
msgid "Make the columns in the data frame visible as variables."
msgstr ""

#. type: item
#: R-intro.texi:6799
#, no-wrap
msgid "lrf <- lowess(x, y)"
msgstr ""

#. type: table
#: R-intro.texi:6801
msgid "Make a nonparametric local regression function."
msgstr ""

#. type: table
#: R-intro.texi:6804
msgid "Standard point plot."
msgstr ""

#. type: item
#: R-intro.texi:6805
#, no-wrap
msgid "lines(x, lrf$y)"
msgstr ""

#. type: table
#: R-intro.texi:6807
msgid "Add in the local regression."
msgstr ""

#. type: item
#: R-intro.texi:6808
#, no-wrap
msgid "abline(0, 1, lty=3)"
msgstr ""

#. type: table
#: R-intro.texi:6810
msgid "The true regression line: (intercept 0, slope 1)."
msgstr ""

#. type: item
#: R-intro.texi:6811
#, no-wrap
msgid "abline(coef(fm))"
msgstr ""

#. type: table
#: R-intro.texi:6813
msgid "Unweighted regression line."
msgstr ""

#. type: item
#: R-intro.texi:6814
#, no-wrap
msgid "abline(coef(fm1), col = \"red\")"
msgstr ""

#. type: table
#: R-intro.texi:6816
msgid "Weighted regression line."
msgstr ""

#. type: item
#: R-intro.texi:6817 R-intro.texi:6874
#, no-wrap
msgid "detach()"
msgstr ""

#. type: table
#: R-intro.texi:6819
msgid "Remove data frame from the search path."
msgstr ""

#. type: item
#: R-intro.texi:6820
#, no-wrap
msgid "plot(fitted(fm), resid(fm),"
msgstr ""

#. type: itemx
#: R-intro.texi:6821
#, no-wrap
msgid "@w{@ @ @ @ @ xlab=\"Fitted values\"},"
msgstr ""

#. type: itemx
#: R-intro.texi:6822
#, no-wrap
msgid "@w{@ @ @ @ @ ylab=\"Residuals\"},"
msgstr ""

#. type: w{#1}
#: R-intro.texi:6823
#, no-wrap
msgid "@ @ @ @ @ main=\"Residuals vs Fitted\")"
msgstr ""

#. type: table
#: R-intro.texi:6826
msgid ""
"A standard regression diagnostic plot to check for heteroscedasticity.  Can "
"you see it?"
msgstr ""

#. type: item
#: R-intro.texi:6827
#, no-wrap
msgid "qqnorm(resid(fm), main=\"Residuals Rankit Plot\")"
msgstr ""

#. type: table
#: R-intro.texi:6830
msgid ""
"A normal scores plot to check for skewness, kurtosis and outliers.  (Not "
"very useful here.)"
msgstr ""

#. type: item
#: R-intro.texi:6831
#, no-wrap
msgid "rm(fm, fm1, lrf, x, dummy)"
msgstr ""

#. type: table
#: R-intro.texi:6833 R-intro.texi:6961
msgid "Clean up again."
msgstr ""

#. type: Plain text
#: R-intro.texi:6839
msgid ""
"The next section will look at data from the classical experiment of "
"Michelson to measure the speed of light.  This dataset is available in the "
"@code{morley} object, but we will read it to illustrate the "
"@code{read.table} function."
msgstr ""

#. type: item
#: R-intro.texi:6841
#, no-wrap
msgid "filepath <- system.file(\"data\", \"morley.tab\" , package=\"datasets\")"
msgstr ""

#. type: itemx
#: R-intro.texi:6842
#, no-wrap
msgid "filepath"
msgstr ""

#. type: table
#: R-intro.texi:6844
msgid "Get the path to the data file."
msgstr ""

#. type: item
#: R-intro.texi:6845
#, no-wrap
msgid "file.show(filepath)"
msgstr ""

#. type: table
#: R-intro.texi:6847
msgid "Optional.  Look at the file."
msgstr ""

#. type: item
#: R-intro.texi:6848
#, no-wrap
msgid "mm <- read.table(filepath)"
msgstr ""

#. type: itemx
#: R-intro.texi:6849
#, no-wrap
msgid "mm"
msgstr ""

#. type: table
#: R-intro.texi:6854
msgid ""
"Read in the Michelson data as a data frame, and look at it.  There are five "
"experiments (column @code{Expt}) and each has 20 runs (column @code{Run}) "
"and @code{sl} is the recorded speed of light, suitably coded."
msgstr ""

#. type: item
#: R-intro.texi:6855
#, no-wrap
msgid "mm$Expt <- factor(mm$Expt)"
msgstr ""

#. type: itemx
#: R-intro.texi:6856
#, no-wrap
msgid "mm$Run <- factor(mm$Run)"
msgstr ""

#. type: table
#: R-intro.texi:6858
msgid "Change @code{Expt} and @code{Run} into factors."
msgstr ""

#. type: item
#: R-intro.texi:6859
#, no-wrap
msgid "attach(mm)"
msgstr ""

#. type: table
#: R-intro.texi:6861
msgid "Make the data frame visible at position 3 (the default)."
msgstr ""

#. type: item
#: R-intro.texi:6862
#, no-wrap
msgid "plot(Expt, Speed, main=\"Speed of Light Data\", xlab=\"Experiment No.\")"
msgstr ""

#. type: table
#: R-intro.texi:6864
msgid "Compare the five experiments with simple boxplots."
msgstr ""

#. type: item
#: R-intro.texi:6865
#, no-wrap
msgid "fm <- aov(Speed ~ Run + Expt, data=mm)"
msgstr ""

#. type: table
#: R-intro.texi:6868
msgid "Analyze as a randomized block, with `runs' and `experiments' as factors."
msgstr ""

#. type: item
#: R-intro.texi:6869
#, no-wrap
msgid "fm0 <- update(fm, . ~ . - Run)"
msgstr ""

#. type: itemx
#: R-intro.texi:6870
#, no-wrap
msgid "anova(fm0, fm)"
msgstr ""

#. type: table
#: R-intro.texi:6873
msgid ""
"Fit the sub-model omitting `runs', and compare using a formal analysis of "
"variance."
msgstr ""

#. type: itemx
#: R-intro.texi:6875
#, no-wrap
msgid "rm(fm, fm0)"
msgstr ""

#. type: table
#: R-intro.texi:6877
msgid "Clean up before moving on."
msgstr ""

#. type: Plain text
#: R-intro.texi:6881
msgid "We now look at some more graphical features: contour and image plots."
msgstr ""

#. type: item
#: R-intro.texi:6883
#, no-wrap
msgid "x <- seq(-pi, pi, len=50)"
msgstr ""

#. type: itemx
#: R-intro.texi:6884
#, no-wrap
msgid "y <- x"
msgstr ""

#. type: table
#: R-intro.texi:6886
msgid "@math{x} is a vector of 50 equally spaced values in"
msgstr ""

#. type: ifnottex
#: R-intro.texi:6888
msgid "the interval [-pi\\, pi]."
msgstr ""

#. type: tex
#: R-intro.texi:6892
#, no-wrap
msgid "$-\\pi\\leq x \\leq \\pi$.\n"
msgstr ""

#. type: table
#: R-intro.texi:6895
msgid "@math{y} is the same."
msgstr ""

#. type: item
#: R-intro.texi:6896
#, no-wrap
msgid "f <- outer(x, y, function(x, y) cos(y)/(1 + x^2))"
msgstr ""

#. type: table
#: R-intro.texi:6900
msgid ""
"@math{f} is a square matrix, with rows and columns indexed by @math{x} and "
"@math{y} respectively, of values of the function @eqn{\\cos(y)/(1 + "
"x^2),cos(y)/(1 + x^2)}."
msgstr ""

#. type: item
#: R-intro.texi:6901
#, no-wrap
msgid "oldpar <- par(no.readonly = TRUE)"
msgstr ""

#. type: item
#: R-intro.texi:6902 R-intro.texi:6935
#, no-wrap
msgid "par(pty=\"s\")"
msgstr ""

#. type: table
#: R-intro.texi:6904
msgid "Save the plotting parameters and set the plotting region to ``square''."
msgstr ""

#. type: item
#: R-intro.texi:6905
#, no-wrap
msgid "contour(x, y, f)"
msgstr ""

#. type: itemx
#: R-intro.texi:6906
#, no-wrap
msgid "contour(x, y, f, nlevels=15, add=TRUE)"
msgstr ""

#. type: table
#: R-intro.texi:6908
msgid "Make a contour map of @math{f}; add in more lines for more detail."
msgstr ""

#. type: item
#: R-intro.texi:6909
#, no-wrap
msgid "fa <- (f-t(f))/2"
msgstr ""

#. type: table
#: R-intro.texi:6912
msgid ""
"@code{fa} is the ``asymmetric part'' of @math{f}.  (@code{t()} is "
"transpose)."
msgstr ""

#. type: item
#: R-intro.texi:6913
#, no-wrap
msgid "contour(x, y, fa, nlevels=15)"
msgstr ""

#. type: table
#: R-intro.texi:6915
msgid "Make a contour plot, @dots{}"
msgstr ""

#. type: item
#: R-intro.texi:6916
#, no-wrap
msgid "par(oldpar)"
msgstr ""

#. type: table
#: R-intro.texi:6918
msgid "@dots{} and restore the old graphics parameters."
msgstr ""

#. type: item
#: R-intro.texi:6919
#, no-wrap
msgid "image(x, y, f)"
msgstr ""

#. type: itemx
#: R-intro.texi:6920
#, no-wrap
msgid "image(x, y, fa)"
msgstr ""

#. type: table
#: R-intro.texi:6923
msgid ""
"Make some high density image plots, (of which you can get hardcopies if you "
"wish), @dots{}"
msgstr ""

#. type: item
#: R-intro.texi:6924
#, no-wrap
msgid "objects(); rm(x, y, f, fa)"
msgstr ""

#. type: table
#: R-intro.texi:6926
msgid "@dots{} and clean up before moving on."
msgstr ""

#. type: Plain text
#: R-intro.texi:6929
msgid "@R{} can do complex arithmetic, also."
msgstr ""

#. type: item
#: R-intro.texi:6931
#, no-wrap
msgid "th <- seq(-pi, pi, len=100)"
msgstr ""

#. type: itemx
#: R-intro.texi:6932
#, no-wrap
msgid "z <- exp(1i*th)"
msgstr ""

#. type: table
#: R-intro.texi:6934
msgid "@code{1i} is used for the complex number @math{i}."
msgstr ""

#. type: itemx
#: R-intro.texi:6936
#, no-wrap
msgid "plot(z, type=\"l\")"
msgstr ""

#. type: table
#: R-intro.texi:6939
msgid ""
"Plotting complex arguments means plot imaginary versus real parts.  This "
"should be a circle."
msgstr ""

#. type: item
#: R-intro.texi:6940
#, no-wrap
msgid "w <- rnorm(100) + rnorm(100)*1i"
msgstr ""

#. type: table
#: R-intro.texi:6944
msgid ""
"Suppose we want to sample points within the unit circle.  One method would "
"be to take complex numbers with standard normal real and imaginary parts "
"@dots{}"
msgstr ""

#. type: item
#: R-intro.texi:6945
#, no-wrap
msgid "w <- ifelse(Mod(w) > 1, 1/w, w)"
msgstr ""

#. type: table
#: R-intro.texi:6947
msgid "@dots{} and to map any outside the circle onto their reciprocal."
msgstr ""

#. type: item
#: R-intro.texi:6948
#, no-wrap
msgid "plot(w, xlim=c(-1,1), ylim=c(-1,1), pch=\"+\",xlab=\"x\", ylab=\"y\")"
msgstr ""

#. type: itemx
#: R-intro.texi:6949 R-intro.texi:6955
#, no-wrap
msgid "lines(z)"
msgstr ""

#. type: table
#: R-intro.texi:6952
msgid "All points are inside the unit circle, but the distribution is not uniform."
msgstr ""

#. type: item
#: R-intro.texi:6953
#, no-wrap
msgid "w <- sqrt(runif(100))*exp(2*pi*runif(100)*1i)"
msgstr ""

#. type: itemx
#: R-intro.texi:6954
#, no-wrap
msgid "plot(w, xlim=c(-1,1), ylim=c(-1,1), pch=\"+\", xlab=\"x\", ylab=\"y\")"
msgstr ""

#. type: table
#: R-intro.texi:6958
msgid ""
"The second method uses the uniform distribution.  The points should now look "
"more evenly spaced over the disc."
msgstr ""

#. type: item
#: R-intro.texi:6959
#, no-wrap
msgid "rm(th, w, z)"
msgstr ""

#. type: item
#: R-intro.texi:6962
#, no-wrap
msgid "q()"
msgstr ""

#. type: table
#: R-intro.texi:6966
msgid ""
"Quit the @R{} program.  You will be asked if you want to save the @R{} "
"workspace, and for an exploratory session like this, you probably do not "
"want to save it."
msgstr ""

#. type: Plain text
#: R-intro.texi:6973
msgid ""
"Users of @R{} on Windows or OS X should read the OS-specific section first, "
"but command-line use is also supported."
msgstr ""

#. type: node
#: R-intro.texi:6979 R-intro.texi:6981 R-intro.texi:6982 R-intro.texi:7322
#, no-wrap
msgid "Invoking R from the command line"
msgstr ""

#. type: node
#: R-intro.texi:6979 R-intro.texi:6981 R-intro.texi:7322 R-intro.texi:7323 R-intro.texi:7392
#, no-wrap
msgid "Invoking R under Windows"
msgstr ""

#. type: node
#: R-intro.texi:6979 R-intro.texi:7322 R-intro.texi:7392 R-intro.texi:7393 R-intro.texi:7408
#, no-wrap
msgid "Invoking R under OS X"
msgstr ""

#. type: appendixsec
#: R-intro.texi:6979 R-intro.texi:7392 R-intro.texi:7408 R-intro.texi:7409
#, no-wrap
msgid "Scripting with R"
msgstr ""

#. type: Plain text
#: R-intro.texi:6986
msgid ""
"When working at a command line on UNIX or Windows, the command @samp{R} can "
"be used both for starting the main @R{} program in the form"
msgstr ""

#. type: display
#: R-intro.texi:6989
#, no-wrap
msgid "@code{R} [@var{options}] [@code{<}@var{infile}] [@code{>}@var{outfile}],\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:6995
msgid ""
"or, via the @code{R CMD} interface, as a wrapper to various @R{} tools "
"(e.g., for processing files in @R{} documentation format or manipulating "
"add-on packages) which are not intended to be called ``directly''."
msgstr ""

#. type: Plain text
#: R-intro.texi:6998
msgid ""
"At the Windows command-line, @command{Rterm.exe} is preferred to "
"@command{R}."
msgstr ""

#. type: Plain text
#: R-intro.texi:7002
msgid ""
"You need to ensure that either the environment variable @env{TMPDIR} is "
"unset or it points to a valid place to create temporary files and "
"directories."
msgstr ""

#. type: Plain text
#: R-intro.texi:7007
msgid ""
"Most options control what happens at the beginning and at the end of an @R{} "
"session.  The startup mechanism is as follows (see also the on-line help for "
"topic @samp{Startup} for more information, and the section below for some "
"Windows-specific details)."
msgstr ""

#. type: itemize
#: R-intro.texi:7023
msgid ""
"Unless @option{--no-environ} was given, @R{} searches for user and site "
"files to process for setting environment variables.  The name of the site "
"file is the one pointed to by the environment variable @env{R_ENVIRON}; if "
"this is unset, @file{@var{R_HOME}/etc/Renviron.site} is used (if it "
"exists).  The user file is the one pointed to by the environment variable "
"@env{R_ENVIRON_USER} if this is set; otherwise, files @file{.Renviron} in "
"the current or in the user's home directory (in that order) are searched "
"for.  These files should contain lines of the form "
"@samp{@var{name}=@var{value}}.  (See @code{help(\"Startup\")} for a precise "
"description.)  Variables you might want to set include @env{R_PAPERSIZE} "
"(the default paper size), @env{R_PRINTCMD} (the default print command) and "
"@env{R_LIBS} (specifies the list of @R{} library trees searched for add-on "
"packages)."
msgstr ""

#. type: itemize
#: R-intro.texi:7030
msgid ""
"Then @R{} searches for the site-wide startup profile unless the command line "
"option @option{--no-site-file} was given.  The name of this file is taken "
"from the value of the @env{R_PROFILE} environment variable.  If that "
"variable is unset, the default @file{@var{R_HOME}/etc/Rprofile.site} is used "
"if this exists."
msgstr ""

#. type: itemize
#: R-intro.texi:7037
msgid ""
"Then, unless @option{--no-init-file} was given, @R{} searches for a user "
"profile and sources it.  The name of this file is taken from the environment "
"variable @env{R_PROFILE_USER}; if unset, a file called @file{.Rprofile} in "
"the current directory or in the user's home directory (in that order) is "
"searched for."
msgstr ""

#. type: itemize
#: R-intro.texi:7042
msgid ""
"It also loads a saved workspace from file @file{.RData} in the current "
"directory if there is one (unless @option{--no-restore} or "
"@option{--no-restore-data} was specified)."
msgstr ""

#. type: itemize
#: R-intro.texi:7048
msgid ""
"Finally, if a function @code{.First()} exists, it is executed.  This "
"function (as well as @code{.Last()} which is executed at the end of the @R{} "
"session) can be defined in the appropriate startup profiles, or reside in "
"@file{.RData}."
msgstr ""

#. type: Plain text
#: R-intro.texi:7054
msgid ""
"In addition, there are options for controlling the memory available to the "
"@R{} process (see the on-line help for topic @samp{Memory} for more "
"information).  Users will not normally need to use these unless they are "
"trying to limit the amount of memory used by @R{}."
msgstr ""

#. type: Plain text
#: R-intro.texi:7056
msgid "@R{} accepts the following command-line options."
msgstr ""

#. type: item
#: R-intro.texi:7058
#, no-wrap
msgid "--help"
msgstr ""

#. type: itemx
#: R-intro.texi:7059
#, no-wrap
msgid "-h"
msgstr ""

#. type: table
#: R-intro.texi:7061
msgid "Print short help message to standard output and exit successfully."
msgstr ""

#. type: item
#: R-intro.texi:7062
#, no-wrap
msgid "--version"
msgstr ""

#. type: table
#: R-intro.texi:7064
msgid "Print version information to standard output and exit successfully."
msgstr ""

#. type: item
#: R-intro.texi:7065
#, no-wrap
msgid "--encoding=@var{enc}"
msgstr ""

#. type: table
#: R-intro.texi:7073
msgid ""
"Specify the encoding to be assumed for input from the console or "
"@code{stdin}.  This needs to be an encoding known to @code{iconv}: see its "
"help page.  (@code{--encoding @var{enc}} is also accepted.)  The input is "
"re-encoded to the locale @R{} is running in and needs to be representable in "
"the latter's encoding (so e.g.@ you cannot re-encode Greek text in a French "
"locale unless that locale uses the UTF-8 encoding)."
msgstr ""

#. type: item
#: R-intro.texi:7074
#, no-wrap
msgid "RHOME"
msgstr ""

#. type: table
#: R-intro.texi:7079
msgid ""
"Print the path to the @R{} ``home directory'' to standard output and exit "
"successfully.  Apart from the front-end shell script and the man page, @R{} "
"installation puts everything (executables, packages, etc.)  into this "
"directory."
msgstr ""

#. type: item
#: R-intro.texi:7080
#, no-wrap
msgid "--save"
msgstr ""

#. type: itemx
#: R-intro.texi:7081
#, no-wrap
msgid "--no-save"
msgstr ""

#. type: table
#: R-intro.texi:7087
msgid ""
"Control whether data sets should be saved or not at the end of the @R{} "
"session.  If neither is given in an interactive session, the user is asked "
"for the desired behavior when ending the session with @kbd{q()}; in "
"non-interactive use one of these must be specified or implied by some other "
"option (see below)."
msgstr ""

#. type: item
#: R-intro.texi:7088
#, no-wrap
msgid "--no-environ"
msgstr ""

#. type: table
#: R-intro.texi:7090
msgid "Do not read any user file to set environment variables."
msgstr ""

#. type: item
#: R-intro.texi:7091
#, no-wrap
msgid "--no-site-file"
msgstr ""

#. type: table
#: R-intro.texi:7093
msgid "Do not read the site-wide profile at startup."
msgstr ""

#. type: item
#: R-intro.texi:7094
#, no-wrap
msgid "--no-init-file"
msgstr ""

#. type: table
#: R-intro.texi:7096
msgid "Do not read the user's profile at startup."
msgstr ""

#. type: item
#: R-intro.texi:7097
#, no-wrap
msgid "--restore"
msgstr ""

#. type: itemx
#: R-intro.texi:7098
#, no-wrap
msgid "--no-restore"
msgstr ""

#. type: itemx
#: R-intro.texi:7099
#, no-wrap
msgid "--no-restore-data"
msgstr ""

#. type: table
#: R-intro.texi:7104
msgid ""
"Control whether saved images (file @file{.RData} in the directory where @R{} "
"was started) should be restored at startup or not.  The default is to "
"restore. (@option{--no-restore} implies all the specific "
"@option{--no-restore-*} options.)"
msgstr ""

#. type: item
#: R-intro.texi:7105
#, no-wrap
msgid "--no-restore-history"
msgstr ""

#. type: table
#: R-intro.texi:7110
msgid ""
"Control whether the history file (normally file @file{.Rhistory} in the "
"directory where @R{} was started, but can be set by the environment variable "
"@env{R_HISTFILE}) should be restored at startup or not.  The default is to "
"restore."
msgstr ""

#. type: item
#: R-intro.texi:7111
#, no-wrap
msgid "--no-Rconsole"
msgstr ""

#. type: table
#: R-intro.texi:7113
msgid "(Windows only) Prevent loading the @file{Rconsole} file at startup."
msgstr ""

#. type: item
#: R-intro.texi:7114
#, no-wrap
msgid "--vanilla"
msgstr ""

#. type: table
#: R-intro.texi:7119
msgid ""
"Combine @option{--no-save}, @option{--no-environ}, @option{--no-site-file}, "
"@option{--no-init-file} and @option{--no-restore}.  Under Windows, this also "
"includes @option{--no-Rconsole}."
msgstr ""

#. type: item
#: R-intro.texi:7120
#, no-wrap
msgid "-f @var{file}"
msgstr ""

#. type: itemx
#: R-intro.texi:7121
#, no-wrap
msgid "--file=@var{file}"
msgstr ""

#. type: table
#: R-intro.texi:7126
msgid ""
"(not @command{Rgui.exe}) Take input from @var{file}: @samp{-} means "
"@code{stdin}.  Implies @option{--no-save} unless @option{--save} has been "
"set.  On a Unix-alike, shell metacharacters should be avoided in @var{file} "
"(but spaces are allowed)."
msgstr ""

#. type: item
#: R-intro.texi:7127
#, no-wrap
msgid "-e @var{expression}"
msgstr ""

#. type: table
#: R-intro.texi:7134
msgid ""
"(not @command{Rgui.exe}) Use @var{expression} as an input line.  One or more "
"@option{-e} options can be used, but not together with @option{-f} or "
"@option{--file}.  Implies @option{--no-save} unless @option{--save} has been "
"set.  (There is a limit of 10,000 bytes on the total length of expressions "
"used in this way.  Expressions containing spaces or shell metacharacters "
"will need to be quoted.)"
msgstr ""

#. type: item
#: R-intro.texi:7135
#, no-wrap
msgid "--no-readline"
msgstr ""

#. type: table
#: R-intro.texi:7142
msgid ""
"(UNIX only) Turn off command-line editing via @strong{readline}.  This is "
"useful when running @R{} from within Emacs using the @acronym{ESS} (``Emacs "
"Speaks Statistics'') package.  @xref{The command-line editor}, for more "
"information.  Command-line editing is enabled for default interactive use "
"(see @option{--interactive}).  This option also affects tilde-expansion: see "
"the help for @code{path.expand}."
msgstr ""

#. type: item
#: R-intro.texi:7143
#, no-wrap
msgid "--min-vsize=@var{N}"
msgstr ""

#. type: itemx
#: R-intro.texi:7144
#, no-wrap
msgid "--min-nsize=@var{N}"
msgstr ""

#. type: table
#: R-intro.texi:7150
msgid ""
"For expert use only: set the initial trigger sizes for garbage collection of "
"vector heap (in bytes) and @emph{cons cells} (number)  respectively.  Suffix "
"@samp{M} specifies megabytes or millions of cells respectively.  The "
"defaults are 6Mb and 350k respectively and can also be set by environment "
"variables @env{R_NSIZE} and @env{R_VSIZE}."
msgstr ""

#. type: item
#: R-intro.texi:7151
#, no-wrap
msgid "--max-ppsize=@var{N}"
msgstr ""

#. type: table
#: R-intro.texi:7156
msgid ""
"Specify the maximum size of the pointer protection stack as @var{N} "
"locations.  This defaults to 10000, but can be increased to allow large and "
"complicated calculations to be done.  Currently the maximum value accepted "
"is 100000."
msgstr ""

#. type: item
#: R-intro.texi:7157
#, no-wrap
msgid "--max-mem-size=@var{N}"
msgstr ""

#. type: table
#: R-intro.texi:7165
msgid ""
"(Windows only) Specify a limit for the amount of memory to be used both for "
"@R{} objects and working areas.  This is set by default to the smaller of "
"the amount of physical RAM in the machine and for 32-bit @R{}, "
"1.5Gb@footnote{2.5Gb on versions of Windows that support 3Gb per process and "
"have the support enabled: see the @file{rw-FAQ} Q2.9; 3.5Gb on most 64-bit "
"versions of Windows.}, and must be between 32Mb and the maximum allowed on "
"that version of Windows."
msgstr ""

#. type: item
#: R-intro.texi:7166
#, no-wrap
msgid "--quiet"
msgstr ""

#. type: itemx
#: R-intro.texi:7167
#, no-wrap
msgid "--silent"
msgstr ""

#. type: itemx
#: R-intro.texi:7168
#, no-wrap
msgid "-q"
msgstr ""

#. type: table
#: R-intro.texi:7170
msgid "Do not print out the initial copyright and welcome messages."
msgstr ""

#. type: item
#: R-intro.texi:7171
#, no-wrap
msgid "--slave"
msgstr ""

#. type: table
#: R-intro.texi:7175
msgid ""
"Make @R{} run as quietly as possible.  This option is intended to support "
"programs which use @R{} to compute results for them.  It implies "
"@option{--quiet} and @option{--no-save}."
msgstr ""

#. type: item
#: R-intro.texi:7176
#, no-wrap
msgid "--interactive"
msgstr ""

#. type: table
#: R-intro.texi:7184
msgid ""
"(UNIX only) Assert that @R{} really is being run interactively even if input "
"has been redirected: use if input is from a FIFO or pipe and fed from an "
"interactive program.  (The default is to deduce that @R{} is being run "
"interactively if and only if @file{stdin} is connected to a terminal or "
"@code{pty}.)  Using @option{-e}, @option{-f} or @option{--file} asserts "
"non-interactive use even if @option{--interactive} is given."
msgstr ""

#. type: table
#: R-intro.texi:7186
msgid "Note that this does not turn on command-line editing."
msgstr ""

#. type: item
#: R-intro.texi:7187
#, no-wrap
msgid "--ess"
msgstr ""

#. type: table
#: R-intro.texi:7191
msgid ""
"(Windows only) Set @code{Rterm} up for use by @code{R-inferior-mode} in "
"@acronym{ESS}, including asserting interactive use (without the command-line "
"editor) and no buffering of @file{stdout}."
msgstr ""

#. type: item
#: R-intro.texi:7192
#, no-wrap
msgid "--verbose"
msgstr ""

#. type: table
#: R-intro.texi:7196
msgid ""
"Print more information about progress, and in particular set @R{}'s option "
"@code{verbose} to @code{TRUE}.  @R{} code uses this option to control the "
"printing of diagnostic messages."
msgstr ""

#. type: item
#: R-intro.texi:7197
#, no-wrap
msgid "--debugger=@var{name}"
msgstr ""

#. type: itemx
#: R-intro.texi:7198
#, no-wrap
msgid "-d @var{name}"
msgstr ""

#. type: table
#: R-intro.texi:7204
msgid ""
"(UNIX only) Run @R{} through debugger @var{name}.  For most debuggers (the "
"exceptions are @command{valgrind} and recent versions of @command{gdb}), "
"further command line options are disregarded, and should instead be given "
"when starting the @R{} executable from inside the debugger."
msgstr ""

#. type: item
#: R-intro.texi:7205
#, no-wrap
msgid "--gui=@var{type}"
msgstr ""

#. type: itemx
#: R-intro.texi:7206
#, no-wrap
msgid "-g @var{type}"
msgstr ""

#. type: table
#: R-intro.texi:7212
msgid ""
"(UNIX only) Use @var{type} as graphical user interface (note that this also "
"includes interactive graphics).  Currently, possible values for @var{type} "
"are @samp{X11} (the default) and, provided that @samp{Tcl/Tk} support is "
"available, @samp{Tk}. (For back-compatibility, @samp{x11} and @samp{tk} are "
"accepted.)"
msgstr ""

#. type: item
#: R-intro.texi:7213
#, no-wrap
msgid "--arch=@var{name}"
msgstr ""

#. type: table
#: R-intro.texi:7215
msgid "(UNIX only) Run the specified sub-architecture."
msgstr ""

#. type: item
#: R-intro.texi:7216
#, no-wrap
msgid "--args"
msgstr ""

#. type: table
#: R-intro.texi:7220
msgid ""
"This flag does nothing except cause the rest of the command line to be "
"skipped: this can be useful to retrieve values from it with "
"@code{commandArgs(TRUE)}."
msgstr ""

#. type: Plain text
#: R-intro.texi:7226
msgid ""
"Note that input and output can be redirected in the usual way (using "
"@samp{<} and @samp{>}), but the line length limit of 4095 bytes still "
"applies.  Warning and error messages are sent to the error channel "
"(@code{stderr})."
msgstr ""

#. type: Plain text
#: R-intro.texi:7230
msgid ""
"The command @code{R CMD} allows the invocation of various tools which are "
"useful in conjunction with @R{}, but not intended to be called "
"``directly''.  The general form is"
msgstr ""

#. type: example
#: R-intro.texi:7233
#, no-wrap
msgid "R CMD @var{command} @var{args}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7238
msgid ""
"where @var{command} is the name of the tool and @var{args} the arguments "
"passed on to it."
msgstr ""

#. type: Plain text
#: R-intro.texi:7240
msgid "Currently, the following tools are available."
msgstr ""

#. type: item
#: R-intro.texi:7242
#, no-wrap
msgid "BATCH"
msgstr ""

#. type: table
#: R-intro.texi:7245
msgid ""
"Run @R{} in batch mode.  Runs @command{R --restore --save} with possibly "
"further options (see @code{?BATCH})."
msgstr ""

#. type: item
#: R-intro.texi:7245
#, no-wrap
msgid "COMPILE"
msgstr ""

#. type: table
#: R-intro.texi:7247
msgid "(UNIX only) Compile C, C++, Fortran @dots{} files for use with @R{}."
msgstr ""

#. type: item
#: R-intro.texi:7247
#, no-wrap
msgid "SHLIB"
msgstr ""

#. type: table
#: R-intro.texi:7249
msgid "Build shared library for dynamic loading."
msgstr ""

#. type: item
#: R-intro.texi:7249
#, no-wrap
msgid "INSTALL"
msgstr ""

#. type: table
#: R-intro.texi:7251
msgid "Install add-on packages."
msgstr ""

#. type: item
#: R-intro.texi:7251
#, no-wrap
msgid "REMOVE"
msgstr ""

#. type: table
#: R-intro.texi:7253
msgid "Remove add-on packages."
msgstr ""

#. type: item
#: R-intro.texi:7253
#, no-wrap
msgid "build"
msgstr ""

#. type: table
#: R-intro.texi:7255
msgid "Build (that is, package) add-on packages."
msgstr ""

#. type: item
#: R-intro.texi:7255
#, no-wrap
msgid "check"
msgstr ""

#. type: table
#: R-intro.texi:7257
msgid "Check add-on packages."
msgstr ""

#. type: item
#: R-intro.texi:7257
#, no-wrap
msgid "LINK"
msgstr ""

#. type: table
#: R-intro.texi:7259
msgid "(UNIX only) Front-end for creating executable programs."
msgstr ""

#. type: item
#: R-intro.texi:7259
#, no-wrap
msgid "Rprof"
msgstr ""

#. type: table
#: R-intro.texi:7261
msgid "Post-process @R{} profiling files."
msgstr ""

#. type: item
#: R-intro.texi:7261
#, no-wrap
msgid "Rdconv"
msgstr ""

#. type: itemx
#: R-intro.texi:7262
#, no-wrap
msgid "Rd2txt"
msgstr ""

#. type: table
#: R-intro.texi:7266
msgid ""
"Convert Rd format to various other formats, including @HTML{}, @LaTeX{}, "
"plain text, and extracting the examples.  @code{Rd2txt} can be used as "
"shorthand for @code{Rd2conv -t txt}."
msgstr ""

#. type: item
#: R-intro.texi:7266
#, no-wrap
msgid "Rd2pdf"
msgstr ""

#. type: table
#: R-intro.texi:7268
msgid "Convert Rd format to PDF."
msgstr ""

#. type: item
#: R-intro.texi:7268
#, no-wrap
msgid "Stangle"
msgstr ""

#. type: table
#: R-intro.texi:7270
msgid "Extract S/R code from Sweave or other vignette documentation"
msgstr ""

#. type: item
#: R-intro.texi:7270
#, no-wrap
msgid "Sweave"
msgstr ""

#. type: table
#: R-intro.texi:7272
msgid "Process Sweave or other vignette documentation"
msgstr ""

#. type: item
#: R-intro.texi:7272
#, no-wrap
msgid "Rdiff"
msgstr ""

#. type: table
#: R-intro.texi:7274
msgid "Diff @R{} output ignoring headers etc"
msgstr ""

#. type: item
#: R-intro.texi:7274
#, no-wrap
msgid "config"
msgstr ""

#. type: table
#: R-intro.texi:7276
msgid "Obtain configuration information"
msgstr ""

#. type: item
#: R-intro.texi:7276
#, no-wrap
msgid "javareconf"
msgstr ""

#. type: table
#: R-intro.texi:7278
msgid "(Unix only) Update the Java configuration variables"
msgstr ""

#. type: item
#: R-intro.texi:7278
#, no-wrap
msgid "rtags"
msgstr ""

#. type: table
#: R-intro.texi:7280
msgid "(Unix only) Create Emacs-style tag files from C, R, and Rd files"
msgstr ""

#. type: item
#: R-intro.texi:7280
#, no-wrap
msgid "open"
msgstr ""

#. type: table
#: R-intro.texi:7282
msgid "(Windows only) Open a file via Windows' file associations"
msgstr ""

#. type: item
#: R-intro.texi:7282
#, no-wrap
msgid "texify"
msgstr ""

#. type: table
#: R-intro.texi:7284
msgid "(Windows only) Process (La)TeX files with R's style files"
msgstr ""

#. type: example
#: R-intro.texi:7290
#, no-wrap
msgid "R CMD @var{command} --help\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7295
msgid ""
"to obtain usage information for each of the tools accessible via the @code{R "
"CMD} interface."
msgstr ""

#. type: Plain text
#: R-intro.texi:7308
msgid ""
"In addition, you can use options @option{--arch=}, @option{--no-environ}, "
"@option{--no-init-file}, @option{--no-site-file} and @option{--vanilla} "
"between @command{R} and @command{CMD}: these affect any @R{} processes run "
"by the tools.  (Here @option{--vanilla} is equivalent to "
"@option{--no-environ --no-site-file --no-init-file}.)  However, note that "
"@command{R CMD} does not of itself use any @R{} startup files (in "
"particular, neither user nor site @file{Renviron} files), and all of the "
"@R{} processes run by these tools (except @command{BATCH}) use "
"@option{--no-restore}.  Most use @option{--vanilla} and so invoke no @R{} "
"startup files: the current exceptions are @command{INSTALL}, "
"@command{REMOVE}, @command{Sweave} and @command{SHLIB} (which uses "
"@option{--no-site-file --no-init-file})."
msgstr ""

#. type: example
#: R-intro.texi:7311
#, no-wrap
msgid "R CMD @var{cmd} @var{args}\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7320
msgid ""
"for any other executable @command{@var{cmd}} on the path or given by an "
"absolute filepath: this is useful to have the same environment as @R{} or "
"the specific commands run under, for example to run @command{ldd} or "
"@command{pdflatex}.  Under Windows @var{cmd} can be an executable or a batch "
"file, or if it has extension @code{.sh} or @code{.pl} the appropriate "
"interpreter (if available) is called to run it."
msgstr ""

#. type: Plain text
#: R-intro.texi:7330
msgid ""
"There are two ways to run @R{} under Windows.  Within a terminal window "
"(e.g.@ @code{cmd.exe} or a more capable shell), the methods described in the "
"previous section may be used, invoking by @code{R.exe} or more directly by "
"@code{Rterm.exe}.  For interactive use, there is a console-based GUI "
"(@code{Rgui.exe})."
msgstr ""

#. type: Plain text
#: R-intro.texi:7343
msgid ""
"The startup procedure under Windows is very similar to that under UNIX, but "
"references to the `home directory' need to be clarified, as this is not "
"always defined on Windows.  If the environment variable @env{R_USER} is "
"defined, that gives the home directory.  Next, if the environment variable "
"@env{HOME} is defined, that gives the home directory.  After those two "
"user-controllable settings, @R{} tries to find system defined home "
"directories.  It first tries to use the Windows \"personal\" directory "
"(typically @code{C:\\Documents and Settings\\username\\My Documents} in "
"Windows XP).  If that fails, and environment variables @env{HOMEDRIVE} and "
"@env{HOMEPATH} are defined (and they normally are) these define the home "
"directory.  Failing all those, the home directory is taken to be the "
"starting directory."
msgstr ""

#. type: Plain text
#: R-intro.texi:7347
msgid ""
"You need to ensure that either the environment variables @env{TMPDIR}, "
"@env{TMP} and @env{TEMP} are either unset or one of them points to a valid "
"place to create temporary files and directories."
msgstr ""

#. type: Plain text
#: R-intro.texi:7350
msgid ""
"Environment variables can be supplied as @samp{@var{name}=@var{value}} pairs "
"on the command line."
msgstr ""

#. type: Plain text
#: R-intro.texi:7358
msgid ""
"If there is an argument ending @file{.RData} (in any case) it is interpreted "
"as the path to the workspace to be restored: it implies @option{--restore} "
"and sets the working directory to the parent of the named file.  (This "
"mechanism is used for drag-and-drop and file association with "
"@code{RGui.exe}, but also works for @code{Rterm.exe}.  If the named file "
"does not exist it sets the working directory if the parent directory "
"exists.)"
msgstr ""

#. type: Plain text
#: R-intro.texi:7361
msgid ""
"The following additional command-line options are available when invoking "
"@code{RGui.exe}."
msgstr ""

#. type: item
#: R-intro.texi:7363
#, no-wrap
msgid "--mdi"
msgstr ""

#. type: itemx
#: R-intro.texi:7364
#, no-wrap
msgid "--sdi"
msgstr ""

#. type: itemx
#: R-intro.texi:7365
#, no-wrap
msgid "--no-mdi"
msgstr ""

#. type: table
#: R-intro.texi:7370
msgid ""
"Control whether @code{Rgui} will operate as an MDI program (with multiple "
"child windows within one main window) or an SDI application (with multiple "
"top-level windows for the console, graphics and pager).  The command-line "
"setting overrides the setting in the user's @file{Rconsole} file."
msgstr ""

#. type: item
#: R-intro.texi:7371
#, no-wrap
msgid "--debug"
msgstr ""

#. type: table
#: R-intro.texi:7374
msgid ""
"Enable the ``Break to debugger'' menu item in @code{Rgui}, and trigger a "
"break to the debugger during command line processing."
msgstr ""

#. type: Plain text
#: R-intro.texi:7382
msgid ""
"Under Windows with @code{R CMD} you may also specify your own @file{.bat}, "
"@file{.exe}, @file{.sh} or @file{.pl} file.  It will be run under the "
"appropriate interpreter (Perl for @file{.pl}) with several environment "
"variables set appropriately, including @env{R_HOME}, @env{R_OSTYPE}, "
"@env{PATH}, @env{BSTINPUTS} and @env{TEXINPUTS}.  For example, if you "
"already have @file{latex.exe} on your path, then"
msgstr ""

#. type: example
#: R-intro.texi:7385
#, no-wrap
msgid "R CMD latex.exe mydoc\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7391
msgid ""
"will run @LaTeX{} on @file{mydoc.tex}, with the path to @R{}'s "
"@file{share/texmf} macros appended to @env{TEXINPUTS}.  (Unfortunately, this "
"does not help with the MiKTeX build of @LaTeX{}, but @command{R CMD texify "
"mydoc} will work in that case.)"
msgstr ""

#. type: Plain text
#: R-intro.texi:7400
msgid ""
"There are two ways to run @R{} under OS X.  Within a @code{Terminal.app} "
"window by invoking @code{R}, the methods described in the first subsection "
"apply.  There is also console-based GUI (@code{R.app}) that by default is "
"installed in the @code{Applications} folder on your system.  It is a "
"standard double-clickable OS X application."
msgstr ""

#. type: Plain text
#: R-intro.texi:7407
msgid ""
"The startup procedure under OS X is very similar to that under UNIX, but "
"@code{R.app} does not make use of command-line arguments.  The `home "
"directory' is the one inside the R.framework, but the startup and current "
"working directory are set as the user's home directory unless a different "
"startup directory is given in the Preferences window accessible from within "
"the GUI."
msgstr ""

#. type: Plain text
#: R-intro.texi:7416
msgid ""
"If you just want to run a file @file{foo.R} of @R{} commands, the "
"recommended way is to use @command{R CMD BATCH foo.R}.  If you want to run "
"this in the background or as a batch job use OS-specific facilities to do "
"so: for example in most shells on Unix-alike OSes @command{R CMD BATCH foo.R "
"&} runs a background job."
msgstr ""

#. type: Plain text
#: R-intro.texi:7420
msgid ""
"You can pass parameters to scripts via additional arguments on the command "
"line: for example (where the exact quoting needed will depend on the shell "
"in use)"
msgstr ""

#. type: example
#: R-intro.texi:7423
#, no-wrap
msgid "R CMD BATCH \"--args arg1 arg2\" foo.R &\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7428
msgid ""
"will pass arguments to a script which can be retrieved as a character vector "
"by"
msgstr ""

#. type: example
#: R-intro.texi:7431
#, no-wrap
msgid "args <- commandArgs(TRUE)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7435
msgid ""
"This is made simpler by the alternative front-end @command{Rscript}, which "
"can be invoked by"
msgstr ""

#. type: example
#: R-intro.texi:7438
#, no-wrap
msgid "Rscript foo.R arg1 arg2\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7443
msgid ""
"and this can also be used to write executable script files like (at least on "
"Unix-alikes, and in some Windows shells)"
msgstr ""

#. type: example
#: R-intro.texi:7449
#, no-wrap
msgid ""
"#! /path/to/Rscript\n"
"args <- commandArgs(TRUE)\n"
"...\n"
"q(status=<exit status code>)\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7455
msgid ""
"If this is entered into a text file @file{runfoo} and this is made "
"executable (by @command{chmod 755 runfoo}), it can be invoked for different "
"arguments by"
msgstr ""

#. type: example
#: R-intro.texi:7458
#, no-wrap
msgid "runfoo arg1 arg2\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7464
msgid ""
"For further options see @command{help(\"Rscript\")}.  This writes @R{} "
"output to @file{stdout} and @file{stderr}, and this can be redirected in the "
"usual way for the shell running the command."
msgstr ""

#. type: Plain text
#: R-intro.texi:7469
msgid ""
"If you do not wish to hardcode the path to @command{Rscript} but have it in "
"your path (which is normally the case for an installed @R{} except on "
"Windows, but e.g.@: OS X users may need to add @file{/usr/local/bin} to "
"their path), use"
msgstr ""

#. type: example
#: R-intro.texi:7473
#, no-wrap
msgid ""
"#! /usr/bin/env Rscript\n"
"...\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7479
msgid ""
"At least in Bourne and bash shells, the @code{#!} mechanism does "
"@strong{not} allow extra arguments like @code{#! /usr/bin/env Rscript "
"--vanilla}."
msgstr ""

#. type: Plain text
#: R-intro.texi:7482
msgid ""
"One thing to consider is what @code{stdin()} refers to.  It is commonplace "
"to write @R{} scripts with segments like"
msgstr ""

#. type: example
#: R-intro.texi:7487
#, no-wrap
msgid ""
"chem <- scan(n=24)\n"
"2.90 3.10 3.40 3.40 3.70 3.70 2.80 2.50 2.40 2.40 2.70 2.20\n"
"5.28 3.37 3.03 3.03 28.95 3.77 3.40 2.20 3.50 3.60 3.70 3.70\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7493
msgid ""
"and @code{stdin()} refers to the script file to allow such traditional "
"usage.  If you want to refer to the process's @file{stdin}, use "
"@code{\"stdin\"} as a @code{file} connection, e.g.@: @code{scan(\"stdin\", "
"...)}."
msgstr ""

#. type: Plain text
#: R-intro.texi:7496
msgid ""
"Another way to write executable script files (suggested by Fran@,{c}ois "
"Pinard) is to use a @emph{here document} like"
msgstr ""

#. type: example
#: R-intro.texi:7501
#, no-wrap
msgid ""
"#!/bin/sh\n"
"[environment variables can be set here]\n"
"R --slave [other options] <<EOF\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:7503
#, no-wrap
msgid ""
"   R program goes here...\n"
"\n"
msgstr ""

#. type: example
#: R-intro.texi:7505
#, no-wrap
msgid "EOF\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7510
msgid ""
"but here @code{stdin()} refers to the program source and @code{\"stdin\"} "
"will not be usable."
msgstr ""

#. type: Plain text
#: R-intro.texi:7513
msgid ""
"Short scripts can be passed to @command{Rscript} on the command-line "
"@emph{via} the @option{-e} flag.  (Empty scripts are not accepted.)"
msgstr ""

#. type: Plain text
#: R-intro.texi:7516
msgid ""
"Note that on a Unix-alike the input filename (such as @file{foo.R})  should "
"not contain spaces nor shell metacharacters."
msgstr ""

#. type: Plain text
#: R-intro.texi:7522
msgid "@appendixsection Preliminaries"
msgstr ""

#. type: Plain text
#: R-intro.texi:7528
msgid ""
"When the @acronym{GNU} @strong{readline} library is available at the time "
"@R{} is configured for compilation under UNIX, an inbuilt command line "
"editor allowing recall, editing and re-submission of prior commands is "
"used.  Note that other versions of @strong{readline} exist and may be used "
"by the inbuilt command line editor: this used to happen on OS X."
msgstr ""

#. type: Plain text
#: R-intro.texi:7533
msgid ""
"It can be disabled (useful for usage with @acronym{ESS} @footnote{The `Emacs "
"Speaks Statistics' package; see the @acronym{URL} "
"@uref{http://ESS.R-project.org}}) using the startup option "
"@option{--no-readline}."
msgstr ""

#. type: Plain text
#: R-intro.texi:7538
msgid ""
"Windows versions of @R{} have somewhat simpler command-line editing: see "
"@samp{Console} under the @samp{Help} menu of the @acronym{GUI}, and the file "
"@file{README.Rterm} for command-line editing under @code{Rterm.exe}."
msgstr ""

#. type: Plain text
#: R-intro.texi:7542
msgid ""
"When using @R{} with @strong{readline} capabilities, the functions described "
"below are available, as well as others (probably) documented in @command{man "
"readline} or @command{info readline} on your system."
msgstr ""

#. type: Plain text
#: R-intro.texi:7556
msgid ""
"Many of these use either Control or Meta characters.  Control characters, "
"such as @kbd{Control-m}, are obtained by holding the @key{CTRL} down while "
"you press the @key{m} key, and are written as @kbd{C-m} below.  Meta "
"characters, such as @kbd{Meta-b}, are typed by holding down "
"@key{META}@footnote{On a PC keyboard this is usually the Alt key, "
"occasionally the `Windows' key.  On a Mac keyboard normally no meta key is "
"available.} and pressing @key{b}, and written as @kbd{M-b} in the "
"following.  If your terminal does not have a @key{META} key enabled, you can "
"still type Meta characters using two-character sequences starting with "
"@kbd{ESC}.  Thus, to enter @kbd{M-b}, you could type @key{ESC}@key{b}.  The "
"@kbd{ESC} character sequences are also allowed on terminals with real Meta "
"keys.  Note that case is significant for Meta characters."
msgstr ""

#. type: Plain text
#: R-intro.texi:7558
msgid "@appendixsection Editing actions"
msgstr ""

#. type: Plain text
#: R-intro.texi:7570
msgid ""
"The @R{} program keeps a history of the command lines you type, including "
"the erroneous lines, and commands in your history may be recalled, changed "
"if necessary, and re-submitted as new commands.  In Emacs-style command-line "
"editing any straight typing you do while in this editing phase causes the "
"characters to be inserted in the command you are editing, displacing any "
"characters to the right of the cursor.  In @emph{vi} mode character "
"insertion mode is started by @kbd{M-i} or @kbd{M-a}, characters are typed "
"and insertion mode is finished by typing a further @key{ESC}.  (The default "
"is Emacs-style, and only that is described here: for @emph{vi} mode see the "
"@strong{readline} documentation.)"
msgstr ""

#. type: Plain text
#: R-intro.texi:7573
msgid ""
"Pressing the @key{RET} command at any time causes the command to be "
"re-submitted."
msgstr ""

#. type: Plain text
#: R-intro.texi:7575
msgid "Other editing actions are summarized in the following table."
msgstr ""

#. type: Plain text
#: R-intro.texi:7577
msgid "@appendixsection Command-line editor summary"
msgstr ""

#. type: subheading
#: R-intro.texi:7578
#, no-wrap
msgid "Command recall and vertical motion"
msgstr ""

#. type: item
#: R-intro.texi:7581
#, no-wrap
msgid "C-p"
msgstr ""

#. type: table
#: R-intro.texi:7583
msgid "Go to the previous command (backwards in the history)."
msgstr ""

#. type: item
#: R-intro.texi:7583
#, no-wrap
msgid "C-n"
msgstr ""

#. type: table
#: R-intro.texi:7585
msgid "Go to the next command (forwards in the history)."
msgstr ""

#. type: item
#: R-intro.texi:7585
#, no-wrap
msgid "C-r @var{text}"
msgstr ""

#. type: table
#: R-intro.texi:7587
msgid "Find the last command with the @var{text} string in it."
msgstr ""

#. type: Plain text
#: R-intro.texi:7591
msgid ""
"On most terminals, you can also use the up and down arrow keys instead of "
"@kbd{C-p} and @kbd{C-n}, respectively."
msgstr ""

#. type: subheading
#: R-intro.texi:7592
#, no-wrap
msgid "Horizontal motion of the cursor"
msgstr ""

#. type: item
#: R-intro.texi:7595
#, no-wrap
msgid "C-a"
msgstr ""

#. type: table
#: R-intro.texi:7597
msgid "Go to the beginning of the command."
msgstr ""

#. type: item
#: R-intro.texi:7597
#, no-wrap
msgid "C-e"
msgstr ""

#. type: table
#: R-intro.texi:7599
msgid "Go to the end of the line."
msgstr ""

#. type: item
#: R-intro.texi:7599
#, no-wrap
msgid "M-b"
msgstr ""

#. type: table
#: R-intro.texi:7601
msgid "Go back one word."
msgstr ""

#. type: item
#: R-intro.texi:7601
#, no-wrap
msgid "M-f"
msgstr ""

#. type: table
#: R-intro.texi:7603
msgid "Go forward one word."
msgstr ""

#. type: item
#: R-intro.texi:7603
#, no-wrap
msgid "C-b"
msgstr ""

#. type: table
#: R-intro.texi:7605
msgid "Go back one character."
msgstr ""

#. type: item
#: R-intro.texi:7605
#, no-wrap
msgid "C-f"
msgstr ""

#. type: table
#: R-intro.texi:7607
msgid "Go forward one character."
msgstr ""

#. type: Plain text
#: R-intro.texi:7611
msgid ""
"On most terminals, you can also use the left and right arrow keys instead of "
"@kbd{C-b} and @kbd{C-f}, respectively."
msgstr ""

#. type: subheading
#: R-intro.texi:7612
#, no-wrap
msgid "Editing and re-submission"
msgstr ""

#. type: table
#: R-intro.texi:7617
msgid "Insert @var{text} at the cursor."
msgstr ""

#. type: item
#: R-intro.texi:7617
#, no-wrap
msgid "C-f @var{text}"
msgstr ""

#. type: table
#: R-intro.texi:7619
msgid "Append @var{text} after the cursor."
msgstr ""

#. type: key{#1}
#: R-intro.texi:7619
#, no-wrap
msgid "DEL"
msgstr ""

#. type: table
#: R-intro.texi:7621
msgid "Delete the previous character (left of the cursor)."
msgstr ""

#. type: item
#: R-intro.texi:7621
#, no-wrap
msgid "C-d"
msgstr ""

#. type: table
#: R-intro.texi:7623
msgid "Delete the character under the cursor."
msgstr ""

#. type: item
#: R-intro.texi:7623
#, no-wrap
msgid "M-d"
msgstr ""

#. type: table
#: R-intro.texi:7625
msgid "Delete the rest of the word under the cursor, and ``save'' it."
msgstr ""

#. type: item
#: R-intro.texi:7625
#, no-wrap
msgid "C-k"
msgstr ""

#. type: table
#: R-intro.texi:7627
msgid "Delete from cursor to end of command, and ``save'' it."
msgstr ""

#. type: item
#: R-intro.texi:7627
#, no-wrap
msgid "C-y"
msgstr ""

#. type: table
#: R-intro.texi:7629
msgid "Insert (yank) the last ``saved'' text here."
msgstr ""

#. type: item
#: R-intro.texi:7629
#, no-wrap
msgid "C-t"
msgstr ""

#. type: table
#: R-intro.texi:7631
msgid "Transpose the character under the cursor with the next."
msgstr ""

#. type: item
#: R-intro.texi:7631
#, no-wrap
msgid "M-l"
msgstr ""

#. type: table
#: R-intro.texi:7633
msgid "Change the rest of the word to lower case."
msgstr ""

#. type: item
#: R-intro.texi:7633
#, no-wrap
msgid "M-c"
msgstr ""

#. type: table
#: R-intro.texi:7635
msgid "Change the rest of the word to upper case."
msgstr ""

#. type: key{#1}
#: R-intro.texi:7635
#, no-wrap
msgid "RET"
msgstr ""

#. type: table
#: R-intro.texi:7637
msgid "Re-submit the command to @R{}."
msgstr ""

#. type: Plain text
#: R-intro.texi:7640
msgid "The final @key{RET} terminates the command line editing sequence."
msgstr ""

#. type: Plain text
#: R-intro.texi:7644
msgid ""
"The @strong{readline} key bindings can be customized in the usual way "
"@emph{via} a @file{~/.inputrc} file.  These customizations can be "
"conditioned on application @code{R}, that is by including a section like"
msgstr ""

#. type: example
#: R-intro.texi:7649
#, no-wrap
msgid ""
"$if R\n"
"  \"\\C-xd\": \"q('no')\\n\"\n"
"$endif\n"
msgstr ""

#. type: Plain text
#: R-intro.texi:7666
msgid ""
"D.@: M.@: Bates and D.@: G.@: Watts (1988), @emph{Nonlinear Regression "
"Analysis and Its Applications.} John Wiley & Sons, New York."
msgstr ""

#. type: Plain text
#: R-intro.texi:7671
msgid ""
"Richard A.@: Becker, John M.@: Chambers and Allan R.@: Wilks (1988), "
"@emph{The New S Language.} Chapman & Hall, New York.  This book is often "
"called the ``@emph{Blue Book}''."
msgstr ""

#. type: Plain text
#: R-intro.texi:7676
msgid ""
"John M.@: Chambers and Trevor J.@: Hastie eds. (1992), @emph{Statistical "
"Models in S.} Chapman & Hall, New York.  This is also called the "
"``@emph{White Book}''."
msgstr ""

#. type: Plain text
#: R-intro.texi:7681
msgid ""
"John M.@: Chambers (1998)  @emph{Programming with Data}. Springer, New "
"York.  This is also called the ``@emph{Green Book}''."
msgstr ""

#. type: Plain text
#: R-intro.texi:7685
msgid ""
"A.@: C.@: Davison and D.@: V.@: Hinkley (1997), @emph{Bootstrap Methods and "
"Their Applications}, Cambridge University Press."
msgstr ""

#. type: Plain text
#: R-intro.texi:7689
msgid ""
"Annette J.@: Dobson (1990), @emph{An Introduction to Generalized Linear "
"Models}, Chapman and Hall, London."
msgstr ""

#. type: Plain text
#: R-intro.texi:7693
msgid ""
"Peter McCullagh and John A.@: Nelder (1989), @emph{Generalized Linear "
"Models.} Second edition, Chapman and Hall, London."
msgstr ""

#. type: Plain text
#: R-intro.texi:7697
msgid ""
"John A.@ Rice (1995), @emph{Mathematical Statistics and Data Analysis.} "
"Second edition.  Duxbury Press, Belmont, CA."
msgstr ""

#. type: Plain text
#: R-intro.texi:7700
msgid "S.@: D.@: Silvey (1970), @emph{Statistical Inference.} Penguin, London."
msgstr ""
