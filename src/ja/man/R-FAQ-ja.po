# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Chel Hee Lee
# This file is distributed under the same license as the translateR package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: translateR 0.0.1.4\n"
"Report-Msgid-Bugs-To: chl948@mail.usask.ca\n"
"POT-Creation-Date: 2015-07-29 08:26-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Masafumi  \n"
"Language-Team: R-core <R-core@R-project.org> \n"
"Language: ja \n"
"MIME-Version: 1.0 \n"
"Content-Type: text/plain; charset=UTF-8 \n"
"Content-Transfer-Encoding: 8bit \n"
"Plural-Forms: nplurals=1; plural=0; \n"

#. type: top
#: R-FAQ.texi:5
#: R-FAQ.texi:90
#, no-wrap
msgid "R FAQ"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:18
msgid "@documentlanguage en @documentencoding ISO-8859-1"
msgstr ""

#. type: dircategory
#: R-FAQ.texi:19
#, no-wrap
msgid "Programming"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:22
msgid "R FAQ: (R-FAQ)"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:22
msgid "The R statistical system FAQ."
msgstr ""

#. type: sc{#1}
#: R-FAQ.texi:28
msgid "S-Plus"
msgstr ""

#. type: acronym{#1}
#: R-FAQ.texi:32
msgid "CRAN"
msgstr ""

#. type: acronym{#1}
#: R-FAQ.texi:36
msgid "HTML"
msgstr ""

#. type: macro
#: R-FAQ.texi:40
msgid "FORTRAN"
msgstr ""

#. type: acronym{#1}
#: R-FAQ.texi:44
msgid "XML"
msgstr ""

#. type: acronym{#1}
#: R-FAQ.texi:48
msgid "XSL"
msgstr ""

#. type: strong{#1}
#: R-FAQ.texi:52
msgid "\\p\\"
msgstr ""

#. type: macro
#: R-FAQ.texi:56
msgid "@url{http://CRAN.R-project.org/package=\\p\\, @strong{\\p\\}}"
msgstr ""

#. type: title
#: R-FAQ.texi:59
#, no-wrap
msgid "R @acronym{FAQ}"
msgstr ""

#. type: subtitle
#: R-FAQ.texi:60
#, no-wrap
msgid "Frequently Asked Questions on R"
msgstr ""

#. type: subtitle
#: R-FAQ.texi:61
#, no-wrap
msgid "Version @value{FAQ_VERSION}"
msgstr ""

#. type: author
#: R-FAQ.texi:62
#, no-wrap
msgid "Kurt Hornik"
msgstr ""

#. type: ifinfo
#: R-FAQ.texi:71
msgid "R FAQ @* Frequently Asked Questions on R @* Version @value{FAQ_VERSION} @* Kurt Hornik @*"
msgstr ""

#. type: ifhtml
#: R-FAQ.texi:81
msgid "@html <h2>Frequently Asked Questions on R</h2> <h3 style=\"text-align: center;\">Version @value{FAQ_VERSION}</h3> <h3 style=\"text-align: center;\">Kurt Hornik</h3> <hr>"
msgstr ""

#. type: node
#: R-FAQ.texi:89
#: R-FAQ.texi:106
#: R-FAQ.texi:214
#: R-FAQ.texi:908
#: R-FAQ.texi:1545
#: R-FAQ.texi:1681
#: R-FAQ.texi:2065
#: R-FAQ.texi:2189
#: R-FAQ.texi:3408
#: R-FAQ.texi:3501
#: R-FAQ.texi:3645
#, no-wrap
msgid "Top"
msgstr ""

#. type: node
#: R-FAQ.texi:89
#: R-FAQ.texi:106
#: R-FAQ.texi:107
#: R-FAQ.texi:120
#: R-FAQ.texi:144
#: R-FAQ.texi:168
#: R-FAQ.texi:187
#: R-FAQ.texi:193
#: R-FAQ.texi:214
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: node
#: R-FAQ.texi:89
#, no-wrap
msgid "(dir)"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:104
msgid "Introduction::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:104
msgid "R Basics::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:104
msgid "R and S::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:104
msgid "R Web Interfaces::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:104
msgid "R Add-On Packages::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:104
msgid "R and Emacs::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:104
msgid "R Miscellanea::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:104
msgid "R Programming::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:104
msgid "R Bugs::"
msgstr ""

#. type: chapter
#: R-FAQ.texi:104
#: R-FAQ.texi:3501
#: R-FAQ.texi:3645
#: R-FAQ.texi:3646
#, no-wrap
msgid "Acknowledgments"
msgstr ""

#. type: node
#: R-FAQ.texi:106
#: R-FAQ.texi:214
#: R-FAQ.texi:215
#: R-FAQ.texi:234
#: R-FAQ.texi:283
#: R-FAQ.texi:315
#: R-FAQ.texi:325
#: R-FAQ.texi:368
#: R-FAQ.texi:489
#: R-FAQ.texi:566
#: R-FAQ.texi:662
#: R-FAQ.texi:684
#: R-FAQ.texi:759
#: R-FAQ.texi:827
#: R-FAQ.texi:871
#: R-FAQ.texi:881
#: R-FAQ.texi:893
#: R-FAQ.texi:908
#, no-wrap
msgid "R Basics"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:111
msgid "This document contains answers to some of the most frequently asked questions about R."
msgstr ""

#. type: menuentry
#: R-FAQ.texi:118
msgid "Legalese::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:118
msgid "Obtaining this document::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:118
msgid "Citing this document::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:118
msgid "Notation::"
msgstr ""

#. type: section
#: R-FAQ.texi:118
#: R-FAQ.texi:187
#: R-FAQ.texi:193
#: R-FAQ.texi:194
#, no-wrap
msgid "Feedback"
msgstr ""

#. type: node
#: R-FAQ.texi:120
#: R-FAQ.texi:121
#: R-FAQ.texi:144
#, no-wrap
msgid "Legalese"
msgstr ""

#. type: node
#: R-FAQ.texi:120
#: R-FAQ.texi:144
#: R-FAQ.texi:145
#: R-FAQ.texi:168
#, no-wrap
msgid "Obtaining this document"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:125
msgid "This document is copyright @copyright{} 1998--@value{FAQ_YEAR} by Kurt Hornik."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:130
msgid "This document is free software; you can redistribute it and/or modify it under the terms of the @acronym{GNU} General Public License as published by the Free Software Foundation; either version 2, or (at your option)  any later version."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:135
msgid "This document is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the @acronym{GNU} General Public License for more details."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:138
msgid "Copies of the @acronym{GNU} General Public License versions are available at"
msgstr ""

#. type: display
#: R-FAQ.texi:141
#, no-wrap
msgid "@url{http://www.R-project.org/Licenses/}\n"
msgstr ""

#. type: node
#: R-FAQ.texi:144
#: R-FAQ.texi:168
#: R-FAQ.texi:169
#: R-FAQ.texi:187
#, no-wrap
msgid "Citing this document"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:148
msgid "The latest version of this document is always available from"
msgstr ""

#. type: display
#: R-FAQ.texi:151
#, no-wrap
msgid "@url{http://CRAN.R-project.org/doc/FAQ/}\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:164
msgid "From there, you can obtain versions converted to @url{http://CRAN.R-project.org/doc/FAQ/R-FAQ.txt,, plain @acronym{ASCII} text}, @url{http://CRAN.R-project.org/doc/FAQ/R-FAQ.info.gz,, @acronym{GNU} info}, @url{http://CRAN.R-project.org/doc/FAQ/R-FAQ.html,, @HTML{}}, @url{http://CRAN.R-project.org/doc/FAQ/R-FAQ.pdf,, PDF}, as well as the @url{http://CRAN.R-project.org/doc/FAQ/R-FAQ.texi,, Texinfo source} used for creating all these formats using the @url{http://texinfo.org/, @acronym{GNU} Texinfo system}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:167
msgid "You can also obtain the R @acronym{FAQ} from the @file{doc/FAQ} subdirectory of a @CRAN{} site (@pxref{What is CRAN?})."
msgstr ""

#. type: node
#: R-FAQ.texi:168
#: R-FAQ.texi:187
#: R-FAQ.texi:188
#: R-FAQ.texi:193
#, no-wrap
msgid "Notation"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:174
msgid "In publications, please refer to this @acronym{FAQ} as Hornik (@value{FAQ_YEAR}), ``The R @acronym{FAQ}'', and give the above, @emph{official} @acronym{URL}:"
msgstr ""

#. type: group
#: R-FAQ.texi:183
#, no-wrap
msgid ""
"@@Misc@{,\n"
"  author        = @{Kurt Hornik@},\n"
"  title         = @{@{R@} @{FAQ@}@},\n"
"  year          = @{@value{REL_YEAR}@},\n"
"  url           = @{http://CRAN.R-project.org/doc/FAQ/R-FAQ.html@}\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:192
msgid "Everything should be pretty standard.  @samp{R>} is used for the R prompt, and a @samp{$} for the shell prompt (where applicable)."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:198
msgid "Feedback via email to @email{Kurt.Hornik@@R-project.org} is of course most welcome."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:208
msgid "In particular, note that I do not have access to Windows or Mac systems.  Features specific to the Windows and OS X ports of R are described in the @url{http://CRAN.R-project.org/bin/windows/base/rw-FAQ.html, ``R for Windows @acronym{FAQ}''} and the @url{http://CRAN.R-project.org/bin/macosx/RMacOSX-FAQ.html, ``R for Mac OS X @acronym{FAQ}''}.  If you have information on Mac or Windows systems that you think should be added to this document, please let me know."
msgstr ""

#. type: node
#: R-FAQ.texi:214
#: R-FAQ.texi:908
#: R-FAQ.texi:909
#: R-FAQ.texi:919
#: R-FAQ.texi:982
#: R-FAQ.texi:989
#: R-FAQ.texi:1499
#: R-FAQ.texi:1518
#: R-FAQ.texi:1545
#, no-wrap
msgid "R and S"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:232
msgid "What is R?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:232
msgid "What machines does R run on?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:232
msgid "What is the current version of R?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:232
msgid "How can R be obtained?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:232
msgid "How can R be installed?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:232
msgid "Are there Unix-like binaries for R?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:232
msgid "What documentation exists for R?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:232
msgid "Citing R::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:232
msgid "What mailing lists exist for R?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:232
msgid "What is CRAN?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:232
msgid "Can I use R for commercial purposes?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:232
msgid "Why is R named R?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:232
msgid "What is the R Foundation?::"
msgstr ""

#. type: section
#: R-FAQ.texi:232
#: R-FAQ.texi:881
#: R-FAQ.texi:893
#: R-FAQ.texi:894
#, no-wrap
msgid "What is R-Forge?"
msgstr ""

#. type: node
#: R-FAQ.texi:234
#: R-FAQ.texi:235
#: R-FAQ.texi:283
#, no-wrap
msgid "What is R?"
msgstr ""

#. type: node
#: R-FAQ.texi:234
#: R-FAQ.texi:283
#: R-FAQ.texi:284
#: R-FAQ.texi:315
#, no-wrap
msgid "What machines does R run on?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:241
msgid "R is a system for statistical computation and graphics.  It consists of a language plus a run-time environment with graphics, a debugger, access to certain system functions, and the ability to run programs stored in script files."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:248
msgid "The design of R has been heavily influenced by two existing languages: Becker, Chambers & Wilks' S (@pxref{What is S?}) and Sussman's @url{http://www.cs.indiana.edu/scheme-repository/home.html, Scheme}.  Whereas the resulting language is very similar in appearance to S, the underlying implementation and semantics are derived from Scheme.  @xref{What are the differences between R and S?}, for further details."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:261
msgid "The core of R is an interpreted computer language which allows branching and looping as well as modular programming using functions.  Most of the user-visible functions in R are written in R.  It is possible for the user to interface to procedures written in the C, C++, or FORTRAN languages for efficiency.  The R distribution contains functionality for a large number of statistical procedures.  Among these are: linear and generalized linear models, nonlinear regression models, time series analysis, classical parametric and nonparametric tests, clustering and smoothing.  There is also a large set of functions which provide a flexible graphical environment for creating various kinds of data presentations.  Additional modules (``add-on packages'') are available for a variety of specific purposes (@pxref{R Add-On Packages})."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:267
msgid "R was initially written by @email{Ross.Ihaka@@R-project.org, Ross Ihaka} and @email{Robert.Gentleman@@R-project.org, Robert Gentleman} at the Department of Statistics of the University of Auckland in Auckland, New Zealand.  In addition, a large group of individuals has contributed to R by sending code and bug reports."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:275
msgid "Since mid-1997 there has been a core group (the ``R Core Team'') who can modify the R source code archive.  The group currently consists of Doug Bates, John Chambers, Peter Dalgaard, Seth Falcon, Robert Gentleman, Kurt Hornik, Stefano Iacus, Ross Ihaka, Friedrich Leisch, Uwe Ligges, Thomas Lumley, Martin Maechler, Duncan Murdoch, Paul Murrell, Martyn Plummer, Brian Ripley, Deepayan Sarkar, Duncan Temple Lang, Luke Tierney, and Simon Urbanek."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:282
msgid "R has a home page at @url{http://www.R-project.org/}.  It is @url{http://www.gnu.org/philosophy/free-sw.html, free software} distributed under a @acronym{GNU}-style @url{http://www.gnu.org/copyleft/copyleft.html, copyleft}, and an official part of the @url{http://www.gnu.org/, @acronym{GNU}} project (``@acronym{GNU} S'')."
msgstr ""

#. type: node
#: R-FAQ.texi:283
#: R-FAQ.texi:315
#: R-FAQ.texi:316
#: R-FAQ.texi:325
#, no-wrap
msgid "What is the current version of R?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:288
msgid "R is being developed for the Unix-like, Windows and Mac families of operating systems.  Support for Mac OS Classic ended with R 1.7.1."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:309
msgid "The current version of R will configure and build under a number of common Unix-like (e.g., @uref{http://en.wikipedia.org/wiki/Unix-like})  platforms including @var{cpu}-linux-gnu for the i386, amd64, alpha, arm/armel, hppa, ia64, m68k, mips/mipsel, powerpc, s390 and sparc @acronym{CPU}s (e.g., @url{http://buildd.debian.org/build.php?&pkg=r-base}), i386-hurd-gnu, @var{cpu}-kfreebsd-gnu for i386 and amd64, powerpc-apple-darwin, mips-sgi-irix, i386-freebsd, rs6000-ibm-aix, and sparc-sun-solaris."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:314
msgid "If you know about other platforms, please drop us a note."
msgstr ""

#. type: node
#: R-FAQ.texi:315
#: R-FAQ.texi:325
#: R-FAQ.texi:326
#: R-FAQ.texi:368
#, no-wrap
msgid "How can R be obtained?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:324
msgid "The current released version is @value{REL_VERSION}.  Based on this `major.minor.patchlevel' numbering scheme, there are two development versions of R, a patched version of the current release (`r-patched')  and one working towards the next minor or eventually major (`r-devel')  releases of R, respectively.  Version r-patched is for bug fixes mostly.  New features are typically introduced in r-devel."
msgstr ""

#. type: node
#: R-FAQ.texi:325
#: R-FAQ.texi:368
#: R-FAQ.texi:369
#: R-FAQ.texi:377
#: R-FAQ.texi:457
#: R-FAQ.texi:474
#: R-FAQ.texi:489
#, no-wrap
msgid "How can R be installed?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:330
msgid "Sources, binaries and documentation for R can be obtained via @CRAN{}, the ``Comprehensive R Archive Network'' (see @ref{What is CRAN?})."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:334
msgid "Sources are also available via @url{https://svn.R-project.org/R/}, the R Subversion repository, but currently not via anonymous rsync (nor CVS)."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:338
msgid "Tarballs with daily snapshots of the r-devel and r-patched development versions of R can be found at @url{ftp://ftp.stat.math.ethz.ch/Software/R/}."
msgstr ""

#. type: node
#: R-FAQ.texi:368
#: R-FAQ.texi:489
#: R-FAQ.texi:490
#: R-FAQ.texi:566
#, no-wrap
msgid "Are there Unix-like binaries for R?"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:375
msgid "How can R be installed (Unix-like)::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:375
msgid "How can R be installed (Windows)::"
msgstr ""

#. type: subsection
#: R-FAQ.texi:375
#: R-FAQ.texi:457
#: R-FAQ.texi:474
#: R-FAQ.texi:475
#, no-wrap
msgid "How can R be installed (Mac)"
msgstr ""

#. type: node
#: R-FAQ.texi:377
#: R-FAQ.texi:378
#: R-FAQ.texi:457
#, no-wrap
msgid "How can R be installed (Unix-like)"
msgstr ""

#. type: node
#: R-FAQ.texi:377
#: R-FAQ.texi:457
#: R-FAQ.texi:458
#: R-FAQ.texi:474
#, no-wrap
msgid "How can R be installed (Windows)"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:382
msgid "If R is already installed, it can be started by typing @kbd{R} at the shell prompt (of course, provided that the executable is in your path)."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:386
msgid "If binaries are available for your platform (see @ref{Are there Unix-like binaries for R?}), you can use these, following the instructions that come with them."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:393
msgid "Otherwise, you can compile and install R yourself, which can be done very easily under a number of common Unix-like platforms (see @ref{What machines does R run on?}).  The file @file{INSTALL} that comes with the R distribution contains a brief introduction, and the ``R Installation and Administration'' guide (@pxref{What documentation exists for R?})  has full details."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:396
msgid "Note that you need a @FORTRAN{} compiler or perhaps @command{f2c} in addition to a C compiler to build R."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:399
msgid "In the simplest case, untar the R source code, change to the directory thus created, and issue the following commands (at the shell prompt):"
msgstr ""

#. type: example
#: R-FAQ.texi:403
#, no-wrap
msgid ""
"$ ./configure\n"
"$ make\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:411
msgid "If these commands execute successfully, the R binary and a shell script front-end called @file{R} are created and copied to the @file{bin} directory.  You can copy the script to a place where users can invoke it, for example to @file{/usr/local/bin}.  In addition, plain text help pages as well as @HTML{} and @LaTeX{} versions of the documentation are built."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:423
msgid "Use @kbd{make dvi} to create DVI versions of the R manuals, such as @file{refman.dvi} (an R object reference index) and @file{R-exts.dvi}, the ``R Extension Writers Guide'', in the @file{doc/manual} subdirectory.  These files can be previewed and printed using standard programs such as @command{xdvi} and @command{dvips}.  You can also use @kbd{make pdf} to build PDF (Portable Document Format) version of the manuals, and view these using e.g.@: Acrobat.  Manuals written in the @acronym{GNU} Texinfo system can also be converted to info files suitable for reading online with Emacs or stand-alone @acronym{GNU} Info; use @kbd{make info} to create these versions (note that this requires Makeinfo version 4.5)."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:426
msgid "Finally, use @kbd{make check} to find out whether your R system works correctly."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:429
msgid "You can also perform a ``system-wide'' installation using @kbd{make install}.  By default, this will install to the following directories:"
msgstr ""

#. type: item
#: R-FAQ.texi:431
#, no-wrap
msgid "$@{prefix@}/bin"
msgstr ""

#. type: table
#: R-FAQ.texi:433
msgid "the front-end shell script"
msgstr ""

#. type: item
#: R-FAQ.texi:433
#, no-wrap
msgid "$@{prefix@}/man/man1"
msgstr ""

#. type: table
#: R-FAQ.texi:435
msgid "the man page"
msgstr ""

#. type: item
#: R-FAQ.texi:435
#, no-wrap
msgid "$@{prefix@}/lib/R"
msgstr ""

#. type: table
#: R-FAQ.texi:438
msgid "all the rest (libraries, on-line help system, @dots{}).  This is the ``R Home Directory'' (@env{R_HOME}) of the installed system."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:444
msgid "In the above, @code{prefix} is determined during configuration (typically @file{/usr/local}) and can be set by running @command{configure} with the option"
msgstr ""

#. type: example
#: R-FAQ.texi:447
#, no-wrap
msgid "$ ./configure --prefix=/where/you/want/R/to/go\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:452
msgid "(E.g., the R executable will then be installed into @file{/where/you/want/R/to/go/bin}.)"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:456
msgid "To install DVI, info and PDF versions of the manuals, use @kbd{make install-dvi}, @kbd{make install-info} and @kbd{make install-pdf}, respectively."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:467
msgid "The @file{bin/windows} directory of a @CRAN{} site contains binaries for a base distribution and add-on packages from @CRAN{} to run on Windows XP and later (including 64-bit versions of Windows) on ix86 and x86_64 chips. The Windows version of R was created by Robert Gentleman and Guido Masarotto, and is now being developed and maintained by @email{murdoch@@stats.uwo.ca, Duncan Murdoch} and @email{Brian.Ripley@@R-project.org, Brian D. Ripley}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:470
msgid "The same directory has links to snapshots of the r-patched and r-devel versions of R."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:473
msgid "See the @url{http://CRAN.R-project.org/bin/windows/base/@/rw-FAQ.html, ``R for Windows @acronym{FAQ}''} for more details."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:485
msgid "The @file{bin/macosx} directory of a @CRAN{} site contains a standard Apple installer package to run on OS X 10.6 (`Snow Leopard') and later.  Once downloaded and executed, the installer will install the current release of R and an R.app OS X @acronym{GUI}.  This port of R for OS X is maintained by @email{Simon.Urbanek@@R-project.org, Simon Urbanek} (and previously by Stefano Iacus).  The @url{http://CRAN.R-project.org/bin/macosx/RMacOSX-FAQ.html, ``R for Mac OS X @acronym{FAQ}} has more details."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:488
msgid "Snapshots of the r-patched and r-devel versions of R are available as Apple installer packages at @uref{http://r.research.att.com}."
msgstr ""

#. type: node
#: R-FAQ.texi:489
#: R-FAQ.texi:566
#: R-FAQ.texi:567
#: R-FAQ.texi:662
#, no-wrap
msgid "What documentation exists for R?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:515
msgid "The @file{bin/linux} directory of a @CRAN{} site contains the following packages."
msgstr ""

#. type: multitable
#: R-FAQ.texi:520
msgid "@headitem"
msgstr ""

#. type: multitable
#: R-FAQ.texi:520
msgid "CPU"
msgstr ""

#. type: multitable
#: R-FAQ.texi:520
msgid "Versions"
msgstr ""

#. type: multitable
#: R-FAQ.texi:520
msgid "Provider"
msgstr ""

#. type: item
#: R-FAQ.texi:520
#, no-wrap
msgid "Debian   @tab i386/amd64  @tab squeeze/wheezy       @tab Johannes Ranke"
msgstr ""

#. type: item
#: R-FAQ.texi:521
#, no-wrap
msgid "@tab armel       @tab wheezy               @tab Johannes Ranke"
msgstr ""

#. type: item
#: R-FAQ.texi:522
#, no-wrap
msgid "Ubuntu   @tab i386/amd64  @tab lucid/precise/trusty @tab Michael Rutter"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:539
msgid "Debian packages, maintained by Dirk Eddelbuettel, have long been part of the Debian distribution, and can be accessed through APT, the Debian package maintenance tool.  Use e.g.@: @code{apt-get install r-base r-recommended} to install the R environment and recommended packages.  If you also want to build R packages from source, also run @code{apt-get install r-base-dev} to obtain the additional tools required for this.  So-called ``backports'' of the current R packages for at least the @dfn{stable} distribution of Debian are provided by Johannes Ranke, and available from @CRAN{}.  See @url{http://CRAN.R-project.org/bin/linux/debian/README.html} for details on R Debian packages and installing the backports, which should also be suitable for other Debian derivatives.  Native backports for Ubuntu are provided by Michael Rutter."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:559
msgid "R binaries for Fedora, maintained by Tom ``Spot'' Callaway, are provided as part of the Fedora distribution and can be accessed through @command{yum}, the RPM installer/updater.  Note that the ``Software'' application (gnome-software), which is the default @acronym{GUI} for software installation in Fedora 20, cannot be used to install R.  It is therefore recommended to use the yum command line tool.  The Fedora R RPM is a ``meta-package'' which installs all the user and developer components of R (available separately as @code{R-core} and @code{R-devel}), as well as @code{R-java}, which ensures that R is configured for use with Java.  The R RPM also installs the standalone R math library (@code{libRmath} and @code{libRmath-devel}), although this is not necessary to use R.  When a new version of R is released, there may be a delay of up to 2 weeks until the Fedora RPM becomes publicly available, as it must pass through the statutory Fedora review process.  RPMs for a selection of R packages are also provided by Fedora.  The Extra Packages for Enterprise Linux (EPEL) project (@url{http://fedoraproject.org/wiki/EPEL}) provides ports of the Fedora RPMs for RedHat Enterprise Linux and compatible distributions (e.g., Centos, Scientific Linux, Oracle Linux)."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:562
msgid "See @url{http://CRAN.R-project.org/bin/linux/suse/README.html} for information about RPMs for openSUSE."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:565
msgid "No other binary distributions are currently publically available via @CRAN{}."
msgstr ""

#. type: node
#: R-FAQ.texi:566
#: R-FAQ.texi:662
#: R-FAQ.texi:663
#: R-FAQ.texi:684
#, no-wrap
msgid "Citing R"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:575
msgid "Online documentation for most of the functions and variables in R exists, and can be printed on-screen by typing @kbd{help(@var{name})} (or @kbd{?@var{name}}) at the R prompt, where @var{name} is the name of the topic help is sought for.  (In the case of unary and binary operators and control-flow special forms, the name may need to be be quoted.)"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:581
msgid "This documentation can also be made available as one reference manual for on-line reading in @HTML{} and PDF formats, and as hardcopy via @LaTeX{}, see @ref{How can R be installed?}.  An up-to-date @HTML{} version is always available for web browsing at @url{http://stat.ethz.ch/R-manual/}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:587
msgid "Printed copies of the R reference manual for some version(s) are available from Network Theory Ltd, at @url{http://www.network-theory.co.uk/R/base/}.  For each set of manuals sold, the publisher donates USD 10 to the R Foundation (@pxref{What is the R Foundation?})."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:589
msgid "The R distribution also comes with the following manuals."
msgstr ""

#. type: item
#: R-FAQ.texi:591
#, no-wrap
msgid "``An Introduction to R'' (@file{R-intro})"
msgstr ""

#. type: itemize
#: R-FAQ.texi:595
msgid "includes information on data types, programming elements, statistical modeling and graphics.  This document is based on the ``Notes on @SPLUS{}'' by Bill Venables and David Smith."
msgstr ""

#. type: item
#: R-FAQ.texi:595
#, no-wrap
msgid "``Writing R Extensions'' (@file{R-exts})"
msgstr ""

#. type: itemize
#: R-FAQ.texi:599
msgid "currently describes the process of creating R add-on packages, writing R documentation, R's system and foreign language interfaces, and the R @acronym{API}."
msgstr ""

#. type: item
#: R-FAQ.texi:599
#, no-wrap
msgid "``R Data Import/Export'' (@file{R-data})"
msgstr ""

#. type: itemize
#: R-FAQ.texi:601
msgid "is a guide to importing and exporting data to and from R."
msgstr ""

#. type: item
#: R-FAQ.texi:601
#, no-wrap
msgid "``The R Language Definition'' (@file{R-lang}),"
msgstr ""

#. type: itemize
#: R-FAQ.texi:605
msgid "a first version of the ``Kernighan & Ritchie of R'', explains evaluation, parsing, object oriented programming, computing on the language, and so forth."
msgstr ""

#. type: item
#: R-FAQ.texi:605
#, no-wrap
msgid "``R Installation and Administration'' (@file{R-admin})."
msgstr ""

#. type: item
#: R-FAQ.texi:606
#, no-wrap
msgid "``R Internals'' (@file{R-ints})"
msgstr ""

#. type: itemize
#: R-FAQ.texi:609
msgid "is a guide to R's internal structures.  (Added in R 2.4.0.)"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:613
msgid "An annotated bibliography (Bib@TeX{} format) of R-related publications can be found at"
msgstr ""

#. type: display
#: R-FAQ.texi:616
#, no-wrap
msgid "@url{http://www.R-project.org/doc/bib/R.bib}\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:619
msgid "Books on R by R Core Team members include"
msgstr ""

#. type: quotation
#: R-FAQ.texi:624
msgid "John M. Chambers (2008), ``Software for Data Analysis: Programming with R''.  Springer, New York, ISBN 978-0-387-75935-7, @url{http://statweb.stanford.edu/~jmc4/Rbook/}."
msgstr ""

#. type: quotation
#: R-FAQ.texi:628
msgid "Peter Dalgaard (2008), ``Introductory Statistics with R'', 2nd edition.  Springer, ISBN 978-0-387-79053-4, @url{http://www.biostat.ku.dk/~pd/ISwR.html}."
msgstr ""

#. type: quotation
#: R-FAQ.texi:632
msgid "Robert Gentleman (2008), ``R Programming for Bioinformatics''.  Chapman & Hall/CRC, Boca Raton, FL, ISBN 978-1-420-06367-7, @url{http://www.bioconductor.org/pub/RBioinf/}."
msgstr ""

#. type: quotation
#: R-FAQ.texi:636
msgid "Stefano M. Iacus (2008), ``Simulation and Inference for Stochastic Differential Equations: With R Examples''. Springer, New York, ISBN 978-0-387-75838-1."
msgstr ""

#. type: quotation
#: R-FAQ.texi:639
msgid "Deepayan Sarkar (2007), ``Lattice: Multivariate Data Visualization with R''. Springer, New York, ISBN 978-0-387-75968-5."
msgstr ""

#. type: quotation
#: R-FAQ.texi:643
msgid "W. John Braun and Duncan J. Murdoch (2007), ``A First Course in Statistical Programming with R''.  Cambridge University Press, Cambridge, ISBN 978-0521872652."
msgstr ""

#. type: quotation
#: R-FAQ.texi:647
msgid "P. Murrell (2005), ``R Graphics'', Chapman & Hall/CRC, ISBN: 1-584-88486-X, @url{http://www.stat.auckland.ac.nz/~paul/RGraphics/rgraphics.html}."
msgstr ""

#. type: quotation
#: R-FAQ.texi:651
msgid "William N. Venables and Brian D. Ripley (2002), ``Modern Applied Statistics with S'' (4th edition).  Springer, ISBN 0-387-95457-0, @url{http://www.stats.ox.ac.uk/pub/MASS4/}."
msgstr ""

#. type: quotation
#: R-FAQ.texi:654
msgid "Jose C. Pinheiro and Douglas M. Bates (2000), ``Mixed-Effects Models in S and S-Plus''. Springer, ISBN 0-387-98957-0."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:661
msgid "Last, but not least, Ross' and Robert's experience in designing and implementing R is described in Ihaka & Gentleman (1996), ``R: A Language for Data Analysis and Graphics'', @url{http://www.amstat.org/publications/jcgs/, , @emph{Journal of Computational and Graphical Statistics}}, @strong{5}, 299--314."
msgstr ""

#. type: node
#: R-FAQ.texi:662
#: R-FAQ.texi:684
#: R-FAQ.texi:685
#: R-FAQ.texi:759
#, no-wrap
msgid "What mailing lists exist for R?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:666
msgid "To cite R in publications, use"
msgstr ""

#. type: group
#: R-FAQ.texi:678
#, no-wrap
msgid ""
"@@Manual@{,\n"
"  title        = @{R: A Language and Environment for Statistical\n"
"                  Computing@},\n"
"  author       = @{@{R Core Team@}@},\n"
"  organization = @{R Foundation for Statistical Computing@},\n"
"  address      = @{Vienna, Austria@},\n"
"  year         = @value{REL_YEAR},\n"
"  url          = @{http://www.R-project.org@}\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:683
msgid "Citation strings (or Bib@TeX{} entries) for R and R packages can also be obtained by @code{citation()}."
msgstr ""

#. type: node
#: R-FAQ.texi:684
#: R-FAQ.texi:759
#: R-FAQ.texi:827
#, no-wrap
msgid "What is CRAN?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:689
msgid "Thanks to @email{Martin.Maechler@@R-project.org, Martin Maechler}, there are four mailing lists devoted to R."
msgstr ""

#. type: item
#: R-FAQ.texi:691
#, no-wrap
msgid "R-announce"
msgstr ""

#. type: table
#: R-FAQ.texi:694
msgid "A moderated list for major announcements about the development of R and the availability of new code."
msgstr ""

#. type: item
#: R-FAQ.texi:694
#, no-wrap
msgid "R-packages"
msgstr ""

#. type: table
#: R-FAQ.texi:697
msgid "A moderated list for announcements on the availability of new or enhanced contributed packages."
msgstr ""

#. type: item
#: R-FAQ.texi:697
#, no-wrap
msgid "R-help"
msgstr ""

#. type: table
#: R-FAQ.texi:704
msgid "The `main' R mailing list, for discussion about problems and solutions using R, announcements (not covered by `R-announce' and `R-packages')  about the development of R and the availability of new code."
msgstr ""

#. type: item
#: R-FAQ.texi:704
#, no-wrap
msgid "R-devel"
msgstr ""

#. type: table
#: R-FAQ.texi:709
msgid "This list is for questions and discussion about code development in R."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:714
msgid "Please read the @url{http://www.R-project.org/posting-guide.html, posting guide} @emph{before} sending anything to any mailing list."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:720
msgid "Note in particular that R-help is intended to be comprehensible to people who want to use R to solve problems but who are not necessarily interested in or knowledgeable about programming.  Questions likely to prompt discussion unintelligible to non-programmers (e.g., questions involving C or C++) should go to R-devel."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:727
msgid "Convenient access to information on these lists, subscription, and archives is provided by the web interface at @url{http://stat.ethz.ch/mailman/listinfo/}.  One can also subscribe (or unsubscribe) via email, e.g.@: to R-help by sending @samp{subscribe} (or @samp{unsubscribe}) in the @emph{body} of the message (not in the subject!) to @email{R-help-request@@lists.R-project.org}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:735
msgid "Send email to @email{R-help@@lists.R-project.org} to send a message to everyone on the R-help mailing list.  Subscription and posting to the other lists is done analogously, with @samp{R-help} replaced by @samp{R-announce}, @samp{R-packages}, and @samp{R-devel}, respectively.  Note that the R-announce and R-packages lists are gatewayed into R-help.  Hence, you should subscribe to either of them only in case you are not subscribed to R-help."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:740
msgid "It is recommended that you send mail to R-help rather than only to the R Core developers (who are also subscribed to the list, of course).  This may save them precious time they can use for constantly improving R, and will typically also result in much quicker feedback for yourself."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:745
msgid "Of course, in the case of bug reports it would be very helpful to have code which reliably reproduces the problem.  Also, make sure that you include information on the system and version of R being used.  See @ref{R Bugs} for more details."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:748
msgid "See @url{http://www.R-project.org/mail.html} for more information on the R mailing lists."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:751
msgid "The R Core Team can be reached at @email{R-core@@lists.R-project.org} for comments and reports."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:758
msgid "Many of the R project's mailing lists are also available via @url{http://gmane.org, Gmane}, from which they can be read with a web browser, using an NNTP news reader, or via RSS feeds.  See @uref{http://dir.gmane.org/@/index.php?prefix=gmane.comp.lang.r.}@: for the available mailing lists, and @uref{http://www.gmane.org/rss.php} for details on RSS feeds."
msgstr ""

#. type: node
#: R-FAQ.texi:759
#: R-FAQ.texi:827
#: R-FAQ.texi:828
#: R-FAQ.texi:871
#, no-wrap
msgid "Can I use R for commercial purposes?"
msgstr ""

#. type: section
#: R-FAQ.texi:760
#, no-wrap
msgid "What is @acronym{CRAN}?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:766
msgid "The ``Comprehensive R Archive Network'' (@CRAN{}) is a collection of sites which carry identical material, consisting of the R distribution(s), the contributed extensions, documentation for R, and binaries."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:769
msgid "The @CRAN{} master site at WU (Wirtschaftsuniversit@\"at Wien) in Austria can be found at the @acronym{URL}"
msgstr ""

#. type: quotation
#: R-FAQ.texi:776
msgid "@url{http://CRAN.R-project.org/}"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:781
msgid "Daily mirrors are available at @acronym{URL}s including"
msgstr ""

#. type: item
#: R-FAQ.texi:784
#, no-wrap
msgid "@url{http://cran.at.R-project.org/}"
msgstr ""

#. type: multitable
#: R-FAQ.texi:786
msgid "(Wirtschaftsuniversit@\"at Wien, Austria)"
msgstr ""

#. type: item
#: R-FAQ.texi:786
#, no-wrap
msgid "@url{http://cran.au.R-project.org/}"
msgstr ""

#. type: multitable
#: R-FAQ.texi:788
msgid "(University of Melbourne, Australia)"
msgstr ""

#. type: item
#: R-FAQ.texi:788
#, no-wrap
msgid "@url{http://cran.br.R-project.org/}"
msgstr ""

#. type: multitable
#: R-FAQ.texi:790
msgid "(Universidade Federal do Paran@'a, Brazil)"
msgstr ""

#. type: item
#: R-FAQ.texi:790
#, no-wrap
msgid "@url{http://cran.ch.R-project.org/}"
msgstr ""

#. type: multitable
#: R-FAQ.texi:792
msgid "(ETH Z@\"urich, Switzerland)"
msgstr ""

#. type: item
#: R-FAQ.texi:792
#, no-wrap
msgid "@url{http://cran.dk.R-project.org/}"
msgstr ""

#. type: multitable
#: R-FAQ.texi:794
msgid "(dotsrc.org, Aalborg, Denmark)"
msgstr ""

#. type: item
#: R-FAQ.texi:794
#, no-wrap
msgid "@url{http://cran.es.R-project.org/}"
msgstr ""

#. type: multitable
#: R-FAQ.texi:800
msgid "(Spanish National Research Network, Madrid, Spain)"
msgstr ""

#. type: item
#: R-FAQ.texi:800
#, no-wrap
msgid "@url{http://cran.pt.R-project.org/}"
msgstr ""

#. type: multitable
#: R-FAQ.texi:802
msgid "(Universidade do Porto, Portugal)"
msgstr ""

#. type: item
#: R-FAQ.texi:802
#, no-wrap
msgid "@url{http://cran.uk.R-project.org/}"
msgstr ""

#. type: multitable
#: R-FAQ.texi:808
msgid "(U of Bristol, United Kingdom)"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:815
msgid "See @url{http://CRAN.R-project.org/mirrors.html} for a complete list of mirrors.  Please use the @CRAN{} site closest to you to reduce network load."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:823
msgid "From @CRAN{}, you can obtain the latest official release of R, daily snapshots of R (copies of the current source trees), as gzipped and bzipped tar files, a wealth of additional contributed code, as well as prebuilt binaries for various operating systems (Linux, Mac OS Classic, OS X, and MS Windows).  @CRAN{} also provides access to documentation on R, existing mailing lists and the R Bug Tracking system."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:826
msgid "Please always use the @acronym{URL} of the master site when referring to @CRAN{}."
msgstr ""

#. type: node
#: R-FAQ.texi:827
#: R-FAQ.texi:871
#: R-FAQ.texi:872
#: R-FAQ.texi:881
#, no-wrap
msgid "Why is R named R?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:836
msgid "R is released under the @url{http://www.gnu.org/licenses/old-licenses/gpl-2.0.html,, @acronym{GNU} General Public License (@acronym{GPL}), version 2}.  If you have any questions regarding the legality of using R in any particular situation you should bring it up with your legal counsel.  We are in no position to offer legal advice."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:845
msgid "It is the opinion of the R Core Team that one can use R for commercial purposes (e.g., in business or in consulting).  The @acronym{GPL}, like all Open Source licenses, permits all and any use of the package.  It only restricts distribution of R or of other programs containing code from R.  This is made clear in clause 6 (``No Discrimination Against Fields of Endeavor'') of the @url{http://www.opensource.org/docs/definition.html, Open Source Definition}:"
msgstr ""

#. type: quotation
#: R-FAQ.texi:851
msgid "The license must not restrict anyone from making use of the program in a specific field of endeavor.  For example, it may not restrict the program from being used in a business, or from being used for genetic research."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:855
msgid "It is also explicitly stated in clause 0 of the GPL, which says in part"
msgstr ""

#. type: quotation
#: R-FAQ.texi:861
msgid "Activities other than copying, distribution and modification are not covered by this License; they are outside its scope.  The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:867
msgid "Most add-on packages, including all recommended ones, also explicitly allow commercial use in this way.  A few packages are restricted to ``non-commercial use''; you should contact the author to clarify whether these may be used or seek the advice of your legal counsel."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:870
msgid "None of the discussion in this section constitutes legal advice.  The R Core Team does not provide legal advice under any circumstances."
msgstr ""

#. type: node
#: R-FAQ.texi:871
#: R-FAQ.texi:881
#: R-FAQ.texi:882
#: R-FAQ.texi:893
#, no-wrap
msgid "What is the R Foundation?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:877
msgid "The name is partly based on the (first) names of the first two R authors (Robert Gentleman and Ross Ihaka), and partly a play on the name of the Bell Labs language `S' (@pxref{What is S?})."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:892
msgid "The R Foundation is a not for profit organization working in the public interest.  It was founded by the members of the R Core Team in order to provide support for the R project and other innovations in statistical computing, provide a reference point for individuals, institutions or commercial enterprises that want to support or interact with the R development community, and to hold and administer the copyright of R software and documentation.  See @url{http://www.R-project.org/foundation/} for more information."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:906
msgid "R-Forge (@url{http://R-Forge.R-project.org/}) offers a central platform for the development of R packages, R-related software and further projects.  It is based on @url{https://en.wikipedia.org/wiki/GForge, GForge} offering easy access to the best in SVN, daily built and checked packages, mailing lists, bug tracking, message boards/forums, site hosting, permanent file archival, full backups, and total web-based administration.  For more information, see the R-Forge web page and Stefan Theu@ss{}l and Achim Zeileis (2009), ``Collaborative software development using R-Forge'', @url{http://journal.R-project.org/, , @emph{The R Journal}}, @strong{1}(1):9--14."
msgstr ""

#. type: node
#: R-FAQ.texi:908
#: R-FAQ.texi:1545
#: R-FAQ.texi:1546
#: R-FAQ.texi:1681
#, no-wrap
msgid "R Web Interfaces"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:917
msgid "What is S?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:917
msgid "What is S-PLUS?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:917
msgid "What are the differences between R and S?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:917
msgid "Is there anything R can do that S-PLUS cannot?::"
msgstr ""

#. type: section
#: R-FAQ.texi:917
#: R-FAQ.texi:1499
#: R-FAQ.texi:1518
#: R-FAQ.texi:1519
#, no-wrap
msgid "What is R-plus?"
msgstr ""

#. type: node
#: R-FAQ.texi:919
#: R-FAQ.texi:920
#: R-FAQ.texi:982
#, no-wrap
msgid "What is S?"
msgstr ""

#. type: node
#: R-FAQ.texi:919
#: R-FAQ.texi:982
#: R-FAQ.texi:989
#, no-wrap
msgid "What is S-PLUS?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:926
msgid "S is a very high level language and an environment for data analysis and graphics.  In 1998, the Association for Computing Machinery (@acronym{ACM}) presented its Software System Award to John M. Chambers, the principal designer of S, for"
msgstr ""

#. type: quotation
#: R-FAQ.texi:930
msgid "the S system, which has forever altered the way people analyze, visualize, and manipulate data @dots{}"
msgstr ""

#. type: quotation
#: R-FAQ.texi:934
msgid "S is an elegant, widely accepted, and enduring software system, with conceptual integrity, thanks to the insight, taste, and effort of John Chambers."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:938
msgid "The evolution of the S language is characterized by four books by John Chambers and coauthors, which are also the primary references for S."
msgstr ""

#. type: itemize
#: R-FAQ.texi:944
msgid "Richard A. Becker and John M. Chambers (1984), ``S.  An Interactive Environment for Data Analysis and Graphics,'' Monterey: Wadsworth and Brooks/Cole."
msgstr ""

#. type: itemize
#: R-FAQ.texi:947
msgid "This is also referred to as the ``@emph{Brown Book}'', and of historical interest only."
msgstr ""

#. type: itemize
#: R-FAQ.texi:951
msgid "Richard A. Becker, John M. Chambers and Allan R. Wilks (1988), ``The New S Language,'' London: Chapman & Hall."
msgstr ""

#. type: itemize
#: R-FAQ.texi:954
msgid "This book is often called the ``@emph{Blue Book}'', and introduced what is now known as S version 2."
msgstr ""

#. type: itemize
#: R-FAQ.texi:958
msgid "John M. Chambers and Trevor J. Hastie (1992), ``Statistical Models in S,'' London: Chapman & Hall."
msgstr ""

#. type: itemize
#: R-FAQ.texi:961
msgid "This is also called the ``@emph{White Book}'', and introduced S version 3, which added structures to facilitate statistical modeling in S."
msgstr ""

#. type: itemize
#: R-FAQ.texi:966
msgid "John M. Chambers (1998), ``Programming with Data,'' New York: Springer, ISBN 0-387-98503-4 (@url{http://statweb.stanford.edu/~jmc4/Sbook/})."
msgstr ""

#. type: itemize
#: R-FAQ.texi:970
msgid "This ``@emph{Green Book}'' describes version 4 of S, a major revision of S designed by John Chambers to improve its usefulness at every stage of the programming process."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:974
msgid "See @url{http://statweb.stanford.edu/~jmc4/papers/96.7.ps} for further information on the ``Evolution of the S Language''."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:977
msgid "There is a huge amount of user-contributed code for S, available at the @url{http://lib.stat.cmu.edu/S/, S Repository} at @acronym{CMU}."
msgstr ""

#. type: node
#: R-FAQ.texi:982
#: R-FAQ.texi:989
#: R-FAQ.texi:990
#: R-FAQ.texi:1008
#: R-FAQ.texi:1264
#: R-FAQ.texi:1290
#: R-FAQ.texi:1499
#, no-wrap
msgid "What are the differences between R and S?"
msgstr ""

#. type: section
#: R-FAQ.texi:983
#, no-wrap
msgid "What is @sc{S-Plus}?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:988
msgid "@SPLUS{} is a value-added version of S currently sold by @url{http://www.tibco.com/, TIBCO Software Inc} as `TIBCO Spotfire S+'.  See @url{http://en.wikipedia.org/wiki/S-PLUS} for more information."
msgstr ""

#. type: node
#: R-FAQ.texi:989
#: R-FAQ.texi:1499
#: R-FAQ.texi:1518
#, no-wrap
msgid "Is there anything R can do that S-PLUS cannot?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:998
msgid "We can regard S as a language with three current implementations or ``engines'', the ``old S engine'' (S version 3; @SPLUS{} 3.x and 4.x), the ``new S engine'' (S version 4; @SPLUS{} 5.x and above), and R.  Given this understanding, asking for ``the differences between R and S'' really amounts to asking for the specifics of the R implementation of the S language, i.e., the difference between the R and S @emph{engines}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1001
msgid "For the remainder of this section, ``S'' refers to the S engines and not the S language."
msgstr ""

#. type: menuentry
#: R-FAQ.texi:1006
msgid "Lexical scoping::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:1006
msgid "Models::"
msgstr ""

#. type: subsection
#: R-FAQ.texi:1006
#: R-FAQ.texi:1264
#: R-FAQ.texi:1290
#: R-FAQ.texi:1291
#, no-wrap
msgid "Others"
msgstr ""

#. type: node
#: R-FAQ.texi:1008
#: R-FAQ.texi:1009
#: R-FAQ.texi:1264
#, no-wrap
msgid "Lexical scoping"
msgstr ""

#. type: node
#: R-FAQ.texi:1008
#: R-FAQ.texi:1264
#: R-FAQ.texi:1265
#: R-FAQ.texi:1290
#, no-wrap
msgid "Models"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1014
msgid "Contrary to other implementations of the S language, R has adopted an evaluation model in which nested function definitions are lexically scoped.  This is analogous to the evaluation model in Scheme."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1022
msgid "This difference becomes manifest when @emph{free} variables occur in a function.  Free variables are those which are neither formal parameters (occurring in the argument list of the function) nor local variables (created by assigning to them in the body of the function).  In S, the values of free variables are determined by a set of global variables (similar to C, there is only local and global scope).  In R, they are determined by the environment in which the function was created."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1024
msgid "Consider the following function:"
msgstr ""

#. type: group
#: R-FAQ.texi:1031
#, no-wrap
msgid ""
"cube <- function(n) @{\n"
"  sq <- function() n * n\n"
"  n * sq()\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1036
msgid "Under S, @code{sq()} does not ``know'' about the variable @code{n} unless it is defined globally:"
msgstr ""

#. type: group
#: R-FAQ.texi:1045
#, no-wrap
msgid ""
"S> cube(2)\n"
"Error in sq():  Object \"n\" not found\n"
"Dumped\n"
"S> n <- 3\n"
"S> cube(2)\n"
"[1] 18\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1050
msgid "In R, the ``environment'' created when @code{cube()} was invoked is also looked in:"
msgstr ""

#. type: group
#: R-FAQ.texi:1055
#, no-wrap
msgid ""
"R> cube(2)\n"
"[1] 8\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1100
msgid "As a more ``interesting'' real-world problem, suppose you want to write a function which returns the density function of the @math{r}-th order statistic from a sample of size @math{n} from a (continuous)  distribution.  For simplicity, we shall use both the cdf and pdf of the distribution as explicit arguments.  (Example compiled from various postings by Luke Tierney.)"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1103
msgid "The @SPLUS{} documentation for @code{call()} basically suggests the following:"
msgstr ""

#. type: group
#: R-FAQ.texi:1118
#, no-wrap
msgid ""
"dorder <- function(n, r, pfun, dfun) @{\n"
"  f <- function(x) NULL\n"
"  con <- round(exp(lgamma(n + 1) - lgamma(r) - lgamma(n - r + 1)))\n"
"  PF <- call(substitute(pfun), as.name(\"x\"))\n"
"  DF <- call(substitute(dfun), as.name(\"x\"))\n"
"  f[[length(f)]] <-\n"
"    call(\"*\", con,\n"
"         call(\"*\", call(\"^\", PF, r - 1),\n"
"              call(\"*\", call(\"^\", call(\"-\", 1, PF), n - r),\n"
"                   DF)))\n"
"  f\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1125
msgid "functions are just lists of special mode with the function body as the last argument, and hence does not work in R (one could make the idea work, though)."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1128
msgid "A version which makes heavy use of @code{substitute()} and seems to work under both S and R is"
msgstr ""

#. type: group
#: R-FAQ.texi:1137
#, no-wrap
msgid ""
"dorder <- function(n, r, pfun, dfun) @{\n"
"  con <- round(exp(lgamma(n + 1) - lgamma(r) - lgamma(n - r + 1)))\n"
"  eval(substitute(function(x) K * PF(x)^a * (1 - PF(x))^b * DF(x),\n"
"                  list(PF = substitute(pfun), DF = substitute(dfun),\n"
"                       a = r - 1, b = n - r, K = con)))\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1142
msgid "(the @code{eval()} is not needed in S)."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1144
msgid "However, in R there is a much easier solution:"
msgstr ""

#. type: group
#: R-FAQ.texi:1153
#, no-wrap
msgid ""
"dorder <- function(n, r, pfun, dfun) @{\n"
"  con <- round(exp(lgamma(n + 1) - lgamma(r) - lgamma(n - r + 1)))\n"
"  function(x) @{\n"
"    con * pfun(x)^(r - 1) * (1 - pfun(x))^(n - r) * dfun(x)\n"
"  @}\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1160
msgid "This seems to be the ``natural'' implementation, and it works because the free variables in the returned function can be looked up in the defining environment (this is lexical scope)."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1166
msgid "Note that what you really need is the function @emph{closure}, i.e., the body along with all variable bindings needed for evaluating it.  Since in the above version, the free variables in the value function are not modified, you can actually use it in S as well if you abstract out the closure operation into a function @code{MC()} (for ``make closure''):"
msgstr ""

#. type: group
#: R-FAQ.texi:1176
#, no-wrap
msgid ""
"dorder <- function(n, r, pfun, dfun) @{\n"
"  con <- round(exp(lgamma(n + 1) - lgamma(r) - lgamma(n - r + 1)))\n"
"  MC(function(x) @{\n"
"       con * pfun(x)^(r - 1) * (1 - pfun(x))^(n - r) * dfun(x)\n"
"     @},\n"
"     list(con = con, pfun = pfun, dfun = dfun, r = r, n = n))\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1183
msgid "Given the appropriate definitions of the closure operator, this works in both R and S, and is much ``cleaner'' than a substitute/eval solution (or one which overrules the default scoping rules by using explicit access to evaluation frames, as is of course possible in both R and S)."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1185
msgid "For R, @code{MC()} simply is"
msgstr ""

#. type: example
#: R-FAQ.texi:1188
#, no-wrap
msgid "MC <- function(f, env) f\n"
msgstr ""

#. type: group
#: R-FAQ.texi:1210
#, no-wrap
msgid ""
"MC <- function(f, env = NULL) @{\n"
"  env <- as.list(env)\n"
"  if (mode(f) != \"function\")\n"
"    stop(paste(\"not a function:\", f))\n"
"  if (length(env) > 0 && any(names(env) == \"\"))\n"
"    stop(paste(\"not all arguments are named:\", env))\n"
"  fargs <- if(length(f) > 1) f[1:(length(f) - 1)] else NULL\n"
"  fargs <- c(fargs, env)\n"
"  if (any(duplicated(names(fargs))))\n"
"    stop(paste(\"duplicated arguments:\", paste(names(fargs)),\n"
"         collapse = \", \"))\n"
"  fbody <- f[length(f)]\n"
"  cf <- c(fargs, fbody)\n"
"  mode(cf) <- \"function\"\n"
"  return(cf)\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1221
msgid "Similarly, most optimization (or zero-finding) routines need some arguments to be optimized over and have other parameters that depend on the data but are fixed with respect to optimization.  With R scoping rules, this is a trivial problem; simply make up the function with the required definitions in the same environment and scoping takes care of it.  With S, one solution is to add an extra parameter to the function and to the optimizer to pass in these extras, which however can only work if the optimizer supports this."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1231
msgid "Nested lexically scoped functions allow using function closures and maintaining local state.  A simple example (taken from Abelson and Sussman) is obtained by typing @kbd{demo(\"scoping\")} at the R prompt.  Further information is provided in the standard R reference ``R: A Language for Data Analysis and Graphics'' (@pxref{What documentation exists for R?}) and in Robert Gentleman and Ross Ihaka (2000), ``Lexical Scope and Statistical Computing'', @url{http://www.amstat.org/publications/jcgs/, , @emph{Journal of Computational and Graphical Statistics}}, @strong{9}, 491--508."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1242
msgid "Nested lexically scoped functions also imply a further major difference.  Whereas S stores all objects as separate files in a directory somewhere (usually @file{.Data} under the current directory), R does not.  All objects in R are stored internally.  When R is started up it grabs a piece of memory and uses it to store the objects.  R performs its own memory management of this piece of memory, growing and shrinking its size as needed.  Having everything in memory is necessary because it is not really possible to externally maintain all relevant ``environments'' of symbol/value pairs.  This difference also seems to make R @emph{faster} than S."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1256
msgid "The down side is that if R crashes you will lose all the work for the current session.  Saving and restoring the memory ``images'' (the functions and data stored in R's internal memory at any time) can be a bit slow, especially if they are big.  In S this does not happen, because everything is saved in disk files and if you crash nothing is likely to happen to them.  (In fact, one might conjecture that the S developers felt that the price of changing their approach to persistent storage just to accommodate lexical scope was far too expensive.)  Hence, when doing important work, you might consider saving often (see @ref{How can I save my workspace?}) to safeguard against possible crashes.  Other possibilities are logging your sessions, or have your R commands stored in text files which can be read in using @code{source()}."
msgstr ""

#. type: quotation
#: R-FAQ.texi:1257
#, no-wrap
msgid "Note"
msgstr ""

#. type: quotation
#: R-FAQ.texi:1262
msgid "If you run R from within Emacs (see @ref{R and Emacs}), you can save the contents of the interaction buffer to a file and conveniently manipulate it using @code{ess-transcript-mode}, as well as save source copies of all functions and data used."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1268
msgid "There are some differences in the modeling code, such as"
msgstr ""

#. type: itemize
#: R-FAQ.texi:1274
msgid "Whereas in S, you would use @code{lm(y ~ x^3)} to regress @code{y} on @code{x^3}, in R, you have to insulate powers of numeric vectors (using @code{I()}), i.e., you have to use @code{lm(y ~ I(x^3))}."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1277
msgid "The glm family objects are implemented differently in R and S.  The same functionality is available but the components have different names."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1280
msgid "Option @code{na.action} is set to @code{\"na.omit\"} by default in R, but not set in S."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1284
msgid "Terms objects are stored differently.  In S a terms object is an expression with attributes, in R it is a formula with attributes.  The attributes have the same names but are mostly stored differently."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1288
msgid "Finally, in R @code{y ~ x + 0} is an alternative to @code{y ~ x - 1} for specifying a model with no intercept.  Models with no parameters at all can be specified by @code{y ~ 0}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1299
msgid "Apart from lexical scoping and its implications, R follows the S language definition in the Blue and White Books as much as possible, and hence really is an ``implementation'' of S.  There are some intentional differences where the behavior of S is considered ``not clean''.  In general, the rationale is that R should help you detect programming errors, while at the same time being as compatible as possible with S."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1301
msgid "Some known differences are the following."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1309
msgid "In R, if @code{x} is a list, then @code{x[i] <- NULL} and @code{x[[i]] <- NULL} remove the specified elements from @code{x}.  The first of these is incompatible with S, where it is a no-op.  (Note that you can set elements to @code{NULL} using @code{x[i] <- list(NULL)}.)"
msgstr ""

#. type: itemize
#: R-FAQ.texi:1318
msgid "In S, the functions named @code{.First} and @code{.Last} in the @file{.Data} directory can be used for customizing, as they are executed at the very beginning and end of a session, respectively."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1336
msgid "In R, the startup mechanism is as follows.  Unless @option{--no-environ} was given on the command line, R searches for site and user files to process for setting environment variables.  Then, R searches for a site-wide startup profile unless the command line option @option{--no-site-file} was given.  This code is loaded in package @pkg{base}.  Then, unless @option{--no-init-file} was given, R searches for a user profile file, and sources it into the user workspace.  It then loads a saved image of the user workspace from @file{.RData} in case there is one (unless @option{--no-restore-data} or @option{--no-restore} were specified).  Next, a function @code{.First()} is run if found on the search path.  Finally, function @code{.First.sys} in the @pkg{base} package is run.  When terminating an R session, by default a function @code{.Last} is run if found on the search path, followed by @code{.Last.sys}.  If needed, the functions @code{.First()} and @code{.Last()} should be defined in the appropriate startup profiles.  See the help pages for @code{.First} and @code{.Last} for more details."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1343
msgid "In R, @code{T} and @code{F} are just variables being set to @code{TRUE} and @code{FALSE}, respectively, but are not reserved words as in S and hence can be overwritten by the user.  (This helps e.g.@: when you have factors with levels @code{\"T\"} or @code{\"F\"}.)  Hence, when writing code you should always use @code{TRUE} and @code{FALSE}."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1347
msgid "In R, @code{dyn.load()} can only load @emph{shared objects}, as created for example by @kbd{R CMD SHLIB}."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1353
msgid "In R, @code{attach()} currently only works for lists and data frames, but not for directories.  (In fact, @code{attach()} also works for R data files created with @code{save()}, which is analogous to attaching directories in S.)  Also, you cannot attach at position 1."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1357
msgid "Categories do not exist in R, and never will as they are deprecated now in S.  Use factors instead."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1360
msgid "In R, @code{For()} loops are not necessary and hence not supported."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1364
msgid "In R, @code{assign()} uses the argument @option{envir=} rather than @option{where=} as in S."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1368
msgid "The random number generators are different, and the seeds have different length."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1372
msgid "R passes integer objects to C as @code{int *} rather than @code{long *} as in S."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1376
msgid "R has no single precision storage mode.  However, as of version 0.65.1, there is a single precision interface to C/@FORTRAN{} subroutines."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1381
msgid "By default, @code{ls()} returns the names of the objects in the current (under R) and global (under S) environment, respectively.  For example, given"
msgstr ""

#. type: example
#: R-FAQ.texi:1384
#, no-wrap
msgid "x <- 1; fun <- function() @{y <- 1; ls()@}\n"
msgstr ""

#. type: itemize
#: R-FAQ.texi:1389
msgid "then @code{fun()} returns @code{\"y\"} in R and @code{\"x\"} (together with the rest of the global environment) in S."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1398
msgid "R allows for zero-extent matrices (and arrays, i.e., some elements of the @code{dim} attribute vector can be 0).  This has been determined a useful feature as it helps reducing the need for special-case tests for empty subsets.  For example, if @code{x} is a matrix, @code{x[, FALSE]} is not @code{NULL} but a ``matrix'' with 0 columns.  Hence, such objects need to be tested for by checking whether their @code{length()} is zero (which works in both R and S), and not using @code{is.null()}."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1403
msgid "Named vectors are considered vectors in R but not in S (e.g., @code{is.vector(c(a = 1:3))} returns @code{FALSE} in S and @code{TRUE} in R)."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1408
msgid "Data frames are not considered as matrices in R (i.e., if @code{DF} is a data frame, then @code{is.matrix(DF)} returns @code{FALSE} in R and @code{TRUE} in S)."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1413
msgid "R by default uses treatment contrasts in the unordered case, whereas S uses the Helmert ones.  This is a deliberate difference reflecting the opinion that treatment contrasts are more natural."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1419
msgid "In R, the argument of a replacement function which corresponds to the right hand side must be named @samp{value}.  E.g., @code{f(a) <- b} is evaluated as @code{a <- \"f<-\"(a, value = b)}.  S always takes the last argument, irrespective of its name."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1428
msgid "In S, @code{substitute()} searches for names for substitution in the given expression in three places: the actual and the default arguments of the matching call, and the local frame (in that order).  R looks in the local frame only, with the special rule to use a ``promise'' if a variable is not evaluated.  Since the local frame is initialized with the actual arguments or the default expressions, this is usually equivalent to S, until assignment takes place."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1433
msgid "In S, the index variable in a @code{for()} loop is local to the inside of the loop.  In R it is local to the environment where the @code{for()} statement is executed."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1437
msgid "In S, @code{tapply(simplify=TRUE)} returns a vector where R returns a one-dimensional array (which can have named dimnames)."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1446
msgid "In S(-@sc{Plus}) the C locale is used, whereas in R the current operating system locale is used for determining which characters are alphanumeric and how they are sorted.  This affects the set of valid names for R objects (for example accented chars may be allowed in R) and ordering in sorts and comparisons (such as whether @code{\"aA\" < \"Bb\"} is true or false).  From version 1.2.0 the locale can be (re-)set in R by the @code{Sys.setlocale()} function."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1450
msgid "In S, @code{missing(@var{arg})} remains @code{TRUE} if @var{arg} is subsequently modified; in R it doesn't."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1454
msgid "From R version 1.3.0, @code{data.frame} strips @code{I()} when creating (column) names."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1459
msgid "In R, the string @code{\"NA\"} is not treated as a missing value in a character variable.  Use @code{as.character(NA)} to create a missing character value."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1462
msgid "R disallows repeated formal arguments in function calls."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1470
msgid "In S, @code{dump()}, @code{dput()} and @code{deparse()} are essentially different interfaces to the same code.  In R from version 2.0.0, this is only true if the same @code{control} argument is used, but by default it is not.  By default @code{dump()} tries to write code that will evaluate to reproduce the object, whereas @code{dput()} and @code{deparse()} default to options for producing deparsed code that is readable."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1476
msgid "In R, indexing a vector, matrix, array or data frame with @code{[} using a character vector index looks only for exact matches (whereas @code{[[} and @code{$} allow partial matches).  In S, @code{[} allows partial matches."
msgstr ""

#. type: itemize
#: R-FAQ.texi:1485
msgid "S has a two-argument version of @code{atan} and no @code{atan2}.  A call in S such as @code{atan(x1, x2)} is equivalent to R's @code{atan2(x1, x2)}.  However, beware of named arguments since S's @code{atan(x = a, y = b)} is equivalent to R's @code{atan2(y = a, x = b)} with the meanings of @code{x} and @code{y} interchanged.  (R used to have undocumented support for a two-argument @code{atan} with positional arguments, but this has been withdrawn to avoid further confusion.)"
msgstr ""

#. type: itemize
#: R-FAQ.texi:1489
msgid "Numeric constants with no fractional and exponent (i.e., only integer)  part are taken as integer in @SPLUS{} 6.x or later, but as double in R."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1498
msgid "There are also differences which are not intentional, and result from missing or incorrect code in R.  The developers would appreciate hearing about any deficiencies you may find (in a written report fully documenting the difference as you see it).  Of course, it would be useful if you were to implement the change yourself and make sure it works."
msgstr ""

#. type: section
#: R-FAQ.texi:1500
#, no-wrap
msgid "Is there anything R can do that @sc{S-Plus} cannot?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1506
msgid "Since almost anything you can do in R has source code that you could port to @SPLUS{} with little effort there will never be much you can do in R that you couldn't do in @SPLUS{} if you wanted to.  (Note that using lexical scoping may simplify matters considerably, though.)"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1517
msgid "R offers several graphics features that @SPLUS{} does not, such as finer handling of line types, more convenient color handling (via palettes), gamma correction for color, and, most importantly, mathematical annotation in plot texts, via input expressions reminiscent of @TeX{} constructs.  See the help page for @code{plotmath}, which features an impressive on-line example.  More details can be found in Paul Murrell and Ross Ihaka (2000), ``An Approach to Providing Mathematical Annotation in Plots'', @url{http://www.amstat.org/publications/jcgs/, , @emph{Journal of Computational and Graphical Statistics}}, @strong{9}, 582--599."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1522
msgid "For a very long time, there was no such thing."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1526
msgid "@url{http://www.xlsolutions-corp.com/, XLSolutions Corporation} is currently beta testing a commercially supported version of R named R+ (read R plus)."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1533
msgid "@url{http://www.revolution-computing.com/, REvolution Computing} has released @url{http://www.revolution-computing.com/products/revolution-r.php, REvolution R}, an enterprise-class statistical analysis system based on R, suitable for deployment in professional, commercial and regulated environments."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1544
msgid "See also @url{http://en.wikipedia.org/wiki/R_programming_language#Commercialized_versions_of_R} for pointers to commercialized versions of R."
msgstr ""

#. type: node
#: R-FAQ.texi:1545
#: R-FAQ.texi:1681
#: R-FAQ.texi:1682
#: R-FAQ.texi:1693
#: R-FAQ.texi:1864
#: R-FAQ.texi:1922
#: R-FAQ.texi:2002
#: R-FAQ.texi:2023
#: R-FAQ.texi:2052
#: R-FAQ.texi:2065
#, no-wrap
msgid "R Add-On Packages"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1557
msgid "@strong{Rweb} is developed and maintained by @email{jeff@@math.montana.edu, Jeff Banfield}.  The @url{http://www.math.montana.edu/Rweb/, Rweb Home Page} provides access to all three versions of Rweb---a simple text entry form that returns output and graphs, a more sophisticated JavaScript version that provides a multiple window environment, and a set of point and click modules that are useful for introductory statistics courses and require no knowledge of the R language.  All of the Rweb versions can analyze Web accessible datasets if a @acronym{URL} is provided."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1562
msgid "The paper ``Rweb: Web-based Statistical Analysis'', providing a detailed explanation of the different versions of Rweb and an overview of how Rweb works, was published in the Journal of Statistical Software (@url{http://www.jstatsoft.org/v04/i01/})."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1570
msgid "@email{ulfi@@cs.tu-berlin.de, Ulf Bartel} has developed @strong{R-Online}, a simple on-line programming environment for R which intends to make the first steps in statistical programming with R (especially with time series) as easy as possible.  There is no need for a local installation since the only requirement for the user is a JavaScript capable browser.  See @url{http://www.osvisions.com/r_online/} for more information."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1584
msgid "@strong{Rcgi} is a CGI WWW interface to R by @email{mjr@@dsl.pipex.com, MJ Ray}.  It had the ability to use ``embedded code'': you could mix user input and code, allowing the @HTML{} author to do anything from load in data sets to enter most of the commands for users without writing CGI scripts.  Graphical output was possible in PostScript or GIF formats and the executed code was presented to the user for revision.  However, it is not clear if the project is still active.  Currently, a modified version of @strong{Rcgi} by @email{mai@@ms.uky.edu, Mai Zhou} (actually, two versions: one with (bitmap) graphics and one without) as well as the original code are available from @url{http://www.ms.uky.edu/~statweb/}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1592
msgid "There are many additional examples of web interfaces to R which basically allow to submit R code to a remote server, see for example the collection of links available from @url{http://biostat.mc.vanderbilt.edu/twiki/bin/view/Main/StatCompCourse}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1605
msgid "@url{http://www.warwick.ac.uk/go/dfirth, David Firth} has written @CRANpkg{CGIwithR}, an R add-on package available from @CRAN{}.  It provides some simple extensions to R to facilitate running R scripts through the CGI interface to a web server, and allows submission of data using both GET and POST methods.  It is easily installed using Apache under Linux and in principle should run on any platform that supports R and a web server provided that the installer has the necessary security permissions.  David's paper ``CGIwithR: Facilities for Processing Web Forms Using R'' was published in the Journal of Statistical Software (@url{http://www.jstatsoft.org/v08/i10/}).  The package is now maintained by @email{duncan@@wald.ucdavis.edu, Duncan Temple Lang} and has a web page at @url{http://www.omegahat.org/CGIwithR/}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1618
msgid "Jeff Horner is working on the R/Apache Integration Project which embeds the R interpreter inside Apache 2 (and beyond).  A tutorial and presentation are available from the project web page at @url{http://biostat.mc.vanderbilt.edu/@/twiki/@/bin/@/view/@/Main/@/RApacheProject}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1624
msgid "@url{http://www.rforge.net/Rserve/, Rserve} is a project actively developed by Simon Urbanek.  It implements a TCP/IP server which allows other programs to use facilities of R.  Clients are available from the web site for Java and C++ (and could be written for other languages that support TCP/IP sockets)."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1640
msgid "Two projects use PHP to provide a web interface to R.  @url{http://steve-chen.net/R_PHP/, R_PHP_Online} by Steve Chen (though it is unclear if this project is still active) is somewhat similar to the above Rcgi and Rweb.  @url{http://dssm.unipa.it/R-php/?cmd=home, R-php} is actively developed by Alfredo Pontillo and Angelo Mineo and provides both a web interface to R and a set of pre-specified analyses that need no R code input."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1645
msgid "@url{http://www.bioconductor.org/, webbioc} is ``an integrated web interface for doing microarray analysis using several of the Bioconductor packages'' and is designed to be installed at local sites as a shared computing resource."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1650
msgid "@url{http://sysbio.mrc-bsu.cam.ac.uk/Rwui, Rwui} is a web application to create user-friendly web interfaces for R scripts.  All code for the web interface is created automatically.  There is no need for the user to do any extra scripting or learn any new scripting techniques."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1660
msgid "The @CRANpkg{R.rsp} package by Henrik Bengtsson introduces ``R Server Pages''.  Analogous to Java Server Pages, an R server page is typically @HTML{} with embedded R code that gets evaluated when the page is requested.  The package includes an internal cross-platform @acronym{HTTP} server implemented in Tcl, so provides a good framework for including web-based user interfaces in packages.  The approach is similar to the use of the @CRANpkg{brew} package with @url{http://rapache.net/, Rapache} with the advantage of cross-platform support and easy installation."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1663
msgid "The @CRANpkg{Rook} package by Jeffrey Horner provides a web server interface borrowing heavily from Ruby's Rack project."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1676
msgid "Finally, @uref{http://code.google.com/p/concerto-platform/, Concerto} is a user friendly open-source Web Interface to R developed at the Psychometrics Centre of Cambridge University.  It was designed as an online platform to design and run Computerized Adaptive Tests, but can be also used as a general-purpose R Web Interface.  It allows R users with no programming or web designing background to quickly develop flexible and powerful online applications, websites, and psychometrics tests.  To maximize its reliability, security, and performance, Concerto relies on the popular and reliable open-source elements such as MySQL server (exchange and storage of the data), @uref{http://rstudio.org/, Rstudio} (R code designing and testing, file management), CKEditor (@HTML{} Layer design), and PHP."
msgstr ""

#. type: node
#: R-FAQ.texi:1681
#: R-FAQ.texi:2065
#: R-FAQ.texi:2066
#: R-FAQ.texi:2074
#: R-FAQ.texi:2122
#: R-FAQ.texi:2147
#: R-FAQ.texi:2189
#, no-wrap
msgid "R and Emacs"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:1691
msgid "Which add-on packages exist for R?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:1691
msgid "How can add-on packages be installed?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:1691
msgid "How can add-on packages be used?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:1691
msgid "How can add-on packages be removed?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:1691
msgid "How can I create an R package?::"
msgstr ""

#. type: section
#: R-FAQ.texi:1691
#: R-FAQ.texi:2023
#: R-FAQ.texi:2052
#: R-FAQ.texi:2053
#, no-wrap
msgid "How can I contribute to R?"
msgstr ""

#. type: node
#: R-FAQ.texi:1693
#: R-FAQ.texi:1694
#: R-FAQ.texi:1704
#: R-FAQ.texi:1753
#: R-FAQ.texi:1826
#: R-FAQ.texi:1837
#: R-FAQ.texi:1853
#: R-FAQ.texi:1864
#, no-wrap
msgid "Which add-on packages exist for R?"
msgstr ""

#. type: node
#: R-FAQ.texi:1693
#: R-FAQ.texi:1864
#: R-FAQ.texi:1865
#: R-FAQ.texi:1922
#, no-wrap
msgid "How can add-on packages be installed?"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:1702
msgid "Add-on packages in R::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:1702
msgid "Add-on packages from CRAN::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:1702
msgid "Add-on packages from Omegahat::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:1702
msgid "Add-on packages from Bioconductor::"
msgstr ""

#. type: subsection
#: R-FAQ.texi:1702
#: R-FAQ.texi:1837
#: R-FAQ.texi:1853
#: R-FAQ.texi:1854
#, no-wrap
msgid "Other add-on packages"
msgstr ""

#. type: node
#: R-FAQ.texi:1704
#: R-FAQ.texi:1705
#: R-FAQ.texi:1753
#, no-wrap
msgid "Add-on packages in R"
msgstr ""

#. type: node
#: R-FAQ.texi:1704
#: R-FAQ.texi:1753
#: R-FAQ.texi:1826
#, no-wrap
msgid "Add-on packages from CRAN"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1708
msgid "The R distribution comes with the following packages:"
msgstr ""

#. type: item
#: R-FAQ.texi:1712
#, no-wrap
msgid "base"
msgstr ""

#. type: table
#: R-FAQ.texi:1714
msgid "Base R functions (and datasets before R 2.0.0)."
msgstr ""

#. type: item
#: R-FAQ.texi:1714
#, no-wrap
msgid "compiler"
msgstr ""

#. type: table
#: R-FAQ.texi:1716
msgid "R byte code compiler (added in R 2.13.0)."
msgstr ""

#. type: item
#: R-FAQ.texi:1716
#, no-wrap
msgid "datasets"
msgstr ""

#. type: table
#: R-FAQ.texi:1718
msgid "Base R datasets (added in R 2.0.0)."
msgstr ""

#. type: item
#: R-FAQ.texi:1718
#, no-wrap
msgid "grDevices"
msgstr ""

#. type: table
#: R-FAQ.texi:1721
msgid "Graphics devices for base and grid graphics (added in R 2.0.0)."
msgstr ""

#. type: item
#: R-FAQ.texi:1721
#, no-wrap
msgid "graphics"
msgstr ""

#. type: table
#: R-FAQ.texi:1723
msgid "R functions for base graphics."
msgstr ""

#. type: item
#: R-FAQ.texi:1723
#, no-wrap
msgid "grid"
msgstr ""

#. type: table
#: R-FAQ.texi:1726
msgid "A rewrite of the graphics layout capabilities, plus some support for interaction."
msgstr ""

#. type: item
#: R-FAQ.texi:1726
#, no-wrap
msgid "methods"
msgstr ""

#. type: table
#: R-FAQ.texi:1729
msgid "Formally defined methods and classes for R objects, plus other programming tools, as described in the Green Book."
msgstr ""

#. type: item
#: R-FAQ.texi:1729
#, no-wrap
msgid "parallel"
msgstr ""

#. type: table
#: R-FAQ.texi:1732
msgid "Support for parallel computation, including by forking and by sockets, and random-number generation (added in R 2.14.0)."
msgstr ""

#. type: item
#: R-FAQ.texi:1732
#, no-wrap
msgid "splines"
msgstr ""

#. type: table
#: R-FAQ.texi:1734
msgid "Regression spline functions and classes."
msgstr ""

#. type: item
#: R-FAQ.texi:1734
#, no-wrap
msgid "stats"
msgstr ""

#. type: table
#: R-FAQ.texi:1736
msgid "R statistical functions."
msgstr ""

#. type: item
#: R-FAQ.texi:1736
#, no-wrap
msgid "stats4"
msgstr ""

#. type: table
#: R-FAQ.texi:1738
msgid "Statistical functions using S4 classes."
msgstr ""

#. type: item
#: R-FAQ.texi:1738
#, no-wrap
msgid "tcltk"
msgstr ""

#. type: table
#: R-FAQ.texi:1740
msgid "Interface and language bindings to Tcl/Tk @acronym{GUI} elements."
msgstr ""

#. type: item
#: R-FAQ.texi:1740
#, no-wrap
msgid "tools"
msgstr ""

#. type: table
#: R-FAQ.texi:1742
msgid "Tools for package development and administration."
msgstr ""

#. type: item
#: R-FAQ.texi:1742
#, no-wrap
msgid "utils"
msgstr ""

#. type: table
#: R-FAQ.texi:1744
msgid "R utility functions."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1752
msgid "These ``base packages'' were substantially reorganized in R 1.9.0.  The former @pkg{base} was split into the four packages @pkg{base}, @pkg{graphics}, @pkg{stats}, and @pkg{utils}.  Packages @pkg{ctest}, @pkg{eda}, @pkg{modreg}, @pkg{mva}, @pkg{nls}, @pkg{stepfun} and @pkg{ts} were merged into @pkg{stats}, package @pkg{lqs} returned to the recommended package @CRANpkg{MASS}, and package @pkg{mle} moved to @pkg{stats4}."
msgstr ""

#. type: node
#: R-FAQ.texi:1753
#: R-FAQ.texi:1826
#: R-FAQ.texi:1827
#: R-FAQ.texi:1837
#, no-wrap
msgid "Add-on packages from Omegahat"
msgstr ""

#. type: subsection
#: R-FAQ.texi:1754
#, no-wrap
msgid "Add-on packages from @acronym{CRAN}"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1759
msgid "The @CRAN{} @file{src/contrib} area contains a wealth of add-on packages, including the following @emph{recommended} packages which are to be included in all binary distributions of R."
msgstr ""

#. type: item
#: R-FAQ.texi:1763
#, no-wrap
msgid "KernSmooth"
msgstr ""

#. type: table
#: R-FAQ.texi:1766
msgid "Functions for kernel smoothing (and density estimation) corresponding to the book ``Kernel Smoothing'' by M. P. Wand and M. C. Jones, 1995."
msgstr ""

#. type: item
#: R-FAQ.texi:1766
#, no-wrap
msgid "MASS"
msgstr ""

#. type: table
#: R-FAQ.texi:1770
msgid "Functions and datasets from the main package of Venables and Ripley, ``Modern Applied Statistics with S''.  (Contained in the @file{VR} bundle for R versions prior to 2.10.0.)"
msgstr ""

#. type: item
#: R-FAQ.texi:1770
#, no-wrap
msgid "Matrix"
msgstr ""

#. type: table
#: R-FAQ.texi:1773
msgid "A Matrix package.  (Recommended for R 2.9.0 or later.)"
msgstr ""

#. type: item
#: R-FAQ.texi:1773
#, no-wrap
msgid "boot"
msgstr ""

#. type: table
#: R-FAQ.texi:1777
msgid "Functions and datasets for bootstrapping from the book ``Bootstrap Methods and Their Applications'' by A. C. Davison and D. V. Hinkley, 1997, Cambridge University Press."
msgstr ""

#. type: item
#: R-FAQ.texi:1777
#, no-wrap
msgid "class"
msgstr ""

#. type: table
#: R-FAQ.texi:1780
msgid "Functions for classification (@math{k}-nearest neighbor and LVQ).  (Contained in the @file{VR} bundle for R versions prior to 2.10.0.)"
msgstr ""

#. type: item
#: R-FAQ.texi:1780
#, no-wrap
msgid "cluster"
msgstr ""

#. type: table
#: R-FAQ.texi:1782
msgid "Functions for cluster analysis."
msgstr ""

#. type: item
#: R-FAQ.texi:1782
#, no-wrap
msgid "codetools"
msgstr ""

#. type: table
#: R-FAQ.texi:1785
msgid "Code analysis tools.  (Recommended for R 2.5.0 or later.)"
msgstr ""

#. type: item
#: R-FAQ.texi:1785
#, no-wrap
msgid "foreign"
msgstr ""

#. type: table
#: R-FAQ.texi:1788
msgid "Functions for reading and writing data stored by statistical software like Minitab, S, SAS, SPSS, Stata, Systat, etc."
msgstr ""

#. type: item
#: R-FAQ.texi:1788
#, no-wrap
msgid "lattice"
msgstr ""

#. type: table
#: R-FAQ.texi:1790
msgid "Lattice graphics, an implementation of Trellis Graphics functions."
msgstr ""

#. type: item
#: R-FAQ.texi:1790
#, no-wrap
msgid "mgcv"
msgstr ""

#. type: table
#: R-FAQ.texi:1793
msgid "Routines for GAMs and other generalized ridge regression problems with multiple smoothing parameter selection by GCV or UBRE."
msgstr ""

#. type: item
#: R-FAQ.texi:1793
#, no-wrap
msgid "nlme"
msgstr ""

#. type: table
#: R-FAQ.texi:1795
msgid "Fit and compare Gaussian linear and nonlinear mixed-effects models."
msgstr ""

#. type: item
#: R-FAQ.texi:1795
#, no-wrap
msgid "nnet"
msgstr ""

#. type: table
#: R-FAQ.texi:1799
msgid "Software for single hidden layer perceptrons (``feed-forward neural networks''), and for multinomial log-linear models.  (Contained in the @file{VR} bundle for R versions prior to 2.10.0.)"
msgstr ""

#. type: item
#: R-FAQ.texi:1799
#, no-wrap
msgid "rpart"
msgstr ""

#. type: table
#: R-FAQ.texi:1801
msgid "Recursive PARTitioning and regression trees."
msgstr ""

#. type: item
#: R-FAQ.texi:1801
#, no-wrap
msgid "spatial"
msgstr ""

#. type: table
#: R-FAQ.texi:1805
msgid "Functions for kriging and point pattern analysis from ``Modern Applied Statistics with S'' by W. Venables and B. Ripley.  (Contained in the @file{VR} bundle for R versions prior to 2.10.0.)"
msgstr ""

#. type: item
#: R-FAQ.texi:1805
#, no-wrap
msgid "survival"
msgstr ""

#. type: table
#: R-FAQ.texi:1807
msgid "Functions for survival analysis, including penalized likelihood."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1811
msgid "See the @url{http://CRAN.R-project.org/web/packages/, , @CRAN{} contributed packages page} for more information."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1816
msgid "Many of these packages are categorized into @url{http://CRAN.R-project.org/web/views/, @CRAN{} Task Views}, allowing to browse packages by topic and providing tools to automatically install all packages for special areas of interest."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1825
msgid "Some @CRAN{} packages that do not build out of the box on Windows, require additional software, or are shipping third party libraries for Windows cannot be made available on @CRAN{} in form of a Windows binary packages.  Nevertheless, some of these packages are available at the ``@CRAN{} extras'' repository at @url{http://www.stats.ox.ac.uk/pub/RWin/} kindly provided by Brian D. Ripley.  Note that this repository is a default repository for recent versions of R for Windows."
msgstr ""

#. type: node
#: R-FAQ.texi:1826
#: R-FAQ.texi:1837
#: R-FAQ.texi:1838
#: R-FAQ.texi:1853
#, no-wrap
msgid "Add-on packages from Bioconductor"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1836
msgid "The @url{http://www.omegahat.org/, Omega Project for Statistical Computing} provides a variety of open-source software for statistical applications, with special emphasis on web-based software, Java, the Java virtual machine, and distributed computing.  A @acronym{CRAN} style R package repository is available via @url{http://www.omegahat.org/R/}.  See @url{http://www.omegahat.org/} for information on most R packages available from the Omega project."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1852
msgid "@url{http://www.bioconductor.org/, Bioconductor} is an open source and open development software project for the analysis and comprehension of genomic data.  Most Bioconductor components are distributed as R add-on packages.  Initially most of the @url{http://www.bioconductor.org/packages/bioc/, Bioconductor software packages} focused primarily on DNA microarray data analysis.  As the project has matured, the functional scope of the software packages broadened to include the analysis of all types of genomic data, such as SAGE, sequence, or SNP data.  In addition, there are metadata (annotation, CDF and probe) and experiment data packages.  See @url{http://www.bioconductor.org/download/} for available packages and a complete taxonomy via BioC Views."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1860
msgid "Many more packages are available from places other than the three default repositories discussed above (@CRAN{}, Bioconductor and Omegahat).  In particular, R-Forge provides a @CRAN{} style repository at @url{http://R-Forge.R-project.org/}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1863
msgid "More code has been posted to the R-help mailing list, and can be obtained from the mailing list archive."
msgstr ""

#. type: node
#: R-FAQ.texi:1864
#: R-FAQ.texi:1922
#: R-FAQ.texi:1923
#: R-FAQ.texi:2002
#, no-wrap
msgid "How can add-on packages be used?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1872
msgid "(Unix-like only.)  The add-on packages on @CRAN{} come as gzipped tar files named @code{@var{pkg}_@var{version}.tar.gz}, which may in fact be ``bundles'' containing more than one package.  Let @var{path} be the path to such a package file.  Provided that @command{tar} and @command{gzip} are available on your system, type"
msgstr ""

#. type: example
#: R-FAQ.texi:1875
#, no-wrap
msgid "$ R CMD INSTALL @var{path}/@var{pkg}_@var{version}.tar.gz\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1881
msgid "at the shell prompt to install to the library tree rooted at the first directory in your library search path (see the help page for @code{.libPaths()} for details on how the search path is determined)."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1883
msgid "To install to another tree (e.g., your private one), use"
msgstr ""

#. type: example
#: R-FAQ.texi:1886
#, no-wrap
msgid "$ R CMD INSTALL -l @var{lib} @var{path}/@var{pkg}_@var{version}.tar.gz\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1890
msgid "where @var{lib} gives the path to the library tree to install to."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1895
msgid "Even more conveniently, you can install and automatically update packages from within R if you have access to repositories such as @CRAN{}.  See the help page for @code{available.packages()} for more information."
msgstr ""

#. type: node
#: R-FAQ.texi:1922
#: R-FAQ.texi:2002
#: R-FAQ.texi:2003
#: R-FAQ.texi:2023
#, no-wrap
msgid "How can add-on packages be removed?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1926
msgid "To find out which additional packages are available on your system, type"
msgstr ""

#. type: example
#: R-FAQ.texi:1929
#, no-wrap
msgid "library()\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1933
msgid "at the R prompt."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1935
msgid "This produces something like"
msgstr ""

#. type: smallexample
#: R-FAQ.texi:1940
#, no-wrap
msgid ""
"Packages in `/home/me/lib/R':\n"
"\n"
msgstr ""

#. type: smallexample
#: R-FAQ.texi:1942
#, no-wrap
msgid ""
"mystuff       My own R functions, nicely packaged but not documented\n"
"\n"
msgstr ""

#. type: smallexample
#: R-FAQ.texi:1944
#, no-wrap
msgid ""
"Packages in `/usr/local/lib/R/library':\n"
"\n"
msgstr ""

#. type: smallexample
#: R-FAQ.texi:1975
#, no-wrap
msgid ""
"KernSmooth    Functions for kernel smoothing for Wand & Jones (1995)\n"
"MASS          Main Package of Venables and Ripley's MASS\n"
"Matrix        Sparse and Dense Matrix Classes and Methods\n"
"base          The R Base package\n"
"boot          Bootstrap R (S-Plus) Functions (Canty)\n"
"class         Functions for Classification\n"
"cluster       Functions for clustering (by Rousseeuw et al.)\n"
"codetools     Code Analysis Tools for R\n"
"datasets      The R Datasets Package\n"
"foreign       Read Data Stored by Minitab, S, SAS, SPSS, Stata, Systat,\n"
"              dBase, ...\n"
"grDevices     The R Graphics Devices and Support for Colours and Fonts\n"
"graphics      The R Graphics Package\n"
"grid          The Grid Graphics Package\n"
"lattice       Lattice Graphics\n"
"methods       Formal Methods and Classes\n"
"mgcv          GAMs with GCV/AIC/REML smoothness estimation and GAMMs\n"
"              by PQL\n"
"nlme          Linear and Nonlinear Mixed Effects Models\n"
"nnet          Feed-forward Neural Networks and Multinomial Log-Linear\n"
"              Models\n"
"rpart         Recursive Partitioning\n"
"spatial       Functions for Kriging and Point Pattern Analysis\n"
"splines       Regression Spline Functions and Classes\n"
"stats         The R Stats Package\n"
"stats4        Statistical functions using S4 Classes\n"
"survival      Survival analysis, including penalised likelihood\n"
"tcltk         Tcl/Tk Interface\n"
"tools         Tools for Package Development\n"
"utils         The R Utils Package\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1980
msgid "You can ``load'' the installed package @var{pkg} by"
msgstr ""

#. type: example
#: R-FAQ.texi:1983
#, no-wrap
msgid "library(@var{pkg})\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1986
msgid "You can then find out which functions it provides by typing one of"
msgstr ""

#. type: example
#: R-FAQ.texi:1990
#, no-wrap
msgid ""
"library(help = @var{pkg})\n"
"help(package = @var{pkg})\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:1993
msgid "You can unload the loaded package @var{pkg} by"
msgstr ""

#. type: example
#: R-FAQ.texi:1996
#, no-wrap
msgid "detach(\"package:@var{pkg}\", unload = TRUE)\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2001
msgid "(where @code{unload = TRUE} is needed only for packages with a namespace, see @code{?unload})."
msgstr ""

#. type: node
#: R-FAQ.texi:2002
#: R-FAQ.texi:2023
#: R-FAQ.texi:2024
#: R-FAQ.texi:2052
#, no-wrap
msgid "How can I create an R package?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2006
msgid "Use"
msgstr ""

#. type: example
#: R-FAQ.texi:2009
#, no-wrap
msgid "$ R CMD REMOVE @var{pkg_1} @dots{} @var{pkg_n}\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2016
msgid "to remove the packages @var{pkg_1}, @dots{}, @var{pkg_n} from the library tree rooted at the first directory given in @env{R_LIBS} if this is set and non-null, and from the default library otherwise.  (Versions of R prior to 1.3.0 removed from the default library by default.)"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2018
msgid "To remove from library @var{lib}, do"
msgstr ""

#. type: example
#: R-FAQ.texi:2021
#, no-wrap
msgid "$ R CMD REMOVE -l @var{lib} @var{pkg_1} @dots{} @var{pkg_n}\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2033
msgid "A package consists of a subdirectory containing a file @file{DESCRIPTION} and the subdirectories @file{R}, @file{data}, @file{demo}, @file{exec}, @file{inst}, @file{man}, @file{po}, @file{src}, and @file{tests} (some of which can be missing).  The package subdirectory may also contain files @file{INDEX}, @file{NAMESPACE}, @file{configure}, @file{cleanup}, @file{LICENSE}, @file{LICENCE}, @file{COPYING} and @file{NEWS}."
msgstr ""

#. type: ifclear
#: R-FAQ.texi:2040
msgid "See section ``Creating R packages'' in @cite{Writing R Extensions}, for details.  This manual is included in the R distribution, @pxref{What documentation exists for R?}, and gives information on package structure, the configure and cleanup mechanisms, and on automated package checking and building."
msgstr ""

#. type: ifset
#: R-FAQ.texi:2044
msgid "@xref{Creating R packages, , Creating R packages, R-exts, Writing R Extensions}, for details."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2049
msgid "R version 1.3.0 has added the function @code{package.skeleton()} which will set up directories, save data and code, and create skeleton help files for a set of R functions and datasets."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2051
msgid "@xref{What is CRAN?}, for information on uploading a package to @CRAN{}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2059
msgid "R is in active development and there is always a risk of bugs creeping in.  Also, the developers do not have access to all possible machines capable of running R.  So, simply using it and communicating problems is certainly of great value."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2064
msgid "The @url{http://developer.R-project.org/, R Developer Page} acts as an intermediate repository for more or less finalized ideas and plans for the R statistical system.  It contains (pointers to) TODO lists, RFCs, various other writeups, ideas lists, and SVN miscellanea."
msgstr ""

#. type: node
#: R-FAQ.texi:2065
#: R-FAQ.texi:2189
#: R-FAQ.texi:2190
#: R-FAQ.texi:2267
#: R-FAQ.texi:2285
#: R-FAQ.texi:2293
#: R-FAQ.texi:2307
#: R-FAQ.texi:2348
#: R-FAQ.texi:2383
#: R-FAQ.texi:2399
#: R-FAQ.texi:2437
#: R-FAQ.texi:2448
#: R-FAQ.texi:2479
#: R-FAQ.texi:2501
#: R-FAQ.texi:2519
#: R-FAQ.texi:2568
#: R-FAQ.texi:2597
#: R-FAQ.texi:2646
#: R-FAQ.texi:2659
#: R-FAQ.texi:2702
#: R-FAQ.texi:2743
#: R-FAQ.texi:2769
#: R-FAQ.texi:2790
#: R-FAQ.texi:2802
#: R-FAQ.texi:2865
#: R-FAQ.texi:2877
#: R-FAQ.texi:2885
#: R-FAQ.texi:2907
#: R-FAQ.texi:2933
#: R-FAQ.texi:2952
#: R-FAQ.texi:2987
#: R-FAQ.texi:2997
#: R-FAQ.texi:3012
#: R-FAQ.texi:3021
#: R-FAQ.texi:3057
#: R-FAQ.texi:3074
#: R-FAQ.texi:3108
#: R-FAQ.texi:3125
#: R-FAQ.texi:3132
#: R-FAQ.texi:3175
#: R-FAQ.texi:3232
#: R-FAQ.texi:3261
#: R-FAQ.texi:3277
#: R-FAQ.texi:3286
#: R-FAQ.texi:3326
#: R-FAQ.texi:3381
#: R-FAQ.texi:3408
#, no-wrap
msgid "R Miscellanea"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2072
msgid "Is there Emacs support for R?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2072
msgid "Should I run R from within Emacs?::"
msgstr ""

#. type: section
#: R-FAQ.texi:2072
#: R-FAQ.texi:2122
#: R-FAQ.texi:2147
#: R-FAQ.texi:2148
#, no-wrap
msgid "Debugging R from within Emacs"
msgstr ""

#. type: node
#: R-FAQ.texi:2074
#: R-FAQ.texi:2075
#: R-FAQ.texi:2122
#, no-wrap
msgid "Is there Emacs support for R?"
msgstr ""

#. type: node
#: R-FAQ.texi:2074
#: R-FAQ.texi:2122
#: R-FAQ.texi:2123
#: R-FAQ.texi:2147
#, no-wrap
msgid "Should I run R from within Emacs?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2084
msgid "There is an Emacs package called @acronym{ESS} (``Emacs Speaks Statistics'') which provides a standard interface between statistical programs and statistical processes.  It is intended to provide assistance for interactive statistical programming and data analysis.  Languages supported include: S dialects (R, S 3/4, and @SPLUS{} 3.x/4.x/5.x/6.x/7.x), LispStat dialects (XLispStat, ViSta), SAS, Stata, and BUGS."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2094
msgid "@acronym{ESS} grew out of the need for bug fixes and extensions to S-mode 4.8 (which was a @acronym{GNU} Emacs interface to S/@SPLUS{} version 3 only).  The current set of developers desired support for XEmacs, R, S4, and MS Windows.  In addition, with new modes being developed for R, Stata, and SAS, it was felt that a unifying interface and framework for the user interface would benefit both the user and the developer, by helping both groups conform to standard Emacs usage.  The end result is an increase in efficiency for statistical programming and data analysis, over the usual tools."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2107
msgid "R support contains code for editing R source code (syntactic indentation and highlighting of source code, partial evaluations of code, loading and error-checking of code, and source code revision maintenance) and documentation (syntactic indentation and highlighting of source code, sending examples to running @acronym{ESS} process, and previewing), interacting with an inferior R process from within Emacs (command-line editing, searchable command history, command-line completion of R object and file names, quick access to object and search lists, transcript recording, and an interface to the help system), and transcript manipulation (recording and saving transcript files, manipulating and editing saved transcripts, and re-evaluating commands from transcript files)."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2111
msgid "The latest stable version of @acronym{ESS} is available via @CRAN{} or the @url{http://ESS.R-project.org/, ESS web page}.  The @HTML{} version of the documentation can be found at @url{http://stat.ethz.ch/ESS/}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2113
msgid "@acronym{ESS} comes with detailed installation instructions."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2116
msgid "For help with @acronym{ESS}, send email to @email{ESS-help@@stat.math.ethz.ch}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2121
msgid "Please send bug reports and suggestions on @acronym{ESS} to @email{ESS-bugs@@stat.math.ethz.ch}.  The easiest way to do this from is within Emacs by typing @kbd{M-x ess-submit-bug-report} or using the [ESS] or [iESS] pulldown menus."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2129
msgid "Yes, @emph{definitely}.  Inferior R mode provides a readline/history mechanism, object name completion, and syntax-based highlighting of the interaction buffer using Font Lock mode, as well as a very convenient interface to the R help system."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2137
msgid "Of course, it also integrates nicely with the mechanisms for editing R source using Emacs.  One can write code in one Emacs buffer and send whole or parts of it for execution to R; this is helpful for both data analysis and programming.  One can also seamlessly integrate with a revision control system, in order to maintain a log of changes in your programs and data, as well as to allow for the retrieval of past versions of the code."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2140
msgid "In addition, it allows you to keep a record of your session, which can also be used for error recovery through the use of the transcript mode."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2143
msgid "To specify command line arguments for the inferior R process, use @kbd{C-u M-x R} for starting R."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2157
msgid "To debug R ``from within Emacs'', there are several possibilities.  To use the Emacs GUD (Grand Unified Debugger) library with the recommended debugger GDB, type @kbd{M-x gdb} and give the path to the R @emph{binary} as argument.  At the @command{gdb} prompt, set @env{R_HOME} and other environment variables as needed (using e.g.@: @kbd{set env R_HOME /path/to/R/}, but see also below), and start the binary with the desired arguments (e.g., @kbd{run --quiet})."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2161
msgid "If you have @acronym{ESS}, you can do @kbd{C-u M-x R @key{RET} - d @key{SPC} g d b @key{RET}} to start an inferior R process with arguments @option{-d gdb}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2171
msgid "A third option is to start an inferior R process via @acronym{ESS} (@kbd{M-x R}) and then start GUD (@kbd{M-x gdb}) giving the R binary (using its full path name) as the program to debug.  Use the program @command{ps} to find the process number of the currently running R process then use the @code{attach} command in gdb to attach it to that process.  One advantage of this method is that you have separate @code{*R*} and @code{*gud-gdb*} windows.  Within the @code{*R*} window you have all the @acronym{ESS} facilities, such as object-name completion, that we know and love."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2178
msgid "When using GUD mode for debugging from within Emacs, you may find it most convenient to use the directory with your code in it as the current working directory and then make a symbolic link from that directory to the R binary.  That way @file{.gdbinit} can stay in the directory with the code and be used to set up the environment and the search paths for the source, e.g.@: as follows:"
msgstr ""

#. type: example
#: R-FAQ.texi:2187
#, no-wrap
msgid ""
"set env R_HOME /opt/R\n"
"set env R_PAPERSIZE letter\n"
"set env R_PRINTCMD lpr\n"
"dir /opt/R/src/appl\n"
"dir /opt/R/src/main\n"
"dir /opt/R/src/nmath\n"
"dir /opt/R/src/unix\n"
msgstr ""

#. type: node
#: R-FAQ.texi:2189
#: R-FAQ.texi:3408
#: R-FAQ.texi:3409
#: R-FAQ.texi:3419
#: R-FAQ.texi:3432
#: R-FAQ.texi:3448
#: R-FAQ.texi:3463
#: R-FAQ.texi:3493
#: R-FAQ.texi:3501
#, no-wrap
msgid "R Programming"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How can I set components of a list to NULL?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How can I save my workspace?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How can I clean up my workspace?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How can I get eval() and D() to work?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Why do my matrices lose dimensions?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How does autoloading work?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How should I set options?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How do file names work in Windows?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Why does plotting give a color allocation error?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How do I convert factors to numeric?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Are Trellis displays implemented in R?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "What are the enclosing and parent environments?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How can I substitute into a plot label?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "What are valid names?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Are GAMs implemented in R?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Why is the output not printed when I source() a file?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Why does outer() behave strangely with my function?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Why does the output from anova() depend on the order of factors in the model?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How do I produce PNG graphics in batch mode?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How can I get command line editing to work?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How can I turn a string into a variable?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Why do lattice/trellis graphics not work?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How can I sort the rows of a data frame?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Why does the help.start() search engine not work?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Why did my .Rprofile stop working when I updated R?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Where have all the methods gone?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How can I create rotated axis labels?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Why is read.table() so inefficient?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "What is the difference between package and library?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "I installed a package but the functions are not there::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Why doesn't R think these numbers are equal?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How can I capture or ignore errors in a long simulation?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Why are powers of negative numbers wrong?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How can I save the result of each iteration in a loop into a separate file?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Why are p-values not displayed when using lmer()?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Why are there unwanted borders::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Why does backslash behave strangely inside strings?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How can I put error bars or confidence bands on my plot?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How do I create a plot with two y-axes?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "How do I access the source code for a function?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Why does summary() report strange results for the R^2 estimate when I fit a linear model with no intercept?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:2236
msgid "Why is R apparently not releasing memory?::"
msgstr ""

#. type: section
#: R-FAQ.texi:2236
#: R-FAQ.texi:3326
#: R-FAQ.texi:3381
#: R-FAQ.texi:3382
#, no-wrap
msgid "How can I enable secure https downloads in R?"
msgstr ""

#. type: node
#: R-FAQ.texi:2267
#: R-FAQ.texi:2268
#: R-FAQ.texi:2285
#, no-wrap
msgid "How can I set components of a list to NULL?"
msgstr ""

#. type: node
#: R-FAQ.texi:2267
#: R-FAQ.texi:2285
#: R-FAQ.texi:2286
#: R-FAQ.texi:2293
#, no-wrap
msgid "How can I save my workspace?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2271
msgid "You can use"
msgstr ""

#. type: example
#: R-FAQ.texi:2274
#, no-wrap
msgid "x[i] <- list(NULL)\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2281
msgid "to set component @code{i} of the list @code{x} to @code{NULL}, similarly for named components.  Do not set @code{x[i]} or @code{x[[i]]} to @code{NULL}, because this will remove the corresponding component from the list."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2284
msgid "For dropping the row names of a matrix @code{x}, it may be easier to use @code{rownames(x) <- NULL}, similarly for column names."
msgstr ""

#. type: node
#: R-FAQ.texi:2285
#: R-FAQ.texi:2293
#: R-FAQ.texi:2294
#: R-FAQ.texi:2307
#, no-wrap
msgid "How can I clean up my workspace?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2292
msgid "@code{save.image()} saves the objects in the user's @code{.GlobalEnv} to the file @file{.RData} in the R startup directory.  (This is also what happens after @kbd{q(\"yes\")}.)  Using @code{save.image(@var{file})} one can save the image under a different name."
msgstr ""

#. type: node
#: R-FAQ.texi:2293
#: R-FAQ.texi:2307
#: R-FAQ.texi:2308
#: R-FAQ.texi:2348
#, no-wrap
msgid "How can I get eval() and D() to work?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2298
msgid "To remove all objects in the currently active environment (typically @code{.GlobalEnv}), you can do"
msgstr ""

#. type: example
#: R-FAQ.texi:2301
#, no-wrap
msgid "rm(list = ls(all = TRUE))\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2306
msgid "(Without @option{all = TRUE}, only the objects with names not starting with a @samp{.} are removed.)"
msgstr ""

#. type: node
#: R-FAQ.texi:2307
#: R-FAQ.texi:2348
#: R-FAQ.texi:2349
#: R-FAQ.texi:2383
#, no-wrap
msgid "Why do my matrices lose dimensions?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2315
msgid "Strange things will happen if you use @code{eval(print(x), envir = e)} or @code{D(x^2, \"x\")}.  The first one will either tell you that \"@code{x}\" is not found, or print the value of the wrong @code{x}.  The other one will likely return zero if @code{x} exists, and an error otherwise."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2322
msgid "This is because in both cases, the first argument is evaluated in the calling environment first.  The result (which should be an object of mode @code{\"expression\"} or @code{\"call\"}) is then evaluated or differentiated.  What you (most likely) really want is obtained by ``quoting'' the first argument upon surrounding it with @code{expression()}.  For example,"
msgstr ""

#. type: example
#: R-FAQ.texi:2326
#, no-wrap
msgid ""
"R> D(expression(x^2), \"x\")\n"
"2 * x\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2333
msgid "Although this behavior may initially seem to be rather strange, it is perfectly logical.  The ``intuitive'' behavior could easily be implemented, but problems would arise whenever the expression is contained in a variable, passed as a parameter, or is the result of a function call.  Consider for instance the semantics in cases like"
msgstr ""

#. type: example
#: R-FAQ.texi:2336
#, no-wrap
msgid "D2 <- function(e, n) D(D(e, n), n)\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2340
#: R-FAQ.texi:2694
#: R-FAQ.texi:2827
#: R-FAQ.texi:2841
msgid "or"
msgstr ""

#. type: example
#: R-FAQ.texi:2344
#, no-wrap
msgid ""
"g <- function(y) eval(substitute(y), sys.frame(sys.parent(n = 2)))\n"
"g(a * b)\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2347
msgid "See the help page for @code{deriv()} for more examples."
msgstr ""

#. type: node
#: R-FAQ.texi:2348
#: R-FAQ.texi:2383
#: R-FAQ.texi:2384
#: R-FAQ.texi:2399
#, no-wrap
msgid "How does autoloading work?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2357
msgid "When a matrix with a single row or column is created by a subscripting operation, e.g., @code{row <- mat[2, ]}, it is by default turned into a vector.  In a similar way if an array with dimension, say, @w{2 x 3 x 1 x 4} is created by subscripting it will be coerced into a @w{2 x 3 x 4} array, losing the unnecessary dimension.  After much discussion this has been determined to be a @emph{feature}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2360
msgid "To prevent this happening, add the option @option{drop = FALSE} to the subscripting.  For example,"
msgstr ""

#. type: example
#: R-FAQ.texi:2365
#, no-wrap
msgid ""
"rowmatrix <- mat[2, , drop = FALSE]  # @r{creates a row matrix}\n"
"colmatrix <- mat[, 2, drop = FALSE]  # @r{creates a column matrix}\n"
"a <- b[1, 1, 1, drop = FALSE]        # @r{creates a 1 x 1 x 1 array}\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2369
msgid "The @option{drop = FALSE} option should be used defensively when programming.  For example, the statement"
msgstr ""

#. type: example
#: R-FAQ.texi:2372
#, no-wrap
msgid "somerows <- mat[index, ]\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2378
msgid "will return a vector rather than a matrix if @code{index} happens to have length 1, causing errors later in the code.  It should probably be rewritten as"
msgstr ""

#. type: example
#: R-FAQ.texi:2381
#, no-wrap
msgid "somerows <- mat[index, , drop = FALSE]\n"
msgstr ""

#. type: node
#: R-FAQ.texi:2383
#: R-FAQ.texi:2399
#: R-FAQ.texi:2400
#: R-FAQ.texi:2437
#, no-wrap
msgid "How should I set options?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2393
msgid "R has a special environment called @code{.AutoloadEnv}.  Using @kbd{autoload(@var{name}, @var{pkg})}, where @var{name} and @var{pkg} are strings giving the names of an object and the package containing it, stores some information in this environment.  When R tries to evaluate @var{name}, it loads the corresponding package @var{pkg} and reevaluates @var{name} in the new package's environment."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2396
msgid "Using this mechanism makes R behave as if the package was loaded, but does not occupy memory (yet)."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2398
msgid "See the help page for @code{autoload()} for a very nice example."
msgstr ""

#. type: node
#: R-FAQ.texi:2399
#: R-FAQ.texi:2437
#: R-FAQ.texi:2438
#: R-FAQ.texi:2448
#, no-wrap
msgid "How do file names work in Windows?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2408
msgid "The function @code{options()} allows setting and examining a variety of global ``options'' which affect the way in which R computes and displays its results.  The variable @code{.Options} holds the current values of these options, but should never directly be assigned to unless you want to drive yourself crazy---simply pretend that it is a ``read-only'' variable."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2410
msgid "For example, given"
msgstr ""

#. type: example
#: R-FAQ.texi:2420
#, no-wrap
msgid ""
"test1 <- function(x = pi, dig = 3) @{\n"
"  oo <- options(digits = dig); on.exit(options(oo));\n"
"  cat(.Options$digits, x, \"\\n\")\n"
"@}\n"
"test2 <- function(x = pi, dig = 3) @{\n"
"  .Options$digits <- dig\n"
"  cat(.Options$digits, x, \"\\n\")\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2424
msgid "we obtain:"
msgstr ""

#. type: example
#: R-FAQ.texi:2430
#, no-wrap
msgid ""
"R> test1()\n"
"3 3.14 \n"
"R> test2()\n"
"3 3.141593\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2436
msgid "What is really used is the @emph{global} value of @code{.Options}, and using @kbd{options(OPT = VAL)} correctly updates it.  Local copies of @code{.Options}, either in @code{.GlobalEnv} or in a function environment (frame), are just silently disregarded."
msgstr ""

#. type: node
#: R-FAQ.texi:2437
#: R-FAQ.texi:2448
#: R-FAQ.texi:2449
#: R-FAQ.texi:2479
#, no-wrap
msgid "Why does plotting give a color allocation error?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2444
msgid "As R uses C-style string handling, @samp{\\} is treated as an escape character, so that for example one can enter a newline as @samp{\\n}.  When you really need a @samp{\\}, you have to escape it with another @samp{\\}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2447
msgid "Thus, in filenames use something like @code{\"c:\\\\data\\\\money.dat\"}.  You can also replace @samp{\\} by @samp{/} (@code{\"c:/data/money.dat\"})."
msgstr ""

#. type: node
#: R-FAQ.texi:2448
#: R-FAQ.texi:2479
#: R-FAQ.texi:2480
#: R-FAQ.texi:2501
#, no-wrap
msgid "How do I convert factors to numeric?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2457
msgid "On an X11 device, plotting sometimes, e.g., when running @code{demo(\"image\")}, results in ``Error: color allocation error''.  This is an X problem, and only indirectly related to R.  It occurs when applications started prior to R have used all the available colors.  (How many colors are available depends on the X configuration; sometimes only 256 colors can be used.)"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2462
msgid "One application which is notorious for ``eating'' colors is Netscape.  If the problem occurs when Netscape is running, try (re)starting it with either the @option{-no-install} (to use the default colormap) or the @option{-install} (to install a private colormap) option."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2466
msgid "You could also set the @code{colortype} of @code{X11()} to @code{\"pseudo.cube\"} rather than the default @code{\"pseudo\"}.  See the help page for @code{X11()} for more information."
msgstr ""

#. type: node
#: R-FAQ.texi:2479
#: R-FAQ.texi:2501
#: R-FAQ.texi:2502
#: R-FAQ.texi:2519
#, no-wrap
msgid "Are Trellis displays implemented in R?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2485
msgid "It may happen that when reading numeric data into R (usually, when reading in a file), they come in as factors.  If @code{f} is such a factor object, you can use"
msgstr ""

#. type: example
#: R-FAQ.texi:2488
#, no-wrap
msgid "as.numeric(as.character(f))\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2492
msgid "to get the numbers back.  More efficient, but harder to remember, is"
msgstr ""

#. type: example
#: R-FAQ.texi:2495
#, no-wrap
msgid "as.numeric(levels(f))[as.integer(f)]\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2500
msgid "In any case, do not call @code{as.numeric()} or their likes directly for the task at hand (as @code{as.numeric()} or @code{unclass()} give the internal codes)."
msgstr ""

#. type: node
#: R-FAQ.texi:2501
#: R-FAQ.texi:2519
#: R-FAQ.texi:2520
#: R-FAQ.texi:2568
#, no-wrap
msgid "What are the enclosing and parent environments?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2507
msgid "The recommended package @CRANpkg{lattice} (which is based on base package @pkg{grid}) provides graphical functionality that is compatible with most Trellis commands."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2514
msgid "You could also look at @code{coplot()} and @code{dotchart()} which might do at least some of what you want.  Note also that the R version of @code{pairs()} is fairly general and provides most of the functionality of @code{splom()}, and that R's default plot method has an argument @code{asp} allowing to specify (and fix against device resizing) the aspect ratio of the plot."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2518
msgid "(Because the word ``Trellis'' has been claimed as a trademark we do not use it in R.  The name ``lattice'' has been chosen for the R equivalent.)"
msgstr ""

#. type: node
#: R-FAQ.texi:2519
#: R-FAQ.texi:2568
#: R-FAQ.texi:2569
#: R-FAQ.texi:2597
#, no-wrap
msgid "How can I substitute into a plot label?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2525
msgid "Inside a function you may want to access variables in two additional environments: the one that the function was defined in (``enclosing''), and the one it was invoked in (``parent'')."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2533
msgid "If you create a function at the command line or load it in a package its enclosing environment is the global workspace.  If you define a function @code{f()} inside another function @code{g()} its enclosing environment is the environment inside @code{g()}.  The enclosing environment for a function is fixed when the function is created.  You can find out the enclosing environment for a function @code{f()} using @code{environment(f)}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2541
msgid "The ``parent'' environment, on the other hand, is defined when you invoke a function.  If you invoke @code{lm()} at the command line its parent environment is the global workspace, if you invoke it inside a function @code{f()} then its parent environment is the environment inside @code{f()}.  You can find out the parent environment for an invocation of a function by using @code{parent.frame()} or @code{sys.frame(sys.parent())}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2548
msgid "So for most user-visible functions the enclosing environment will be the global workspace, since that is where most functions are defined.  The parent environment will be wherever the function happens to be called from.  If a function @code{f()} is defined inside another function @code{g()} it will probably be used inside @code{g()} as well, so its parent environment and enclosing environment will probably be the same."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2553
msgid "Parent environments are important because things like model formulas need to be evaluated in the environment the function was called from, since that's where all the variables will be available.  This relies on the parent environment being potentially different with each invocation."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2560
msgid "Enclosing environments are important because a function can use variables in the enclosing environment to share information with other functions or with other invocations of itself (see the section on lexical scoping).  This relies on the enclosing environment being the same each time the function is invoked.  (In C this would be done with static variables.)"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2567
msgid "Scoping @emph{is} hard.  Looking at examples helps.  It is particularly instructive to look at examples that work differently in R and S and try to see why they differ.  One way to describe the scoping differences between R and S is to say that in S the enclosing environment is @emph{always} the global workspace, but in R the enclosing environment is wherever the function was created."
msgstr ""

#. type: node
#: R-FAQ.texi:2568
#: R-FAQ.texi:2597
#: R-FAQ.texi:2598
#: R-FAQ.texi:2646
#, no-wrap
msgid "What are valid names?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2578
msgid "Often, it is desired to use the value of an R object in a plot label, e.g., a title.  This is easily accomplished using @code{paste()} if the label is a simple character string, but not always obvious in case the label is an expression (for refined mathematical annotation).  In such a case, either use @code{parse()} on your pasted character string or use @code{substitute()} on an expression.  For example, if @code{ahat} is an estimator of your parameter @math{a} of interest, use"
msgstr ""

#. type: example
#: R-FAQ.texi:2581
#, no-wrap
msgid "title(substitute(hat(a) == ahat, list(ahat = ahat)))\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2586
msgid "(note that it is @samp{==} and not @samp{=}).  Sometimes @code{bquote()} gives a more compact form, e.g.,"
msgstr ""

#. type: example
#: R-FAQ.texi:2589
#, no-wrap
msgid "title(bquote(hat(a) = .(ahat)))\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2594
msgid "where subexpressions enclosed in @samp{.()} are replaced by their values."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2596
msgid "There are more examples in the mailing list archives."
msgstr ""

#. type: node
#: R-FAQ.texi:2597
#: R-FAQ.texi:2646
#: R-FAQ.texi:2647
#: R-FAQ.texi:2659
#, no-wrap
msgid "Are GAMs implemented in R?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2605
msgid "When creating data frames using @code{data.frame()} or @code{read.table()}, R by default ensures that the variable names are syntactically valid.  (The argument @option{check.names} to these functions controls whether variable names are checked and adjusted by @code{make.names()} if needed.)"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2609
msgid "To understand what names are ``valid'', one needs to take into account that the term ``name'' is used in several different (but related) ways in the language:"
msgstr ""

#. type: enumerate
#: R-FAQ.texi:2617
msgid "A @emph{syntactic name} is a string the parser interprets as this type of expression.  It consists of letters, numbers, and the dot and (for versions of R at least 1.9.0) underscore characters, and starts with either a letter or a dot not followed by a number.  Reserved words are not syntactic names."
msgstr ""

#. type: enumerate
#: R-FAQ.texi:2624
msgid "An @emph{object name} is a string associated with an object that is assigned in an expression either by having the object name on the left of an assignment operation or as an argument to the @code{assign()} function.  It is usually a syntactic name as well, but can be any non-empty string if it is quoted (and it is always quoted in the call to @code{assign()})."
msgstr ""

#. type: enumerate
#: R-FAQ.texi:2630
msgid "An @emph{argument name} is what appears to the left of the equals sign when supplying an argument in a function call (for example, @code{f(trim=.5)}).  Argument names are also usually syntactic names, but again can be anything if they are quoted."
msgstr ""

#. type: enumerate
#: R-FAQ.texi:2638
msgid "An @emph{element name} is a string that identifies a piece of an object (a component of a list, for example.)  When it is used on the right of the @samp{$} operator, it must be a syntactic name, or quoted.  Otherwise, element names can be any strings.  (When an object is used as a database, as in a call to @code{eval()} or @code{attach()}, the element names become object names.)"
msgstr ""

#. type: enumerate
#: R-FAQ.texi:2644
msgid "Finally, a @emph{file name} is a string identifying a file in the operating system for reading, writing, etc.  It really has nothing much to do with names in the language, but it is traditional to call these strings file ``names''."
msgstr ""

#. type: node
#: R-FAQ.texi:2646
#: R-FAQ.texi:2659
#: R-FAQ.texi:2660
#: R-FAQ.texi:2702
#, no-wrap
msgid "Why is the output not printed when I source() a file?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2658
msgid "Package @CRANpkg{gam} from @CRAN{} implements all the Generalized Additive Models (GAM) functionality as described in the GAM chapter of the White Book.  In particular, it implements backfitting with both local regression and smoothing splines, and is extendable.  There is a @code{gam()} function for GAMs in package @CRANpkg{mgcv}, but it is not an exact clone of what is described in the White Book (no @code{lo()} for example).  Package @CRANpkg{gss} can fit spline-based GAMs too.  And if you can accept regression splines you can use @code{glm()}.  For Gaussian GAMs you can use @code{bruto()} from package @CRANpkg{mda}."
msgstr ""

#. type: node
#: R-FAQ.texi:2659
#: R-FAQ.texi:2702
#: R-FAQ.texi:2703
#: R-FAQ.texi:2743
#, no-wrap
msgid "Why does outer() behave strangely with my function?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2663
msgid "Most R commands do not generate any output. The command"
msgstr ""

#. type: example
#: R-FAQ.texi:2666
#, no-wrap
msgid "1+1\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2670
msgid "computes the value 2 and returns it; the command"
msgstr ""

#. type: example
#: R-FAQ.texi:2673
#, no-wrap
msgid "summary(glm(y~x+z, family=binomial))\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2679
msgid "fits a logistic regression model, computes some summary information and returns an object of class @code{\"summary.glm\"} (@pxref{How should I write summary methods?})."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2685
msgid "If you type @samp{1+1} or @samp{summary(glm(y~x+z, family=binomial))} at the command line the returned value is automatically printed (unless it is @code{invisible()}), but in other circumstances, such as in a @code{source()}d file or inside a function it isn't printed unless you specifically print it."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2687
msgid "To print the value use"
msgstr ""

#. type: example
#: R-FAQ.texi:2690
#, no-wrap
msgid "print(1+1)\n"
msgstr ""

#. type: example
#: R-FAQ.texi:2697
#, no-wrap
msgid "print(summary(glm(y~x+z, family=binomial)))\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2701
msgid "instead, or use @code{source(@var{file}, echo=TRUE)}."
msgstr ""

#. type: node
#: R-FAQ.texi:2702
#: R-FAQ.texi:2743
#: R-FAQ.texi:2744
#: R-FAQ.texi:2769
#, no-wrap
msgid "Why does the output from anova() depend on the order of factors in the model?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2712
msgid "As the help for @code{outer()} indicates, it does not work on arbitrary functions the way the @code{apply()} family does.  It requires functions that are vectorized to work elementwise on arrays.  As you can see by looking at the code, @code{outer(x, y, FUN)} creates two large vectors containing every possible combination of elements of @code{x} and @code{y} and then passes this to @code{FUN} all at once.  Your function probably cannot handle two large vectors as parameters."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2717
msgid "If you have a function that cannot handle two vectors but can handle two scalars, then you can still use @code{outer()} but you will need to wrap your function up first, to simulate vectorized behavior.  Suppose your function is"
msgstr ""

#. type: example
#: R-FAQ.texi:2723
#, no-wrap
msgid ""
"foo <- function(x, y, happy) @{\n"
"  stopifnot(length(x) == 1, length(y) == 1) # scalars only!\n"
"  (x + y) * happy\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2727
msgid "If you define the general function"
msgstr ""

#. type: example
#: R-FAQ.texi:2732
#, no-wrap
msgid ""
"wrapper <- function(x, y, my.fun, ...) @{\n"
"  sapply(seq_along(x), FUN = function(i) my.fun(x[i], y[i], ...))\n"
"@}\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2736
msgid "then you can use @code{outer()} by writing, e.g.,"
msgstr ""

#. type: example
#: R-FAQ.texi:2739
#, no-wrap
msgid "outer(1:4, 1:2, FUN = wrapper, my.fun = foo, happy = 10)\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2742
msgid "Scalar functions can also be vectorized using @code{Vectorize()}."
msgstr ""

#. type: node
#: R-FAQ.texi:2743
#: R-FAQ.texi:2769
#: R-FAQ.texi:2770
#: R-FAQ.texi:2790
#, no-wrap
msgid "How do I produce PNG graphics in batch mode?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2755
msgid "In a model such as @code{~A+B+A:B}, R will report the difference in sums of squares between the models @code{~1}, @code{~A}, @code{~A+B} and @code{~A+B+A:B}.  If the model were @code{~B+A+A:B}, R would report differences between @code{~1}, @code{~B}, @code{~A+B}, and @code{~A+B+A:B} . In the first case the sum of squares for @code{A} is comparing @code{~1} and @code{~A}, in the second case it is comparing @code{~B} and @code{~B+A}.  In a non-orthogonal design (i.e., most unbalanced designs) these comparisons are (conceptually and numerically)  different."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2762
msgid "Some packages report instead the sums of squares based on comparing the full model to the models with each factor removed one at a time (the famous `Type III sums of squares' from SAS, for example).  These do not depend on the order of factors in the model.  The question of which set of sums of squares is the Right Thing provokes low-level holy wars on R-help from time to time."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2768
msgid "There is no need to be agitated about the particular sums of squares that R reports.  You can compute your favorite sums of squares quite easily.  Any two models can be compared with @code{anova(@var{model1}, @var{model2})}, and @code{drop1(@var{model1})} will show the sums of squares resulting from dropping single terms."
msgstr ""

#. type: node
#: R-FAQ.texi:2769
#: R-FAQ.texi:2790
#: R-FAQ.texi:2791
#: R-FAQ.texi:2802
#, no-wrap
msgid "How can I get command line editing to work?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2778
msgid "Under a Unix-like, if your installation supports the @code{type=\"cairo\"} option to the @code{png()} device there should be no problems, and the default settings should just work.  This option is not available for versions of R prior to 2.7.0, or without support for cairo.  From R 2.7.0 @code{png()} by default uses the Quartz device on OS X, and that too works in batch mode."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2789
msgid "Earlier versions of the @code{png()} device used the X11 driver, which is a problem in batch mode or for remote operation.  If you have Ghostscript you can use @code{bitmap()}, which produces a PostScript or PDF file then converts it to any bitmap format supported by Ghostscript.  On some installations this produces ugly output, on others it is perfectly satisfactory.  Many systems now come with Xvfb from @url{http://www.x.org/, X.Org} (possibly as an optional install), which is an X11 server that does not require a screen; and there is the @CRANpkg{GDD} package from @CRAN{}, which produces PNG, JPEG and GIF bitmaps without X11."
msgstr ""

#. type: node
#: R-FAQ.texi:2790
#: R-FAQ.texi:2802
#: R-FAQ.texi:2803
#: R-FAQ.texi:2865
#, no-wrap
msgid "How can I turn a string into a variable?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2801
msgid "The Unix-like command-line interface to R can only provide the inbuilt command line editor which allows recall, editing and re-submission of prior commands provided that the @acronym{GNU} readline library is available at the time R is configured for compilation.  Note that the `development' version of readline including the appropriate headers is needed: users of Linux binary distributions will need to install packages such as @code{libreadline-dev} (Debian) or @code{readline-devel} (Red Hat)."
msgstr ""

#. type: node
#: R-FAQ.texi:2802
#: R-FAQ.texi:2865
#: R-FAQ.texi:2866
#: R-FAQ.texi:2877
#, no-wrap
msgid "Why do lattice/trellis graphics not work?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2806
msgid "If you have"
msgstr ""

#. type: example
#: R-FAQ.texi:2809
#, no-wrap
msgid "varname <- c(\"a\", \"b\", \"d\")\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2813
msgid "you can do"
msgstr ""

#. type: example
#: R-FAQ.texi:2816
#, no-wrap
msgid "get(varname[1]) + 2\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2820
#: R-FAQ.texi:2834
#: R-FAQ.texi:2849
msgid "for"
msgstr ""

#. type: example
#: R-FAQ.texi:2823
#, no-wrap
msgid "a + 2\n"
msgstr ""

#. type: example
#: R-FAQ.texi:2830
#, no-wrap
msgid "assign(varname[1], 2 + 2)\n"
msgstr ""

#. type: example
#: R-FAQ.texi:2837
#, no-wrap
msgid "a <- 2 + 2\n"
msgstr ""

#. type: example
#: R-FAQ.texi:2845
#, no-wrap
msgid ""
"eval(substitute(lm(y ~ x + variable),\n"
"                list(variable = as.name(varname[1]))))\n"
msgstr ""

#. type: example
#: R-FAQ.texi:2852
#, no-wrap
msgid "lm(y ~ x + a)\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2856
msgid "At least in the first two cases it is often easier to just use a list, and then you can easily index it by name"
msgstr ""

#. type: example
#: R-FAQ.texi:2860
#, no-wrap
msgid ""
"vars <- list(a = 1:10, b = rnorm(100), d = LETTERS)\n"
"vars[[\"a\"]]\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2864
msgid "without any of this messing about."
msgstr ""

#. type: node
#: R-FAQ.texi:2865
#: R-FAQ.texi:2877
#: R-FAQ.texi:2878
#: R-FAQ.texi:2885
#, no-wrap
msgid "How can I sort the rows of a data frame?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2876
msgid "The most likely reason is that you forgot to tell R to display the graph.  Lattice functions such as @code{xyplot()} create a graph object, but do not display it (the same is true of @CRANpkg{ggplot2} graphics, and Trellis graphics in @SPLUS{}).  The @code{print()} method for the graph object produces the actual display.  When you use these functions interactively at the command line, the result is automatically printed, but in @code{source()} or inside your own functions you will need an explicit @code{print()} statement."
msgstr ""

#. type: node
#: R-FAQ.texi:2877
#: R-FAQ.texi:2885
#: R-FAQ.texi:2886
#: R-FAQ.texi:2907
#, no-wrap
msgid "Why does the help.start() search engine not work?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2884
msgid "To sort the rows within a data frame, with respect to the values in one or more of the columns, simply use @code{order()} (e.g., @code{DF[order(DF$a, DF[[\"b\"]]), ]} to sort the data frame @code{DF} on columns named @code{a} and @code{b})."
msgstr ""

#. type: node
#: R-FAQ.texi:2885
#: R-FAQ.texi:2907
#: R-FAQ.texi:2908
#: R-FAQ.texi:2933
#, no-wrap
msgid "Why did my .Rprofile stop working when I updated R?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2892
msgid "The browser-based search engine in @code{help.start()} utilizes a Java applet.  In order for this to function properly, a compatible version of Java must installed on your system and linked to your browser, and both Java @emph{and} JavaScript need to be enabled in your browser."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2895
msgid "There have been a number of compatibility issues with versions of Java and of browsers."
msgstr ""

#. type: ifclear
#: R-FAQ.texi:2901
msgid "For further details please consult section ``Enabling search in HTML help'' in @cite{R Installation and Administration}.  This manual is included in the R distribution, @pxref{What documentation exists for R?}, and its @acronym{HTML} version is linked from the @acronym{HTML} search page."
msgstr ""

#. type: ifset
#: R-FAQ.texi:2905
msgid "@xref{Enabling search in HTML help, , Enabling search in HTML help, R-admin, R Installation and Administration}, for further details."
msgstr ""

#. type: node
#: R-FAQ.texi:2907
#: R-FAQ.texi:2933
#: R-FAQ.texi:2934
#: R-FAQ.texi:2952
#, no-wrap
msgid "Where have all the methods gone?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2913
msgid "Did you read the @file{NEWS} file? For functions that are not in the @pkg{base} package you need to specify the correct package namespace, since the code will be run @emph{before} the packages are loaded.  E.g.,"
msgstr ""

#. type: example
#: R-FAQ.texi:2917
#, no-wrap
msgid ""
"ps.options(horizontal = FALSE)\n"
"help.start()\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2921
msgid "needs to be"
msgstr ""

#. type: example
#: R-FAQ.texi:2925
#, no-wrap
msgid ""
"grDevices::ps.options(horizontal = FALSE)\n"
"utils::help.start()\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2932
msgid "(@code{graphics::ps.options(horizontal = FALSE)} in R 1.9.x)."
msgstr ""

#. type: node
#: R-FAQ.texi:2933
#: R-FAQ.texi:2952
#: R-FAQ.texi:2953
#: R-FAQ.texi:2987
#, no-wrap
msgid "How can I create rotated axis labels?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2939
msgid "Many functions, particularly S3 methods, are now hidden in namespaces.  This has the advantage that they cannot be called inadvertently with arguments of the wrong class, but it makes them harder to view."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2941
msgid "To see the code for an S3 method (e.g., @code{[.terms}) use"
msgstr ""

#. type: example
#: R-FAQ.texi:2944
#, no-wrap
msgid "getS3method(\"[\", \"terms\")\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2951
msgid "To see the code for an unexported function @code{foo()} in the namespace of package @code{\"bar\"} use @code{bar:::foo}.  Don't use these constructions to call unexported functions in your own code---they are probably unexported for a reason and may change without warning."
msgstr ""

#. type: node
#: R-FAQ.texi:2952
#: R-FAQ.texi:2987
#: R-FAQ.texi:2988
#: R-FAQ.texi:2997
#, no-wrap
msgid "Why is read.table() so inefficient?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2958
msgid "To rotate axis labels (using base graphics), you need to use @code{text()}, rather than @code{mtext()}, as the latter does not support @code{par(\"srt\")}."
msgstr ""

#. type: example
#: R-FAQ.texi:2973
#, no-wrap
msgid ""
"## @r{Increase bottom margin to make room for rotated labels}\n"
"par(mar = c(7, 4, 4, 2) + 0.1)\n"
"## @r{Create plot with no x axis and no x axis label}\n"
"plot(1 : 8, xaxt = \"n\",  xlab = \"\")\n"
"## @r{Set up x axis with tick marks alone}\n"
"axis(1, labels = FALSE)\n"
"## @r{Create some text labels}\n"
"labels <- paste(\"Label\", 1:8, sep = \" \")\n"
"## @r{Plot x axis labels at default tick marks}\n"
"text(1:8, par(\"usr\")[3] - 0.25, srt = 45, adj = 1,\n"
"     labels = labels, xpd = TRUE)\n"
"## @r{Plot x axis label at line 6 (of 7)}\n"
"mtext(1, text = \"X Axis Label\", line = 6)\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2982
msgid "When plotting the x axis labels, we use @code{srt = 45} for text rotation angle, @code{adj = 1} to place the right end of text at the tick marks, and @code{xpd = TRUE} to allow for text outside the plot region.  You can adjust the value of the @code{0.25} offset as required to move the axis labels up or down relative to the x axis.  See @code{?par} for more information."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2986
msgid "Also see Figure 1 and associated code in Paul Murrell (2003), ``Integrating grid Graphics Output with Base Graphics Output'', @emph{R News}, @strong{3/2}, 7--12."
msgstr ""

#. type: node
#: R-FAQ.texi:2987
#: R-FAQ.texi:2997
#: R-FAQ.texi:2998
#: R-FAQ.texi:3012
#, no-wrap
msgid "What is the difference between package and library?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:2996
msgid "By default, @code{read.table()} needs to read in everything as character data, and then try to figure out which variables to convert to numerics or factors.  For a large data set, this takes considerable amounts of time and memory.  Performance can substantially be improved by using the @code{colClasses} argument to specify the classes to be assumed for the columns of the table."
msgstr ""

#. type: node
#: R-FAQ.texi:2997
#: R-FAQ.texi:3012
#: R-FAQ.texi:3013
#: R-FAQ.texi:3021
#, no-wrap
msgid "I installed a package but the functions are not there"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3007
msgid "A @dfn{package} is a standardized collection of material extending R, e.g.@: providing code, data, or documentation.  A @dfn{library} is a place (directory) where R knows to find packages it can use (i.e., which were @dfn{installed}).  R is told to use a package (to ``load'' it and add it to the search path) via calls to the function @code{library}.  I.e., @code{library()} is employed to load a package from libraries containing packages."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3011
msgid "@xref{R Add-On Packages}, for more details.  See also Uwe Ligges (2003), ``R Help Desk: Package Management'', @emph{R News}, @strong{3/3}, 37--39."
msgstr ""

#. type: node
#: R-FAQ.texi:3012
#: R-FAQ.texi:3021
#: R-FAQ.texi:3022
#: R-FAQ.texi:3057
#, no-wrap
msgid "Why doesn't R think these numbers are equal?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3017
msgid "To actually @emph{use} the package, it needs to be @emph{loaded} using @code{library()}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3020
msgid "See @ref{R Add-On Packages} and @ref{What is the difference between package and library?} for more information."
msgstr ""

#. type: node
#: R-FAQ.texi:3021
#: R-FAQ.texi:3057
#: R-FAQ.texi:3058
#: R-FAQ.texi:3074
#, no-wrap
msgid "How can I capture or ignore errors in a long simulation?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3030
msgid "The only numbers that can be represented exactly in R's numeric type are integers and fractions whose denominator is a power of 2.  Other numbers have to be rounded to (typically) 53 binary digits accuracy.  As a result, two floating point numbers will not reliably be equal unless they have been computed by the same algorithm, and not always even then.  For example"
msgstr ""

#. type: example
#: R-FAQ.texi:3037
#, no-wrap
msgid ""
"R> a <- sqrt(2)\n"
"R> a * a == 2\n"
"[1] FALSE\n"
"R> a * a - 2\n"
"[1] 4.440892e-16\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3043
msgid "The function @code{all.equal()} compares two objects using a numeric tolerance of @code{.Machine$double.eps ^ 0.5}.  If you want much greater accuracy than this you will need to consider error propagation carefully."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3048
msgid "For more information, see e.g.@: David Goldberg (1991), ``What Every Computer Scientist Should Know About Floating-Point Arithmetic'', @emph{ACM Computing Surveys}, @strong{23/1}, 5--48, also available via @url{http://www.validlab.com/goldberg/paper.pdf}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3051
msgid "To quote from ``The Elements of Programming Style'' by Kernighan and Plauger:"
msgstr ""

#. type: quotation
#: R-FAQ.texi:3054
msgid "@emph{10.0 times 0.1 is hardly ever 1.0}."
msgstr ""

#. type: node
#: R-FAQ.texi:3057
#: R-FAQ.texi:3074
#: R-FAQ.texi:3075
#: R-FAQ.texi:3108
#, no-wrap
msgid "Why are powers of negative numbers wrong?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3063
msgid "Use @code{try()}, which returns an object of class @code{\"try-error\"} instead of an error, or preferably @code{tryCatch()}, where the return value can be configured more flexibly.  For example"
msgstr ""

#. type: example
#: R-FAQ.texi:3067
#, no-wrap
msgid ""
"beta[i,] <- tryCatch(coef(lm(formula, data)),\n"
"                     error = function(e) rep(NaN, 4))\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3073
msgid "would return the coefficients if the @code{lm()} call succeeded and would return @code{c(NaN, NaN, NaN, NaN)} if it failed (presumably there are supposed to be 4 coefficients in this example)."
msgstr ""

#. type: node
#: R-FAQ.texi:3074
#: R-FAQ.texi:3108
#: R-FAQ.texi:3109
#: R-FAQ.texi:3125
#, no-wrap
msgid "How can I save the result of each iteration in a loop into a separate file?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3078
msgid "You are probably seeing something like"
msgstr ""

#. type: example
#: R-FAQ.texi:3082
#, no-wrap
msgid ""
"R> -2^2\n"
"[1] -4\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3087
msgid "and misunderstanding the precedence rules for expressions in R.  Write"
msgstr ""

#. type: example
#: R-FAQ.texi:3091
#, no-wrap
msgid ""
"R> (-2)^2\n"
"[1] 4\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3095
msgid "to get the square of @math{-2}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3098
msgid "The precedence rules are documented in @code{?Syntax}, and to see how R interprets an expression you can look at the parse tree"
msgstr ""

#. type: example
#: R-FAQ.texi:3103
#, no-wrap
msgid ""
"R> as.list(quote(-2^2))\n"
"[[1]]\n"
"`-`\n"
"\n"
msgstr ""

#. type: example
#: R-FAQ.texi:3106
#, no-wrap
msgid ""
"[[2]]\n"
"2^2\n"
msgstr ""

#. type: node
#: R-FAQ.texi:3108
#: R-FAQ.texi:3125
#: R-FAQ.texi:3132
#, no-wrap
msgid "Why are p-values not displayed when using lmer()?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3116
msgid "One way is to use @code{paste()} (or @code{sprintf()}) to concatenate a stem filename and the iteration number while @code{file.path()} constructs the path.  For example, to save results into files @file{result1.rda}, @dots{}, @file{result100.rda} in the subdirectory @file{Results} of the current working directory, one can use"
msgstr ""

#. type: example
#: R-FAQ.texi:3123
#, no-wrap
msgid ""
"for(i in 1:100) @{\n"
"  ## Calculations constructing \"some_object\" ...\n"
"  fp <- file.path(\"Results\", paste(\"result\", i, \".rda\", sep = \"\"))\n"
"  save(list = \"some_object\", file = fp)\n"
"@}\n"
msgstr ""

#. type: node
#: R-FAQ.texi:3125
#: R-FAQ.texi:3132
#: R-FAQ.texi:3175
#, no-wrap
msgid "Why are there unwanted borders"
msgstr ""

#. type: section
#: R-FAQ.texi:3126
#, no-wrap
msgid "Why are @math{p}-values not displayed when using lmer()?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3131
msgid "Doug Bates has kindly provided an extensive response in a post to the r-help list, which can be reviewed at @uref{https://stat.ethz.ch/pipermail/r-help/2006-May/094765.html}."
msgstr ""

#. type: node
#: R-FAQ.texi:3132
#: R-FAQ.texi:3175
#: R-FAQ.texi:3176
#: R-FAQ.texi:3232
#, no-wrap
msgid "Why does backslash behave strangely inside strings?"
msgstr ""

#. type: section
#: R-FAQ.texi:3133
#, no-wrap
msgid "Why are there unwanted borders, lines or grid-like artifacts when viewing a plot saved to a PS or PDF file?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3140
msgid "This can occur when using functions such as @code{polygon()}, @code{filled.contour()}, @code{image()} or other functions which may call these internally.  In the case of @code{polygon()}, you may observe unwanted borders between the polygons even when setting the @code{border} argument to @code{NA} or @code{\"transparent\"}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3145
msgid "The source of the problem is the PS/PDF viewer when the plot is anti-aliased.  The details for the solution will be different depending upon the viewer used, the operating system and may change over time.  For some common viewers, consider the following:"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3147
msgid "@ftable @asis"
msgstr ""

#. type: item
#: R-FAQ.texi:3147
#, no-wrap
msgid "Acrobat Reader (cross platform)"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3151
msgid "There are options in Preferences to enable/disable text smoothing, image smoothing and line art smoothing.  Disable line art smoothing."
msgstr ""

#. type: item
#: R-FAQ.texi:3151
#, no-wrap
msgid "Preview (OS X)"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3155
msgid "There is an option in Preferences to enable/disable anti-aliasing of text and line art.  Disable this option."
msgstr ""

#. type: item
#: R-FAQ.texi:3155
#, no-wrap
msgid "GSview (cross platform)"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3159
msgid "There are settings for Text Alpha and Graphics Alpha.  Change Graphics Alpha from 4 bits to 1 bit to disable graphic anti-aliasing."
msgstr ""

#. type: item
#: R-FAQ.texi:3159
#, no-wrap
msgid "gv (Unix-like X)"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3162
msgid "There is an option to enable/disable anti-aliasing.  Disable this option."
msgstr ""

#. type: item
#: R-FAQ.texi:3162
#, no-wrap
msgid "Evince (Linux/GNOME)"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3164
msgid "There is not an option to disable anti-aliasing in this viewer."
msgstr ""

#. type: item
#: R-FAQ.texi:3164
#, no-wrap
msgid "Okular (Linux/KDE)"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3167
msgid "There is not an option in the GUI to enable/disable anti-aliasing.  From a console command line, use:"
msgstr ""

#. type: smallexample
#: R-FAQ.texi:3170
#, no-wrap
msgid ""
"$ kwriteconfig --file okularpartrc --group 'Dlg Performance' \\\n"
"               --key GraphicsAntialias Disabled\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3173
msgid "Then restart Okular.  Change the final word to @samp{Enabled} to restore the original setting."
msgstr ""

#. type: node
#: R-FAQ.texi:3175
#: R-FAQ.texi:3232
#: R-FAQ.texi:3233
#: R-FAQ.texi:3261
#, no-wrap
msgid "How can I put error bars or confidence bands on my plot?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3183
msgid "This question most often comes up in relation to file names (see @ref{How do file names work in Windows?})  but it also happens that people complain that they cannot seem to put a single @samp{\\} character into a text string unless it happens to be followed by certain other characters."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3189
msgid "To understand this, you have to distinguish between character strings and @emph{representations} of character strings.  Mostly, the representation in R is just the string with a single or double quote at either end, but there are strings that cannot be represented that way, e.g., strings that themselves contain the quote character.  So"
msgstr ""

#. type: example
#: R-FAQ.texi:3196
#, no-wrap
msgid ""
"> str <- \"This \\\"text\\\" is quoted\"\n"
"> str\n"
"[1] \"This \\\"text\\\" is quoted\"\n"
"> cat(str, \"\\n\")\n"
"This \"text\" is quoted\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3206
msgid "The @emph{escape sequences} @samp{\\\"} and @samp{\\n} represent a double quote and the newline character respectively. Printing text strings, using @code{print()} or by typing the name at the prompt will use the escape sequences too, but the @code{cat()} function will display the string as-is. Notice that @samp{\"\\n\"} is a one-character string, not two; the backslash is not actually in the string, it is just generated in the printed representation."
msgstr ""

#. type: example
#: R-FAQ.texi:3212
#, no-wrap
msgid ""
"> nchar(\"\\n\")\n"
"[1] 1\n"
"> substring(\"\\n\", 1, 1)\n"
"[1] \"\\n\"\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3217
msgid "So how do you put a backslash in a string? For this, you have to escape the escape character. I.e., you have to double the backslash.  as in"
msgstr ""

#. type: example
#: R-FAQ.texi:3221
#, no-wrap
msgid ""
"> cat(\"\\\\n\", \"\\n\")\n"
"\\n\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3227
msgid "Some functions, particularly those involving regular expression matching, themselves use metacharacters, which may need to be escaped by the backslash mechanism.  In those cases you may need a @emph{quadruple} backslash to represent a single literal one."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3231
msgid "In versions of R up to 2.4.1 an unknown escape sequence like @samp{\\p} was quietly interpreted as just @samp{p}.  Current versions of R emit a warning."
msgstr ""

#. type: node
#: R-FAQ.texi:3232
#: R-FAQ.texi:3261
#: R-FAQ.texi:3262
#: R-FAQ.texi:3277
#, no-wrap
msgid "How do I create a plot with two y-axes?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3249
msgid "Some functions will display a particular kind of plot with error bars, such as the @code{bar.err()} function in the @CRANpkg{agricolae} package, the @code{plotCI()} function in the @CRANpkg{gplots} package, the @code{plotCI()} and @code{brkdn.plot()} functions in the @CRANpkg{plotrix} package and the @code{error.bars()}, @code{error.crosses()} and @code{error.bars.by()} functions in the @CRANpkg{psych} package.  Within these types of functions, some will accept the measures of dispersion (e.g., @code{plotCI}), some will calculate the dispersion measures from the raw values (@code{bar.err}, @code{brkdn.plot}), and some will do both (@code{error.bars}).  Still other functions will just display error bars, like the dispersion function in the @CRANpkg{plotrix} package.  Most of the above functions use the @code{arrows()} function in the base @pkg{graphics} package to draw the error bars."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3260
msgid "The above functions all use the base graphics system.  The grid and lattice graphics systems also have specific functions for displaying error bars, e.g., the @code{grid.arrow()} function in the @pkg{grid} package, and the @code{geom_errorbar()}, @code{geom_errorbarh()}, @code{geom_pointrange()}, @code{geom_linerange()}, @code{geom_crossbar()} and @code{geom_ribbon()} functions in the @CRANpkg{ggplot2} package.  In the lattice system, error bars can be displayed with @code{Dotplot()} or @code{xYplot()} in the @CRANpkg{Hmisc} package and @code{segplot()} in the @CRANpkg{latticeExtra} package."
msgstr ""

#. type: node
#: R-FAQ.texi:3261
#: R-FAQ.texi:3277
#: R-FAQ.texi:3278
#: R-FAQ.texi:3286
#, no-wrap
msgid "How do I access the source code for a function?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3276
msgid "Creating a graph with two y-axes, i.e., with two sorts of data that are scaled to the same vertical size and showing separate vertical axes on the left and right sides of the plot that reflect the original scales of the data, is possible in R but is not recommended.  The basic approach for constructing such graphs is to use @code{par(new=TRUE)} (see @code{?par}); functions @code{twoord.plot()} (in the @CRANpkg{plotrix} package) and @code{doubleYScale()} (in the @CRANpkg{latticeExtra} package) automate the process somewhat."
msgstr ""

#. type: node
#: R-FAQ.texi:3277
#: R-FAQ.texi:3286
#: R-FAQ.texi:3287
#: R-FAQ.texi:3326
#, no-wrap
msgid "Why does summary() report strange results for the R^2 estimate when I fit a linear model with no intercept?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3285
msgid "In most cases, typing the name of the function will print its source code. However, code is sometimes hidden in a namespace, or compiled.  For a complete overview on how to access source code, see Uwe Ligges (2006), ``Help Desk: Accessing the sources'', @emph{R News}, @strong{6/4}, 43--45 (@url{http://CRAN.R-project.org/doc/Rnews/Rnews_2006-4.pdf})."
msgstr ""

#. type: node
#: R-FAQ.texi:3286
#: R-FAQ.texi:3326
#: R-FAQ.texi:3327
#: R-FAQ.texi:3381
#, no-wrap
msgid "Why is R apparently not releasing memory?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3292
msgid "As described in @code{?summary.lm}, when the intercept is zero (e.g., from @code{y ~ x - 1} or @code{y ~ x + 0}), @code{summary.lm()} uses the formula"
msgstr ""

#. type: ifnottex
#: R-FAQ.texi:3294
msgid "R^2 = 1 - Sum(R[i]^2) / Sum((y[i])^2)"
msgstr ""

#. type: tex
#: R-FAQ.texi:3297
#, no-wrap
msgid "$ R^2 = 1 - \\sum_i R_i^2 / \\sum_i y_i^2 $\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3299
msgid "which is different from the usual"
msgstr ""

#. type: ifnottex
#: R-FAQ.texi:3301
msgid "R^2 = 1 - Sum(R[i]^2) / Sum((y[i] - mean(y))^2)."
msgstr ""

#. type: tex
#: R-FAQ.texi:3304
#, no-wrap
msgid "$ R^2 = 1 - \\sum R_i^2 / \\sum_i (y_i - \\hbox{mean}(y))^2. $ \n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3306
msgid "There are several reasons for this:"
msgstr ""

#. type: itemize
#: R-FAQ.texi:3311
msgid "Otherwise the @math{R^2} could be negative (because the model with zero intercept can fit @emph{worse} than the constant-mean model it is implicitly compared to)."
msgstr ""

#. type: itemize
#: R-FAQ.texi:3314
msgid "If you set the slope to zero in the model with a line through the origin you get fitted values y*=0"
msgstr ""

#. type: itemize
#: R-FAQ.texi:3317
msgid "The model with constant, non-zero mean is not nested in the model with a line through the origin."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3325
msgid "All these come down to saying that if you know @emph{a priori} that @math{E[Y]=0} when @math{x=0} then the `null' model that you should compare to the fitted line, the model where @math{x} doesn't explain any of the variance, is the model where @math{E[Y]=0} everywhere.  (If you don't know a priori that @math{E[Y]=0} when @math{x=0}, then you probably shouldn't be fitting a line through the origin.)"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3333
msgid "This question is often asked in different flavors along the lines of ``I have removed objects in R and run @code{gc()} and yet @code{ps}/@code{top} still shows the R process using a lot of memory'', often on Linux machines."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3343
msgid "This is an artifact of the way the operating system (OS) allocates memory.  In general it is common that the OS is not capable of releasing all unused memory.  In extreme cases it is possible that even if R frees almost all its memory, the OS can not release any of it due to its design and thus tools such as @code{ps} or @code{top} will report substantial amount of resident RAM used by the R process even though R has released all that memory.  In general such tools do @emph{not} report the actual memory usage of the process but rather what the OS is reserving for that process."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3349
msgid "The short answer is that this is a limitation of the memory allocator in the operating system and there is nothing R can do about it. That space is simply kept by the OS in the hope that R will ask for it later.  The following paragraph gives more in-depth answer with technical details on how this happens."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3380
msgid "Most systems use two separate ways to allocate memory. For allocation of large chunks they will use @code{mmap} to map memory into the process address space.  Such chunks can be released immediately when they are completely free, because they can reside anywhere in the virtual memory.  However, this is a relatively expensive operation and many OSes have a limit on the number of such allocated chunks, so this is only used for allocating large memory regions.  For smaller allocations the system can expand the data segment of the process (historically using the @code{brk} system call), but this whole area is always contiguous.  The OS can only move the end of this space, it cannot create any ``holes''. Since this operation is fairly cheap, it is used for allocations of small pieces of memory.  However, the side-effect is that even if there is just one byte that is in use at the end of the data segment, the OS cannot release any memory at all, because it cannot change the address of that byte.  This is actually more common than it may seem, because allocating a lot of intermediate objects, then allocating a result object and removing all intermediate objects is a very common practice.  Since the result is allocated at the end it will prevent the OS from releasing any memory used by the intermediate objects.  In practice, this is not necessarily a problem, because modern operating systems can page out unused portions of the virtual memory so it does not necessarily reduce the amount of real memory available for other applications.  Typically, small objects such as strings or pairlists will be affected by this behavior, whereas large objects such as long vectors will be allocated using @code{mmap} and thus not affected.  On Linux (and possibly other Unix-like systems) it is possible to use the @code{mallinfo} system call (also see the @url{http://rforge.net/mallinfo, mallinfo} package) to query the allocator about the layout of the allocations, including the actually used memory as well as unused memory that cannot be released."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3391
msgid "When R transfers files over @acronym{HTTP} (e.g., using the @code{install.packages()} or @code{download.file()} function), a download method is chosen based on the @option{download.file.method} option.  There are several methods available and the default behavior if no option is explicitly specified is to use R's internal @acronym{HTTP} implementation.  In many circumstances this internal method will not support @acronym{HTTPS} connections so you'll need to override the default."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3396
msgid "R versions 3.2.0 and greater include two download methods (@code{\"libcurl\"} and @code{\"wininet\"}) that both support @acronym{HTTPS} connections.  We recommend that you use these methods.  The requisite code to add to @file{.Rprofile} or @file{Rprofile.site} is as follows:"
msgstr ""

#. type: example
#: R-FAQ.texi:3400
#, no-wrap
msgid ""
"options(download.file.method = \"wininet\")     @r{(Windows)}\n"
"options(download.file.method = \"libcurl\")     @r{(Linux and OS X)}\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3406
msgid "Note that if you built R from source the @code{\"libcurl\"} method may or may not have been compiled in.  In the case that it wasn't, i.e.. @code{capabilities(\"libcurl\") == FALSE}, we recommend method @code{\"wget\"} on Linux and @code{\"curl\"} on OS X."
msgstr ""

#. type: node
#: R-FAQ.texi:3408
#: R-FAQ.texi:3501
#: R-FAQ.texi:3502
#: R-FAQ.texi:3509
#: R-FAQ.texi:3556
#: R-FAQ.texi:3645
#, no-wrap
msgid "R Bugs"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:3417
msgid "How should I write summary methods?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:3417
msgid "How can I debug dynamically loaded code?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:3417
msgid "How can I inspect R objects when debugging?::"
msgstr ""

#. type: menuentry
#: R-FAQ.texi:3417
msgid "How can I change compilation flags?::"
msgstr ""

#. type: section
#: R-FAQ.texi:3417
#: R-FAQ.texi:3463
#: R-FAQ.texi:3493
#: R-FAQ.texi:3494
#, no-wrap
msgid "How can I debug S4 methods?"
msgstr ""

#. type: node
#: R-FAQ.texi:3419
#: R-FAQ.texi:3420
#: R-FAQ.texi:3432
#, no-wrap
msgid "How should I write summary methods?"
msgstr ""

#. type: node
#: R-FAQ.texi:3419
#: R-FAQ.texi:3432
#: R-FAQ.texi:3433
#: R-FAQ.texi:3448
#, no-wrap
msgid "How can I debug dynamically loaded code?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3431
msgid "Suppose you want to provide a summary method for class @code{\"foo\"}.  Then @code{summary.foo()} should not print anything, but return an object of class @code{\"summary.foo\"}, @emph{and} you should write a method @code{print.summary.foo()} which nicely prints the summary information and invisibly returns its object.  This approach is preferred over having @code{summary.foo()} print summary information and return something useful, as sometimes you need to grab something computed by @code{summary()} inside a function or similar.  In such cases you don't want anything printed."
msgstr ""

#. type: node
#: R-FAQ.texi:3432
#: R-FAQ.texi:3448
#: R-FAQ.texi:3449
#: R-FAQ.texi:3463
#, no-wrap
msgid "How can I inspect R objects when debugging?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3437
msgid "Roughly speaking, you need to start R inside the debugger, load the code, send an interrupt, and then set the required breakpoints."
msgstr ""

#. type: ifclear
#: R-FAQ.texi:3442
msgid "See section ``Finding entry points in dynamically loaded code'' in @cite{Writing R Extensions}.  This manual is included in the R distribution, @pxref{What documentation exists for R?}."
msgstr ""

#. type: ifset
#: R-FAQ.texi:3446
msgid "@xref{Finding entry points, , Finding entry points in dynamically loaded code, R-exts, Writing R Extensions}."
msgstr ""

#. type: node
#: R-FAQ.texi:3448
#: R-FAQ.texi:3463
#: R-FAQ.texi:3464
#: R-FAQ.texi:3493
#, no-wrap
msgid "How can I change compilation flags?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3453
msgid "The most convenient way is to call @code{R_PV} from the symbolic debugger."
msgstr ""

#. type: ifclear
#: R-FAQ.texi:3457
msgid "See section ``Inspecting R objects when debugging'' in @cite{Writing R Extensions}."
msgstr ""

#. type: ifset
#: R-FAQ.texi:3461
msgid "@xref{Inspecting R objects, , Inspecting R objects when debugging, R-exts, Writing R Extensions}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3469
msgid "Suppose you have C code file for dynloading into R, but you want to use @code{R CMD SHLIB} with compilation flags other than the default ones (which were determined when R was built)."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3472
msgid "Starting with R 2.1.0, users can provide personal Makevars configuration files in @file{$@env{HOME}/.R} to override the default flags."
msgstr ""

#. type: ifclear
#: R-FAQ.texi:3475
msgid "See section ``Add-on packages'' in @cite{R Installation and Administration}."
msgstr ""

#. type: ifset
#: R-FAQ.texi:3479
msgid "@xref{Add-on packages, , Add-on packages, R-admin, R Installation and Administration}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3485
msgid "For earlier versions of R, you could change the file @file{@var{R_HOME}/etc/Makeconf} to reflect your preferences, or (at least for systems using @acronym{GNU} Make) override them by the environment variable @env{MAKEFLAGS}."
msgstr ""

#. type: ifclear
#: R-FAQ.texi:3487
msgid "See section ``Creating shared objects'' in @cite{Writing R Extensions}."
msgstr ""

#. type: ifset
#: R-FAQ.texi:3491
msgid "@xref{Creating shared objects, , Creating shared objects, R-exts, Writing R Extensions}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3500
msgid "Use the @code{trace()} function with argument @code{signature=} to add calls to the browser or any other code to the method that will be dispatched for the corresponding signature.  See @code{?trace} for details."
msgstr ""

#. type: menuentry
#: R-FAQ.texi:3507
msgid "What is a bug?::"
msgstr ""

#. type: section
#: R-FAQ.texi:3507
#: R-FAQ.texi:3509
#: R-FAQ.texi:3556
#: R-FAQ.texi:3557
#, no-wrap
msgid "How to report a bug"
msgstr ""

#. type: node
#: R-FAQ.texi:3509
#: R-FAQ.texi:3510
#: R-FAQ.texi:3556
#, no-wrap
msgid "What is a bug?"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3519
msgid "If R executes an illegal instruction, or dies with an operating system error message that indicates a problem in the program (as opposed to something like ``disk full''), then it is certainly a bug.  If you call @code{.C()}, @code{.Fortran()}, @code{.External()} or @code{.Call()} (or @code{.Internal()}) yourself (or in a function you wrote), you can always crash R by using wrong argument types (modes).  This is not a bug."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3526
msgid "Taking forever to complete a command can be a bug, but you must make certain that it was really R's fault.  Some commands simply take a long time.  If the input was such that you @emph{know} it should have been processed quickly, report a bug.  If you don't know whether the command should take a long time, find out by looking in the manual or by asking for assistance."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3539
msgid "If a command you are familiar with causes an R error message in a case where its usual definition ought to be reasonable, it is probably a bug.  If a command does the wrong thing, that is a bug.  But be sure you know for certain what it ought to have done.  If you aren't familiar with the command, or don't know for certain how the command is supposed to work, then it might actually be working right.  For example, people sometimes think there is a bug in R's mathematics because they don't understand how finite-precision arithmetic works.  Rather than jumping to conclusions, show the problem to someone who knows for certain.  Unexpected results of comparison of decimal numbers, for example @code{0.28 * 100 != 28} or @code{0.1 + 0.2 != 0.3}, are not a bug.  @xref{Why doesn't R think these numbers are equal?}, for more details."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3552
msgid "Finally, a command's intended definition may not be best for statistical analysis.  This is a very important sort of problem, but it is also a matter of judgment.  Also, it is easy to come to such a conclusion out of ignorance of some of the existing features.  It is probably best not to complain about such a problem until you have checked the documentation in the usual ways, feel confident that you understand it, and know for certain that what you want is not available.  If you are not sure what the command is supposed to do after a careful reading of the manual this indicates a bug in the manual.  The manual's job is to make everything clear.  It is just as important to report documentation bugs as program bugs.  However, we know that the introductory documentation is seriously inadequate, so you don't need to report this."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3555
msgid "If the online argument list of a function disagrees with the manual, one of them must be wrong, so report the bug."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3565
msgid "When you decide that there is a bug, it is important to report it and to report it in a way which is useful.  What is most useful is an exact description of what commands you type, starting with the shell command to run R, until the problem happens.  Always include the version of R, machine, and operating system that you are using; type @kbd{version} in R to print this."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3574
msgid "The most important principle in reporting a bug is to report @emph{facts}, not hypotheses or categorizations.  It is always easier to report the facts, but people seem to prefer to strain to posit explanations and report them instead.  If the explanations are based on guesses about how R is implemented, they will be useless; others will have to try to figure out what the facts must have been to lead to such speculations.  Sometimes this is impossible.  But in any case, it is unnecessary work for the ones trying to fix the problem."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3577
msgid "For example, suppose that on a data set which you know to be quite large the command"
msgstr ""

#. type: example
#: R-FAQ.texi:3580
#, no-wrap
msgid "R> data.frame(x, y, z, monday, tuesday)\n"
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3590
msgid "never returns.  Do not report that @code{data.frame()} fails for large data sets.  Perhaps it fails when a variable name is a day of the week.  If this is so then when others got your report they would try out the @code{data.frame()} command on a large data set, probably with no day of the week variable name, and not see any problem.  There is no way in the world that others could guess that they should try a day of the week variable name."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3596
msgid "Or perhaps the command fails because the last command you used was a method for @code{\"[\"()} that had a bug causing R's internal data structures to be corrupted and making the @code{data.frame()} command fail from then on.  This is why others need to know what other commands you have typed (or read from your startup file)."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3605
msgid "It is very useful to try and find simple examples that produce apparently the same bug, and somewhat useful to find simple examples that might be expected to produce the bug but actually do not.  If you want to debug the problem and find exactly what caused it, that is wonderful.  You should still report the facts as well as any explanations or solutions.  Please include an example that reproduces (e.g., @url{http://en.wikipedia.org/wiki/Reproducibility}) the problem, preferably the simplest one you have found."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3609
msgid "Invoking R with the @option{--vanilla} option may help in isolating a bug.  This ensures that the site profile and saved data files are not read."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3624
msgid "Before you actually submit a bug report, you should check whether the bug has already been reported and/or fixed.  First, try the ``Show open bugs new-to-old'' or the search facility on @url{http://bugs.R-project.org/}.  Second, consult @url{https://svn.R-project.org/@/R/@/trunk/@/doc/@/NEWS.Rd}, which records changes that will appear in the @emph{next} release of R, including bug fixes that do not appear on the Bug Tracker.  Third, if possible try the current r-patched or r-devel version of R.  If a bug has already been reported or fixed, please do not submit further bug reports on it.  Finally, check carefully whether the bug is with R, or a contributed package.  Bug reports on contributed packages should be sent first to the package maintainer, and only submitted to the R-bugs repository by package maintainers, mentioning the package in the subject line."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3630
msgid "A bug report can be generated using the function @code{bug.report()}.  For reports on R this will open the Web page at @url{http://bugs.R-project.org/}: for a contributed package it will open the package's bug tracker Web page or help you compose an email to the maintainer."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3636
msgid "There is a section of the bug repository for suggestions for enhancements for R labelled @samp{wishlist}.  Suggestions can be submitted in the same ways as bugs, but please ensure that the subject line makes clear that this is for the wishlist and not a bug report, for example by starting with @samp{Wishlist:}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3639
msgid "Comments on and suggestions for the Windows port of R should be sent to @email{R-windows@@R-project.org}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3644
msgid "Corrections to and comments on message translations should be sent to the last translator (listed at the top of the appropriate @samp{.po} file)  or to the translation team as listed at @url{http://developer.R-project.org/TranslationTeams.html}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3650
msgid "Of course, many many thanks to Robert and Ross for the R system, and to the package writers and porters for adding to it."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3655
msgid "Special thanks go to Doug Bates, Peter Dalgaard, Paul Gilbert, Stefano Iacus, Fritz Leisch, Jim Lindsey, Thomas Lumley, Martin Maechler, Brian D. Ripley, Anthony Rossini, and Andreas Weingessel for their comments which helped me improve this @acronym{FAQ}."
msgstr ""

#. type: Plain text
#: R-FAQ.texi:3657
msgid "More to come soon @dots{}"
msgstr ""
